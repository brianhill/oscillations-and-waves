(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 14.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     49023,       1038]
NotebookOptionsPosition[     43907,        941]
NotebookOutlinePosition[     44360,        959]
CellTagsIndexPosition[     44317,        956]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["\<\
Lightning Introduction to the Wolfram Language and Mathematica Notebooks\
\>", "Chapter",
 CellChangeTimes->{{3.9440677455819907`*^9, 3.944067757804255*^9}, {
  3.944139884568944*^9, 
  3.944139887946744*^9}},ExpressionUUID->"4b7101b2-0adb-4fe5-b479-\
bdad5865b051"],

Cell["January 14, 2025", "Subtitle",
 CellChangeTimes->{{3.944069658419606*^9, 3.944069670238837*^9}, {
  3.9453685799997997`*^9, 
  3.945368580069255*^9}},ExpressionUUID->"13bc130c-7f5e-44a4-9ed0-\
26cf2333f1d9"],

Cell[CellGroupData[{

Cell["Heads or Tails", "Section",
 CellChangeTimes->{{3.944067829868867*^9, 3.944067861861581*^9}, {
  3.944068820428216*^9, 
  3.944068822060533*^9}},ExpressionUUID->"08f90a5e-ac65-4417-8844-\
b6de9f5e59a2"],

Cell[TextData[{
 "Study Sections 1-3 of ",
 StyleBox[ButtonBox["An Elementary Introduction to the Wolfram Language, 3rd \
Edition",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://www.wolfram.com/language/elementary-introduction/3rd-ed/\
index.html.en"], None},
  ButtonNote->
   "https://www.wolfram.com/language/elementary-introduction/3rd-ed/index.\
html.en"],
  FontSlant->"Italic"],
 StyleBox[",",
  FontSlant->"Italic"],
 " hereafter abbreviated ",
 StyleBox[ButtonBox["EIWL3",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://www.wolfram.com/language/elementary-introduction/3rd-ed/\
index.html.en"], None},
  ButtonNote->
   "https://www.wolfram.com/language/elementary-introduction/3rd-ed/index.\
html.en"],
  FontSlant->"Italic"],
 StyleBox[",",
  FontSlant->"Italic"],
 " before working through this notebook."
}], "Text",
 CellChangeTimes->{{3.944139933130417*^9, 3.944139977229712*^9}, {
  3.94414001836478*^9, 3.944140062505911*^9}, {3.944161611377473*^9, 
  3.944161627499713*^9}, {3.944161723251081*^9, 3.944161834907104*^9}, {
  3.944161878819278*^9, 
  3.944161969242011*^9}},ExpressionUUID->"260f1f1a-e8fb-41a0-808a-\
db36f0f0e445"],

Cell[CellGroupData[{

Cell["The RandomChoice Function", "Subsection",
 CellChangeTimes->{{3.944067829868867*^9, 3.944067861861581*^9}, {
  3.944068820428216*^9, 3.944068822060533*^9}, {3.944139625524349*^9, 
  3.94413963984907*^9}},ExpressionUUID->"8a33a1b3-882c-4d3d-a569-\
a9721ac03c66"],

Cell["\<\
There are many ways to generate heads or tails at random in Mathematica. Here \
is a one-liner:\
\>", "Text",
 CellChangeTimes->{{3.944067896816962*^9, 3.94406793882053*^9}, {
  3.944068052614303*^9, 3.944068058794083*^9}, {3.944068457635978*^9, 
  3.944068468030957*^9}, {3.944068502593445*^9, 
  3.944068515703483*^9}},ExpressionUUID->"a8aaaeba-5f5d-4b04-a63e-\
8e446b0fbb82"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RandomChoice", "[", 
  RowBox[{"{", 
   RowBox[{"\"\<H\>\"", ",", " ", "\"\<T\>\""}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.944067946603968*^9, 3.94406799886695*^9}, {
  3.944068472655652*^9, 3.944068473251134*^9}},
 CellLabel->"In[79]:=",ExpressionUUID->"b821e991-c2d9-418d-942d-3fb94608fe69"],

Cell[BoxData["\<\"T\"\>"], "Output",
 CellChangeTimes->{
  3.944068000276065*^9, 3.944068473869921*^9, 3.944069046637255*^9, 
   3.9440692111097107`*^9, 3.944069961474292*^9, 3.944076965616393*^9, 
   3.9440770198165917`*^9, {3.944077068663545*^9, 3.9440770935931387`*^9}, 
   3.944078395087888*^9, {3.944139568907248*^9, 3.944139603976668*^9}},
 CellLabel->"Out[79]=",ExpressionUUID->"4920be34-e708-4e78-9420-b29bd3009b5e"]
}, Open  ]],

Cell["\<\
We are going to use this one-liner a lot and it would not be much work to \
copy and paste it over and over, but it would be nice if we saved ourselves a \
few characters by defining a function:\
\>", "Text",
 CellChangeTimes->{{3.944067896816962*^9, 3.94406793882053*^9}, {
  3.944068052614303*^9, 3.944068058794083*^9}, {3.944068093264029*^9, 
  3.944068104044458*^9}, {3.9440685236075892`*^9, 3.9440685825027514`*^9}, {
  3.944068755535465*^9, 3.944068796683992*^9}, {3.944139657971241*^9, 
  3.944139660386695*^9}},ExpressionUUID->"b9297c04-623a-4c1b-986f-\
ada7eb0097d2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"headsOrTails", "[", "]"}], ":=", 
  RowBox[{"RandomChoice", "[", 
   RowBox[{"{", 
    RowBox[{"\"\<H\>\"", ",", " ", "\"\<T\>\""}], "}"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.944068594955719*^9, 3.944068600894875*^9}},
 CellLabel->"In[80]:=",ExpressionUUID->"6d0edfeb-52d1-4a02-a5c2-7292429e09c8"],

Cell["\<\
Let\[CloseCurlyQuote]s call our new function five times and make a list out \
of the five results:\
\>", "Text",
 CellChangeTimes->{{3.944067896816962*^9, 3.94406793882053*^9}, {
  3.944068052614303*^9, 3.944068058794083*^9}, {3.944068093264029*^9, 
  3.944068104044458*^9}, {3.9440685236075883`*^9, 3.9440685825027514`*^9}, {
  3.9440687063787518`*^9, 3.944068733093647*^9}, {3.944139688272537*^9, 
  3.944139693989304*^9}, {3.9441401528285646`*^9, 
  3.944140157671925*^9}},ExpressionUUID->"62b6183d-2706-4b36-b3c0-\
5d8cd6381d63"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"headsOrTails", "[", "]"}], ",", " ", 
   RowBox[{"headsOrTails", "[", "]"}], ",", 
   RowBox[{"headsOrTails", "[", "]"}], ",", 
   RowBox[{"headsOrTails", "[", "]"}], ",", " ", 
   RowBox[{"headsOrTails", "[", "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.944068618349167*^9, 3.944068684416084*^9}},
 CellLabel->"In[82]:=",ExpressionUUID->"17ba6365-1a29-4f39-ac78-84ca83166229"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"T\"\>", ",", "\<\"T\"\>", ",", "\<\"H\"\>", ",", "\<\"T\"\>", 
   ",", "\<\"H\"\>"}], "}"}]], "Output",
 CellChangeTimes->{{3.9440686765252733`*^9, 3.94406869036398*^9}, 
   3.9440687389100113`*^9, 3.944069046673455*^9, 3.944069211142209*^9, 
   3.944069961510638*^9, 3.944076965660748*^9, 3.944077019851237*^9, {
   3.944077068699526*^9, 3.944077093625557*^9}, 3.944078395133528*^9, {
   3.944139569013822*^9, 3.944139604000292*^9}},
 CellLabel->"Out[82]=",ExpressionUUID->"26fc7c75-0f2a-4f9f-8463-1809aa8a5937"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Counting Heads \[LongDash] 1 Coin Toss", "Subsection",
 CellChangeTimes->{{3.944067829868867*^9, 3.944067861861581*^9}, {
   3.944068820428216*^9, 3.944068822060533*^9}, {3.94406888376394*^9, 
   3.944068890690679*^9}, {3.944069141202349*^9, 3.944069147713188*^9}, {
   3.9440692779766297`*^9, 3.944069283467661*^9}, 
   3.944069314788377*^9},ExpressionUUID->"37bfb204-f511-4fa2-922d-\
c0559caba42b"],

Cell["\<\
Let\[CloseCurlyQuote]s do a new version of this function that takes a count \
of the number of heads that have so far happened as an argument, and adds one \
to it, but only if the next coin toss is a head:\
\>", "Text",
 CellChangeTimes->{{3.9440678968169613`*^9, 3.94406793882053*^9}, {
  3.944068052614303*^9, 3.944068058794083*^9}, {3.9440684576359777`*^9, 
  3.944068468030957*^9}, {3.944068502593445*^9, 3.944068515703483*^9}, {
  3.944068907448431*^9, 3.9440689466045113`*^9}, {3.9440691524364147`*^9, 
  3.944069176260223*^9}},ExpressionUUID->"b927ef5a-0487-4e3b-bff8-\
b6da4c554b1f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"countHeads", "[", "count_", "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"headsOrTails", "[", "]"}], "==", "\"\<H\>\""}], ",", " ", 
    RowBox[{"count", "+", "1"}], ",", " ", "count"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.944068594955719*^9, 3.944068600894875*^9}, {
   3.944068962560931*^9, 3.9440689836679077`*^9}, 3.944069044952098*^9, {
   3.944069770174263*^9, 3.944069772195306*^9}, {3.944139558939788*^9, 
   3.9441395614564123`*^9}},
 CellLabel->"In[83]:=",ExpressionUUID->"c1385a63-f4ef-419a-aeb0-f15b8e7097e9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"countHeads", "[", "0", "]"}]], "Input",
 CellChangeTimes->{{3.944069020839859*^9, 3.944069025111896*^9}, {
   3.944069288645234*^9, 3.9440692888988047`*^9}, 3.944069783290575*^9},
 CellLabel->"In[92]:=",ExpressionUUID->"3797964b-7fe0-42f5-8bff-ba4f188e8f4b"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{{3.944069030926691*^9, 3.944069057001215*^9}, 
   3.9440692111461*^9, 3.9440692899913893`*^9, 3.944069961514423*^9, 
   3.944076965664897*^9, 3.944077019865464*^9, {3.944077068704215*^9, 
   3.944077093639937*^9}, 3.9440783951462517`*^9, {3.944139569016554*^9, 
   3.944139604012006*^9}, 3.94413973742096*^9},
 CellLabel->"Out[92]=",ExpressionUUID->"ac0ebc1b-c1e1-4141-818f-d95b7d86da5f"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Counting Heads \[LongDash] 3 Coin Tosses", "Subsection",
 CellChangeTimes->{{3.944067829868867*^9, 3.944067861861581*^9}, {
   3.944068820428216*^9, 3.944068822060533*^9}, {3.94406888376394*^9, 
   3.944068890690679*^9}, {3.944069141202349*^9, 3.944069147713188*^9}, {
   3.9440692779766297`*^9, 3.944069283467661*^9}, 3.944069314788377*^9, {
   3.9440694421534224`*^9, 
   3.944069443129184*^9}},ExpressionUUID->"f00b1135-c949-4fad-a757-\
63b958306fa7"],

Cell["Here I have nested the function three times:", "Text",
 CellChangeTimes->{{3.944067896816962*^9, 3.94406793882053*^9}, {
  3.944068052614303*^9, 3.944068058794083*^9}, {3.944068457635978*^9, 
  3.944068468030957*^9}, {3.944068502593445*^9, 3.944068515703483*^9}, {
  3.944068907448431*^9, 3.9440689466045113`*^9}, {3.944069152436415*^9, 
  3.944069176260223*^9}, {3.944077477433645*^9, 3.9440774952267303`*^9}, {
  3.944162172139476*^9, 
  3.9441621742673473`*^9}},ExpressionUUID->"bcceedfa-138d-4106-83e3-\
b1df459d6a96"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"countHeads", "[", 
  RowBox[{"countHeads", "[", 
   RowBox[{"countHeads", "[", "0", "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.944068594955719*^9, 3.944068600894875*^9}, {
   3.944068962560931*^9, 3.9440689836679077`*^9}, 3.944069044952098*^9, {
   3.944069458241016*^9, 3.944069469501784*^9}, {3.944069785554151*^9, 
   3.944069787847774*^9}},
 CellLabel->"In[93]:=",ExpressionUUID->"a463a7bf-44e9-4a06-9bbd-7063a9e95456"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{{3.9440694789471493`*^9, 3.944069501715179*^9}, 
   3.944069961516366*^9, 3.944076965666752*^9, 3.944077019867994*^9, {
   3.9440770687063746`*^9, 3.944077093642218*^9}, 3.944078395157198*^9, {
   3.944139569018134*^9, 3.9441396040143538`*^9}, 3.944139746875882*^9},
 CellLabel->"Out[93]=",ExpressionUUID->"96f21e78-5dce-4fa1-a1d2-47b84b70b693"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Counting Heads \[LongDash] 10 Coin Tosses", "Subsection",
 CellChangeTimes->{{3.944067829868867*^9, 3.944067861861581*^9}, {
  3.944068820428216*^9, 3.944068822060533*^9}, {3.94406888376394*^9, 
  3.944068890690679*^9}, {3.944069141202349*^9, 3.944069147713188*^9}, {
  3.9440692779766297`*^9, 
  3.944069316681628*^9}},ExpressionUUID->"03897e40-75a0-442c-bd63-\
a734d1777dea"],

Cell["\<\
Here I have nested the function ten times, and used white space (e.g., \
newlines and indenting) to make it clearer what is happening:\
\>", "Text",
 CellChangeTimes->{{3.944067896816962*^9, 3.94406793882053*^9}, {
  3.944068052614303*^9, 3.944068058794083*^9}, {3.944068457635978*^9, 
  3.944068468030957*^9}, {3.944068502593445*^9, 3.944068515703483*^9}, {
  3.944068907448431*^9, 3.9440689466045113`*^9}, {3.944069152436415*^9, 
  3.944069176260223*^9}, {3.944077477433645*^9, 3.9440775230810227`*^9}, {
  3.9441621046057777`*^9, 3.944162118601082*^9}, {3.944162178259184*^9, 
  3.944162179817731*^9}},ExpressionUUID->"8c58bc9e-0a59-42b1-a044-\
2928b50551fc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"countHeads", "[", "\[IndentingNewLine]", 
  RowBox[{"countHeads", "[", "\[IndentingNewLine]", 
   RowBox[{"countHeads", "[", "\[IndentingNewLine]", 
    RowBox[{"countHeads", "[", "\[IndentingNewLine]", 
     RowBox[{"countHeads", "[", "\[IndentingNewLine]", 
      RowBox[{"countHeads", "[", "\[IndentingNewLine]", 
       RowBox[{"countHeads", "[", "\[IndentingNewLine]", 
        RowBox[{"countHeads", "[", "\[IndentingNewLine]", 
         RowBox[{"countHeads", "[", "\[IndentingNewLine]", 
          RowBox[{"countHeads", "[", "0", "]"}], "\[IndentingNewLine]", "]"}],
          "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", "]"}], 
       "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", "]"}], 
     "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", "]"}], 
   "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.9440693255184717`*^9, 3.9440694157079353`*^9}, {
  3.944069789257277*^9, 3.944069798231351*^9}},
 CellLabel->"In[86]:=",ExpressionUUID->"a1e60500-febd-4ad8-85dc-79d6636d5396"],

Cell[BoxData["6"], "Output",
 CellChangeTimes->{{3.944069418234118*^9, 3.944069428770923*^9}, 
   3.944069961526059*^9, 3.944076965676455*^9, 3.944077019869958*^9, {
   3.944077068716982*^9, 3.9440770936524897`*^9}, 3.944078395159206*^9, {
   3.9441395690236673`*^9, 3.94413960401628*^9}},
 CellLabel->"Out[86]=",ExpressionUUID->"b7b11a2a-e2cb-483a-a081-a2c36a55dd0a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Counting Heads \[LongDash] 100 Coin Tosses", "Subsection",
 CellChangeTimes->{{3.944067829868867*^9, 3.944067861861581*^9}, {
   3.94406883838605*^9, 3.944068848973895*^9}, {3.944069126846809*^9, 
   3.944069136281149*^9}, {3.944069253257917*^9, 3.944069271186736*^9}, 
   3.944069370948174*^9},ExpressionUUID->"948bda2d-6633-4dae-a24e-\
58e9d20f317e"],

Cell["\<\
Mathematica has a function that does exactly this kind of nesting, and it is \
called Nest. Nest takes three arguments: the function, the argument to the \
innermost function call, and the number of iterations.\
\>", "Text",
 CellChangeTimes->{{3.944067896816962*^9, 3.94406793882053*^9}, {
  3.944068052614303*^9, 3.944068058794083*^9}, {3.944068457635978*^9, 
  3.944068468030957*^9}, {3.944068502593445*^9, 3.944068515703483*^9}, {
  3.944068907448431*^9, 3.9440689466045113`*^9}, {3.944069152436415*^9, 
  3.944069176260223*^9}, {3.9440774774336452`*^9, 3.9440775650976877`*^9}, {
  3.944078262158011*^9, 
  3.944078294361721*^9}},ExpressionUUID->"b84022f5-71de-4469-b3fd-\
013e3c7de209"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Nest", "[", 
  RowBox[{"countHeads", ",", "0", ",", "100"}], "]"}]], "Input",
 CellChangeTimes->{{3.944069185509345*^9, 3.944069204897033*^9}, {
   3.944069521254242*^9, 3.944069526952966*^9}, 3.944069804650125*^9, 
   3.944077463921753*^9},
 CellLabel->"In[87]:=",ExpressionUUID->"90291343-87b2-4489-85aa-8db848a67dd1"],

Cell[BoxData["54"], "Output",
 CellChangeTimes->{
  3.94406921115552*^9, {3.944069523371137*^9, 3.944069527581667*^9}, 
   3.944069961528186*^9, 3.94407696567896*^9, 3.944077019871841*^9, {
   3.94407706871957*^9, 3.944077093654808*^9}, 3.944078395167966*^9, {
   3.944139569025728*^9, 3.944139604018114*^9}},
 CellLabel->"Out[87]=",ExpressionUUID->"e1b721cd-c023-40a3-af55-5bed825fc67a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Counting Heads \[LongDash] 100 Coin Tosses \[LongDash] Keeping Intermediate \
Results\
\>", "Subsection",
 CellChangeTimes->{{3.944067829868867*^9, 3.944067861861581*^9}, {
   3.94406883838605*^9, 3.944068848973895*^9}, {3.944069126846809*^9, 
   3.944069136281149*^9}, {3.944069253257917*^9, 3.944069271186736*^9}, 
   3.944069370948174*^9, {3.94406957128046*^9, 
   3.944069580325625*^9}},ExpressionUUID->"6799b70b-44e2-42c2-94c4-\
f87e00b10639"],

Cell["\<\
You might want more than just the final result. Very handily, another version \
of Nest, called NestList, keeps all the intermediate results:\
\>", "Text",
 CellChangeTimes->{{3.944067896816962*^9, 3.94406793882053*^9}, {
  3.944068052614303*^9, 3.944068058794083*^9}, {3.944068457635978*^9, 
  3.944068468030957*^9}, {3.944068502593445*^9, 3.944068515703483*^9}, {
  3.944068907448431*^9, 3.9440689466045113`*^9}, {3.944069152436415*^9, 
  3.944069176260223*^9}, {3.944077477433645*^9, 3.944077565097688*^9}, {
  3.944077595878192*^9, 3.944077666470392*^9}, {3.944140198339623*^9, 
  3.944140199179748*^9}},ExpressionUUID->"131dd5fb-7cc0-4f97-8e12-\
d30c2580b860"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NestList", "[", 
  RowBox[{"countHeads", ",", "0", ",", "100"}], "]"}]], "Input",
 CellChangeTimes->{{3.944069185509345*^9, 3.944069204897033*^9}, {
   3.944069521254242*^9, 3.944069526952966*^9}, {3.9440695897307873`*^9, 
   3.944069590133003*^9}, 3.944069807574349*^9, 3.944077671646137*^9},
 CellLabel->"In[88]:=",ExpressionUUID->"b332fb71-4039-44bb-8c4d-a10f72a9ad8f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "0", ",", "0", ",", "1", ",", "1", ",", "1", ",", "1", ",", "2", 
   ",", "2", ",", "3", ",", "3", ",", "3", ",", "3", ",", "3", ",", "4", ",", 
   "5", ",", "5", ",", "6", ",", "6", ",", "7", ",", "7", ",", "8", ",", "9", 
   ",", "9", ",", "9", ",", "10", ",", "11", ",", "12", ",", "12", ",", "12", 
   ",", "13", ",", "13", ",", "13", ",", "14", ",", "15", ",", "16", ",", 
   "17", ",", "18", ",", "18", ",", "19", ",", "19", ",", "19", ",", "19", 
   ",", "20", ",", "20", ",", "20", ",", "20", ",", "21", ",", "21", ",", 
   "22", ",", "23", ",", "23", ",", "24", ",", "24", ",", "24", ",", "25", 
   ",", "25", ",", "26", ",", "27", ",", "28", ",", "29", ",", "30", ",", 
   "31", ",", "31", ",", "32", ",", "33", ",", "34", ",", "35", ",", "36", 
   ",", "36", ",", "36", ",", "37", ",", "37", ",", "38", ",", "38", ",", 
   "38", ",", "39", ",", "40", ",", "40", ",", "41", ",", "42", ",", "42", 
   ",", "43", ",", "43", ",", "44", ",", "45", ",", "45", ",", "46", ",", 
   "47", ",", "47", ",", "47", ",", "48", ",", "49", ",", "49", ",", "49", 
   ",", "50", ",", "50", ",", "51", ",", "52", ",", "52", ",", "52"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.94406921115552*^9, {3.944069523371137*^9, 3.944069527581667*^9}, 
   3.944069590535561*^9, 3.944069961530393*^9, 3.9440769656884604`*^9, 
   3.944077019887171*^9, {3.944077068721711*^9, 3.9440770936644278`*^9}, 
   3.944078395169745*^9, {3.944139569031165*^9, 3.944139604027824*^9}},
 CellLabel->"Out[88]=",ExpressionUUID->"1a9de408-d0d8-4b42-b945-e3f45a60db7d"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Counting Heads \[LongDash] 1000 Coin Tosses \[LongDash] Keeping Intermediate \
Results \[LongDash] Suppressing Display of All but Last Result\
\>", "Subsection",
 CellChangeTimes->{{3.944067829868867*^9, 3.944067861861581*^9}, {
   3.94406883838605*^9, 3.944068848973895*^9}, {3.944069126846809*^9, 
   3.944069136281149*^9}, {3.944069253257917*^9, 3.944069271186736*^9}, 
   3.944069370948174*^9, {3.94406957128046*^9, 3.944069580325625*^9}, {
   3.944069943473679*^9, 3.944069943697587*^9}, {3.944070000191389*^9, 
   3.944070001647197*^9}, {3.9440700581984386`*^9, 3.944070063984524*^9}, {
   3.944076770419371*^9, 3.944076782342463*^9}, 3.944076952658398*^9, {
   3.944076990096885*^9, 3.9440769957523627`*^9}, {3.944077105254959*^9, 
   3.944077141525125*^9}},ExpressionUUID->"101f226d-7c8c-4b94-a789-\
f41be2145fca"],

Cell["\<\
Once we get to 1000 coin tosses, we probably don\[CloseCurlyQuote]t want to \
see all 50 or so lines of output:\
\>", "Text",
 CellChangeTimes->{{3.944067896816962*^9, 3.94406793882053*^9}, {
  3.944068052614303*^9, 3.944068058794083*^9}, {3.944068457635978*^9, 
  3.944068468030957*^9}, {3.944068502593445*^9, 3.944068515703483*^9}, {
  3.944068907448431*^9, 3.9440689466045113`*^9}, {3.944069152436415*^9, 
  3.944069176260223*^9}, {3.944077477433645*^9, 3.944077565097688*^9}, {
  3.944077595878192*^9, 3.944077666470392*^9}, {3.944077707693048*^9, 
  3.944077736865619*^9}, {3.944077824968329*^9, 3.94407782696187*^9}, {
  3.94414022093266*^9, 3.944140248649527*^9}, {3.9441402853133574`*^9, 
  3.944140293511118*^9}},ExpressionUUID->"2a457d5d-11ff-4629-9043-\
7061e5a15fab"],

Cell[BoxData[
 RowBox[{
  RowBox[{"lotsaTosses", "=", 
   RowBox[{"NestList", "[", 
    RowBox[{"countHeads", ",", "0", ",", "1000"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.944069185509345*^9, 3.944069204897033*^9}, {
   3.944069521254242*^9, 3.944069526952966*^9}, {3.9440695897307873`*^9, 
   3.944069590133003*^9}, 3.944069807574349*^9, {3.94407007434044*^9, 
   3.944070087300524*^9}, {3.944070129873938*^9, 3.944070136008848*^9}, {
   3.944076909068231*^9, 3.944076939081357*^9}, 3.944076973355373*^9, {
   3.944077083429319*^9, 3.944077088419968*^9}, {3.9440777412333603`*^9, 
   3.944077743859207*^9}},
 CellLabel->"In[89]:=",ExpressionUUID->"b561821b-ed38-4032-b9b7-7d51338ebbb5"],

Cell["\<\
The semi-colon suppresses the display of the output. Perhaps you still want \
to see the final count which is the last item in the list:\
\>", "Text",
 CellChangeTimes->{{3.944067896816962*^9, 3.94406793882053*^9}, {
  3.944068052614303*^9, 3.944068058794083*^9}, {3.944068457635978*^9, 
  3.944068468030957*^9}, {3.944068502593445*^9, 3.944068515703483*^9}, {
  3.944068907448431*^9, 3.9440689466045113`*^9}, {3.944069152436415*^9, 
  3.944069176260223*^9}, {3.944077477433645*^9, 3.944077565097688*^9}, {
  3.944077595878192*^9, 3.944077666470392*^9}, {3.944077707693048*^9, 
  3.944077736865619*^9}, {3.944077824968329*^9, 3.94407782696187*^9}, {
  3.944078337984887*^9, 3.9440783685711203`*^9}, {3.9441398017250977`*^9, 
  3.944139802460054*^9}},ExpressionUUID->"5c8f9208-8988-461f-8af2-\
46b6155d3e75"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Last", "[", "lotsaTosses", "]"}]], "Input",
 CellChangeTimes->{{3.944069185509345*^9, 3.944069204897033*^9}, {
   3.944069521254242*^9, 3.944069526952966*^9}, {3.9440695897307873`*^9, 
   3.944069590133003*^9}, 3.944069807574349*^9, {3.94407007434044*^9, 
   3.944070087300524*^9}, {3.944070129873938*^9, 3.944070136008848*^9}, {
   3.944076909068231*^9, 3.944076939081357*^9}, 3.944076973355373*^9, {
   3.944077083429319*^9, 3.944077088419968*^9}, {3.9440777412333603`*^9, 
   3.944077743859207*^9}, {3.944078379957247*^9, 3.944078387640946*^9}},
 CellLabel->"In[90]:=",ExpressionUUID->"ff428f66-3446-4018-935c-0e55d8fbd2bd"],

Cell[BoxData["493"], "Output",
 CellChangeTimes->{{3.944078388581807*^9, 3.944078395173191*^9}, {
  3.944139569034462*^9, 3.944139604031314*^9}},
 CellLabel->"Out[90]=",ExpressionUUID->"3349b361-a7b4-43fc-9521-d89bb243d56b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Displaying Heads in 1000 Coin Tosses as a Graph", "Subsection",
 CellChangeTimes->{{3.944067829868867*^9, 3.944067861861581*^9}, {
   3.94406883838605*^9, 3.944068848973895*^9}, {3.944069126846809*^9, 
   3.944069136281149*^9}, {3.944069253257917*^9, 3.944069271186736*^9}, 
   3.944069370948174*^9, {3.94406957128046*^9, 3.944069580325625*^9}, {
   3.944069943473679*^9, 3.944069943697587*^9}, {3.944070000191389*^9, 
   3.944070001647197*^9}, {3.9440700581984386`*^9, 3.944070063984524*^9}, {
   3.944070204380873*^9, 3.944070214550758*^9}, {3.944073553685675*^9, 
   3.9440735745061707`*^9}},ExpressionUUID->"a0d311a5-36cb-436f-9378-\
5d757e24ab7b"],

Cell["\<\
Displaying all the intermediate results for 1000 coin tosses is well done \
with a graph:\
\>", "Text",
 CellChangeTimes->{{3.944067896816962*^9, 3.94406793882053*^9}, {
  3.944068052614303*^9, 3.944068058794083*^9}, {3.944068457635978*^9, 
  3.944068468030957*^9}, {3.944068502593445*^9, 3.944068515703483*^9}, {
  3.944068907448431*^9, 3.9440689466045113`*^9}, {3.944069152436415*^9, 
  3.944069176260223*^9}, {3.9440774774336452`*^9, 3.9440775650976877`*^9}, {
  3.944077595878192*^9, 3.944077666470392*^9}, {3.944077707693048*^9, 
  3.9440777933884583`*^9}, {3.9440784054022627`*^9, 
  3.944078416533593*^9}},ExpressionUUID->"5b9206b0-07a1-4362-8d1c-\
5b56b57c8134"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"lotsaTosses", ",", " ", 
   RowBox[{"PlotRange", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "1000"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "500"}], "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.944070224289844*^9, 3.944070230811476*^9}, {
  3.944077031093541*^9, 3.944077066719534*^9}},
 CellLabel->"In[91]:=",ExpressionUUID->"82339489-5ed5-441a-9e6a-5a09b687fa81"],

Cell[BoxData[
 GraphicsBox[{{}, 
   InterpretationBox[{
     TagBox[
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0055000000000000005`], AbsoluteThickness[2], 
        PointBox[CompressedData["
1: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
N//3fwHgfLmM
         "]]},
       Annotation[#, "Charting`Private`Tag#1"]& ],
      {"WolframDynamicHighlight", <|
       "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>}], 
     StyleBox[
      DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
        Slot["HighlightElements"], 
        Slot["LayoutOptions"], 
        Slot["Meta"], 
        Charting`HighlightActionFunction["DynamicHighlight", {{
           Annotation[{
             Directive[
              PointSize[0.0055000000000000005`], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]], 
             Point[CompressedData["
1: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
N//3fwHgfLmM
              "]]}, "Charting`Private`Tag#1"]}}, <|
         "HighlightElements" -> <|
           "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
          "LayoutOptions" -> <|
           "PanelPlotLayout" -> <||>, 
            "PlotRange" -> {{0., 1000.}, {0., 500.}}, 
            "Frame" -> {{False, False}, {False, False}}, 
            "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
            "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
            GoldenRatio^(-1), "DefaultStyle" -> {
              Directive[
               PointSize[0.0055000000000000005`], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[2]]}, 
            "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                Identity[
                 Part[#, 1]], 
                Identity[
                 Part[#, 2]]}& ), 
              "ScalingFunctions" -> {{Identity, Identity}, {
                Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
            False|>, 
          "Meta" -> <|
           "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
            ListPlot, "GroupHighlight" -> False|>|>]]& )[<|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
         "LayoutOptions" -> <|
          "PanelPlotLayout" -> <||>, "PlotRange" -> {{0., 1000.}, {0., 500.}},
            "Frame" -> {{False, False}, {False, False}}, 
           "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
           "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
           GoldenRatio^(-1), "DefaultStyle" -> {
             Directive[
              PointSize[0.0055000000000000005`], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           ListPlot, "GroupHighlight" -> False|>|>],
       ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
        4.503599627370496*^15, -4.503599627370496*^15}}],
      Selectable->False]},
    Annotation[{{
       Annotation[{
         Directive[
          PointSize[0.0055000000000000005`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]], 
         Point[CompressedData["
1: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
N//3fwHgfLmM
          "]]}, "Charting`Private`Tag#1"]}}, <|
     "HighlightElements" -> <|
       "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
      "LayoutOptions" -> <|
       "PanelPlotLayout" -> <||>, "PlotRange" -> {{0., 1000.}, {0., 500.}}, 
        "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0}, 
        "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
        "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
          Directive[
           PointSize[0.0055000000000000005`], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[2]]}, 
        "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), 
          "ScalingFunctions" -> {{Identity, Identity}, {
            Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
      "Meta" -> <|
       "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
        ListPlot, "GroupHighlight" -> False|>|>, 
     "DynamicHighlight"]], {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> True, "IncludeHighlighting" -> "CurrentPoint", 
    "HighlightStyle" -> Automatic, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 1000.}, {0., 500.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.94407023208768*^9, 3.944076965711241*^9, 3.944077019909067*^9, {
   3.944077068743746*^9, 3.94407709368509*^9}, 3.944078395496079*^9, {
   3.94413956936979*^9, 3.944139604044558*^9}},
 CellLabel->"Out[91]=",ExpressionUUID->"ec733550-cd5d-4b29-afa0-d33f8b02cb26"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{808, 911},
WindowMargins->{{543, Automatic}, {137, Automatic}},
PrintingCopies->1,
PrintingPageRange->{1, Automatic},
FrontEndVersion->"14.0 for Mac OS X ARM (64-bit) (December 12, 2023)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"79d99d9c-2760-41a1-b3ad-6f9f4f8469c8"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 276, 6, 117, "Chapter",ExpressionUUID->"4b7101b2-0adb-4fe5-b479-bdad5865b051"],
Cell[859, 30, 213, 4, 53, "Subtitle",ExpressionUUID->"13bc130c-7f5e-44a4-9ed0-26cf2333f1d9"],
Cell[CellGroupData[{
Cell[1097, 38, 208, 4, 67, "Section",ExpressionUUID->"08f90a5e-ac65-4417-8844-b6de9f5e59a2"],
Cell[1308, 44, 1172, 33, 58, "Text",ExpressionUUID->"260f1f1a-e8fb-41a0-808a-db36f0f0e445"],
Cell[CellGroupData[{
Cell[2505, 81, 267, 4, 54, "Subsection",ExpressionUUID->"8a33a1b3-882c-4d3d-a569-a9721ac03c66"],
Cell[2775, 87, 388, 8, 35, "Text",ExpressionUUID->"a8aaaeba-5f5d-4b04-a63e-8e446b0fbb82"],
Cell[CellGroupData[{
Cell[3188, 99, 326, 6, 30, "Input",ExpressionUUID->"b821e991-c2d9-418d-942d-3fb94608fe69"],
Cell[3517, 107, 424, 6, 34, "Output",ExpressionUUID->"4920be34-e708-4e78-9420-b29bd3009b5e"]
}, Open  ]],
Cell[3956, 116, 586, 10, 58, "Text",ExpressionUUID->"b9297c04-623a-4c1b-986f-ada7eb0097d2"],
Cell[4545, 128, 338, 7, 30, "Input",ExpressionUUID->"6d0edfeb-52d1-4a02-a5c2-7292429e09c8"],
Cell[4886, 137, 543, 10, 35, "Text",ExpressionUUID->"62b6183d-2706-4b36-b3c0-5d8cd6381d63"],
Cell[CellGroupData[{
Cell[5454, 151, 432, 9, 30, "Input",ExpressionUUID->"17ba6365-1a29-4f39-ac78-84ca83166229"],
Cell[5889, 162, 557, 9, 34, "Output",ExpressionUUID->"26fc7c75-0f2a-4f9f-8463-1809aa8a5937"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[6495, 177, 406, 6, 54, "Subsection",ExpressionUUID->"37bfb204-f511-4fa2-922d-c0559caba42b"],
Cell[6904, 185, 602, 10, 58, "Text",ExpressionUUID->"b927ef5a-0487-4e3b-bff8-b6da4c554b1f"],
Cell[7509, 197, 590, 12, 30, "Input",ExpressionUUID->"c1385a63-f4ef-419a-aeb0-f15b8e7097e9"],
Cell[CellGroupData[{
Cell[8124, 213, 282, 4, 30, "Input",ExpressionUUID->"3797964b-7fe0-42f5-8bff-ba4f188e8f4b"],
Cell[8409, 219, 436, 6, 34, "Output",ExpressionUUID->"ac0ebc1b-c1e1-4141-818f-d95b7d86da5f"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[8894, 231, 460, 7, 54, "Subsection",ExpressionUUID->"f00b1135-c949-4fad-a757-63b958306fa7"],
Cell[9357, 240, 528, 8, 35, "Text",ExpressionUUID->"bcceedfa-138d-4106-83e3-b1df459d6a96"],
Cell[CellGroupData[{
Cell[9910, 252, 457, 8, 30, "Input",ExpressionUUID->"a463a7bf-44e9-4a06-9bbd-7063a9e95456"],
Cell[10370, 262, 393, 5, 34, "Output",ExpressionUUID->"96f21e78-5dce-4fa1-a1d2-47b84b70b693"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[10812, 273, 383, 6, 54, "Subsection",ExpressionUUID->"03897e40-75a0-442c-bd63-a734d1777dea"],
Cell[11198, 281, 672, 11, 58, "Text",ExpressionUUID->"8c58bc9e-0a59-42b1-a044-2928b50551fc"],
Cell[CellGroupData[{
Cell[11895, 296, 1072, 17, 409, "Input",ExpressionUUID->"a1e60500-febd-4ad8-85dc-79d6636d5396"],
Cell[12970, 315, 368, 5, 34, "Output",ExpressionUUID->"b7b11a2a-e2cb-483a-a081-a2c36a55dd0a"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[13387, 326, 358, 5, 54, "Subsection",ExpressionUUID->"948bda2d-6633-4dae-a24e-58e9d20f317e"],
Cell[13748, 333, 702, 12, 58, "Text",ExpressionUUID->"b84022f5-71de-4469-b3fd-013e3c7de209"],
Cell[CellGroupData[{
Cell[14475, 349, 344, 6, 30, "Input",ExpressionUUID->"90291343-87b2-4489-85aa-8db848a67dd1"],
Cell[14822, 357, 388, 6, 34, "Output",ExpressionUUID->"e1b721cd-c023-40a3-af55-5bed825fc67a"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[15259, 369, 458, 9, 54, "Subsection",ExpressionUUID->"6799b70b-44e2-42c2-94c4-f87e00b10639"],
Cell[15720, 380, 675, 11, 58, "Text",ExpressionUUID->"131dd5fb-7cc0-4f97-8e12-d30c2580b860"],
Cell[CellGroupData[{
Cell[16420, 395, 396, 6, 30, "Input",ExpressionUUID->"b332fb71-4039-44bb-8c4d-a10f72a9ad8f"],
Cell[16819, 403, 1588, 24, 119, "Output",ExpressionUUID->"1a9de408-d0d8-4b42-b945-e3f45a60db7d"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[18456, 433, 832, 13, 81, "Subsection",ExpressionUUID->"101f226d-7c8c-4b94-a789-f41be2145fca"],
Cell[19291, 448, 789, 13, 35, "Text",ExpressionUUID->"2a457d5d-11ff-4629-9043-7061e5a15fab"],
Cell[20083, 463, 698, 12, 30, "Input",ExpressionUUID->"b561821b-ed38-4032-b9b7-7d51338ebbb5"],
Cell[20784, 477, 817, 13, 58, "Text",ExpressionUUID->"5c8f9208-8988-461f-8af2-46b6155d3e75"],
Cell[CellGroupData[{
Cell[21626, 494, 651, 9, 30, "Input",ExpressionUUID->"ff428f66-3446-4018-935c-0e55d8fbd2bd"],
Cell[22280, 505, 224, 3, 34, "Output",ExpressionUUID->"3349b361-a7b4-43fc-9521-d89bb243d56b"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[22553, 514, 658, 9, 54, "Subsection",ExpressionUUID->"a0d311a5-36cb-436f-9378-5d757e24ab7b"],
Cell[23214, 525, 680, 12, 35, "Text",ExpressionUUID->"5b9206b0-07a1-4362-8d1c-5b56b57c8134"],
Cell[CellGroupData[{
Cell[23919, 541, 492, 12, 30, "Input",ExpressionUUID->"82339489-5ed5-441a-9e6a-5a09b687fa81"],
Cell[24414, 555, 19441, 380, 243, "Output",ExpressionUUID->"ec733550-cd5d-4b29-afa0-d33f8b02cb26"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

