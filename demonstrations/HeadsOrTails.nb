(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 14.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     47913,       1014]
NotebookOptionsPosition[     42586,        913]
NotebookOutlinePosition[     43039,        931]
CellTagsIndexPosition[     42996,        928]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Lightning Introduction to Mathematica Notebooks", "Chapter",
 CellChangeTimes->{{3.9440677455819902`*^9, 
  3.944067757804255*^9}},ExpressionUUID->"4b7101b2-0adb-4fe5-b479-\
bdad5865b051"],

Cell["January 13, 2025", "Subtitle",
 CellChangeTimes->{{3.944069658419606*^9, 
  3.9440696702388372`*^9}},ExpressionUUID->"13bc130c-7f5e-44a4-9ed0-\
26cf2333f1d9"],

Cell[CellGroupData[{

Cell["Heads or Tails", "Section",
 CellChangeTimes->{{3.944067829868867*^9, 3.944067861861581*^9}, {
  3.944068820428216*^9, 
  3.944068822060533*^9}},ExpressionUUID->"08f90a5e-ac65-4417-8844-\
b6de9f5e59a2"],

Cell[CellGroupData[{

Cell["Heads or Tails", "Subsection",
 CellChangeTimes->{{3.944067829868867*^9, 3.944067861861581*^9}, {
  3.944068820428216*^9, 
  3.944068822060533*^9}},ExpressionUUID->"8a33a1b3-882c-4d3d-a569-\
a9721ac03c66"],

Cell["\<\
There are many ways to generate heads or tails at random in Mathematica. Here \
is a one-liner:\
\>", "Text",
 CellChangeTimes->{{3.944067896816962*^9, 3.94406793882053*^9}, {
  3.944068052614303*^9, 3.944068058794083*^9}, {3.944068457635978*^9, 
  3.944068468030957*^9}, {3.944068502593445*^9, 
  3.944068515703483*^9}},ExpressionUUID->"a8aaaeba-5f5d-4b04-a63e-\
8e446b0fbb82"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RandomChoice", "[", 
  RowBox[{"{", 
   RowBox[{"\"\<H\>\"", ",", " ", "\"\<T\>\""}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.944067946603968*^9, 3.94406799886695*^9}, {
  3.944068472655652*^9, 3.944068473251134*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"b821e991-c2d9-418d-942d-3fb94608fe69"],

Cell[BoxData["\<\"H\"\>"], "Output",
 CellChangeTimes->{
  3.944068000276065*^9, 3.944068473869921*^9, 3.944069046637255*^9, 
   3.9440692111097107`*^9, 3.944069961474292*^9, 3.944076965616393*^9, 
   3.9440770198165917`*^9, {3.944077068663545*^9, 3.9440770935931387`*^9}, 
   3.944078395087888*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"e466bb1e-835e-467e-98a2-28bb8ea751a6"]
}, Open  ]],

Cell["\<\
We are going to use this one-liner a lot and it would not be much work to \
copy and paste it over and over, but it would be nice if we saved a few \
characters by defining a function:\
\>", "Text",
 CellChangeTimes->{{3.9440678968169613`*^9, 3.94406793882053*^9}, {
  3.944068052614303*^9, 3.944068058794083*^9}, {3.944068093264029*^9, 
  3.944068104044458*^9}, {3.9440685236075897`*^9, 3.9440685825027514`*^9}, {
  3.9440687555354652`*^9, 
  3.944068796683992*^9}},ExpressionUUID->"b9297c04-623a-4c1b-986f-\
ada7eb0097d2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"headsOrTails", "[", "]"}], ":=", 
  RowBox[{"RandomChoice", "[", 
   RowBox[{"{", 
    RowBox[{"\"\<H\>\"", ",", " ", "\"\<T\>\""}], "}"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.944068594955719*^9, 3.944068600894875*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"6d0edfeb-52d1-4a02-a5c2-7292429e09c8"],

Cell["Let\[CloseCurlyQuote]s call the function once:", "Text",
 CellChangeTimes->{{3.9440678968169613`*^9, 3.94406793882053*^9}, {
  3.944068052614303*^9, 3.944068058794083*^9}, {3.944068093264029*^9, 
  3.944068104044458*^9}, {3.9440685236075897`*^9, 3.9440685825027514`*^9}, {
  3.9440687063787518`*^9, 
  3.94406871834901*^9}},ExpressionUUID->"9566219f-a504-4147-8fc0-\
573f5e279455"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"headsOrTails", "[", "]"}]], "Input",
 CellChangeTimes->{{3.944068618349167*^9, 3.944068623619585*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"f26eb1f0-1473-4db9-ae05-8107d1908b73"],

Cell[BoxData["\<\"H\"\>"], "Output",
 CellChangeTimes->{{3.94406862468883*^9, 3.9440686297339473`*^9}, 
   3.944069046663529*^9, 3.944069211132854*^9, 3.944069961499214*^9, 
   3.944076965650029*^9, 3.944077019838326*^9, {3.9440770686880717`*^9, 
   3.944077093613596*^9}, 3.944078395129216*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"e8f58fd6-7d78-46fa-b86a-858a9ababebf"]
}, Open  ]],

Cell["Let\[CloseCurlyQuote]s call the function five times:", "Text",
 CellChangeTimes->{{3.9440678968169613`*^9, 3.94406793882053*^9}, {
  3.944068052614303*^9, 3.944068058794083*^9}, {3.944068093264029*^9, 
  3.944068104044458*^9}, {3.9440685236075897`*^9, 3.9440685825027514`*^9}, {
  3.9440687063787518`*^9, 
  3.944068733093647*^9}},ExpressionUUID->"62b6183d-2706-4b36-b3c0-\
5d8cd6381d63"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"headsOrTails", "[", "]"}], ",", " ", 
   RowBox[{"headsOrTails", "[", "]"}], ",", 
   RowBox[{"headsOrTails", "[", "]"}], ",", 
   RowBox[{"headsOrTails", "[", "]"}], ",", " ", 
   RowBox[{"headsOrTails", "[", "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.944068618349167*^9, 3.944068684416084*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"17ba6365-1a29-4f39-ac78-84ca83166229"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"H\"\>", ",", "\<\"T\"\>", ",", "\<\"T\"\>", ",", "\<\"T\"\>", 
   ",", "\<\"H\"\>"}], "}"}]], "Output",
 CellChangeTimes->{{3.9440686765252733`*^9, 3.94406869036398*^9}, 
   3.9440687389100113`*^9, 3.9440690466734548`*^9, 3.944069211142209*^9, 
   3.944069961510638*^9, 3.944076965660748*^9, 3.944077019851237*^9, {
   3.944077068699526*^9, 3.944077093625557*^9}, 3.9440783951335287`*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"c8ff7e8d-0e33-4a18-a955-17f6cff41c94"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Counting Heads \[LongDash] 1 Coin Toss", "Subsection",
 CellChangeTimes->{{3.944067829868867*^9, 3.944067861861581*^9}, {
   3.944068820428216*^9, 3.944068822060533*^9}, {3.94406888376394*^9, 
   3.944068890690679*^9}, {3.944069141202349*^9, 3.944069147713188*^9}, {
   3.9440692779766297`*^9, 3.944069283467661*^9}, 
   3.944069314788377*^9},ExpressionUUID->"37bfb204-f511-4fa2-922d-\
c0559caba42b"],

Cell["\<\
Let\[CloseCurlyQuote]s do a new version of this function that takes a count \
of the number of heads that have so far happened as an argument, and adds one \
to it, but only if the next coin toss is a head:\
\>", "Text",
 CellChangeTimes->{{3.9440678968169613`*^9, 3.94406793882053*^9}, {
  3.944068052614303*^9, 3.944068058794083*^9}, {3.9440684576359777`*^9, 
  3.944068468030957*^9}, {3.944068502593445*^9, 3.944068515703483*^9}, {
  3.944068907448431*^9, 3.9440689466045113`*^9}, {3.9440691524364147`*^9, 
  3.944069176260223*^9}},ExpressionUUID->"b927ef5a-0487-4e3b-bff8-\
b6da4c554b1f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"countHeads", "[", "count_", "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"RandomChoice", "[", 
      RowBox[{"{", 
       RowBox[{"\"\<H\>\"", ",", " ", "\"\<T\>\""}], "}"}], "]"}], "==", 
     "\"\<H\>\""}], ",", " ", 
    RowBox[{"count", "+", "1"}], ",", " ", "count"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.944068594955719*^9, 3.944068600894875*^9}, {
   3.9440689625609307`*^9, 3.9440689836679077`*^9}, 3.944069044952098*^9, {
   3.944069770174263*^9, 3.944069772195306*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"c1385a63-f4ef-419a-aeb0-f15b8e7097e9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"countHeads", "[", "0", "]"}]], "Input",
 CellChangeTimes->{{3.944069020839859*^9, 3.944069025111896*^9}, {
   3.944069288645234*^9, 3.9440692888988047`*^9}, 3.944069783290575*^9},
 CellLabel->"In[7]:=",ExpressionUUID->"3797964b-7fe0-42f5-8bff-ba4f188e8f4b"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{{3.944069030926691*^9, 3.944069057001215*^9}, 
   3.9440692111461*^9, 3.9440692899913893`*^9, 3.944069961514423*^9, 
   3.944076965664897*^9, 3.944077019865464*^9, {3.944077068704215*^9, 
   3.944077093639937*^9}, 3.9440783951462517`*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"19bf05e3-fa11-4704-a5b8-46e0cb70a6df"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Counting Heads \[LongDash] 3 Coin Tosses", "Subsection",
 CellChangeTimes->{{3.944067829868867*^9, 3.944067861861581*^9}, {
   3.944068820428216*^9, 3.944068822060533*^9}, {3.94406888376394*^9, 
   3.944068890690679*^9}, {3.944069141202349*^9, 3.944069147713188*^9}, {
   3.9440692779766297`*^9, 3.944069283467661*^9}, 3.944069314788377*^9, {
   3.9440694421534224`*^9, 
   3.944069443129184*^9}},ExpressionUUID->"f00b1135-c949-4fad-a757-\
63b958306fa7"],

Cell["Here I have nested the function for a total of three calls:", "Text",
 CellChangeTimes->{{3.944067896816962*^9, 3.94406793882053*^9}, {
  3.944068052614303*^9, 3.944068058794083*^9}, {3.944068457635978*^9, 
  3.944068468030957*^9}, {3.944068502593445*^9, 3.944068515703483*^9}, {
  3.944068907448431*^9, 3.9440689466045113`*^9}, {3.944069152436415*^9, 
  3.944069176260223*^9}, {3.9440774774336452`*^9, 
  3.9440774952267303`*^9}},ExpressionUUID->"bcceedfa-138d-4106-83e3-\
b1df459d6a96"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"countHeads", "[", 
  RowBox[{"countHeads", "[", 
   RowBox[{"countHeads", "[", "0", "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.944068594955719*^9, 3.944068600894875*^9}, {
   3.9440689625609307`*^9, 3.9440689836679077`*^9}, 3.944069044952098*^9, {
   3.944069458241016*^9, 3.944069469501784*^9}, {3.944069785554151*^9, 
   3.944069787847774*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"a463a7bf-44e9-4a06-9bbd-7063a9e95456"],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{{3.9440694789471493`*^9, 3.944069501715179*^9}, 
   3.944069961516366*^9, 3.944076965666752*^9, 3.944077019867994*^9, {
   3.9440770687063737`*^9, 3.944077093642218*^9}, 3.944078395157198*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"cd33a093-aaea-47e1-8dd5-af7763095448"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Counting Heads \[LongDash] 10 Coin Tosses", "Subsection",
 CellChangeTimes->{{3.944067829868867*^9, 3.944067861861581*^9}, {
  3.944068820428216*^9, 3.944068822060533*^9}, {3.94406888376394*^9, 
  3.944068890690679*^9}, {3.944069141202349*^9, 3.944069147713188*^9}, {
  3.9440692779766297`*^9, 
  3.944069316681628*^9}},ExpressionUUID->"03897e40-75a0-442c-bd63-\
a734d1777dea"],

Cell["\<\
Here I have nested the function for a total of ten calls, and used white \
space and indenting to make it clearer what is happening:\
\>", "Text",
 CellChangeTimes->{{3.944067896816962*^9, 3.94406793882053*^9}, {
  3.944068052614303*^9, 3.944068058794083*^9}, {3.944068457635978*^9, 
  3.944068468030957*^9}, {3.944068502593445*^9, 3.944068515703483*^9}, {
  3.944068907448431*^9, 3.9440689466045113`*^9}, {3.944069152436415*^9, 
  3.944069176260223*^9}, {3.9440774774336452`*^9, 
  3.9440775230810223`*^9}},ExpressionUUID->"8c58bc9e-0a59-42b1-a044-\
2928b50551fc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"countHeads", "[", "\[IndentingNewLine]", 
  RowBox[{"countHeads", "[", "\[IndentingNewLine]", 
   RowBox[{"countHeads", "[", "\[IndentingNewLine]", 
    RowBox[{"countHeads", "[", "\[IndentingNewLine]", 
     RowBox[{"countHeads", "[", "\[IndentingNewLine]", 
      RowBox[{"countHeads", "[", "\[IndentingNewLine]", 
       RowBox[{"countHeads", "[", "\[IndentingNewLine]", 
        RowBox[{"countHeads", "[", "\[IndentingNewLine]", 
         RowBox[{"countHeads", "[", "\[IndentingNewLine]", 
          RowBox[{"countHeads", "[", "0", "]"}], "\[IndentingNewLine]", "]"}],
          "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", "]"}], 
       "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", "]"}], 
     "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", "]"}], 
   "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.9440693255184717`*^9, 3.9440694157079353`*^9}, {
  3.944069789257277*^9, 3.944069798231351*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"a1e60500-febd-4ad8-85dc-79d6636d5396"],

Cell[BoxData["5"], "Output",
 CellChangeTimes->{{3.944069418234118*^9, 3.944069428770923*^9}, 
   3.944069961526059*^9, 3.944076965676455*^9, 3.944077019869958*^9, {
   3.944077068716982*^9, 3.9440770936524897`*^9}, 3.944078395159206*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"177c8711-67be-4f9f-a511-9dcb71074c66"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Counting Heads \[LongDash] 100 Coin Tosses", "Subsection",
 CellChangeTimes->{{3.944067829868867*^9, 3.944067861861581*^9}, {
   3.94406883838605*^9, 3.944068848973895*^9}, {3.944069126846809*^9, 
   3.944069136281149*^9}, {3.944069253257917*^9, 3.944069271186736*^9}, 
   3.944069370948174*^9},ExpressionUUID->"948bda2d-6633-4dae-a24e-\
58e9d20f317e"],

Cell["\<\
Mathematica has a function that does exactly this kind of nesting, and it is \
called Nest. Nest takes three arguments: the function, the argument to the \
innermost function call, and the number of iterations.\
\>", "Text",
 CellChangeTimes->{{3.944067896816962*^9, 3.94406793882053*^9}, {
  3.944068052614303*^9, 3.944068058794083*^9}, {3.944068457635978*^9, 
  3.944068468030957*^9}, {3.944068502593445*^9, 3.944068515703483*^9}, {
  3.944068907448431*^9, 3.9440689466045113`*^9}, {3.944069152436415*^9, 
  3.944069176260223*^9}, {3.9440774774336452`*^9, 3.9440775650976877`*^9}, {
  3.944078262158011*^9, 
  3.944078294361721*^9}},ExpressionUUID->"b84022f5-71de-4469-b3fd-\
013e3c7de209"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Nest", "[", 
  RowBox[{"countHeads", ",", "0", ",", "100"}], "]"}]], "Input",
 CellChangeTimes->{{3.944069185509345*^9, 3.944069204897033*^9}, {
   3.944069521254242*^9, 3.944069526952966*^9}, 3.944069804650125*^9, 
   3.944077463921753*^9},
 CellLabel->"In[10]:=",ExpressionUUID->"90291343-87b2-4489-85aa-8db848a67dd1"],

Cell[BoxData["45"], "Output",
 CellChangeTimes->{
  3.94406921115552*^9, {3.944069523371137*^9, 3.944069527581667*^9}, 
   3.944069961528186*^9, 3.94407696567896*^9, 3.944077019871841*^9, {
   3.94407706871957*^9, 3.944077093654808*^9}, 3.944078395167966*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"c41b5c69-8f05-4f44-ba06-e354a78279df"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Counting Heads \[LongDash] 100 Coin Tosses \[LongDash] Keeping Intermediate \
Results\
\>", "Subsection",
 CellChangeTimes->{{3.944067829868867*^9, 3.944067861861581*^9}, {
   3.94406883838605*^9, 3.944068848973895*^9}, {3.944069126846809*^9, 
   3.944069136281149*^9}, {3.944069253257917*^9, 3.944069271186736*^9}, 
   3.944069370948174*^9, {3.94406957128046*^9, 
   3.944069580325625*^9}},ExpressionUUID->"6799b70b-44e2-42c2-94c4-\
f87e00b10639"],

Cell["\<\
You might want more than just the final result. Very handily, another version \
of Nest, called NestList, keeps all the intermediate results!\
\>", "Text",
 CellChangeTimes->{{3.944067896816962*^9, 3.94406793882053*^9}, {
  3.944068052614303*^9, 3.944068058794083*^9}, {3.944068457635978*^9, 
  3.944068468030957*^9}, {3.944068502593445*^9, 3.944068515703483*^9}, {
  3.944068907448431*^9, 3.9440689466045113`*^9}, {3.944069152436415*^9, 
  3.944069176260223*^9}, {3.9440774774336452`*^9, 3.9440775650976877`*^9}, {
  3.944077595878192*^9, 
  3.944077666470392*^9}},ExpressionUUID->"131dd5fb-7cc0-4f97-8e12-\
d30c2580b860"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NestList", "[", 
  RowBox[{"countHeads", ",", "0", ",", "100"}], "]"}]], "Input",
 CellChangeTimes->{{3.944069185509345*^9, 3.944069204897033*^9}, {
   3.944069521254242*^9, 3.944069526952966*^9}, {3.9440695897307873`*^9, 
   3.944069590133003*^9}, 3.944069807574349*^9, 3.944077671646137*^9},
 CellLabel->"In[11]:=",ExpressionUUID->"b332fb71-4039-44bb-8c4d-a10f72a9ad8f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "1", ",", "1", ",", "2", ",", "3", ",", "4", ",", "4", ",", "4", 
   ",", "5", ",", "5", ",", "5", ",", "5", ",", "5", ",", "5", ",", "6", ",", 
   "7", ",", "8", ",", "9", ",", "9", ",", "10", ",", "10", ",", "11", ",", 
   "12", ",", "13", ",", "14", ",", "15", ",", "15", ",", "15", ",", "15", 
   ",", "15", ",", "16", ",", "16", ",", "17", ",", "18", ",", "18", ",", 
   "18", ",", "19", ",", "20", ",", "20", ",", "20", ",", "20", ",", "21", 
   ",", "22", ",", "23", ",", "24", ",", "25", ",", "25", ",", "25", ",", 
   "26", ",", "26", ",", "26", ",", "27", ",", "28", ",", "28", ",", "28", 
   ",", "29", ",", "29", ",", "30", ",", "30", ",", "31", ",", "31", ",", 
   "32", ",", "32", ",", "33", ",", "34", ",", "34", ",", "35", ",", "35", 
   ",", "35", ",", "36", ",", "36", ",", "37", ",", "37", ",", "38", ",", 
   "39", ",", "40", ",", "40", ",", "41", ",", "41", ",", "42", ",", "43", 
   ",", "43", ",", "44", ",", "44", ",", "45", ",", "45", ",", "46", ",", 
   "46", ",", "47", ",", "47", ",", "47", ",", "47", ",", "48", ",", "48", 
   ",", "49", ",", "50", ",", "51", ",", "51", ",", "51", ",", "51", ",", 
   "51"}], "}"}]], "Output",
 CellChangeTimes->{
  3.94406921115552*^9, {3.944069523371137*^9, 3.944069527581667*^9}, 
   3.944069590535561*^9, 3.944069961530393*^9, 3.9440769656884604`*^9, 
   3.944077019887171*^9, {3.944077068721711*^9, 3.9440770936644278`*^9}, 
   3.944078395169745*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"6e98ac4b-7b55-45ea-b631-7e2ca4eac223"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Counting Heads \[LongDash] 1000 Coin Tosses \[LongDash] Keeping Intermediate \
Results \[LongDash] Suppressing Display of All but Last Result\
\>", "Subsection",
 CellChangeTimes->{{3.944067829868867*^9, 3.944067861861581*^9}, {
   3.94406883838605*^9, 3.944068848973895*^9}, {3.944069126846809*^9, 
   3.944069136281149*^9}, {3.944069253257917*^9, 3.944069271186736*^9}, 
   3.944069370948174*^9, {3.94406957128046*^9, 3.944069580325625*^9}, {
   3.944069943473679*^9, 3.944069943697587*^9}, {3.944070000191389*^9, 
   3.944070001647197*^9}, {3.9440700581984386`*^9, 3.944070063984524*^9}, {
   3.944076770419371*^9, 3.944076782342463*^9}, 3.944076952658398*^9, {
   3.944076990096885*^9, 3.9440769957523627`*^9}, {3.944077105254959*^9, 
   3.944077141525125*^9}},ExpressionUUID->"101f226d-7c8c-4b94-a789-\
f41be2145fca"],

Cell["\<\
Once we get to 1000 coin tosses, we probably don\[CloseCurlyQuote]t want to \
see all the intermediate results:\
\>", "Text",
 CellChangeTimes->{{3.944067896816962*^9, 3.94406793882053*^9}, {
  3.944068052614303*^9, 3.944068058794083*^9}, {3.944068457635978*^9, 
  3.944068468030957*^9}, {3.944068502593445*^9, 3.944068515703483*^9}, {
  3.944068907448431*^9, 3.9440689466045113`*^9}, {3.944069152436415*^9, 
  3.944069176260223*^9}, {3.9440774774336452`*^9, 3.9440775650976877`*^9}, {
  3.944077595878192*^9, 3.944077666470392*^9}, {3.944077707693048*^9, 
  3.9440777368656187`*^9}, {3.944077824968329*^9, 
  3.94407782696187*^9}},ExpressionUUID->"2a457d5d-11ff-4629-9043-\
7061e5a15fab"],

Cell[BoxData[
 RowBox[{
  RowBox[{"lotsaTosses", "=", 
   RowBox[{"NestList", "[", 
    RowBox[{"countHeads", ",", "0", ",", "1000"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.944069185509345*^9, 3.944069204897033*^9}, {
   3.944069521254242*^9, 3.944069526952966*^9}, {3.9440695897307873`*^9, 
   3.944069590133003*^9}, 3.944069807574349*^9, {3.94407007434044*^9, 
   3.944070087300524*^9}, {3.944070129873938*^9, 3.944070136008848*^9}, {
   3.944076909068231*^9, 3.944076939081357*^9}, 3.944076973355373*^9, {
   3.944077083429319*^9, 3.944077088419968*^9}, {3.9440777412333593`*^9, 
   3.944077743859207*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"b561821b-ed38-4032-b9b7-7d51338ebbb5"],

Cell["\<\
The semi-colon suppresses the display of the output. Perhaps you still want \
to see the final total which is the last item in the list:\
\>", "Text",
 CellChangeTimes->{{3.944067896816962*^9, 3.94406793882053*^9}, {
  3.944068052614303*^9, 3.944068058794083*^9}, {3.944068457635978*^9, 
  3.944068468030957*^9}, {3.944068502593445*^9, 3.944068515703483*^9}, {
  3.944068907448431*^9, 3.9440689466045113`*^9}, {3.944069152436415*^9, 
  3.944069176260223*^9}, {3.9440774774336452`*^9, 3.9440775650976877`*^9}, {
  3.944077595878192*^9, 3.944077666470392*^9}, {3.944077707693048*^9, 
  3.9440777368656187`*^9}, {3.944077824968329*^9, 3.94407782696187*^9}, {
  3.944078337984887*^9, 
  3.9440783685711203`*^9}},ExpressionUUID->"5c8f9208-8988-461f-8af2-\
46b6155d3e75"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Last", "[", "lotsaTosses", "]"}]], "Input",
 CellChangeTimes->{{3.944069185509345*^9, 3.944069204897033*^9}, {
   3.944069521254242*^9, 3.944069526952966*^9}, {3.9440695897307873`*^9, 
   3.944069590133003*^9}, 3.944069807574349*^9, {3.94407007434044*^9, 
   3.944070087300524*^9}, {3.944070129873938*^9, 3.944070136008848*^9}, {
   3.944076909068231*^9, 3.944076939081357*^9}, 3.944076973355373*^9, {
   3.944077083429319*^9, 3.944077088419968*^9}, {3.9440777412333593`*^9, 
   3.944077743859207*^9}, {3.944078379957247*^9, 3.944078387640946*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"ff428f66-3446-4018-935c-0e55d8fbd2bd"],

Cell[BoxData["488"], "Output",
 CellChangeTimes->{{3.944078388581807*^9, 3.944078395173191*^9}},
 CellLabel->"Out[13]=",ExpressionUUID->"2ddd272d-5131-453d-87e2-1806052a2f41"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Displaying Heads in 1000 Coin Tosses as a Graph", "Subsection",
 CellChangeTimes->{{3.944067829868867*^9, 3.944067861861581*^9}, {
   3.94406883838605*^9, 3.944068848973895*^9}, {3.944069126846809*^9, 
   3.944069136281149*^9}, {3.944069253257917*^9, 3.944069271186736*^9}, 
   3.944069370948174*^9, {3.94406957128046*^9, 3.944069580325625*^9}, {
   3.944069943473679*^9, 3.944069943697587*^9}, {3.944070000191389*^9, 
   3.944070001647197*^9}, {3.9440700581984386`*^9, 3.944070063984524*^9}, {
   3.944070204380873*^9, 3.944070214550758*^9}, {3.944073553685675*^9, 
   3.9440735745061707`*^9}},ExpressionUUID->"a0d311a5-36cb-436f-9378-\
5d757e24ab7b"],

Cell["\<\
Displaying all the intermediate results for 1000 coin tosses is well done \
with a graph:\
\>", "Text",
 CellChangeTimes->{{3.944067896816962*^9, 3.94406793882053*^9}, {
  3.944068052614303*^9, 3.944068058794083*^9}, {3.944068457635978*^9, 
  3.944068468030957*^9}, {3.944068502593445*^9, 3.944068515703483*^9}, {
  3.944068907448431*^9, 3.9440689466045113`*^9}, {3.944069152436415*^9, 
  3.944069176260223*^9}, {3.9440774774336452`*^9, 3.9440775650976877`*^9}, {
  3.944077595878192*^9, 3.944077666470392*^9}, {3.944077707693048*^9, 
  3.9440777933884583`*^9}, {3.9440784054022627`*^9, 
  3.944078416533593*^9}},ExpressionUUID->"5b9206b0-07a1-4362-8d1c-\
5b56b57c8134"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"lotsaTosses", ",", " ", 
   RowBox[{"PlotRange", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "1000"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "500"}], "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.944070224289844*^9, 3.944070230811476*^9}, {
  3.944077031093541*^9, 3.944077066719534*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"82339489-5ed5-441a-9e6a-5a09b687fa81"],

Cell[BoxData[
 GraphicsBox[{{}, 
   InterpretationBox[{
     TagBox[
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.0055000000000000005`], AbsoluteThickness[2], 
        PointBox[CompressedData["
1:eJxd2TnM81gZxXELmpQuKFJQGIRQhBAye1jnsofdDFvYzcBAWMfsYRsue9hd
pnSZ0mXKW6Z0mdJl6FymROg9J5L/X2P9viROXju593me84rnXnj2+ZdkWfbf
l2bZ/49P/6Znsvm/MP//BZyH+fNeFubPW4b5814OF/ArcZ5X4Tyvhlc472tw
3tfCr4NLvO/r8b5vwPu+Ee/7Jrzvm/G+b4Hfis+xht+Gz/V2+B3wO+F34e94
N/6OZ+Awd7T9d75HR/2dEc7ei8fh7H143PZ1er+Ouk7R9nX6wNzR9nX74NwR
zj6ko65rtH1dNzrqukbb1/XDc0c4+wget30fPqqj7kO0fR8+NneEs4/rqPsS
5cd9+oSOui8Rzj6p//fjcFbNHeAIJzj7FF4PRzjB2bN4vezvVYSTny9nn9ZR
36sg+3sW4QRnn9FR37sARzjB2Wf1PL9e9vc2wgnOPqfnyUH29zrCyc/39/zz
Oup7HWR/zyOc4Gyro773QfbvIPpxfe8TnH1h7iD7dxLhBGdfnDvAUfbvLMHZ
l+YOcJT9u0xw9uW5g+zfbfTjcvLj/p1+RY/LAY6yf8fJj/t3/dW5Axxl/84T
nH1Nz5OD/Pjd+3E5wVk9dyF7XQhwLT/WCbjz+eQEj7LXkezrOmpdKGSvI0H2
OlLLj3XEr9e60Pn1cvLr5dGv97ry3NyF7HUlyF5XajjCnex1J8EjnH1j7kL2
OhXgGo5wJ3tdS7LXtdHv53Xsm3qeXMBB9jpXy17nItzBSfY6OMLZ83MXcJC9
btZwlL2OdnCSva6OcPYtnUcu4CB73a1lr7tR9rrb+fVygkefz+v2t+cuZK/L
Qfa6XMMR7mSv28nnl0c4281dwEH2Ol/Lj3Ue7mSv+8nnk0c4+87chex9IcA1
HGXvGx2cZO8jo9/P+8h35y5k7ysBrmXvM1H2PtPByeeXRzj7no7aVwrZ+1CA
azjK3qc62ftUgke/n/el789dyN7HAlzDUfY+18FJ9r43wtkPdNS+VsABruEI
d7L30QSP8mNf/aGe5/eHA1zDUfY+3MnehxM8wtkLcxey9+0ge9+u5ce+LXvf
7nw+77Oy9+0RzhqdR85l7+OF7H28lL2PB7iSva/XcANH2ft+K3vf7+AeTrLr
gsF/jzzCE5z9SO8j53Ahu44oZdcRQXYdUcE13MARbuFOdl3Sw0l2nTLIrlNG
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
ALYrpzM=
         "]]},
       Annotation[#, "Charting`Private`Tag#1"]& ],
      {"WolframDynamicHighlight", <|
       "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>}], 
     StyleBox[
      DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
        Slot["HighlightElements"], 
        Slot["LayoutOptions"], 
        Slot["Meta"], 
        Charting`HighlightActionFunction["DynamicHighlight", {{
           Annotation[{
             Directive[
              PointSize[0.0055000000000000005`], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]], 
             Point[CompressedData["
1:eJxd2TnM81gZxXELmpQuKFJQGIRQhBAye1jnsofdDFvYzcBAWMfsYRsue9hd
pnSZ0mXKW6Z0mdJl6FymROg9J5L/X2P9viROXju593me84rnXnj2+ZdkWfbf
l2bZ/49P/6Znsvm/MP//BZyH+fNeFubPW4b5814OF/ArcZ5X4Tyvhlc472tw
3tfCr4NLvO/r8b5vwPu+Ee/7Jrzvm/G+b4Hfis+xht+Gz/V2+B3wO+F34e94
N/6OZ+Awd7T9d75HR/2dEc7ei8fh7H143PZ1er+Ouk7R9nX6wNzR9nX74NwR
zj6ko65rtH1dNzrqukbb1/XDc0c4+wget30fPqqj7kO0fR8+NneEs4/rqPsS
5cd9+oSOui8Rzj6p//fjcFbNHeAIJzj7FF4PRzjB2bN4vezvVYSTny9nn9ZR
36sg+3sW4QRnn9FR37sARzjB2Wf1PL9e9vc2wgnOPqfnyUH29zrCyc/39/zz
Oup7HWR/zyOc4Gyro773QfbvIPpxfe8TnH1h7iD7dxLhBGdfnDvAUfbvLMHZ
l+YOcJT9u0xw9uW5g+zfbfTjcvLj/p1+RY/LAY6yf8fJj/t3/dW5Axxl/84T
nH1Nz5OD/Pjd+3E5wVk9dyF7XQhwLT/WCbjz+eQEj7LXkezrOmpdKGSvI0H2
OlLLj3XEr9e60Pn1cvLr5dGv97ry3NyF7HUlyF5XajjCnex1J8EjnH1j7kL2
OhXgGo5wJ3tdS7LXtdHv53Xsm3qeXMBB9jpXy17nItzBSfY6OMLZ83MXcJC9
btZwlL2OdnCSva6OcPYtnUcu4CB73a1lr7tR9rrb+fVygkefz+v2t+cuZK/L
Qfa6XMMR7mSv28nnl0c4281dwEH2Ol/Lj3Ue7mSv+8nnk0c4+87chex9IcA1
HGXvGx2cZO8jo9/P+8h35y5k7ysBrmXvM1H2PtPByeeXRzj7no7aVwrZ+1CA
azjK3qc62ftUgke/n/el789dyN7HAlzDUfY+18FJ9r43wtkPdNS+VsABruEI
d7L30QSP8mNf/aGe5/eHA1zDUfY+3MnehxM8wtkLcxey9+0ge9+u5ce+LXvf
7nw+77Oy9+0RzhqdR85l7+OF7H28lL2PB7iSva/XcANH2ft+K3vf7+AeTrLr
gsF/jzzCE5z9SO8j53Ahu44oZdcRQXYdUcE13MARbuFOdl3Sw0l2nTLIrlNG
eJJdt2Q/njuHC9l1TSm7rgmy65oKrmXXOY3sOifKrnNauIN7OMmuiwZ/fnn0
55cnf37XST+ZO5ddJxWy66QSDrLrpkp23VTLrpsa2XVThFvZdVTnzyf3/nyu
0/x5VNcM8OjPJ09w9tO5c9l1VyG77ipl110BrmTXYbXsOqyRXYdFuIU7uIeT
7DpugEd4grOfzZ3LrgML2XVgCQe4gmu4gSPcyq4zO9l1Zg8neIBH2XXpBGc/
nzuHC7iUXdcGuIJruIGj7Lq4hTvZdXIPJ9l18yC7bh5l182T7Lo5+4XeR85l
180FXMIBruBadt3dyK67I9zCney6vIeT7Dp9kF2nj/AEZ3t9DjmXXccXsuv4
Eg5wBddwA0fZfUELd3AvP/oG2X3DAI+y+4gJzn45dw4XsvuOEg5wJbsvqWX3
JY386Etk9yWt7L6kk92X9HCCB3iEJ/997mt+pc8p57L7mgIu4SC776ngGm5k
90VRdl/Uwh3cwwkeZPdVo+y+aoKzX8+dy+67CriEg+y+rIJruIGj7D6uld3H
dbL7uB5Osvu6AR7hSX70fb+ZO5fdBxay+8ASDnAlu0+s4QaOsvvIFu7gXnaf
mWT3mQM8wpPsPjT7rY7qC3PZfWghuw8tZfehAa7gWnaf2sjuUyPcwp3sPraH
EzzI7nNHePLf6771xblz2X1wIbsPLuEguy+u4BpuZPfNEW5l99Ed3MvuqxM8
wKPsvnuCs9/NncMFXMqPvl12317BNdzAEW5l9/0d3MueAyR4gEd4grM49wLO
4SVcwCvZc4lS9lxiLXsuEWTPJTZwJXtOsYVreCd7jtHInmPsZc8xInyAW/gI
d7LnICe4lz0XOft6ea4CX2TPSQb4Co/wDZ7gu++P5zC/n3shew6Ty57DLOEC
Xsme05TwGg6y5zgb2XOcSvYcZwvXsuc6O9lznUb2XGcPR9lznoPsOU8re85z
hDv4JHsO1MueA51lz4ESfIEH3x/5Co/wDZ7gO5z9Ye6F7DlUDi/lx1wKXsEl
vIYDvIEreCt7DlbLnoPtZM/BGtlzsD0cZc/FDrLnYq3sudhRfszF4BPcw2f5
MUeDL/Age852hUf4Bk+y53J3+TGX++PT0XO5hey5XA4v4UL23G4Fl/AaDvBG
9tyvkj3328K17DngDm5kzwX3sueCET7ALXyUPUfs4JPsuWIPn+EEX2TPIQf4
KnsuOcI32XPKCb7D2Z/mXsA5vJQfc0/Zc8+V7LlnKXvuuZY99wzwRvYctJI9
B93KnoPWsuegO7iB93CED3ALH+FO9tz1JHvu2sueu55lz10TfJE9hx3gq+y5
7Oj7I9/gyfdLvsPZn+dewDm8lD3nLeAVXMJr2XPhAG9kz4kr2XPiLVzDO9lz
5Eb2HHkve44c4QPcwkfZc+cOPsE9fJY9p07wRfbceoCvsufYo+w59g2eZM+1
73D2l6ej59wL2XPuXPacewkX8Er2HLyUPQdfw0H2XHwDV7Ln5Fu4hney5+gN
vJcfc3X4ALfwUfYcvoNPsufyPXyGk+y5/UX23H6QPbe/yp7bj/ANnuA7nP11
7oXsHCCHl7JzgQJeyc4JStk5wRoOsnODDVzBW7iWnTPsZOcMDbyHI3yAW/go
O7fo4BPcw2fZOUeCL7Jzj0F27nGFR9k5yA2eZOcidzg76Dy+/3AOL2XnKIXs
HGUlO0cpZecoa9k5SoA3cAVv4Rreyc5lGtm5zB6OsnOaA9zKzm2OcCc7xznJ
znF6+Cw710myc50LPMjOea7wKDv3ucETfPf9dM70Nz1PXsC57JxoCReyc6OV
7NyolJ0brWXnRkF2brSRnRtVsnOjrezcqJadG+3gBt7DUXbOdJCdM7Wyc6aj
7Jypg09wD59l51LJ11u++PoqpxngKzzCN98PefL9kO++H86Z/v50dI61gHN4
KTvnKmTnXCu4hNdwgDdwBW9l52i17BxtBzfwHo6yc7cD3MrO4Y6yc7hOdg53
kp3D9bJzuLPsHC7JzuEu8ABf4RG+wZPsXO8OZ/+YewHn8BIuZOeEK7iUnRuu
ZeeGQXZuuJGdG1bwVnaOWMM72bliA+9l54xRds54gFvZueNRdu7Yyc4dT3Av
O4c8y84hk+wc8gIPvt7y1dfXuR58gydff/nu6+8c8J9PR+eWCziHl7JzzQJe
yc45S9k55xoOsnPPjezcs5Kde25l55617NxzBzfwXnYuGuED3MJHuJOdq57g
Hj7Lzl2T7Nz1Ag/wFR5l57Q3eILvcPavuRdwDi9l58CF7Bx4BZfwGg6yc+ON
7Ny4kp0bb2XnxrXs3HgnOzduZOfGezjKzpEPsnPkVnaOfJSdI3fwCe5l58xn
2Tlz8vWVL76+8gBfff2c68I3ePL1le9w9u+5F3AuO8deys6xC3gFl7Jz7jUc
ZOfeG7iSnYNvZefgtewcfAc38F52Th7hg+zcvJWdmx9l5+YdfJKdo/fwWXau
nmTn6hd4gK/wKDuHv/n+yRN89/107v+fuRdwDi9l5/gFvIJLeA0HeCPHF8P/
ALYrpzM=
              "]]}, "Charting`Private`Tag#1"]}}, <|
         "HighlightElements" -> <|
           "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
          "LayoutOptions" -> <|
           "PanelPlotLayout" -> <||>, 
            "PlotRange" -> {{0., 1000.}, {0., 500.}}, 
            "Frame" -> {{False, False}, {False, False}}, 
            "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
            "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
            GoldenRatio^(-1), "DefaultStyle" -> {
              Directive[
               PointSize[0.0055000000000000005`], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[2]]}, 
            "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                Identity[
                 Part[#, 1]], 
                Identity[
                 Part[#, 2]]}& ), 
              "ScalingFunctions" -> {{Identity, Identity}, {
                Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
            False|>, 
          "Meta" -> <|
           "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
            ListPlot, "GroupHighlight" -> False|>|>]]& )[<|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
         "LayoutOptions" -> <|
          "PanelPlotLayout" -> <||>, "PlotRange" -> {{0., 1000.}, {0., 500.}},
            "Frame" -> {{False, False}, {False, False}}, 
           "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
           "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
           GoldenRatio^(-1), "DefaultStyle" -> {
             Directive[
              PointSize[0.0055000000000000005`], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           ListPlot, "GroupHighlight" -> False|>|>],
       ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
        4.503599627370496*^15, -4.503599627370496*^15}}],
      Selectable->False]},
    Annotation[{{
       Annotation[{
         Directive[
          PointSize[0.0055000000000000005`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]], 
         Point[CompressedData["
1:eJxd2TnM81gZxXELmpQuKFJQGIRQhBAye1jnsofdDFvYzcBAWMfsYRsue9hd
pnSZ0mXKW6Z0mdJl6FymROg9J5L/X2P9viROXju593me84rnXnj2+ZdkWfbf
l2bZ/49P/6Znsvm/MP//BZyH+fNeFubPW4b5814OF/ArcZ5X4Tyvhlc472tw
3tfCr4NLvO/r8b5vwPu+Ee/7Jrzvm/G+b4Hfis+xht+Gz/V2+B3wO+F34e94
N/6OZ+Awd7T9d75HR/2dEc7ei8fh7H143PZ1er+Ouk7R9nX6wNzR9nX74NwR
zj6ko65rtH1dNzrqukbb1/XDc0c4+wget30fPqqj7kO0fR8+NneEs4/rqPsS
5cd9+oSOui8Rzj6p//fjcFbNHeAIJzj7FF4PRzjB2bN4vezvVYSTny9nn9ZR
36sg+3sW4QRnn9FR37sARzjB2Wf1PL9e9vc2wgnOPqfnyUH29zrCyc/39/zz
Oup7HWR/zyOc4Gyro773QfbvIPpxfe8TnH1h7iD7dxLhBGdfnDvAUfbvLMHZ
l+YOcJT9u0xw9uW5g+zfbfTjcvLj/p1+RY/LAY6yf8fJj/t3/dW5Axxl/84T
nH1Nz5OD/Pjd+3E5wVk9dyF7XQhwLT/WCbjz+eQEj7LXkezrOmpdKGSvI0H2
OlLLj3XEr9e60Pn1cvLr5dGv97ry3NyF7HUlyF5XajjCnex1J8EjnH1j7kL2
OhXgGo5wJ3tdS7LXtdHv53Xsm3qeXMBB9jpXy17nItzBSfY6OMLZ83MXcJC9
btZwlL2OdnCSva6OcPYtnUcu4CB73a1lr7tR9rrb+fVygkefz+v2t+cuZK/L
Qfa6XMMR7mSv28nnl0c4281dwEH2Ol/Lj3Ue7mSv+8nnk0c4+87chex9IcA1
HGXvGx2cZO8jo9/P+8h35y5k7ysBrmXvM1H2PtPByeeXRzj7no7aVwrZ+1CA
azjK3qc62ftUgke/n/el789dyN7HAlzDUfY+18FJ9r43wtkPdNS+VsABruEI
d7L30QSP8mNf/aGe5/eHA1zDUfY+3MnehxM8wtkLcxey9+0ge9+u5ce+LXvf
7nw+77Oy9+0RzhqdR85l7+OF7H28lL2PB7iSva/XcANH2ft+K3vf7+AeTrLr
gsF/jzzCE5z9SO8j53Ahu44oZdcRQXYdUcE13MARbuFOdl3Sw0l2nTLIrlNG
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
ALYrpzM=
          "]]}, "Charting`Private`Tag#1"]}}, <|
     "HighlightElements" -> <|
       "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
      "LayoutOptions" -> <|
       "PanelPlotLayout" -> <||>, "PlotRange" -> {{0., 1000.}, {0., 500.}}, 
        "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0}, 
        "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
        "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
          Directive[
           PointSize[0.0055000000000000005`], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[2]]}, 
        "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), 
          "ScalingFunctions" -> {{Identity, Identity}, {
            Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
      "Meta" -> <|
       "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
        ListPlot, "GroupHighlight" -> False|>|>, 
     "DynamicHighlight"]], {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> True, "IncludeHighlighting" -> "CurrentPoint", 
    "HighlightStyle" -> Automatic, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 1000.}, {0., 500.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.94407023208768*^9, 3.944076965711241*^9, 3.944077019909067*^9, {
   3.944077068743746*^9, 3.94407709368509*^9}, 3.944078395496079*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"ecd7b92d-b53e-4c42-9bac-e781e5603f04"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{808, 911},
WindowMargins->{{Automatic, 721}, {Automatic, 204}},
PrintingCopies->1,
PrintingPageRange->{1, Automatic},
FrontEndVersion->"14.0 for Mac OS X ARM (64-bit) (December 12, 2023)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"79d99d9c-2760-41a1-b3ad-6f9f4f8469c8"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 194, 3, 69, "Chapter",ExpressionUUID->"4b7101b2-0adb-4fe5-b479-bdad5865b051"],
Cell[777, 27, 164, 3, 53, "Subtitle",ExpressionUUID->"13bc130c-7f5e-44a4-9ed0-26cf2333f1d9"],
Cell[CellGroupData[{
Cell[966, 34, 208, 4, 67, "Section",ExpressionUUID->"08f90a5e-ac65-4417-8844-b6de9f5e59a2"],
Cell[CellGroupData[{
Cell[1199, 42, 211, 4, 54, "Subsection",ExpressionUUID->"8a33a1b3-882c-4d3d-a569-a9721ac03c66"],
Cell[1413, 48, 388, 8, 35, "Text",ExpressionUUID->"a8aaaeba-5f5d-4b04-a63e-8e446b0fbb82"],
Cell[CellGroupData[{
Cell[1826, 60, 325, 6, 30, "Input",ExpressionUUID->"b821e991-c2d9-418d-942d-3fb94608fe69"],
Cell[2154, 68, 377, 6, 34, "Output",ExpressionUUID->"e466bb1e-835e-467e-98a2-28bb8ea751a6"]
}, Open  ]],
Cell[2546, 77, 534, 10, 58, "Text",ExpressionUUID->"b9297c04-623a-4c1b-986f-ada7eb0097d2"],
Cell[3083, 89, 337, 7, 30, "Input",ExpressionUUID->"6d0edfeb-52d1-4a02-a5c2-7292429e09c8"],
Cell[3423, 98, 387, 6, 35, "Text",ExpressionUUID->"9566219f-a504-4147-8fc0-573f5e279455"],
Cell[CellGroupData[{
Cell[3835, 108, 204, 3, 30, "Input",ExpressionUUID->"f26eb1f0-1473-4db9-ae05-8107d1908b73"],
Cell[4042, 113, 373, 5, 34, "Output",ExpressionUUID->"e8f58fd6-7d78-46fa-b86a-858a9ababebf"]
}, Open  ]],
Cell[4430, 121, 394, 6, 35, "Text",ExpressionUUID->"62b6183d-2706-4b36-b3c0-5d8cd6381d63"],
Cell[CellGroupData[{
Cell[4849, 131, 431, 9, 30, "Input",ExpressionUUID->"17ba6365-1a29-4f39-ac78-84ca83166229"],
Cell[5283, 142, 510, 8, 34, "Output",ExpressionUUID->"c8ff7e8d-0e33-4a18-a955-17f6cff41c94"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[5842, 156, 406, 6, 54, "Subsection",ExpressionUUID->"37bfb204-f511-4fa2-922d-c0559caba42b"],
Cell[6251, 164, 602, 10, 58, "Text",ExpressionUUID->"b927ef5a-0487-4e3b-bff8-b6da4c554b1f"],
Cell[6856, 176, 626, 14, 30, "Input",ExpressionUUID->"c1385a63-f4ef-419a-aeb0-f15b8e7097e9"],
Cell[CellGroupData[{
Cell[7507, 194, 281, 4, 30, "Input",ExpressionUUID->"3797964b-7fe0-42f5-8bff-ba4f188e8f4b"],
Cell[7791, 200, 364, 5, 34, "Output",ExpressionUUID->"19bf05e3-fa11-4704-a5b8-46e0cb70a6df"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[8204, 211, 460, 7, 54, "Subsection",ExpressionUUID->"f00b1135-c949-4fad-a757-63b958306fa7"],
Cell[8667, 220, 494, 7, 35, "Text",ExpressionUUID->"bcceedfa-138d-4106-83e3-b1df459d6a96"],
Cell[CellGroupData[{
Cell[9186, 231, 458, 8, 30, "Input",ExpressionUUID->"a463a7bf-44e9-4a06-9bbd-7063a9e95456"],
Cell[9647, 241, 318, 4, 34, "Output",ExpressionUUID->"cd33a093-aaea-47e1-8dd5-af7763095448"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[10014, 251, 383, 6, 54, "Subsection",ExpressionUUID->"03897e40-75a0-442c-bd63-a734d1777dea"],
Cell[10400, 259, 575, 10, 58, "Text",ExpressionUUID->"8c58bc9e-0a59-42b1-a044-2928b50551fc"],
Cell[CellGroupData[{
Cell[11000, 273, 1071, 17, 409, "Input",ExpressionUUID->"a1e60500-febd-4ad8-85dc-79d6636d5396"],
Cell[12074, 292, 316, 4, 34, "Output",ExpressionUUID->"177c8711-67be-4f9f-a511-9dcb71074c66"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[12439, 302, 358, 5, 54, "Subsection",ExpressionUUID->"948bda2d-6633-4dae-a24e-58e9d20f317e"],
Cell[12800, 309, 702, 12, 58, "Text",ExpressionUUID->"b84022f5-71de-4469-b3fd-013e3c7de209"],
Cell[CellGroupData[{
Cell[13527, 325, 344, 6, 30, "Input",ExpressionUUID->"90291343-87b2-4489-85aa-8db848a67dd1"],
Cell[13874, 333, 338, 5, 34, "Output",ExpressionUUID->"c41b5c69-8f05-4f44-ba06-e354a78279df"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[14261, 344, 458, 9, 54, "Subsection",ExpressionUUID->"6799b70b-44e2-42c2-94c4-f87e00b10639"],
Cell[14722, 355, 633, 11, 58, "Text",ExpressionUUID->"131dd5fb-7cc0-4f97-8e12-d30c2580b860"],
Cell[CellGroupData[{
Cell[15380, 370, 396, 6, 30, "Input",ExpressionUUID->"b332fb71-4039-44bb-8c4d-a10f72a9ad8f"],
Cell[15779, 378, 1549, 24, 119, "Output",ExpressionUUID->"6e98ac4b-7b55-45ea-b631-7e2ca4eac223"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[17377, 408, 832, 13, 81, "Subsection",ExpressionUUID->"101f226d-7c8c-4b94-a789-f41be2145fca"],
Cell[18212, 423, 699, 12, 35, "Text",ExpressionUUID->"2a457d5d-11ff-4629-9043-7061e5a15fab"],
Cell[18914, 437, 698, 12, 30, "Input",ExpressionUUID->"b561821b-ed38-4032-b9b7-7d51338ebbb5"],
Cell[19615, 451, 775, 13, 58, "Text",ExpressionUUID->"5c8f9208-8988-461f-8af2-46b6155d3e75"],
Cell[CellGroupData[{
Cell[20415, 468, 651, 9, 30, "Input",ExpressionUUID->"ff428f66-3446-4018-935c-0e55d8fbd2bd"],
Cell[21069, 479, 175, 2, 34, "Output",ExpressionUUID->"2ddd272d-5131-453d-87e2-1806052a2f41"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[21293, 487, 658, 9, 54, "Subsection",ExpressionUUID->"a0d311a5-36cb-436f-9378-5d757e24ab7b"],
Cell[21954, 498, 680, 12, 35, "Text",ExpressionUUID->"5b9206b0-07a1-4362-8d1c-5b56b57c8134"],
Cell[CellGroupData[{
Cell[22659, 514, 492, 12, 30, "Input",ExpressionUUID->"82339489-5ed5-441a-9e6a-5a09b687fa81"],
Cell[23154, 528, 19380, 379, 243, "Output",ExpressionUUID->"ecd7b92d-b53e-4c42-9bac-e781e5603f04"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

