(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Wolfram 14.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       154,          7]
NotebookDataLength[    665382,      14226]
NotebookOptionsPosition[    661285,      14145]
NotebookOutlinePosition[    661718,      14162]
CellTagsIndexPosition[    661675,      14159]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["EIWL 37, 38", "Title",
 CellChangeTimes->{{3.952504744758181*^9, 
  3.952504752831353*^9}},ExpressionUUID->"62d12662-a2ee-4720-be1c-\
61902d7dfe38"],

Cell["Section 37", "Subtitle",
 CellChangeTimes->{{3.952504762434339*^9, 
  3.952504766426976*^9}},ExpressionUUID->"c0a97a6c-1208-4ec9-8824-\
b9b4a11a4989"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Style", "[", 
    RowBox[{"#", ",", 
     RowBox[{"Background", "->", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"EvenQ", "[", "#", "]"}], ",", "Yellow", ",", "Gray"}], 
       "]"}]}]}], "]"}], "&"}], "/@", 
  RowBox[{"Range", "[", "100", "]"}]}]], "Input",
 CellChangeTimes->{{3.952504770739973*^9, 3.952504777490494*^9}, {
  3.952504852776237*^9, 3.952505020908395*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"ba751345-b019-47ac-9e9a-7f9f9807ba0f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   StyleBox["1",
    StripOnInput->False,
    Background->GrayLevel[0.5]], ",", 
   StyleBox["2",
    StripOnInput->False,
    Background->RGBColor[1, 1, 0]], ",", 
   StyleBox["3",
    StripOnInput->False,
    Background->GrayLevel[0.5]], ",", 
   StyleBox["4",
    StripOnInput->False,
    Background->RGBColor[1, 1, 0]], ",", 
   StyleBox["5",
    StripOnInput->False,
    Background->GrayLevel[0.5]], ",", 
   StyleBox["6",
    StripOnInput->False,
    Background->RGBColor[1, 1, 0]], ",", 
   StyleBox["7",
    StripOnInput->False,
    Background->GrayLevel[0.5]], ",", 
   StyleBox["8",
    StripOnInput->False,
    Background->RGBColor[1, 1, 0]], ",", 
   StyleBox["9",
    StripOnInput->False,
    Background->GrayLevel[0.5]], ",", 
   StyleBox["10",
    StripOnInput->False,
    Background->RGBColor[1, 1, 0]], ",", 
   StyleBox["11",
    StripOnInput->False,
    Background->GrayLevel[0.5]], ",", 
   StyleBox["12",
    StripOnInput->False,
    Background->RGBColor[1, 1, 0]], ",", 
   StyleBox["13",
    StripOnInput->False,
    Background->GrayLevel[0.5]], ",", 
   StyleBox["14",
    StripOnInput->False,
    Background->RGBColor[1, 1, 0]], ",", 
   StyleBox["15",
    StripOnInput->False,
    Background->GrayLevel[0.5]], ",", 
   StyleBox["16",
    StripOnInput->False,
    Background->RGBColor[1, 1, 0]], ",", 
   StyleBox["17",
    StripOnInput->False,
    Background->GrayLevel[0.5]], ",", 
   StyleBox["18",
    StripOnInput->False,
    Background->RGBColor[1, 1, 0]], ",", 
   StyleBox["19",
    StripOnInput->False,
    Background->GrayLevel[0.5]], ",", 
   StyleBox["20",
    StripOnInput->False,
    Background->RGBColor[1, 1, 0]], ",", 
   StyleBox["21",
    StripOnInput->False,
    Background->GrayLevel[0.5]], ",", 
   StyleBox["22",
    StripOnInput->False,
    Background->RGBColor[1, 1, 0]], ",", 
   StyleBox["23",
    StripOnInput->False,
    Background->GrayLevel[0.5]], ",", 
   StyleBox["24",
    StripOnInput->False,
    Background->RGBColor[1, 1, 0]], ",", 
   StyleBox["25",
    StripOnInput->False,
    Background->GrayLevel[0.5]], ",", 
   StyleBox["26",
    StripOnInput->False,
    Background->RGBColor[1, 1, 0]], ",", 
   StyleBox["27",
    StripOnInput->False,
    Background->GrayLevel[0.5]], ",", 
   StyleBox["28",
    StripOnInput->False,
    Background->RGBColor[1, 1, 0]], ",", 
   StyleBox["29",
    StripOnInput->False,
    Background->GrayLevel[0.5]], ",", 
   StyleBox["30",
    StripOnInput->False,
    Background->RGBColor[1, 1, 0]], ",", 
   StyleBox["31",
    StripOnInput->False,
    Background->GrayLevel[0.5]], ",", 
   StyleBox["32",
    StripOnInput->False,
    Background->RGBColor[1, 1, 0]], ",", 
   StyleBox["33",
    StripOnInput->False,
    Background->GrayLevel[0.5]], ",", 
   StyleBox["34",
    StripOnInput->False,
    Background->RGBColor[1, 1, 0]], ",", 
   StyleBox["35",
    StripOnInput->False,
    Background->GrayLevel[0.5]], ",", 
   StyleBox["36",
    StripOnInput->False,
    Background->RGBColor[1, 1, 0]], ",", 
   StyleBox["37",
    StripOnInput->False,
    Background->GrayLevel[0.5]], ",", 
   StyleBox["38",
    StripOnInput->False,
    Background->RGBColor[1, 1, 0]], ",", 
   StyleBox["39",
    StripOnInput->False,
    Background->GrayLevel[0.5]], ",", 
   StyleBox["40",
    StripOnInput->False,
    Background->RGBColor[1, 1, 0]], ",", 
   StyleBox["41",
    StripOnInput->False,
    Background->GrayLevel[0.5]], ",", 
   StyleBox["42",
    StripOnInput->False,
    Background->RGBColor[1, 1, 0]], ",", 
   StyleBox["43",
    StripOnInput->False,
    Background->GrayLevel[0.5]], ",", 
   StyleBox["44",
    StripOnInput->False,
    Background->RGBColor[1, 1, 0]], ",", 
   StyleBox["45",
    StripOnInput->False,
    Background->GrayLevel[0.5]], ",", 
   StyleBox["46",
    StripOnInput->False,
    Background->RGBColor[1, 1, 0]], ",", 
   StyleBox["47",
    StripOnInput->False,
    Background->GrayLevel[0.5]], ",", 
   StyleBox["48",
    StripOnInput->False,
    Background->RGBColor[1, 1, 0]], ",", 
   StyleBox["49",
    StripOnInput->False,
    Background->GrayLevel[0.5]], ",", 
   StyleBox["50",
    StripOnInput->False,
    Background->RGBColor[1, 1, 0]], ",", 
   StyleBox["51",
    StripOnInput->False,
    Background->GrayLevel[0.5]], ",", 
   StyleBox["52",
    StripOnInput->False,
    Background->RGBColor[1, 1, 0]], ",", 
   StyleBox["53",
    StripOnInput->False,
    Background->GrayLevel[0.5]], ",", 
   StyleBox["54",
    StripOnInput->False,
    Background->RGBColor[1, 1, 0]], ",", 
   StyleBox["55",
    StripOnInput->False,
    Background->GrayLevel[0.5]], ",", 
   StyleBox["56",
    StripOnInput->False,
    Background->RGBColor[1, 1, 0]], ",", 
   StyleBox["57",
    StripOnInput->False,
    Background->GrayLevel[0.5]], ",", 
   StyleBox["58",
    StripOnInput->False,
    Background->RGBColor[1, 1, 0]], ",", 
   StyleBox["59",
    StripOnInput->False,
    Background->GrayLevel[0.5]], ",", 
   StyleBox["60",
    StripOnInput->False,
    Background->RGBColor[1, 1, 0]], ",", 
   StyleBox["61",
    StripOnInput->False,
    Background->GrayLevel[0.5]], ",", 
   StyleBox["62",
    StripOnInput->False,
    Background->RGBColor[1, 1, 0]], ",", 
   StyleBox["63",
    StripOnInput->False,
    Background->GrayLevel[0.5]], ",", 
   StyleBox["64",
    StripOnInput->False,
    Background->RGBColor[1, 1, 0]], ",", 
   StyleBox["65",
    StripOnInput->False,
    Background->GrayLevel[0.5]], ",", 
   StyleBox["66",
    StripOnInput->False,
    Background->RGBColor[1, 1, 0]], ",", 
   StyleBox["67",
    StripOnInput->False,
    Background->GrayLevel[0.5]], ",", 
   StyleBox["68",
    StripOnInput->False,
    Background->RGBColor[1, 1, 0]], ",", 
   StyleBox["69",
    StripOnInput->False,
    Background->GrayLevel[0.5]], ",", 
   StyleBox["70",
    StripOnInput->False,
    Background->RGBColor[1, 1, 0]], ",", 
   StyleBox["71",
    StripOnInput->False,
    Background->GrayLevel[0.5]], ",", 
   StyleBox["72",
    StripOnInput->False,
    Background->RGBColor[1, 1, 0]], ",", 
   StyleBox["73",
    StripOnInput->False,
    Background->GrayLevel[0.5]], ",", 
   StyleBox["74",
    StripOnInput->False,
    Background->RGBColor[1, 1, 0]], ",", 
   StyleBox["75",
    StripOnInput->False,
    Background->GrayLevel[0.5]], ",", 
   StyleBox["76",
    StripOnInput->False,
    Background->RGBColor[1, 1, 0]], ",", 
   StyleBox["77",
    StripOnInput->False,
    Background->GrayLevel[0.5]], ",", 
   StyleBox["78",
    StripOnInput->False,
    Background->RGBColor[1, 1, 0]], ",", 
   StyleBox["79",
    StripOnInput->False,
    Background->GrayLevel[0.5]], ",", 
   StyleBox["80",
    StripOnInput->False,
    Background->RGBColor[1, 1, 0]], ",", 
   StyleBox["81",
    StripOnInput->False,
    Background->GrayLevel[0.5]], ",", 
   StyleBox["82",
    StripOnInput->False,
    Background->RGBColor[1, 1, 0]], ",", 
   StyleBox["83",
    StripOnInput->False,
    Background->GrayLevel[0.5]], ",", 
   StyleBox["84",
    StripOnInput->False,
    Background->RGBColor[1, 1, 0]], ",", 
   StyleBox["85",
    StripOnInput->False,
    Background->GrayLevel[0.5]], ",", 
   StyleBox["86",
    StripOnInput->False,
    Background->RGBColor[1, 1, 0]], ",", 
   StyleBox["87",
    StripOnInput->False,
    Background->GrayLevel[0.5]], ",", 
   StyleBox["88",
    StripOnInput->False,
    Background->RGBColor[1, 1, 0]], ",", 
   StyleBox["89",
    StripOnInput->False,
    Background->GrayLevel[0.5]], ",", 
   StyleBox["90",
    StripOnInput->False,
    Background->RGBColor[1, 1, 0]], ",", 
   StyleBox["91",
    StripOnInput->False,
    Background->GrayLevel[0.5]], ",", 
   StyleBox["92",
    StripOnInput->False,
    Background->RGBColor[1, 1, 0]], ",", 
   StyleBox["93",
    StripOnInput->False,
    Background->GrayLevel[0.5]], ",", 
   StyleBox["94",
    StripOnInput->False,
    Background->RGBColor[1, 1, 0]], ",", 
   StyleBox["95",
    StripOnInput->False,
    Background->GrayLevel[0.5]], ",", 
   StyleBox["96",
    StripOnInput->False,
    Background->RGBColor[1, 1, 0]], ",", 
   StyleBox["97",
    StripOnInput->False,
    Background->GrayLevel[0.5]], ",", 
   StyleBox["98",
    StripOnInput->False,
    Background->RGBColor[1, 1, 0]], ",", 
   StyleBox["99",
    StripOnInput->False,
    Background->GrayLevel[0.5]], ",", 
   StyleBox["100",
    StripOnInput->False,
    Background->RGBColor[1, 1, 0]]}], "}"}]], "Output",
 CellChangeTimes->{
  3.9525049414571133`*^9, {3.952505018211042*^9, 3.952505021179864*^9}, 
   3.952508426149468*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"56d52830-d001-4184-828d-cd22bebcf366"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"PrimeQ", "[", "#", "]"}], ",", 
     RowBox[{"Framed", "[", "#", "]"}], ",", "#"}], "]"}], "&"}], "/@", 
  RowBox[{"Range", "[", "100", "]"}]}]], "Input",
 CellChangeTimes->{{3.952505050790031*^9, 3.9525051088800573`*^9}, {
  3.952505152518556*^9, 3.952505202202772*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"b0db4bb8-da0b-4c06-a437-72bf8e3e8820"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", 
   FrameBox["2",
    StripOnInput->False], ",", 
   FrameBox["3",
    StripOnInput->False], ",", "4", ",", 
   FrameBox["5",
    StripOnInput->False], ",", "6", ",", 
   FrameBox["7",
    StripOnInput->False], ",", "8", ",", "9", ",", "10", ",", 
   FrameBox["11",
    StripOnInput->False], ",", "12", ",", 
   FrameBox["13",
    StripOnInput->False], ",", "14", ",", "15", ",", "16", ",", 
   FrameBox["17",
    StripOnInput->False], ",", "18", ",", 
   FrameBox["19",
    StripOnInput->False], ",", "20", ",", "21", ",", "22", ",", 
   FrameBox["23",
    StripOnInput->False], ",", "24", ",", "25", ",", "26", ",", "27", ",", 
   "28", ",", 
   FrameBox["29",
    StripOnInput->False], ",", "30", ",", 
   FrameBox["31",
    StripOnInput->False], ",", "32", ",", "33", ",", "34", ",", "35", ",", 
   "36", ",", 
   FrameBox["37",
    StripOnInput->False], ",", "38", ",", "39", ",", "40", ",", 
   FrameBox["41",
    StripOnInput->False], ",", "42", ",", 
   FrameBox["43",
    StripOnInput->False], ",", "44", ",", "45", ",", "46", ",", 
   FrameBox["47",
    StripOnInput->False], ",", "48", ",", "49", ",", "50", ",", "51", ",", 
   "52", ",", 
   FrameBox["53",
    StripOnInput->False], ",", "54", ",", "55", ",", "56", ",", "57", ",", 
   "58", ",", 
   FrameBox["59",
    StripOnInput->False], ",", "60", ",", 
   FrameBox["61",
    StripOnInput->False], ",", "62", ",", "63", ",", "64", ",", "65", ",", 
   "66", ",", 
   FrameBox["67",
    StripOnInput->False], ",", "68", ",", "69", ",", "70", ",", 
   FrameBox["71",
    StripOnInput->False], ",", "72", ",", 
   FrameBox["73",
    StripOnInput->False], ",", "74", ",", "75", ",", "76", ",", "77", ",", 
   "78", ",", 
   FrameBox["79",
    StripOnInput->False], ",", "80", ",", "81", ",", "82", ",", 
   FrameBox["83",
    StripOnInput->False], ",", "84", ",", "85", ",", "86", ",", "87", ",", 
   "88", ",", 
   FrameBox["89",
    StripOnInput->False], ",", "90", ",", "91", ",", "92", ",", "93", ",", 
   "94", ",", "95", ",", "96", ",", 
   FrameBox["97",
    StripOnInput->False], ",", "98", ",", "99", ",", "100"}], "}"}]], "Output",\

 CellChangeTimes->{
  3.952505109672307*^9, {3.952505157216902*^9, 3.952505170474801*^9}, 
   3.952505202497493*^9, 3.952508426545897*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"11455ddb-c72f-4911-a35a-f7c1d5b2457f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"PrimeQ", "[", "#", "]"}], ",", 
     RowBox[{"Labeled", "[", 
      RowBox[{
       RowBox[{"Framed", "[", "#", "]"}], ",", 
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"Mod", "[", 
          RowBox[{"#", ",", "4"}], "]"}], ",", "LightGray"}], "]"}]}], "]"}], 
     ",", "#"}], "]"}], "&"}], "/@", 
  RowBox[{"Range", "[", "100", "]"}]}]], "Input",
 CellChangeTimes->{{3.952505248473419*^9, 3.952505261741243*^9}, {
  3.952505302665567*^9, 3.952505338706707*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"375a5b62-987e-4f8a-a7b0-fde107b583fb"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", 
   TemplateBox[{
     FrameBox["2", StripOnInput -> False], 
     StyleBox["2", 
      GrayLevel[0.85], StripOnInput -> False]},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2, ",", 
         RowBox[{"{", "}"}]}], "]"}]& )], ",", 
   TemplateBox[{
     FrameBox["3", StripOnInput -> False], 
     StyleBox["3", 
      GrayLevel[0.85], StripOnInput -> False]},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2, ",", 
         RowBox[{"{", "}"}]}], "]"}]& )], ",", "4", ",", 
   TemplateBox[{
     FrameBox["5", StripOnInput -> False], 
     StyleBox["1", 
      GrayLevel[0.85], StripOnInput -> False]},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2, ",", 
         RowBox[{"{", "}"}]}], "]"}]& )], ",", "6", ",", 
   TemplateBox[{
     FrameBox["7", StripOnInput -> False], 
     StyleBox["3", 
      GrayLevel[0.85], StripOnInput -> False]},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2, ",", 
         RowBox[{"{", "}"}]}], "]"}]& )], ",", "8", ",", "9", ",", "10", ",", 
   
   TemplateBox[{
     FrameBox["11", StripOnInput -> False], 
     StyleBox["3", 
      GrayLevel[0.85], StripOnInput -> False]},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2, ",", 
         RowBox[{"{", "}"}]}], "]"}]& )], ",", "12", ",", 
   TemplateBox[{
     FrameBox["13", StripOnInput -> False], 
     StyleBox["1", 
      GrayLevel[0.85], StripOnInput -> False]},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2, ",", 
         RowBox[{"{", "}"}]}], "]"}]& )], ",", "14", ",", "15", ",", "16", 
   ",", 
   TemplateBox[{
     FrameBox["17", StripOnInput -> False], 
     StyleBox["1", 
      GrayLevel[0.85], StripOnInput -> False]},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2, ",", 
         RowBox[{"{", "}"}]}], "]"}]& )], ",", "18", ",", 
   TemplateBox[{
     FrameBox["19", StripOnInput -> False], 
     StyleBox["3", 
      GrayLevel[0.85], StripOnInput -> False]},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2, ",", 
         RowBox[{"{", "}"}]}], "]"}]& )], ",", "20", ",", "21", ",", "22", 
   ",", 
   TemplateBox[{
     FrameBox["23", StripOnInput -> False], 
     StyleBox["3", 
      GrayLevel[0.85], StripOnInput -> False]},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2, ",", 
         RowBox[{"{", "}"}]}], "]"}]& )], ",", "24", ",", "25", ",", "26", 
   ",", "27", ",", "28", ",", 
   TemplateBox[{
     FrameBox["29", StripOnInput -> False], 
     StyleBox["1", 
      GrayLevel[0.85], StripOnInput -> False]},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2, ",", 
         RowBox[{"{", "}"}]}], "]"}]& )], ",", "30", ",", 
   TemplateBox[{
     FrameBox["31", StripOnInput -> False], 
     StyleBox["3", 
      GrayLevel[0.85], StripOnInput -> False]},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2, ",", 
         RowBox[{"{", "}"}]}], "]"}]& )], ",", "32", ",", "33", ",", "34", 
   ",", "35", ",", "36", ",", 
   TemplateBox[{
     FrameBox["37", StripOnInput -> False], 
     StyleBox["1", 
      GrayLevel[0.85], StripOnInput -> False]},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2, ",", 
         RowBox[{"{", "}"}]}], "]"}]& )], ",", "38", ",", "39", ",", "40", 
   ",", 
   TemplateBox[{
     FrameBox["41", StripOnInput -> False], 
     StyleBox["1", 
      GrayLevel[0.85], StripOnInput -> False]},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2, ",", 
         RowBox[{"{", "}"}]}], "]"}]& )], ",", "42", ",", 
   TemplateBox[{
     FrameBox["43", StripOnInput -> False], 
     StyleBox["3", 
      GrayLevel[0.85], StripOnInput -> False]},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2, ",", 
         RowBox[{"{", "}"}]}], "]"}]& )], ",", "44", ",", "45", ",", "46", 
   ",", 
   TemplateBox[{
     FrameBox["47", StripOnInput -> False], 
     StyleBox["3", 
      GrayLevel[0.85], StripOnInput -> False]},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2, ",", 
         RowBox[{"{", "}"}]}], "]"}]& )], ",", "48", ",", "49", ",", "50", 
   ",", "51", ",", "52", ",", 
   TemplateBox[{
     FrameBox["53", StripOnInput -> False], 
     StyleBox["1", 
      GrayLevel[0.85], StripOnInput -> False]},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2, ",", 
         RowBox[{"{", "}"}]}], "]"}]& )], ",", "54", ",", "55", ",", "56", 
   ",", "57", ",", "58", ",", 
   TemplateBox[{
     FrameBox["59", StripOnInput -> False], 
     StyleBox["3", 
      GrayLevel[0.85], StripOnInput -> False]},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2, ",", 
         RowBox[{"{", "}"}]}], "]"}]& )], ",", "60", ",", 
   TemplateBox[{
     FrameBox["61", StripOnInput -> False], 
     StyleBox["1", 
      GrayLevel[0.85], StripOnInput -> False]},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2, ",", 
         RowBox[{"{", "}"}]}], "]"}]& )], ",", "62", ",", "63", ",", "64", 
   ",", "65", ",", "66", ",", 
   TemplateBox[{
     FrameBox["67", StripOnInput -> False], 
     StyleBox["3", 
      GrayLevel[0.85], StripOnInput -> False]},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2, ",", 
         RowBox[{"{", "}"}]}], "]"}]& )], ",", "68", ",", "69", ",", "70", 
   ",", 
   TemplateBox[{
     FrameBox["71", StripOnInput -> False], 
     StyleBox["3", 
      GrayLevel[0.85], StripOnInput -> False]},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2, ",", 
         RowBox[{"{", "}"}]}], "]"}]& )], ",", "72", ",", 
   TemplateBox[{
     FrameBox["73", StripOnInput -> False], 
     StyleBox["1", 
      GrayLevel[0.85], StripOnInput -> False]},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2, ",", 
         RowBox[{"{", "}"}]}], "]"}]& )], ",", "74", ",", "75", ",", "76", 
   ",", "77", ",", "78", ",", 
   TemplateBox[{
     FrameBox["79", StripOnInput -> False], 
     StyleBox["3", 
      GrayLevel[0.85], StripOnInput -> False]},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2, ",", 
         RowBox[{"{", "}"}]}], "]"}]& )], ",", "80", ",", "81", ",", "82", 
   ",", 
   TemplateBox[{
     FrameBox["83", StripOnInput -> False], 
     StyleBox["3", 
      GrayLevel[0.85], StripOnInput -> False]},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2, ",", 
         RowBox[{"{", "}"}]}], "]"}]& )], ",", "84", ",", "85", ",", "86", 
   ",", "87", ",", "88", ",", 
   TemplateBox[{
     FrameBox["89", StripOnInput -> False], 
     StyleBox["1", 
      GrayLevel[0.85], StripOnInput -> False]},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2, ",", 
         RowBox[{"{", "}"}]}], "]"}]& )], ",", "90", ",", "91", ",", "92", 
   ",", "93", ",", "94", ",", "95", ",", "96", ",", 
   TemplateBox[{
     FrameBox["97", StripOnInput -> False], 
     StyleBox["1", 
      GrayLevel[0.85], StripOnInput -> False]},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2, ",", 
         RowBox[{"{", "}"}]}], "]"}]& )], ",", "98", ",", "99", ",", "100"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.9525053390112257`*^9, 3.9525084265876083`*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"fee2b75c-49d6-4103-90c1-f57d7c588857"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphicsGrid", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Graphics", "[", 
     RowBox[{"Style", "[", 
      RowBox[{
       RowBox[{"Disk", "[", "]"}], ",", 
       RowBox[{"RandomColor", "[", "]"}]}], "]"}], "]"}], ",", "3", ",", 
    "6"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.952505372948303*^9, 3.952505425584673*^9}, {
  3.952505466347678*^9, 3.9525054773380117`*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"4bd83737-40ee-4324-bfb7-f79a2313a327"],

Cell[BoxData[
 GraphicsBox[{{}, {{InsetBox[
      GraphicsBox[
       {RGBColor[0.5546994626298412, 0.7640949320756374, 0.6138252315615367], 
        DiskBox[{0, 0}]},
       DisplayFunction->Identity,
       ImagePadding->{{0., 0.}, {0., 0.}}], {195.42857142857142, -193.19039999999998},
       ImageScaled[{0.5, 0.5}], {360., 359.424},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
     InsetBox[
      GraphicsBox[
       {RGBColor[0.9851223301213468, 0.5120957145957341, 0.0799569714724635], 
        DiskBox[{0, 0}]},
       DisplayFunction->Identity,
       ImagePadding->{{0., 0.}, {0., 0.}}], {586.2857142857142, -193.19039999999998},
       ImageScaled[{0.5, 0.5}], {360., 359.424},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
     InsetBox[
      GraphicsBox[
       {RGBColor[
        0.794155504960715, 0.014594406450523012`, 0.025130765914761488`], 
        DiskBox[{0, 0}]},
       DisplayFunction->Identity,
       ImagePadding->{{0., 0.}, {0., 0.}}], {977.1428571428571, -193.19039999999998},
       ImageScaled[{0.5, 0.5}], {360., 359.424},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
     InsetBox[
      GraphicsBox[
       {RGBColor[0.1652378977960911, 0.3643189933476103, 0.7471911263861792], 
        DiskBox[{0, 0}]},
       DisplayFunction->Identity,
       ImagePadding->{{0., 0.}, {0., 0.}}], {1368., -193.19039999999998}, 
      ImageScaled[{0.5, 0.5}], {360., 359.424},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
     InsetBox[
      GraphicsBox[
       {RGBColor[
        0.16670139879696766`, 0.09865204931054761, 0.6950785478115606], 
        DiskBox[{0, 0}]},
       DisplayFunction->Identity,
       ImagePadding->{{0., 0.}, {0., 0.}}], {1758.8571428571427, -193.19039999999998},
       ImageScaled[{0.5, 0.5}], {360., 359.424},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
     InsetBox[
      GraphicsBox[
       {RGBColor[0.74728447375434, 0.49626804984045325`, 0.2354688953711357], 
        DiskBox[{0, 0}]},
       DisplayFunction->Identity,
       ImagePadding->{{0., 0.}, {0., 0.}}], {2149.7142857142853, -193.19039999999998},
       ImageScaled[{0.5, 0.5}], {360., 359.424},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}]}, {
     InsetBox[
      GraphicsBox[
       {RGBColor[0.8492317952656141, 0.9712240907193854, 0.5545794577315588], 
        DiskBox[{0, 0}]},
       DisplayFunction->Identity,
       ImagePadding->{{0., 0.}, {0., 0.}}], {195.42857142857142, -579.5712}, 
      ImageScaled[{0.5, 0.5}], {360., 359.424},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
     InsetBox[
      GraphicsBox[
       {RGBColor[
        0.5526454196073753, 0.5738403426845711, 0.24787263750132826`], 
        DiskBox[{0, 0}]},
       DisplayFunction->Identity,
       ImagePadding->{{0., 0.}, {0., 0.}}], {586.2857142857142, -579.5712}, 
      ImageScaled[{0.5, 0.5}], {360., 359.424},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
     InsetBox[
      GraphicsBox[
       {RGBColor[0.5965765584861922, 0.7208116967673821, 0.3857733856903658], 
        DiskBox[{0, 0}]},
       DisplayFunction->Identity,
       ImagePadding->{{0., 0.}, {0., 0.}}], {977.1428571428571, -579.5712}, 
      ImageScaled[{0.5, 0.5}], {360., 359.424},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
     InsetBox[
      GraphicsBox[
       {RGBColor[
        0.7508569518019634, 0.36709778553178807`, 0.2053025808814064], 
        DiskBox[{0, 0}]},
       DisplayFunction->Identity,
       ImagePadding->{{0., 0.}, {0., 0.}}], {1368., -579.5712}, 
      ImageScaled[{0.5, 0.5}], {360., 359.424},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
     InsetBox[
      GraphicsBox[
       {RGBColor[
        0.03583509973712684, 0.17583814850738122`, 0.6197950642040477], 
        DiskBox[{0, 0}]},
       DisplayFunction->Identity,
       ImagePadding->{{0., 0.}, {0., 0.}}], {1758.8571428571427, -579.5712}, 
      ImageScaled[{0.5, 0.5}], {360., 359.424},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
     InsetBox[
      GraphicsBox[
       {RGBColor[
        0.8084755315118368, 0.8690400095509312, 0.49622802886360007`], 
        DiskBox[{0, 0}]},
       DisplayFunction->Identity,
       ImagePadding->{{0., 0.}, {0., 0.}}], {2149.7142857142853, -579.5712}, 
      ImageScaled[{0.5, 0.5}], {360., 359.424},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}]}, {
     InsetBox[
      GraphicsBox[
       {RGBColor[0.9601096234397659, 0.1770488613074317, 0.8842652821346915], 
        DiskBox[{0, 0}]},
       DisplayFunction->Identity,
       ImagePadding->{{0., 0.}, {0., 0.}}], {195.42857142857142, -965.952}, 
      ImageScaled[{0.5, 0.5}], {360., 359.424},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
     InsetBox[
      GraphicsBox[
       {RGBColor[
        0.7442043098592981, 0.34119849042948713`, 0.33646828714930965`], 
        DiskBox[{0, 0}]},
       DisplayFunction->Identity,
       ImagePadding->{{0., 0.}, {0., 0.}}], {586.2857142857142, -965.952}, 
      ImageScaled[{0.5, 0.5}], {360., 359.424},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
     InsetBox[
      GraphicsBox[
       {RGBColor[
        0.8239841233386338, 0.40519744120916124`, 0.8714944433721019], 
        DiskBox[{0, 0}]},
       DisplayFunction->Identity,
       ImagePadding->{{0., 0.}, {0., 0.}}], {977.1428571428571, -965.952}, 
      ImageScaled[{0.5, 0.5}], {360., 359.424},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
     InsetBox[
      GraphicsBox[
       {RGBColor[0.8562106990546543, 0.04384038131089696, 0.6897742323091614],
         DiskBox[{0, 0}]},
       DisplayFunction->Identity,
       ImagePadding->{{0., 0.}, {0., 0.}}], {1368., -965.952}, 
      ImageScaled[{0.5, 0.5}], {360., 359.424},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
     InsetBox[
      GraphicsBox[
       {RGBColor[0.8199296456831071, 0.4963548642466584, 0.06375929858126894],
         DiskBox[{0, 0}]},
       DisplayFunction->Identity,
       ImagePadding->{{0., 0.}, {0., 0.}}], {1758.8571428571427, -965.952}, 
      ImageScaled[{0.5, 0.5}], {360., 359.424},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
     InsetBox[
      GraphicsBox[
       {RGBColor[
        0.10859356157881694`, 0.9226107620527362, 0.8569671465134892], 
        DiskBox[{0, 0}]},
       DisplayFunction->Identity,
       ImagePadding->{{0., 0.}, {0., 0.}}], {2149.7142857142853, -965.952}, 
      ImageScaled[{0.5, 0.5}], {360., 359.424},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}]}}, {}},
  
  ImageSize->{
    UpTo[600], 
    UpTo[700]},
  Method->{"IgnoreImageSizeAutomaticLimit" -> True},
  PlotRangePadding->Automatic]], "Output",
 CellChangeTimes->{{3.952505391731941*^9, 3.952505426000873*^9}, {
   3.952505470737031*^9, 3.952505478690587*^9}, 3.9525084269850693`*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"630f9c60-9191-44c3-ba1c-5ef563c32a8d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PieChart", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Labeled", "[", 
     RowBox[{
      RowBox[{"#", "[", "\"\<GDP\>\"", "]"}], ",", "#"}], "]"}], "&"}], "/@", 
   
   RowBox[{"EntityList", "[", 
    TemplateBox[<|
     "query" -> "g5 countries", "boxes" -> TemplateBox[{"\"Group of 5\"", 
         RowBox[{"EntityClass", "[", 
           RowBox[{"\"Country\"", ",", "\"GroupOf5\""}], "]"}], 
         "\"EntityClass[\\\"Country\\\", \\\"GroupOf5\\\"]\"", 
         "\"countries\""}, "EntityClass"], 
      "allassumptions" -> {{
        "word" -> "", "template" -> 
         "Assuming the input is a class of countries${separator}Use \"g5\" as \
${desc} instead", "count" -> "2", "pulldown" -> "false", "type" -> 
         "MultiClash", "default" -> 
         "{\"MC\", \"\"} -> {\"CountryClass\", \"dflt\"}", 
         "Values" -> {{
           "name" -> "CountryClass", "desc" -> "a class of countries", 
            "input" -> "{\"MC\", \"\"} -> {\"CountryClass\"}", "word" -> 
            "the input"}, {
           "name" -> "Company", "desc" -> "a company", "input" -> 
            "{\"MC\", \"\"} -> {\"Company\"}", "word" -> "g5"}}}}, 
      "assumptions" -> {}, "open" -> {1, 2}, 
      "querystate" -> {
       "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
        0.867948`6.39003870025133, "Messages" -> {}}, "contextinfo" -> 
      Automatic, "version" -> 5|>,
     "LinguisticAssistantTemplate"], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9525054924736032`*^9, 3.952505714040464*^9}, {
  3.952506000765161*^9, 3.9525060158934393`*^9}, {3.952506404555832*^9, 
  3.952506407909451*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"0622e4fa-1017-46af-abb0-e4bdad5f4b72"],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   DynamicModuleBox[{DynamicChart`click$4847$4978 = False, 
    DynamicChart`click$4866$4978 = False, DynamicChart`click$4874$4978 = 
    False, DynamicChart`click$4882$4978 = False, 
    DynamicChart`click$4890$4978 = False}, {
     {RGBColor[0.5, 0.5, 1.], EdgeForm[{GrayLevel[0], Opacity[0.5]}], {{{}, {
         {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{GrayLevel[0], 
          Opacity[0.5]}], 
          TagBox[GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{
                 TagBox[
                  DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {2.694446744761273, 
                    3.141592653589793}]},
                   
                   ImageSizeCache->{{32.29289321881345, 
                    180.70710678118655`}, {-67.134963338958, \
-2.158860015688461}}],
                  "DelayedMouseEffectStyle"], {}},
                StatusArea[#, 3.05183161138476*^12]& ,
                TagBoxNote->"3.05183161138476*^12"],
               StyleBox["3.05183161138476`*^12", {}, StripOnInput -> False]],
              Annotation[#, 
               Style[3.05183161138476*^12, {}], "Tooltip"]& ],
             
             EventHandlerTag[{
              "MouseClicked" :> FEPrivate`Set[DynamicChart`click$4847$4978, 
                 FEPrivate`Not[DynamicChart`click$4847$4978]], PassEventsDown -> 
               True, Method -> "Preemptive", PassEventsUp -> True}]], Dynamic[
            FEPrivate`If[
             DynamicChart`click$4847$4978, {{{1., 0.}, {0., 
               1.}}, {-0.19502229946922267`, 0.04434301196058791}}, {{1, 0}, {
              0, 1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$4847$4978}]],
           "DelayedClickEffect"]}, 
         {RGBColor[1., 0.544, 0.2], EdgeForm[{GrayLevel[0], Opacity[0.5]}], 
          TagBox[GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{
                 TagBox[
                  DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {2.03135315285825, 
                    2.694446744761273}]},
                   
                   ImageSizeCache->{{46.74521813537925, 
                    180.70710678118655`}, {-135.25643162011625`, \
-2.1588600156884468`}}],
                  "DelayedMouseEffectStyle"], {}},
                StatusArea[#, 4.525703903627531*^12]& ,
                TagBoxNote->"4.525703903627531*^12"],
               StyleBox["4.525703903627531`*^12", {}, StripOnInput -> False]],
              
              Annotation[#, 
               Style[4.525703903627531*^12, {}], "Tooltip"]& ],
             
             EventHandlerTag[{
              "MouseClicked" :> FEPrivate`Set[DynamicChart`click$4866$4978, 
                 FEPrivate`Not[DynamicChart`click$4866$4978]], PassEventsDown -> 
               True, Method -> "Preemptive", PassEventsUp -> True}]], Dynamic[
            FEPrivate`If[
             DynamicChart`click$4866$4978, {{{1., 0.}, {0., 
               1.}}, {-0.1423664648181001, 0.1404698889271173}}, {{1, 0}, {0, 
              1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$4866$4978}]],
           "DelayedClickEffect"]}, 
         {RGBColor[0.784, 0.47519999999999996`, 0.2], EdgeForm[{GrayLevel[0], 
          Opacity[0.5]}], 
          TagBox[GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{
                 TagBox[
                  DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {1.4153222281556281`, 
                    2.03135315285825}]},
                   
                   ImageSizeCache->{{113.95918664427388`, 
                    203.4698358175408}, {-150.57307357806155`, \
-2.1588600156884468`}}],
                  "DelayedMouseEffectStyle"], {}},
                StatusArea[#, 4.2044948024315547`*^12]& ,
                TagBoxNote->"4.2044948024315547*^12"],
               StyleBox["4.2044948024315547`*^12", {}, StripOnInput -> False]],
              Annotation[#, 
               Style[4.2044948024315547`*^12, {}], "Tooltip"]& ],
             
             EventHandlerTag[{
              "MouseClicked" :> FEPrivate`Set[DynamicChart`click$4874$4978, 
                 FEPrivate`Not[DynamicChart`click$4874$4978]], PassEventsDown -> 
               True, Method -> "Preemptive", PassEventsUp -> True}]], Dynamic[
            FEPrivate`If[
             DynamicChart`click$4874$4978, {{{1., 0.}, {0., 
               1.}}, {-0.03039009482613754, 0.19767762173918013`}}, {{1, 0}, {
              0, 1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$4874$4978}]],
           "DelayedClickEffect"]}, 
         {RGBColor[0.6754608, 0.4848, 0.7224792], EdgeForm[{GrayLevel[0], 
          Opacity[0.5]}], 
          TagBox[GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{
                 TagBox[
                  DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {0.9199687946028363, 
                    1.4153222281556281`}]},
                   
                   ImageSizeCache->{{179.29289321881345`, 
                    269.76631934290185`}, {-148.79999314470908`, \
-2.1588600156884468`}}],
                  "DelayedMouseEffectStyle"], {}},
                StatusArea[#, 3.380854520809537*^12]& ,
                TagBoxNote->"3.380854520809537*^12"],
               StyleBox["3.380854520809537`*^12", {}, StripOnInput -> False]],
              
              Annotation[#, 
               Style[3.380854520809537*^12, {}], "Tooltip"]& ],
             
             EventHandlerTag[{
              "MouseClicked" :> FEPrivate`Set[DynamicChart`click$4882$4978, 
                 FEPrivate`Not[DynamicChart`click$4882$4978]], PassEventsDown -> 
               True, Method -> "Preemptive", PassEventsUp -> True}]], Dynamic[
            FEPrivate`If[
             DynamicChart`click$4882$4978, {{{1., 0.}, {0., 1.}}, {
               0.07846369953699553, 0.18396588774815859`}}, {{1, 0}, {0, 
              1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$4882$4978}]],
           "DelayedClickEffect"]}, 
         {RGBColor[0.4992, 0.5552, 0.8309304], EdgeForm[{GrayLevel[0], 
          Opacity[0.5]}], 
          TagBox[GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{
                 TagBox[
                  DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-3.141592653589793, 
                    0.9199687946028363}]},
                   
                   ImageSizeCache->{{32.29289321881345, 
                    327.70710678118655`}, {-120.52373265225066`, 
                    144.84113998431155`}}],
                  "DelayedMouseEffectStyle"], {}},
                StatusArea[#, 2.7720709*^13]& ,
                TagBoxNote->"2.7720709*^13"],
               StyleBox["2.7720709`*^13", {}, StripOnInput -> False]],
              Annotation[#, 
               Style[2.7720709*^13, {}], "Tooltip"]& ],
             
             EventHandlerTag[{
              "MouseClicked" :> FEPrivate`Set[DynamicChart`click$4890$4978, 
                 FEPrivate`Not[DynamicChart`click$4890$4978]], PassEventsDown -> 
               True, Method -> "Preemptive", PassEventsUp -> True}]], Dynamic[
            FEPrivate`If[
             DynamicChart`click$4890$4978, {{{1., 0.}, {0., 1.}}, {
               0.08878682521488995, -0.17921188484099093`}}, {{1, 0}, {0, 
              1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$4890$4978}]],
           "DelayedClickEffect"]}}}, {}}, {}}, {{{
        TagBox[GeometricTransformationBox[
          TagBox[
           TagBox[
            TooltipBox[
             TagBox[{{{}, InsetBox[
                 TemplateBox[{"\"France\"", 
                   RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"France\""}], "]"}], 
                   "\"Entity[\\\"Country\\\", \\\"France\\\"]\""},
                  
                  "EntityTraditionalFramed"], \
{-0.6500743315640755, 0.14781003986862634}]}, {}},
              StatusArea[#, 3.05183161138476*^12]& ,
              TagBoxNote->"3.05183161138476*^12"],
             StyleBox["3.05183161138476`*^12", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[3.05183161138476*^12, {}], "Tooltip"]& ],
           
           EventHandlerTag[{
            "MouseClicked" :> FEPrivate`Set[DynamicChart`click$4847$4978, 
               FEPrivate`Not[DynamicChart`click$4847$4978]], PassEventsDown -> 
             True, Method -> "Preemptive", PassEventsUp -> True}]], Dynamic[
          FEPrivate`If[
           DynamicChart`click$4847$4978, {{{1., 0.}, {0., 
             1.}}, {-0.19502229946922267`, 0.04434301196058791}}, {{1, 0}, {0,
             1}}, {{1, 0}, {0, 1}}], 
           TrackedSymbols :> {DynamicChart`click$4847$4978}]],
         "DelayedClickEffect"], 
        TagBox[GeometricTransformationBox[
          TagBox[
           TagBox[
            TooltipBox[
             TagBox[{{{}, InsetBox[
                 TemplateBox[{"\"Germany\"", 
                   RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Germany\""}], "]"}], 
                   "\"Entity[\\\"Country\\\", \\\"Germany\\\"]\""},
                  
                  "EntityTraditionalFramed"], \
{-0.47455488272700036, 0.46823296309039086}]}, {}},
              StatusArea[#, 4.525703903627531*^12]& ,
              TagBoxNote->"4.525703903627531*^12"],
             StyleBox["4.525703903627531`*^12", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[4.525703903627531*^12, {}], "Tooltip"]& ],
           
           EventHandlerTag[{
            "MouseClicked" :> FEPrivate`Set[DynamicChart`click$4866$4978, 
               FEPrivate`Not[DynamicChart`click$4866$4978]], PassEventsDown -> 
             True, Method -> "Preemptive", PassEventsUp -> True}]], Dynamic[
          FEPrivate`If[
           DynamicChart`click$4866$4978, {{{1., 0.}, {0., 
             1.}}, {-0.1423664648181001, 0.1404698889271173}}, {{1, 0}, {0, 
            1}}, {{1, 0}, {0, 1}}], 
           TrackedSymbols :> {DynamicChart`click$4866$4978}]],
         "DelayedClickEffect"], 
        TagBox[GeometricTransformationBox[
          TagBox[
           TagBox[
            TooltipBox[
             TagBox[{{{}, InsetBox[
                 TemplateBox[{"\"Japan\"", 
                   RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"Japan\""}], "]"}], 
                   "\"Entity[\\\"Country\\\", \\\"Japan\\\"]\""},
                  
                  "EntityTraditionalFramed"], \
{-0.10130031608712511, 0.658925405797267}]}, {}},
              StatusArea[#, 4.2044948024315547`*^12]& ,
              TagBoxNote->"4.2044948024315547*^12"],
             StyleBox["4.2044948024315547`*^12", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[4.2044948024315547`*^12, {}], "Tooltip"]& ],
           
           EventHandlerTag[{
            "MouseClicked" :> FEPrivate`Set[DynamicChart`click$4874$4978, 
               FEPrivate`Not[DynamicChart`click$4874$4978]], PassEventsDown -> 
             True, Method -> "Preemptive", PassEventsUp -> True}]], Dynamic[
          FEPrivate`If[
           DynamicChart`click$4874$4978, {{{1., 0.}, {0., 
             1.}}, {-0.03039009482613754, 0.19767762173918013`}}, {{1, 0}, {0,
             1}}, {{1, 0}, {0, 1}}], 
           TrackedSymbols :> {DynamicChart`click$4874$4978}]],
         "DelayedClickEffect"], 
        TagBox[GeometricTransformationBox[
          TagBox[
           TagBox[
            TooltipBox[
             TagBox[{{{}, InsetBox[
                 TemplateBox[{"\"United Kingdom\"", 
                   RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"UnitedKingdom\""}], "]"}], 
                   "\"Entity[\\\"Country\\\", \\\"UnitedKingdom\\\"]\""},
                  
                  "EntityTraditionalFramed"], \
{0.2615456651233184, 0.6132196258271952}]}, {}},
              StatusArea[#, 3.380854520809537*^12]& ,
              TagBoxNote->"3.380854520809537*^12"],
             StyleBox["3.380854520809537`*^12", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[3.380854520809537*^12, {}], "Tooltip"]& ],
           
           EventHandlerTag[{
            "MouseClicked" :> FEPrivate`Set[DynamicChart`click$4882$4978, 
               FEPrivate`Not[DynamicChart`click$4882$4978]], PassEventsDown -> 
             True, Method -> "Preemptive", PassEventsUp -> True}]], Dynamic[
          FEPrivate`If[
           DynamicChart`click$4882$4978, {{{1., 0.}, {0., 1.}}, {
             0.07846369953699553, 0.18396588774815859`}}, {{1, 0}, {0, 1}}, {{
            1, 0}, {0, 1}}], 
           TrackedSymbols :> {DynamicChart`click$4882$4978}]],
         "DelayedClickEffect"], 
        TagBox[GeometricTransformationBox[
          TagBox[
           TagBox[
            TooltipBox[
             TagBox[{{{}, InsetBox[
                 TemplateBox[{"\"United States\"", 
                   RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"UnitedStates\""}], "]"}], 
                   "\"Entity[\\\"Country\\\", \\\"UnitedStates\\\"]\""},
                  
                  "EntityTraditionalFramed"], \
{0.29595608404963314, -0.5973729494699697}]}, {}},
              StatusArea[#, 2.7720709*^13]& ,
              TagBoxNote->"2.7720709*^13"],
             StyleBox["2.7720709`*^13", {}, StripOnInput -> False]],
            Annotation[#, 
             Style[2.7720709*^13, {}], "Tooltip"]& ],
           
           EventHandlerTag[{
            "MouseClicked" :> FEPrivate`Set[DynamicChart`click$4890$4978, 
               FEPrivate`Not[DynamicChart`click$4890$4978]], PassEventsDown -> 
             True, Method -> "Preemptive", PassEventsUp -> True}]], Dynamic[
          FEPrivate`If[
           DynamicChart`click$4890$4978, {{{1., 0.}, {0., 1.}}, {
             0.08878682521488995, -0.17921188484099093`}}, {{1, 0}, {0, 
            1}}, {{1, 0}, {0, 1}}], 
           TrackedSymbols :> {DynamicChart`click$4890$4978}]],
         "DelayedClickEffect"]}, {}}, {}}, {}, {}},
    DynamicModuleValues:>{}], {{}, {}}, {{{}, {}, {}, {}}, {}}},
  ContentSelectable->False,
  DisplayFunction->Identity,
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{-1., 1.}, {-1., 1.}},
  PlotRangePadding->Scaled[0.09166666666666669]]], "Output",
 CellChangeTimes->{{3.952505499460779*^9, 3.95250558292052*^9}, 
   3.952505701897987*^9, 3.952506017749007*^9, 3.952506409171028*^9, 
   3.9525084282240334`*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"a937b063-cecf-4d0a-bd32-98eef1151e09"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PieChart", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Legended", "[", 
     RowBox[{
      RowBox[{"#", "[", "\"\<Population\>\"", "]"}], ",", "#"}], "]"}], "&"}],
    "/@", 
   RowBox[{"EntityList", "[", 
    TemplateBox[<|
     "query" -> "g5 countries", "boxes" -> TemplateBox[{"\"Group of 5\"", 
         RowBox[{"EntityClass", "[", 
           RowBox[{"\"Country\"", ",", "\"GroupOf5\""}], "]"}], 
         "\"EntityClass[\\\"Country\\\", \\\"GroupOf5\\\"]\"", 
         "\"countries\""}, "EntityClass"], 
      "allassumptions" -> {{
        "word" -> "", "template" -> 
         "Assuming the input is a class of countries${separator}Use \"g5\" as \
${desc} instead", "count" -> "2", "pulldown" -> "false", "type" -> 
         "MultiClash", "default" -> 
         "{\"MC\", \"\"} -> {\"CountryClass\", \"dflt\"}", 
         "Values" -> {{
           "name" -> "CountryClass", "desc" -> "a class of countries", 
            "input" -> "{\"MC\", \"\"} -> {\"CountryClass\"}", "word" -> 
            "the input"}, {
           "name" -> "Company", "desc" -> "a company", "input" -> 
            "{\"MC\", \"\"} -> {\"Company\"}", "word" -> "g5"}}}}, 
      "assumptions" -> {}, "open" -> {1, 2}, 
      "querystate" -> {
       "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
        0.867948`6.39003870025133, "Messages" -> {}}, "contextinfo" -> 
      Automatic, "version" -> 5|>,
     "LinguisticAssistantTemplate"], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.952506061028585*^9, 3.952506123736371*^9}, {
  3.952506191371019*^9, 3.952506351613741*^9}, {3.9525063866595373`*^9, 
  3.952506426109001*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"2d64ac55-2192-4203-b71e-0a13c92adac2"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {}, 
     DynamicModuleBox[{
      DynamicChart`click$5472$6116 = False, DynamicChart`click$5489$6116 = 
       False, DynamicChart`click$5495$6116 = False, 
       DynamicChart`click$5501$6116 = False, DynamicChart`click$5507$6116 = 
       False}, {{
        Directive[
         RGBColor[0.5, 0.5, 1.], 
         EdgeForm[
          Directive[
           GrayLevel[0], 
           Opacity[0.5]]]], {{{{{{}, {{
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.982864, 0.7431472, 0.3262672]], 
               TagBox[
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {2.5420485394604495`, 
                    3.141592653589793}]}], "DelayedMouseEffectStyle"], 
                    StatusArea[#, 64800000]& , TagBoxNote -> "64800000"], 
                    StyleBox["64800000", {}, StripOnInput -> False]], 
                   Annotation[#, 
                    Style[64800000, {}], "Tooltip"]& ], 
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$5472$6116, 
                    FEPrivate`Not[DynamicChart`click$5472$6116]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  FEPrivate`If[
                  DynamicChart`click$5472$6116, {{{1., 0.}, {0., 
                    1.}}, {-0.19108076520994, 0.059060487356470306`}}, {{1, 
                   0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$5472$6116}]], 
                "DelayedClickEffect"]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[1., 0.544, 0.2]], 
               TagBox[
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {1.771338281636772, 
                    2.5420485394604495`}]}], "DelayedMouseEffectStyle"], 
                    StatusArea[#, 83300000]& , TagBoxNote -> "83300000"], 
                    StyleBox["83300000", {}, StripOnInput -> False]], 
                   Annotation[#, 
                    Style[83300000, {}], "Tooltip"]& ], 
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$5489$6116, 
                    FEPrivate`Not[DynamicChart`click$5489$6116]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  FEPrivate`If[
                  DynamicChart`click$5489$6116, {{{1., 0.}, {0., 
                    1.}}, {-0.11058941392073379`, 0.16664327627800835`}}, {{1,
                    0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$5489$6116}]], 
                "DelayedClickEffect"]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.784, 0.47519999999999996`, 0.2]], 
               TagBox[
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {0.6305390644739934, 
                    1.771338281636772}]}], "DelayedMouseEffectStyle"], 
                    StatusArea[#, 123300000]& , TagBoxNote -> "123300000"], 
                    StyleBox["123300000", {}, StripOnInput -> False]], 
                   Annotation[#, 
                    Style[123300000, {}], "Tooltip"]& ], 
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$5495$6116, 
                    FEPrivate`Not[DynamicChart`click$5495$6116]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  FEPrivate`If[
                  DynamicChart`click$5495$6116, {{{1., 0.}, {0., 1.}}, {
                    0.07229654299812109, 0.18647576215294265`}}, {{1, 0}, {0, 
                   1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$5495$6116}]], 
                "DelayedClickEffect"]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.6754608, 0.4848, 0.7224792]], 
               TagBox[
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {0.004163500792565333, 
                    0.6305390644739934}]}], "DelayedMouseEffectStyle"], 
                    StatusArea[#, 67700000]& , TagBoxNote -> "67700000"], 
                    StyleBox["67700000", {}, StripOnInput -> False]], 
                   Annotation[#, 
                    Style[67700000, {}], "Tooltip"]& ], 
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$5501$6116, 
                    FEPrivate`Not[DynamicChart`click$5501$6116]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  FEPrivate`If[
                  DynamicChart`click$5501$6116, {{{1., 0.}, {0., 1.}}, {
                    0.1900130570490049, 0.062410240753354065`}}, {{1, 0}, {0, 
                   1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$5501$6116}]], 
                "DelayedClickEffect"]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.4992, 0.5552, 0.8309304]], 
               TagBox[
                GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-3.141592653589793, 
                    0.004163500792565333}]}], "DelayedMouseEffectStyle"], 
                    StatusArea[#, 340000000]& , TagBoxNote -> "340000000"], 
                    StyleBox["340000000", {}, StripOnInput -> False]], 
                   Annotation[#, 
                    Style[340000000, {}], "Tooltip"]& ], 
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$5507$6116, 
                    FEPrivate`Not[DynamicChart`click$5507$6116]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], 
                 Dynamic[
                  FEPrivate`If[
                  DynamicChart`click$5507$6116, {{{1., 0.}, {0., 1.}}, {
                    0.00041634977853494847`, -0.19999956663168528`}}, {{1, 
                   0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$5507$6116}]], 
                "DelayedClickEffect"]}}}}}, {}}, {{}}}}, {{{{
           TagBox[
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                
                TagBox[{{}, {}}, StatusArea[#, 64800000]& , TagBoxNote -> 
                 "64800000"], 
                StyleBox["64800000", {}, StripOnInput -> False]], 
               Annotation[#, 
                Style[64800000, {}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> FEPrivate`Set[DynamicChart`click$5472$6116, 
                  FEPrivate`Not[DynamicChart`click$5472$6116]], 
                PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                True}]], 
             Dynamic[
              FEPrivate`If[
              DynamicChart`click$5472$6116, {{{1., 0.}, {0., 
                1.}}, {-0.19108076520994, 0.059060487356470306`}}, {{1, 0}, {
               0, 1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$5472$6116}]], 
            "DelayedClickEffect"], 
           TagBox[
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                
                TagBox[{{}, {}}, StatusArea[#, 83300000]& , TagBoxNote -> 
                 "83300000"], 
                StyleBox["83300000", {}, StripOnInput -> False]], 
               Annotation[#, 
                Style[83300000, {}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> FEPrivate`Set[DynamicChart`click$5489$6116, 
                  FEPrivate`Not[DynamicChart`click$5489$6116]], 
                PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                True}]], 
             Dynamic[
              FEPrivate`If[
              DynamicChart`click$5489$6116, {{{1., 0.}, {0., 
                1.}}, {-0.11058941392073379`, 0.16664327627800835`}}, {{1, 
               0}, {0, 1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$5489$6116}]], 
            "DelayedClickEffect"], 
           TagBox[
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                
                TagBox[{{}, {}}, StatusArea[#, 123300000]& , TagBoxNote -> 
                 "123300000"], 
                StyleBox["123300000", {}, StripOnInput -> False]], 
               Annotation[#, 
                Style[123300000, {}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> FEPrivate`Set[DynamicChart`click$5495$6116, 
                  FEPrivate`Not[DynamicChart`click$5495$6116]], 
                PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                True}]], 
             Dynamic[
              FEPrivate`If[
              DynamicChart`click$5495$6116, {{{1., 0.}, {0., 1.}}, {
                0.07229654299812109, 0.18647576215294265`}}, {{1, 0}, {0, 
               1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$5495$6116}]], 
            "DelayedClickEffect"], 
           TagBox[
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                
                TagBox[{{}, {}}, StatusArea[#, 67700000]& , TagBoxNote -> 
                 "67700000"], 
                StyleBox["67700000", {}, StripOnInput -> False]], 
               Annotation[#, 
                Style[67700000, {}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> FEPrivate`Set[DynamicChart`click$5501$6116, 
                  FEPrivate`Not[DynamicChart`click$5501$6116]], 
                PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                True}]], 
             Dynamic[
              FEPrivate`If[
              DynamicChart`click$5501$6116, {{{1., 0.}, {0., 1.}}, {
                0.1900130570490049, 0.062410240753354065`}}, {{1, 0}, {0, 
               1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$5501$6116}]], 
            "DelayedClickEffect"], 
           TagBox[
            GeometricTransformationBox[
             TagBox[
              TagBox[
               TooltipBox[
                
                TagBox[{{}, {}}, StatusArea[#, 340000000]& , TagBoxNote -> 
                 "340000000"], 
                StyleBox["340000000", {}, StripOnInput -> False]], 
               Annotation[#, 
                Style[340000000, {}], "Tooltip"]& ], 
              
              EventHandlerTag[{
               "MouseClicked" :> FEPrivate`Set[DynamicChart`click$5507$6116, 
                  FEPrivate`Not[DynamicChart`click$5507$6116]], 
                PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                True}]], 
             Dynamic[
              FEPrivate`If[
              DynamicChart`click$5507$6116, {{{1., 0.}, {0., 1.}}, {
                0.00041634977853494847`, -0.19999956663168528`}}, {{1, 0}, {0,
                1}}, {{1, 0}, {0, 1}}], 
              TrackedSymbols :> {DynamicChart`click$5507$6116}]], 
            "DelayedClickEffect"]}, {}}}, {}}, {}, {}}, 
      DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, {}}}, {
    DisplayFunction -> Identity, ContentSelectable -> False, GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
     PlotRangePadding -> Scaled[0.09166666666666669]}], 
   FormBox[
    FormBox[
     TemplateBox[{
       TemplateBox[{"\"France\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"Country\"", ",", "\"France\""}], "]"}], 
         "\"Entity[\\\"Country\\\", \\\"France\\\"]\""}, 
        "EntityTraditionalFramed"], 
       TemplateBox[{"\"Germany\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"Country\"", ",", "\"Germany\""}], "]"}], 
         "\"Entity[\\\"Country\\\", \\\"Germany\\\"]\""}, 
        "EntityTraditionalFramed"], 
       TemplateBox[{"\"Japan\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"Country\"", ",", "\"Japan\""}], "]"}], 
         "\"Entity[\\\"Country\\\", \\\"Japan\\\"]\""}, 
        "EntityTraditionalFramed"], 
       TemplateBox[{"\"United Kingdom\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"Country\"", ",", "\"UnitedKingdom\""}], "]"}], 
         "\"Entity[\\\"Country\\\", \\\"UnitedKingdom\\\"]\""}, 
        "EntityTraditionalFramed"], 
       TemplateBox[{"\"United States\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"Country\"", ",", "\"UnitedStates\""}], "]"}], 
         "\"Entity[\\\"Country\\\", \\\"UnitedStates\\\"]\""}, 
        "EntityTraditionalFramed"]}, "SwatchLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    GrayLevel[0.9], 
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.982864, 0.7431472, 0.3262672]], 
                    RectangleBox[{0, 0}, {1, 1}]}, {
                    DisplayFunction -> Identity, 
                    DefaultBaseStyle -> {"Graphics", 
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.982864, 0.7431472, 0.3262672]]}, 
                    ImageSize -> {10, 10}, DisplayFunction -> Identity, 
                    ImageSize -> 10, ImagePadding -> All, PlotRangePadding -> 
                    None, AspectRatio -> Full}, {
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)}], #}, {
                   GraphicsBox[{
                    GrayLevel[0.9], 
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[1., 0.544, 0.2]], 
                    RectangleBox[{0, 0}, {1, 1}]}, {
                    DisplayFunction -> Identity, 
                    DefaultBaseStyle -> {"Graphics", 
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[1., 0.544, 0.2]]}, ImageSize -> {10, 10}, 
                    DisplayFunction -> Identity, ImageSize -> 10, 
                    ImagePadding -> All, PlotRangePadding -> None, 
                    AspectRatio -> Full}, {
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)}], #2}, {
                   GraphicsBox[{
                    GrayLevel[0.9], 
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.784, 0.47519999999999996`, 0.2]], 
                    RectangleBox[{0, 0}, {1, 1}]}, {
                    DisplayFunction -> Identity, 
                    DefaultBaseStyle -> {"Graphics", 
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.784, 0.47519999999999996`, 0.2]]}, 
                    ImageSize -> {10, 10}, DisplayFunction -> Identity, 
                    ImageSize -> 10, ImagePadding -> All, PlotRangePadding -> 
                    None, AspectRatio -> Full}, {
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)}], #3}, {
                   GraphicsBox[{
                    GrayLevel[0.9], 
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.6754608, 0.4848, 0.7224792]], 
                    RectangleBox[{0, 0}, {1, 1}]}, {
                    DisplayFunction -> Identity, 
                    DefaultBaseStyle -> {"Graphics", 
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.6754608, 0.4848, 0.7224792]]}, 
                    ImageSize -> {10, 10}, DisplayFunction -> Identity, 
                    ImageSize -> 10, ImagePadding -> All, PlotRangePadding -> 
                    None, AspectRatio -> Full}, {
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)}], #4}, {
                   GraphicsBox[{
                    GrayLevel[0.9], 
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.4992, 0.5552, 0.8309304]], 
                    RectangleBox[{0, 0}, {1, 1}]}, {
                    DisplayFunction -> Identity, 
                    DefaultBaseStyle -> {"Graphics", 
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.4992, 0.5552, 0.8309304]]}, 
                    ImageSize -> {10, 10}, DisplayFunction -> Identity, 
                    ImageSize -> 10, ImagePadding -> All, PlotRangePadding -> 
                    None, AspectRatio -> Full}, {
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)}], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.3}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    
                    TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"], ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.982864, 0.7431472, 0.3262672]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    
                    TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"], ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   
                   TemplateBox[<|"color" -> RGBColor[1., 0.544, 0.2]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    
                    TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"], ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.784, 0.47519999999999996`, 0.2]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    
                    TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"], ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.6754608, 0.4848, 0.7224792]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    
                    TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"], ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.4992, 0.5552, 0.8309304]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    GraphicsBox[{
                    GrayLevel[0.9], 
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.982864, 0.7431472, 0.3262672]], 
                    RectangleBox[{0, 0}, {1, 1}]}, {
                    DisplayFunction -> Identity, ImageSize -> 10}], ",", 
                    GraphicsBox[{
                    GrayLevel[0.9], 
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[1., 0.544, 0.2]], 
                    RectangleBox[{0, 0}, {1, 1}]}, {
                    DisplayFunction -> Identity, ImageSize -> 10}], ",", 
                    GraphicsBox[{
                    GrayLevel[0.9], 
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.784, 0.47519999999999996`, 0.2]], 
                    RectangleBox[{0, 0}, {1, 1}]}, {
                    DisplayFunction -> Identity, ImageSize -> 10}], ",", 
                    GraphicsBox[{
                    GrayLevel[0.9], 
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.6754608, 0.4848, 0.7224792]], 
                    RectangleBox[{0, 0}, {1, 1}]}, {
                    DisplayFunction -> Identity, ImageSize -> 10}], ",", 
                    GraphicsBox[{
                    GrayLevel[0.9], 
                    Directive[
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.4992, 0.5552, 0.8309304]], 
                    RectangleBox[{0, 0}, {1, 1}]}, {
                    DisplayFunction -> Identity, ImageSize -> 10}]}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                   
                   RowBox[{
                    "None", ",", "None", ",", "None", ",", "None", ",", 
                    "None"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.9525061012936583`*^9, 3.952506108412188*^9}, {
   3.9525062157063723`*^9, 3.952506352053146*^9}, {3.9525063901748657`*^9, 
   3.952506396749854*^9}, 3.952506427790409*^9, 3.952508429228921*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"8ed27848-efa9-408c-ae64-389c6c80b2a7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphicsGrid", "[", 
  RowBox[{"Partition", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"PieChart", "[", 
       RowBox[{"Values", "[", 
        RowBox[{"Counts", "[", 
         RowBox[{"IntegerDigits", "[", 
          RowBox[{"2", "^", "n"}], "]"}], "]"}], "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "25"}], "}"}]}], "]"}], ",", "5"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.952506454263444*^9, 3.952506521321402*^9}, {
  3.9525065612099247`*^9, 3.952506663327518*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"162f1761-54da-4a6f-863f-8ad82b14ae20"],

Cell[BoxData[
 GraphicsBox[{{}, {{InsetBox[
      GraphicsBox[{{}, {}, 
        DynamicModuleBox[{DynamicChart`click$6138$8345 = False}, {
          {RGBColor[0.5, 0.5, 1.], EdgeForm[{GrayLevel[0], Opacity[
           0.5]}], {{{}, 
             {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{GrayLevel[
              0], Opacity[0.5]}], 
              TagBox[GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-3.141592653589793, 
                    3.141592653589793}]},
                    
                    ImageSizeCache->{{9.795312500000009, 
                    102.51718749999998`}, {-102.51718749999998`, \
-9.795312500000009}}],
                    "DelayedMouseEffectStyle"],
                    StatusArea[#, 1]& ,
                    TagBoxNote->"1"],
                   StyleBox["1", {}, StripOnInput -> False]],
                  Annotation[#, 
                   Style[1, {}], "Tooltip"]& ],
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$6138$8345, 
                    FEPrivate`Not[DynamicChart`click$6138$8345]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], Dynamic[
                FEPrivate`If[
                 DynamicChart`click$6138$8345, {{{1., 0.}, {0., 1.}}, {0.2, 
                   0.}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$6138$8345}]],
               "DelayedClickEffect"]}}, {}}, {}}, {{
            TagBox[GeometricTransformationBox[
              TagBox[
               TagBox[
                TooltipBox[
                 TagBox[{{}, {}},
                  StatusArea[#, 1]& ,
                  TagBoxNote->"1"],
                 StyleBox["1", {}, StripOnInput -> False]],
                Annotation[#, 
                 Style[1, {}], "Tooltip"]& ],
               
               EventHandlerTag[{
                "MouseClicked" :> 
                 FEPrivate`Set[DynamicChart`click$6138$8345, 
                   FEPrivate`Not[DynamicChart`click$6138$8345]], 
                 PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                 True}]], Dynamic[
              FEPrivate`If[
               DynamicChart`click$6138$8345, {{{1., 0.}, {0., 1.}}, {0.2, 
                 0.}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
               TrackedSymbols :> {DynamicChart`click$6138$8345}]],
             "DelayedClickEffect"], {}}, {}}, {}, {}},
         DynamicModuleValues:>{}], {{}, {}}, {{{}, {}, {}, {}}, {}}},
       ContentSelectable->False,
       DisplayFunction->Identity,
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->{{0., 0.}, {0., 0.}},
       PlotRange->{{-1., 1.}, {-1., 1.}},
       PlotRangePadding->Scaled[0.09166666666666669]], {195., -195.}, 
      ImageScaled[{0.5, 0.5}], {360., 360.},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
     InsetBox[
      GraphicsBox[{{}, {}, 
        DynamicModuleBox[{DynamicChart`click$6180$8346 = False}, {
          {RGBColor[0.5, 0.5, 1.], EdgeForm[{GrayLevel[0], Opacity[
           0.5]}], {{{}, 
             {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{GrayLevel[
              0], Opacity[0.5]}], 
              TagBox[GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-3.141592653589793, 
                    3.141592653589793}]},
                    ImageSizeCache->{{9.795312499999973, 
                    102.51718749999995`}, {-102.51718749999998`, \
-9.795312500000009}}],
                    "DelayedMouseEffectStyle"],
                    StatusArea[#, 1]& ,
                    TagBoxNote->"1"],
                   StyleBox["1", {}, StripOnInput -> False]],
                  Annotation[#, 
                   Style[1, {}], "Tooltip"]& ],
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$6180$8346, 
                    FEPrivate`Not[DynamicChart`click$6180$8346]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], Dynamic[
                FEPrivate`If[
                 DynamicChart`click$6180$8346, {{{1., 0.}, {0., 1.}}, {0.2, 
                   0.}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$6180$8346}]],
               "DelayedClickEffect"]}}, {}}, {}}, {{
            TagBox[GeometricTransformationBox[
              TagBox[
               TagBox[
                TooltipBox[
                 TagBox[{{}, {}},
                  StatusArea[#, 1]& ,
                  TagBoxNote->"1"],
                 StyleBox["1", {}, StripOnInput -> False]],
                Annotation[#, 
                 Style[1, {}], "Tooltip"]& ],
               
               EventHandlerTag[{
                "MouseClicked" :> 
                 FEPrivate`Set[DynamicChart`click$6180$8346, 
                   FEPrivate`Not[DynamicChart`click$6180$8346]], 
                 PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                 True}]], Dynamic[
              FEPrivate`If[
               DynamicChart`click$6180$8346, {{{1., 0.}, {0., 1.}}, {0.2, 
                 0.}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
               TrackedSymbols :> {DynamicChart`click$6180$8346}]],
             "DelayedClickEffect"], {}}, {}}, {}, {}},
         DynamicModuleValues:>{}], {{}, {}}, {{{}, {}, {}, {}}, {}}},
       ContentSelectable->False,
       DisplayFunction->Identity,
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->{{0., 0.}, {0., 0.}},
       PlotRange->{{-1., 1.}, {-1., 1.}},
       PlotRangePadding->Scaled[0.09166666666666669]], {585., -195.}, 
      ImageScaled[{0.5, 0.5}], {360., 360.},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
     InsetBox[
      GraphicsBox[{{}, {}, 
        DynamicModuleBox[{DynamicChart`click$6222$8347 = False}, {
          {RGBColor[0.5, 0.5, 1.], EdgeForm[{GrayLevel[0], Opacity[
           0.5]}], {{{}, 
             {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{GrayLevel[
              0], Opacity[0.5]}], 
              TagBox[GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-3.141592653589793, 
                    3.141592653589793}]},
                    
                    ImageSizeCache->{{9.795312499999973, 
                    102.51718749999995`}, {-102.51718749999995`, \
-9.79531249999998}}],
                    "DelayedMouseEffectStyle"],
                    StatusArea[#, 1]& ,
                    TagBoxNote->"1"],
                   StyleBox["1", {}, StripOnInput -> False]],
                  Annotation[#, 
                   Style[1, {}], "Tooltip"]& ],
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$6222$8347, 
                    FEPrivate`Not[DynamicChart`click$6222$8347]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], Dynamic[
                FEPrivate`If[
                 DynamicChart`click$6222$8347, {{{1., 0.}, {0., 1.}}, {0.2, 
                   0.}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$6222$8347}]],
               "DelayedClickEffect"]}}, {}}, {}}, {{
            TagBox[GeometricTransformationBox[
              TagBox[
               TagBox[
                TooltipBox[
                 TagBox[{{}, {}},
                  StatusArea[#, 1]& ,
                  TagBoxNote->"1"],
                 StyleBox["1", {}, StripOnInput -> False]],
                Annotation[#, 
                 Style[1, {}], "Tooltip"]& ],
               
               EventHandlerTag[{
                "MouseClicked" :> 
                 FEPrivate`Set[DynamicChart`click$6222$8347, 
                   FEPrivate`Not[DynamicChart`click$6222$8347]], 
                 PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
                 True}]], Dynamic[
              FEPrivate`If[
               DynamicChart`click$6222$8347, {{{1., 0.}, {0., 1.}}, {0.2, 
                 0.}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
               TrackedSymbols :> {DynamicChart`click$6222$8347}]],
             "DelayedClickEffect"], {}}, {}}, {}, {}},
         DynamicModuleValues:>{}], {{}, {}}, {{{}, {}, {}, {}}, {}}},
       ContentSelectable->False,
       DisplayFunction->Identity,
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->{{0., 0.}, {0., 0.}},
       PlotRange->{{-1., 1.}, {-1., 1.}},
       PlotRangePadding->Scaled[0.09166666666666669]], {975., -195.}, 
      ImageScaled[{0.5, 0.5}], {360., 360.},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
     InsetBox[
      GraphicsBox[{{}, {}, 
        DynamicModuleBox[{DynamicChart`click$6264$8348 = False, 
         DynamicChart`click$6270$8348 = False}, {
          {RGBColor[0.5, 0.5, 1.], EdgeForm[{GrayLevel[0], Opacity[
           0.5]}], {{{}, {
              {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{GrayLevel[
               0], Opacity[0.5]}], 
               TagBox[GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    DiskBox[{0, 0}, 1., {0., 3.141592653589793}]},
                    
                    ImageSizeCache->{{9.588205718813548, 
                    102.72429428118662`}, {-102.72429428118653`, \
-55.449143218813454`}}],
                    "DelayedMouseEffectStyle"],
                    StatusArea[#, 1]& ,
                    TagBoxNote->"1"],
                    StyleBox["1", {}, StripOnInput -> False]],
                   Annotation[#, 
                    Style[1, {}], "Tooltip"]& ],
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$6264$8348, 
                    FEPrivate`Not[DynamicChart`click$6264$8348]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                 FEPrivate`If[
                  DynamicChart`click$6264$8348, {{{1., 0.}, {0., 1.}}, {
                    1.2246467991473533`*^-17, 0.2}}, {{1, 0}, {0, 1}}, {{1, 
                   0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$6264$8348}]],
                "DelayedClickEffect"]}, 
              {RGBColor[0.4992, 0.5552, 0.8309304], EdgeForm[{GrayLevel[0], 
               Opacity[0.5]}], 
               TagBox[GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    DiskBox[{0, 0}, 1., {-3.141592653589793, 0.}]},
                    
                    ImageSizeCache->{{9.588205718813548, 
                    102.72429428118662`}, {-56.86335678118655, \
-9.588205718813462}}],
                    "DelayedMouseEffectStyle"],
                    StatusArea[#, 1]& ,
                    TagBoxNote->"1"],
                    StyleBox["1", {}, StripOnInput -> False]],
                   Annotation[#, 
                    Style[1, {}], "Tooltip"]& ],
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$6270$8348, 
                    FEPrivate`Not[DynamicChart`click$6270$8348]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                 FEPrivate`If[
                  DynamicChart`click$6270$8348, {{{1., 0.}, {0., 1.}}, {
                    1.2246467991473533`*^-17, -0.2}}, {{1, 0}, {0, 1}}, {{1, 
                   0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$6270$8348}]],
                "DelayedClickEffect"]}}}, {}}, {}}, {{{
             TagBox[GeometricTransformationBox[
               TagBox[
                TagBox[
                 TooltipBox[
                  TagBox[{{}, {}},
                   StatusArea[#, 1]& ,
                   TagBoxNote->"1"],
                  StyleBox["1", {}, StripOnInput -> False]],
                 Annotation[#, 
                  Style[1, {}], "Tooltip"]& ],
                
                EventHandlerTag[{
                 "MouseClicked" :> FEPrivate`Set[DynamicChart`click$6264$8348, 
                    FEPrivate`Not[DynamicChart`click$6264$8348]], 
                  PassEventsDown -> True, Method -> "Preemptive", 
                  PassEventsUp -> True}]], Dynamic[
               FEPrivate`If[
                DynamicChart`click$6264$8348, {{{1., 0.}, {0., 1.}}, {
                  1.2246467991473533`*^-17, 0.2}}, {{1, 0}, {0, 1}}, {{1, 
                 0}, {0, 1}}], 
                TrackedSymbols :> {DynamicChart`click$6264$8348}]],
              "DelayedClickEffect"], 
             TagBox[GeometricTransformationBox[
               TagBox[
                TagBox[
                 TooltipBox[
                  TagBox[{{}, {}},
                   StatusArea[#, 1]& ,
                   TagBoxNote->"1"],
                  StyleBox["1", {}, StripOnInput -> False]],
                 Annotation[#, 
                  Style[1, {}], "Tooltip"]& ],
                
                EventHandlerTag[{
                 "MouseClicked" :> FEPrivate`Set[DynamicChart`click$6270$8348, 
                    FEPrivate`Not[DynamicChart`click$6270$8348]], 
                  PassEventsDown -> True, Method -> "Preemptive", 
                  PassEventsUp -> True}]], Dynamic[
               FEPrivate`If[
                DynamicChart`click$6270$8348, {{{1., 0.}, {0., 1.}}, {
                  1.2246467991473533`*^-17, -0.2}}, {{1, 0}, {0, 1}}, {{1, 
                 0}, {0, 1}}], 
                TrackedSymbols :> {DynamicChart`click$6270$8348}]],
              "DelayedClickEffect"]}, {}}, {}}, {}, {}},
         DynamicModuleValues:>{}], {{}, {}}, {{{}, {}, {}, {}}, {}}},
       ContentSelectable->False,
       DisplayFunction->Identity,
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->{{0., 0.}, {0., 0.}},
       PlotRange->{{-1., 1.}, {-1., 1.}},
       PlotRangePadding->Scaled[0.09166666666666669]], {1365., -195.}, 
      ImageScaled[{0.5, 0.5}], {360., 360.},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
     InsetBox[
      GraphicsBox[{{}, {}, 
        DynamicModuleBox[{DynamicChart`click$6318$8349 = False, 
         DynamicChart`click$6324$8349 = False}, {
          {RGBColor[0.5, 0.5, 1.], EdgeForm[{GrayLevel[0], Opacity[
           0.5]}], {{{}, {
              {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{GrayLevel[
               0], Opacity[0.5]}], 
               TagBox[GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    DiskBox[{0, 0}, 1., {0., 3.141592653589793}]},
                    
                    ImageSizeCache->{{9.588205718813434, 
                    102.7242942811865}, {-102.72429428118653`, \
-55.449143218813454`}}],
                    "DelayedMouseEffectStyle"],
                    StatusArea[#, 1]& ,
                    TagBoxNote->"1"],
                    StyleBox["1", {}, StripOnInput -> False]],
                   Annotation[#, 
                    Style[1, {}], "Tooltip"]& ],
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$6318$8349, 
                    FEPrivate`Not[DynamicChart`click$6318$8349]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                 FEPrivate`If[
                  DynamicChart`click$6318$8349, {{{1., 0.}, {0., 1.}}, {
                    1.2246467991473533`*^-17, 0.2}}, {{1, 0}, {0, 1}}, {{1, 
                   0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$6318$8349}]],
                "DelayedClickEffect"]}, 
              {RGBColor[0.4992, 0.5552, 0.8309304], EdgeForm[{GrayLevel[0], 
               Opacity[0.5]}], 
               TagBox[GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    DiskBox[{0, 0}, 1., {-3.141592653589793, 0.}]},
                    
                    ImageSizeCache->{{9.588205718813434, 
                    102.7242942811865}, {-56.86335678118655, \
-9.588205718813462}}],
                    "DelayedMouseEffectStyle"],
                    StatusArea[#, 1]& ,
                    TagBoxNote->"1"],
                    StyleBox["1", {}, StripOnInput -> False]],
                   Annotation[#, 
                    Style[1, {}], "Tooltip"]& ],
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$6324$8349, 
                    FEPrivate`Not[DynamicChart`click$6324$8349]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                 FEPrivate`If[
                  DynamicChart`click$6324$8349, {{{1., 0.}, {0., 1.}}, {
                    1.2246467991473533`*^-17, -0.2}}, {{1, 0}, {0, 1}}, {{1, 
                   0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$6324$8349}]],
                "DelayedClickEffect"]}}}, {}}, {}}, {{{
             TagBox[GeometricTransformationBox[
               TagBox[
                TagBox[
                 TooltipBox[
                  TagBox[{{}, {}},
                   StatusArea[#, 1]& ,
                   TagBoxNote->"1"],
                  StyleBox["1", {}, StripOnInput -> False]],
                 Annotation[#, 
                  Style[1, {}], "Tooltip"]& ],
                
                EventHandlerTag[{
                 "MouseClicked" :> FEPrivate`Set[DynamicChart`click$6318$8349, 
                    FEPrivate`Not[DynamicChart`click$6318$8349]], 
                  PassEventsDown -> True, Method -> "Preemptive", 
                  PassEventsUp -> True}]], Dynamic[
               FEPrivate`If[
                DynamicChart`click$6318$8349, {{{1., 0.}, {0., 1.}}, {
                  1.2246467991473533`*^-17, 0.2}}, {{1, 0}, {0, 1}}, {{1, 
                 0}, {0, 1}}], 
                TrackedSymbols :> {DynamicChart`click$6318$8349}]],
              "DelayedClickEffect"], 
             TagBox[GeometricTransformationBox[
               TagBox[
                TagBox[
                 TooltipBox[
                  TagBox[{{}, {}},
                   StatusArea[#, 1]& ,
                   TagBoxNote->"1"],
                  StyleBox["1", {}, StripOnInput -> False]],
                 Annotation[#, 
                  Style[1, {}], "Tooltip"]& ],
                
                EventHandlerTag[{
                 "MouseClicked" :> FEPrivate`Set[DynamicChart`click$6324$8349, 
                    FEPrivate`Not[DynamicChart`click$6324$8349]], 
                  PassEventsDown -> True, Method -> "Preemptive", 
                  PassEventsUp -> True}]], Dynamic[
               FEPrivate`If[
                DynamicChart`click$6324$8349, {{{1., 0.}, {0., 1.}}, {
                  1.2246467991473533`*^-17, -0.2}}, {{1, 0}, {0, 1}}, {{1, 
                 0}, {0, 1}}], 
                TrackedSymbols :> {DynamicChart`click$6324$8349}]],
              "DelayedClickEffect"]}, {}}, {}}, {}, {}},
         DynamicModuleValues:>{}], {{}, {}}, {{{}, {}, {}, {}}, {}}},
       ContentSelectable->False,
       DisplayFunction->Identity,
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->{{0., 0.}, {0., 0.}},
       PlotRange->{{-1., 1.}, {-1., 1.}},
       PlotRangePadding->Scaled[0.09166666666666669]], {1755., -195.}, 
      ImageScaled[{0.5, 0.5}], {360., 360.},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}]}, {
     InsetBox[
      GraphicsBox[{{}, {}, 
        DynamicModuleBox[{DynamicChart`click$6372$8350 = False, 
         DynamicChart`click$6378$8350 = False}, {
          {RGBColor[0.5, 0.5, 1.], EdgeForm[{GrayLevel[0], Opacity[
           0.5]}], {{{}, {
              {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{GrayLevel[
               0], Opacity[0.5]}], 
               TagBox[GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    DiskBox[{0, 0}, 1., {0., 3.141592653589793}]},
                    
                    ImageSizeCache->{{9.588205718813455, 
                    102.72429428118652`}, {-102.72429428118653`, \
-55.44914321881344}}],
                    "DelayedMouseEffectStyle"],
                    StatusArea[#, 1]& ,
                    TagBoxNote->"1"],
                    StyleBox["1", {}, StripOnInput -> False]],
                   Annotation[#, 
                    Style[1, {}], "Tooltip"]& ],
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$6372$8350, 
                    FEPrivate`Not[DynamicChart`click$6372$8350]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                 FEPrivate`If[
                  DynamicChart`click$6372$8350, {{{1., 0.}, {0., 1.}}, {
                    1.2246467991473533`*^-17, 0.2}}, {{1, 0}, {0, 1}}, {{1, 
                   0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$6372$8350}]],
                "DelayedClickEffect"]}, 
              {RGBColor[0.4992, 0.5552, 0.8309304], EdgeForm[{GrayLevel[0], 
               Opacity[0.5]}], 
               TagBox[GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    DiskBox[{0, 0}, 1., {-3.141592653589793, 0.}]},
                    
                    ImageSizeCache->{{9.588205718813455, 
                    102.72429428118652`}, {-56.86335678118654, \
-9.588205718813448}}],
                    "DelayedMouseEffectStyle"],
                    StatusArea[#, 1]& ,
                    TagBoxNote->"1"],
                    StyleBox["1", {}, StripOnInput -> False]],
                   Annotation[#, 
                    Style[1, {}], "Tooltip"]& ],
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$6378$8350, 
                    FEPrivate`Not[DynamicChart`click$6378$8350]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                 FEPrivate`If[
                  DynamicChart`click$6378$8350, {{{1., 0.}, {0., 1.}}, {
                    1.2246467991473533`*^-17, -0.2}}, {{1, 0}, {0, 1}}, {{1, 
                   0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$6378$8350}]],
                "DelayedClickEffect"]}}}, {}}, {}}, {{{
             TagBox[GeometricTransformationBox[
               TagBox[
                TagBox[
                 TooltipBox[
                  TagBox[{{}, {}},
                   StatusArea[#, 1]& ,
                   TagBoxNote->"1"],
                  StyleBox["1", {}, StripOnInput -> False]],
                 Annotation[#, 
                  Style[1, {}], "Tooltip"]& ],
                
                EventHandlerTag[{
                 "MouseClicked" :> FEPrivate`Set[DynamicChart`click$6372$8350, 
                    FEPrivate`Not[DynamicChart`click$6372$8350]], 
                  PassEventsDown -> True, Method -> "Preemptive", 
                  PassEventsUp -> True}]], Dynamic[
               FEPrivate`If[
                DynamicChart`click$6372$8350, {{{1., 0.}, {0., 1.}}, {
                  1.2246467991473533`*^-17, 0.2}}, {{1, 0}, {0, 1}}, {{1, 
                 0}, {0, 1}}], 
                TrackedSymbols :> {DynamicChart`click$6372$8350}]],
              "DelayedClickEffect"], 
             TagBox[GeometricTransformationBox[
               TagBox[
                TagBox[
                 TooltipBox[
                  TagBox[{{}, {}},
                   StatusArea[#, 1]& ,
                   TagBoxNote->"1"],
                  StyleBox["1", {}, StripOnInput -> False]],
                 Annotation[#, 
                  Style[1, {}], "Tooltip"]& ],
                
                EventHandlerTag[{
                 "MouseClicked" :> FEPrivate`Set[DynamicChart`click$6378$8350, 
                    FEPrivate`Not[DynamicChart`click$6378$8350]], 
                  PassEventsDown -> True, Method -> "Preemptive", 
                  PassEventsUp -> True}]], Dynamic[
               FEPrivate`If[
                DynamicChart`click$6378$8350, {{{1., 0.}, {0., 1.}}, {
                  1.2246467991473533`*^-17, -0.2}}, {{1, 0}, {0, 1}}, {{1, 
                 0}, {0, 1}}], 
                TrackedSymbols :> {DynamicChart`click$6378$8350}]],
              "DelayedClickEffect"]}, {}}, {}}, {}, {}},
         DynamicModuleValues:>{}], {{}, {}}, {{{}, {}, {}, {}}, {}}},
       ContentSelectable->False,
       DisplayFunction->Identity,
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->{{0., 0.}, {0., 0.}},
       PlotRange->{{-1., 1.}, {-1., 1.}},
       PlotRangePadding->Scaled[0.09166666666666669]], {195., -585.}, 
      ImageScaled[{0.5, 0.5}], {360., 360.},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
     InsetBox[
      GraphicsBox[{{}, {}, 
        DynamicModuleBox[{DynamicChart`click$6426$8351 = False, 
         DynamicChart`click$6432$8351 = False, DynamicChart`click$6438$8351 = 
         False}, {
          {RGBColor[0.5, 0.5, 1.], EdgeForm[{GrayLevel[0], Opacity[
           0.5]}], {{{}, {
              {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{GrayLevel[
               0], Opacity[0.5]}], 
               TagBox[GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {1.0471975511965979`, 
                    3.141592653589793}]},
                    
                    ImageSizeCache->{{9.588205718813455, 
                    79.79382553118653}, {-102.7242942811865, \
-55.44914321881342}}],
                    "DelayedMouseEffectStyle"],
                    StatusArea[#, 1]& ,
                    TagBoxNote->"1"],
                    StyleBox["1", {}, StripOnInput -> False]],
                   Annotation[#, 
                    Style[1, {}], "Tooltip"]& ],
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$6426$8351, 
                    FEPrivate`Not[DynamicChart`click$6426$8351]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                 FEPrivate`If[
                  DynamicChart`click$6426$8351, {{{1., 0.}, {0., 
                    1.}}, {-0.10000000000000003`, 0.17320508075688773`}}, {{1,
                    0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$6426$8351}]],
                "DelayedClickEffect"]}, 
              {RGBColor[0.784, 0.47519999999999996`, 0.2], EdgeForm[{
               GrayLevel[0], Opacity[0.5]}], 
               TagBox[GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-1.0471975511965974`, 
                    1.0471975511965979`}]},
                    
                    ImageSizeCache->{{54.388483047033624`, 
                    103.78495445296635`}, {-97.64075386933673, \
-14.671746130663223`}}],
                    "DelayedMouseEffectStyle"],
                    StatusArea[#, 1]& ,
                    TagBoxNote->"1"],
                    StyleBox["1", {}, StripOnInput -> False]],
                   Annotation[#, 
                    Style[1, {}], "Tooltip"]& ],
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$6432$8351, 
                    FEPrivate`Not[DynamicChart`click$6432$8351]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                 FEPrivate`If[
                  DynamicChart`click$6432$8351, {{{1., 0.}, {0., 1.}}, {0.2, 
                    4.4408920985006264`*^-17}}, {{1, 0}, {0, 1}}, {{1, 0}, {0,
                    1}}], TrackedSymbols :> {DynamicChart`click$6432$8351}]],
                "DelayedClickEffect"]}, 
              {RGBColor[0.4992, 0.5552, 0.8309304], EdgeForm[{GrayLevel[0], 
               Opacity[0.5]}], 
               TagBox[GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -1.0471975511965974`}]},
                    
                    ImageSizeCache->{{9.588205718813455, 
                    79.79382553118654}, {-56.86335678118653, \
-9.588205718813441}}],
                    "DelayedMouseEffectStyle"],
                    StatusArea[#, 1]& ,
                    TagBoxNote->"1"],
                    StyleBox["1", {}, StripOnInput -> False]],
                   Annotation[#, 
                    Style[1, {}], "Tooltip"]& ],
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$6438$8351, 
                    FEPrivate`Not[DynamicChart`click$6438$8351]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                 FEPrivate`If[
                  DynamicChart`click$6438$8351, {{{1., 0.}, {0., 
                    1.}}, {-0.09999999999999996, -0.17320508075688779`}}, {{1,
                    0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$6438$8351}]],
                "DelayedClickEffect"]}}}, {}}, {}}, {{{
             TagBox[GeometricTransformationBox[
               TagBox[
                TagBox[
                 TooltipBox[
                  TagBox[{{}, {}},
                   StatusArea[#, 1]& ,
                   TagBoxNote->"1"],
                  StyleBox["1", {}, StripOnInput -> False]],
                 Annotation[#, 
                  Style[1, {}], "Tooltip"]& ],
                
                EventHandlerTag[{
                 "MouseClicked" :> FEPrivate`Set[DynamicChart`click$6426$8351, 
                    FEPrivate`Not[DynamicChart`click$6426$8351]], 
                  PassEventsDown -> True, Method -> "Preemptive", 
                  PassEventsUp -> True}]], Dynamic[
               FEPrivate`If[
                DynamicChart`click$6426$8351, {{{1., 0.}, {0., 
                  1.}}, {-0.10000000000000003`, 0.17320508075688773`}}, {{1, 
                 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                TrackedSymbols :> {DynamicChart`click$6426$8351}]],
              "DelayedClickEffect"], 
             TagBox[GeometricTransformationBox[
               TagBox[
                TagBox[
                 TooltipBox[
                  TagBox[{{}, {}},
                   StatusArea[#, 1]& ,
                   TagBoxNote->"1"],
                  StyleBox["1", {}, StripOnInput -> False]],
                 Annotation[#, 
                  Style[1, {}], "Tooltip"]& ],
                
                EventHandlerTag[{
                 "MouseClicked" :> FEPrivate`Set[DynamicChart`click$6432$8351, 
                    FEPrivate`Not[DynamicChart`click$6432$8351]], 
                  PassEventsDown -> True, Method -> "Preemptive", 
                  PassEventsUp -> True}]], Dynamic[
               FEPrivate`If[
                DynamicChart`click$6432$8351, {{{1., 0.}, {0., 1.}}, {0.2, 
                  4.4408920985006264`*^-17}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 
                 1}}], TrackedSymbols :> {DynamicChart`click$6432$8351}]],
              "DelayedClickEffect"], 
             TagBox[GeometricTransformationBox[
               TagBox[
                TagBox[
                 TooltipBox[
                  TagBox[{{}, {}},
                   StatusArea[#, 1]& ,
                   TagBoxNote->"1"],
                  StyleBox["1", {}, StripOnInput -> False]],
                 Annotation[#, 
                  Style[1, {}], "Tooltip"]& ],
                
                EventHandlerTag[{
                 "MouseClicked" :> FEPrivate`Set[DynamicChart`click$6438$8351, 
                    FEPrivate`Not[DynamicChart`click$6438$8351]], 
                  PassEventsDown -> True, Method -> "Preemptive", 
                  PassEventsUp -> True}]], Dynamic[
               FEPrivate`If[
                DynamicChart`click$6438$8351, {{{1., 0.}, {0., 
                  1.}}, {-0.09999999999999996, -0.17320508075688779`}}, {{1, 
                 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                TrackedSymbols :> {DynamicChart`click$6438$8351}]],
              "DelayedClickEffect"]}, {}}, {}}, {}, {}},
         DynamicModuleValues:>{}], {{}, {}}, {{{}, {}, {}, {}}, {}}},
       ContentSelectable->False,
       DisplayFunction->Identity,
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->{{0., 0.}, {0., 0.}},
       PlotRange->{{-1., 1.}, {-1., 1.}},
       PlotRangePadding->Scaled[0.09166666666666669]], {585., -585.}, 
      ImageScaled[{0.5, 0.5}], {360., 360.},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
     InsetBox[
      GraphicsBox[{{}, {}, 
        DynamicModuleBox[{DynamicChart`click$6495$8352 = False, 
         DynamicChart`click$6501$8352 = False, DynamicChart`click$6507$8352 = 
         False}, {
          {RGBColor[0.5, 0.5, 1.], EdgeForm[{GrayLevel[0], Opacity[
           0.5]}], {{{}, {
              {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{GrayLevel[
               0], Opacity[0.5]}], 
               TagBox[GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {1.0471975511965979`, 
                    3.141592653589793}]},
                    
                    ImageSizeCache->{{9.588205718813434, 
                    79.79382553118651}, {-102.72429428118653`, \
-55.44914321881344}}],
                    "DelayedMouseEffectStyle"],
                    StatusArea[#, 1]& ,
                    TagBoxNote->"1"],
                    StyleBox["1", {}, StripOnInput -> False]],
                   Annotation[#, 
                    Style[1, {}], "Tooltip"]& ],
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$6495$8352, 
                    FEPrivate`Not[DynamicChart`click$6495$8352]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                 FEPrivate`If[
                  DynamicChart`click$6495$8352, {{{1., 0.}, {0., 
                    1.}}, {-0.10000000000000003`, 0.17320508075688773`}}, {{1,
                    0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$6495$8352}]],
                "DelayedClickEffect"]}, 
              {RGBColor[0.784, 0.47519999999999996`, 0.2], EdgeForm[{
               GrayLevel[0], Opacity[0.5]}], 
               TagBox[GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-1.0471975511965974`, 
                    1.0471975511965979`}]},
                    
                    ImageSizeCache->{{55.44914321881342, 
                    102.7242942811865}, {-96.58009369755693, \
-15.732406302443039`}}],
                    "DelayedMouseEffectStyle"],
                    StatusArea[#, 1]& ,
                    TagBoxNote->"1"],
                    StyleBox["1", {}, StripOnInput -> False]],
                   Annotation[#, 
                    Style[1, {}], "Tooltip"]& ],
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$6501$8352, 
                    FEPrivate`Not[DynamicChart`click$6501$8352]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                 FEPrivate`If[
                  DynamicChart`click$6501$8352, {{{1., 0.}, {0., 1.}}, {0.2, 
                    4.4408920985006264`*^-17}}, {{1, 0}, {0, 1}}, {{1, 0}, {0,
                    1}}], TrackedSymbols :> {DynamicChart`click$6501$8352}]],
                "DelayedClickEffect"]}, 
              {RGBColor[0.4992, 0.5552, 0.8309304], EdgeForm[{GrayLevel[0], 
               Opacity[0.5]}], 
               TagBox[GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -1.0471975511965974`}]},
                    
                    ImageSizeCache->{{9.588205718813434, 
                    79.79382553118654}, {-56.86335678118654, \
-9.588205718813448}}],
                    "DelayedMouseEffectStyle"],
                    StatusArea[#, 1]& ,
                    TagBoxNote->"1"],
                    StyleBox["1", {}, StripOnInput -> False]],
                   Annotation[#, 
                    Style[1, {}], "Tooltip"]& ],
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$6507$8352, 
                    FEPrivate`Not[DynamicChart`click$6507$8352]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                 FEPrivate`If[
                  DynamicChart`click$6507$8352, {{{1., 0.}, {0., 
                    1.}}, {-0.09999999999999996, -0.17320508075688779`}}, {{1,
                    0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$6507$8352}]],
                "DelayedClickEffect"]}}}, {}}, {}}, {{{
             TagBox[GeometricTransformationBox[
               TagBox[
                TagBox[
                 TooltipBox[
                  TagBox[{{}, {}},
                   StatusArea[#, 1]& ,
                   TagBoxNote->"1"],
                  StyleBox["1", {}, StripOnInput -> False]],
                 Annotation[#, 
                  Style[1, {}], "Tooltip"]& ],
                
                EventHandlerTag[{
                 "MouseClicked" :> FEPrivate`Set[DynamicChart`click$6495$8352, 
                    FEPrivate`Not[DynamicChart`click$6495$8352]], 
                  PassEventsDown -> True, Method -> "Preemptive", 
                  PassEventsUp -> True}]], Dynamic[
               FEPrivate`If[
                DynamicChart`click$6495$8352, {{{1., 0.}, {0., 
                  1.}}, {-0.10000000000000003`, 0.17320508075688773`}}, {{1, 
                 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                TrackedSymbols :> {DynamicChart`click$6495$8352}]],
              "DelayedClickEffect"], 
             TagBox[GeometricTransformationBox[
               TagBox[
                TagBox[
                 TooltipBox[
                  TagBox[{{}, {}},
                   StatusArea[#, 1]& ,
                   TagBoxNote->"1"],
                  StyleBox["1", {}, StripOnInput -> False]],
                 Annotation[#, 
                  Style[1, {}], "Tooltip"]& ],
                
                EventHandlerTag[{
                 "MouseClicked" :> FEPrivate`Set[DynamicChart`click$6501$8352, 
                    FEPrivate`Not[DynamicChart`click$6501$8352]], 
                  PassEventsDown -> True, Method -> "Preemptive", 
                  PassEventsUp -> True}]], Dynamic[
               FEPrivate`If[
                DynamicChart`click$6501$8352, {{{1., 0.}, {0., 1.}}, {0.2, 
                  4.4408920985006264`*^-17}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 
                 1}}], TrackedSymbols :> {DynamicChart`click$6501$8352}]],
              "DelayedClickEffect"], 
             TagBox[GeometricTransformationBox[
               TagBox[
                TagBox[
                 TooltipBox[
                  TagBox[{{}, {}},
                   StatusArea[#, 1]& ,
                   TagBoxNote->"1"],
                  StyleBox["1", {}, StripOnInput -> False]],
                 Annotation[#, 
                  Style[1, {}], "Tooltip"]& ],
                
                EventHandlerTag[{
                 "MouseClicked" :> FEPrivate`Set[DynamicChart`click$6507$8352, 
                    FEPrivate`Not[DynamicChart`click$6507$8352]], 
                  PassEventsDown -> True, Method -> "Preemptive", 
                  PassEventsUp -> True}]], Dynamic[
               FEPrivate`If[
                DynamicChart`click$6507$8352, {{{1., 0.}, {0., 
                  1.}}, {-0.09999999999999996, -0.17320508075688779`}}, {{1, 
                 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                TrackedSymbols :> {DynamicChart`click$6507$8352}]],
              "DelayedClickEffect"]}, {}}, {}}, {}, {}},
         DynamicModuleValues:>{}], {{}, {}}, {{{}, {}, {}, {}}, {}}},
       ContentSelectable->False,
       DisplayFunction->Identity,
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->{{0., 0.}, {0., 0.}},
       PlotRange->{{-1., 1.}, {-1., 1.}},
       PlotRangePadding->Scaled[0.09166666666666669]], {975., -585.}, 
      ImageScaled[{0.5, 0.5}], {360., 360.},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
     InsetBox[
      GraphicsBox[{{}, {}, 
        DynamicModuleBox[{DynamicChart`click$6564$8353 = False, 
         DynamicChart`click$6570$8353 = False, DynamicChart`click$6576$8353 = 
         False}, {
          {RGBColor[0.5, 0.5, 1.], EdgeForm[{GrayLevel[0], Opacity[
           0.5]}], {{{}, {
              {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{GrayLevel[
               0], Opacity[0.5]}], 
               TagBox[GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {1.0471975511965979`, 
                    3.141592653589793}]},
                    
                    ImageSizeCache->{{9.588205718813548, 
                    79.79382553118663}, {-102.72429428118653`, \
-55.44914321881344}}],
                    "DelayedMouseEffectStyle"],
                    StatusArea[#, 1]& ,
                    TagBoxNote->"1"],
                    StyleBox["1", {}, StripOnInput -> False]],
                   Annotation[#, 
                    Style[1, {}], "Tooltip"]& ],
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$6564$8353, 
                    FEPrivate`Not[DynamicChart`click$6564$8353]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                 FEPrivate`If[
                  DynamicChart`click$6564$8353, {{{1., 0.}, {0., 
                    1.}}, {-0.10000000000000003`, 0.17320508075688773`}}, {{1,
                    0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$6564$8353}]],
                "DelayedClickEffect"]}, 
              {RGBColor[0.784, 0.47519999999999996`, 0.2], EdgeForm[{
               GrayLevel[0], Opacity[0.5]}], 
               TagBox[GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-1.0471975511965974`, 
                    1.0471975511965979`}]},
                    
                    ImageSizeCache->{{55.44914321881353, 
                    102.72429428118662`}, {-96.58009369755693, \
-15.732406302443039`}}],
                    "DelayedMouseEffectStyle"],
                    StatusArea[#, 1]& ,
                    TagBoxNote->"1"],
                    StyleBox["1", {}, StripOnInput -> False]],
                   Annotation[#, 
                    Style[1, {}], "Tooltip"]& ],
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$6570$8353, 
                    FEPrivate`Not[DynamicChart`click$6570$8353]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                 FEPrivate`If[
                  DynamicChart`click$6570$8353, {{{1., 0.}, {0., 1.}}, {0.2, 
                    4.4408920985006264`*^-17}}, {{1, 0}, {0, 1}}, {{1, 0}, {0,
                    1}}], TrackedSymbols :> {DynamicChart`click$6570$8353}]],
                "DelayedClickEffect"]}, 
              {RGBColor[0.4992, 0.5552, 0.8309304], EdgeForm[{GrayLevel[0], 
               Opacity[0.5]}], 
               TagBox[GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -1.0471975511965974`}]},
                    
                    ImageSizeCache->{{9.588205718813548, 
                    79.79382553118666}, {-56.86335678118654, \
-9.588205718813448}}],
                    "DelayedMouseEffectStyle"],
                    StatusArea[#, 1]& ,
                    TagBoxNote->"1"],
                    StyleBox["1", {}, StripOnInput -> False]],
                   Annotation[#, 
                    Style[1, {}], "Tooltip"]& ],
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$6576$8353, 
                    FEPrivate`Not[DynamicChart`click$6576$8353]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                 FEPrivate`If[
                  DynamicChart`click$6576$8353, {{{1., 0.}, {0., 
                    1.}}, {-0.09999999999999996, -0.17320508075688779`}}, {{1,
                    0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$6576$8353}]],
                "DelayedClickEffect"]}}}, {}}, {}}, {{{
             TagBox[GeometricTransformationBox[
               TagBox[
                TagBox[
                 TooltipBox[
                  TagBox[{{}, {}},
                   StatusArea[#, 1]& ,
                   TagBoxNote->"1"],
                  StyleBox["1", {}, StripOnInput -> False]],
                 Annotation[#, 
                  Style[1, {}], "Tooltip"]& ],
                
                EventHandlerTag[{
                 "MouseClicked" :> FEPrivate`Set[DynamicChart`click$6564$8353, 
                    FEPrivate`Not[DynamicChart`click$6564$8353]], 
                  PassEventsDown -> True, Method -> "Preemptive", 
                  PassEventsUp -> True}]], Dynamic[
               FEPrivate`If[
                DynamicChart`click$6564$8353, {{{1., 0.}, {0., 
                  1.}}, {-0.10000000000000003`, 0.17320508075688773`}}, {{1, 
                 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                TrackedSymbols :> {DynamicChart`click$6564$8353}]],
              "DelayedClickEffect"], 
             TagBox[GeometricTransformationBox[
               TagBox[
                TagBox[
                 TooltipBox[
                  TagBox[{{}, {}},
                   StatusArea[#, 1]& ,
                   TagBoxNote->"1"],
                  StyleBox["1", {}, StripOnInput -> False]],
                 Annotation[#, 
                  Style[1, {}], "Tooltip"]& ],
                
                EventHandlerTag[{
                 "MouseClicked" :> FEPrivate`Set[DynamicChart`click$6570$8353, 
                    FEPrivate`Not[DynamicChart`click$6570$8353]], 
                  PassEventsDown -> True, Method -> "Preemptive", 
                  PassEventsUp -> True}]], Dynamic[
               FEPrivate`If[
                DynamicChart`click$6570$8353, {{{1., 0.}, {0., 1.}}, {0.2, 
                  4.4408920985006264`*^-17}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 
                 1}}], TrackedSymbols :> {DynamicChart`click$6570$8353}]],
              "DelayedClickEffect"], 
             TagBox[GeometricTransformationBox[
               TagBox[
                TagBox[
                 TooltipBox[
                  TagBox[{{}, {}},
                   StatusArea[#, 1]& ,
                   TagBoxNote->"1"],
                  StyleBox["1", {}, StripOnInput -> False]],
                 Annotation[#, 
                  Style[1, {}], "Tooltip"]& ],
                
                EventHandlerTag[{
                 "MouseClicked" :> FEPrivate`Set[DynamicChart`click$6576$8353, 
                    FEPrivate`Not[DynamicChart`click$6576$8353]], 
                  PassEventsDown -> True, Method -> "Preemptive", 
                  PassEventsUp -> True}]], Dynamic[
               FEPrivate`If[
                DynamicChart`click$6576$8353, {{{1., 0.}, {0., 
                  1.}}, {-0.09999999999999996, -0.17320508075688779`}}, {{1, 
                 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                TrackedSymbols :> {DynamicChart`click$6576$8353}]],
              "DelayedClickEffect"]}, {}}, {}}, {}, {}},
         DynamicModuleValues:>{}], {{}, {}}, {{{}, {}, {}, {}}, {}}},
       ContentSelectable->False,
       DisplayFunction->Identity,
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->{{0., 0.}, {0., 0.}},
       PlotRange->{{-1., 1.}, {-1., 1.}},
       PlotRangePadding->Scaled[0.09166666666666669]], {1365., -585.}, 
      ImageScaled[{0.5, 0.5}], {360., 360.},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
     InsetBox[
      GraphicsBox[{{}, {}, 
        DynamicModuleBox[{DynamicChart`click$6633$8354 = False, 
         DynamicChart`click$6639$8354 = False, DynamicChart`click$6645$8354 = 
         False, DynamicChart`click$6651$8354 = False}, {
          {RGBColor[0.5, 0.5, 1.], EdgeForm[{GrayLevel[0], Opacity[
           0.5]}], {{{}, {
              {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{GrayLevel[
               0], Opacity[0.5]}], 
               TagBox[GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {1.5707963267948966`, 
                    3.141592653589793}]},
                    
                    ImageSizeCache->{{9.588205718813434, 
                    56.863356781186525`}, {-102.72429428118653`, \
-55.44914321881344}}],
                    "DelayedMouseEffectStyle"],
                    StatusArea[#, 1]& ,
                    TagBoxNote->"1"],
                    StyleBox["1", {}, StripOnInput -> False]],
                   Annotation[#, 
                    Style[1, {}], "Tooltip"]& ],
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$6633$8354, 
                    FEPrivate`Not[DynamicChart`click$6633$8354]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                 FEPrivate`If[
                  DynamicChart`click$6633$8354, {{{1., 0.}, {0., 
                    1.}}, {-0.1414213562373095, 0.14142135623730953`}}, {{1, 
                   0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$6633$8354}]],
                "DelayedClickEffect"]}, 
              {RGBColor[0.928, 0.5210666666666667, 0.2], EdgeForm[{GrayLevel[
               0], Opacity[0.5]}], 
               TagBox[GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    DiskBox[{0, 0}, 1., {0., 1.5707963267948966`}]},
                    
                    ImageSizeCache->{{55.44914321881342, 
                    102.7242942811865}, {-102.72429428118653`, \
-55.44914321881344}}],
                    "DelayedMouseEffectStyle"],
                    StatusArea[#, 1]& ,
                    TagBoxNote->"1"],
                    StyleBox["1", {}, StripOnInput -> False]],
                   Annotation[#, 
                    Style[1, {}], "Tooltip"]& ],
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$6639$8354, 
                    FEPrivate`Not[DynamicChart`click$6639$8354]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                 FEPrivate`If[
                  DynamicChart`click$6639$8354, {{{1., 0.}, {0., 1.}}, {
                    0.14142135623730953`, 0.1414213562373095}}, {{1, 0}, {0, 
                   1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$6639$8354}]],
                "DelayedClickEffect"]}, 
              {RGBColor[0.7116405333333333, 0.4816, 0.5483194666666666], 
               EdgeForm[{GrayLevel[0], Opacity[0.5]}], 
               TagBox[GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    DiskBox[{0, 0}, 1., {-1.5707963267948966`, 0.}]},
                    
                    ImageSizeCache->{{55.44914321881342, 
                    102.7242942811865}, {-56.86335678118654, \
-9.588205718813448}}],
                    "DelayedMouseEffectStyle"],
                    StatusArea[#, 1]& ,
                    TagBoxNote->"1"],
                    StyleBox["1", {}, StripOnInput -> False]],
                   Annotation[#, 
                    Style[1, {}], "Tooltip"]& ],
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$6645$8354, 
                    FEPrivate`Not[DynamicChart`click$6645$8354]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                 FEPrivate`If[
                  DynamicChart`click$6645$8354, {{{1., 0.}, {0., 1.}}, {
                    0.14142135623730953`, -0.1414213562373095}}, {{1, 0}, {0, 
                   1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$6645$8354}]],
                "DelayedClickEffect"]}, 
              {RGBColor[0.4992, 0.5552, 0.8309304], EdgeForm[{GrayLevel[0], 
               Opacity[0.5]}], 
               TagBox[GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -1.5707963267948966`}]},
                    
                    ImageSizeCache->{{9.58820571881344, 
                    56.863356781186525`}, {-56.86335678118653, \
-9.58820571881345}}],
                    "DelayedMouseEffectStyle"],
                    StatusArea[#, 1]& ,
                    TagBoxNote->"1"],
                    StyleBox["1", {}, StripOnInput -> False]],
                   Annotation[#, 
                    Style[1, {}], "Tooltip"]& ],
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$6651$8354, 
                    FEPrivate`Not[DynamicChart`click$6651$8354]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                 FEPrivate`If[
                  DynamicChart`click$6651$8354, {{{1., 0.}, {0., 
                    1.}}, {-0.1414213562373095, -0.14142135623730953`}}, {{1, 
                   0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$6651$8354}]],
                "DelayedClickEffect"]}}}, {}}, {}}, {{{
             TagBox[GeometricTransformationBox[
               TagBox[
                TagBox[
                 TooltipBox[
                  TagBox[{{}, {}},
                   StatusArea[#, 1]& ,
                   TagBoxNote->"1"],
                  StyleBox["1", {}, StripOnInput -> False]],
                 Annotation[#, 
                  Style[1, {}], "Tooltip"]& ],
                
                EventHandlerTag[{
                 "MouseClicked" :> FEPrivate`Set[DynamicChart`click$6633$8354, 
                    FEPrivate`Not[DynamicChart`click$6633$8354]], 
                  PassEventsDown -> True, Method -> "Preemptive", 
                  PassEventsUp -> True}]], Dynamic[
               FEPrivate`If[
                DynamicChart`click$6633$8354, {{{1., 0.}, {0., 
                  1.}}, {-0.1414213562373095, 0.14142135623730953`}}, {{1, 
                 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                TrackedSymbols :> {DynamicChart`click$6633$8354}]],
              "DelayedClickEffect"], 
             TagBox[GeometricTransformationBox[
               TagBox[
                TagBox[
                 TooltipBox[
                  TagBox[{{}, {}},
                   StatusArea[#, 1]& ,
                   TagBoxNote->"1"],
                  StyleBox["1", {}, StripOnInput -> False]],
                 Annotation[#, 
                  Style[1, {}], "Tooltip"]& ],
                
                EventHandlerTag[{
                 "MouseClicked" :> FEPrivate`Set[DynamicChart`click$6639$8354, 
                    FEPrivate`Not[DynamicChart`click$6639$8354]], 
                  PassEventsDown -> True, Method -> "Preemptive", 
                  PassEventsUp -> True}]], Dynamic[
               FEPrivate`If[
                DynamicChart`click$6639$8354, {{{1., 0.}, {0., 1.}}, {
                  0.14142135623730953`, 0.1414213562373095}}, {{1, 0}, {0, 
                 1}}, {{1, 0}, {0, 1}}], 
                TrackedSymbols :> {DynamicChart`click$6639$8354}]],
              "DelayedClickEffect"], 
             TagBox[GeometricTransformationBox[
               TagBox[
                TagBox[
                 TooltipBox[
                  TagBox[{{}, {}},
                   StatusArea[#, 1]& ,
                   TagBoxNote->"1"],
                  StyleBox["1", {}, StripOnInput -> False]],
                 Annotation[#, 
                  Style[1, {}], "Tooltip"]& ],
                
                EventHandlerTag[{
                 "MouseClicked" :> FEPrivate`Set[DynamicChart`click$6645$8354, 
                    FEPrivate`Not[DynamicChart`click$6645$8354]], 
                  PassEventsDown -> True, Method -> "Preemptive", 
                  PassEventsUp -> True}]], Dynamic[
               FEPrivate`If[
                DynamicChart`click$6645$8354, {{{1., 0.}, {0., 1.}}, {
                  0.14142135623730953`, -0.1414213562373095}}, {{1, 0}, {0, 
                 1}}, {{1, 0}, {0, 1}}], 
                TrackedSymbols :> {DynamicChart`click$6645$8354}]],
              "DelayedClickEffect"], 
             TagBox[GeometricTransformationBox[
               TagBox[
                TagBox[
                 TooltipBox[
                  TagBox[{{}, {}},
                   StatusArea[#, 1]& ,
                   TagBoxNote->"1"],
                  StyleBox["1", {}, StripOnInput -> False]],
                 Annotation[#, 
                  Style[1, {}], "Tooltip"]& ],
                
                EventHandlerTag[{
                 "MouseClicked" :> FEPrivate`Set[DynamicChart`click$6651$8354, 
                    FEPrivate`Not[DynamicChart`click$6651$8354]], 
                  PassEventsDown -> True, Method -> "Preemptive", 
                  PassEventsUp -> True}]], Dynamic[
               FEPrivate`If[
                DynamicChart`click$6651$8354, {{{1., 0.}, {0., 
                  1.}}, {-0.1414213562373095, -0.14142135623730953`}}, {{1, 
                 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                TrackedSymbols :> {DynamicChart`click$6651$8354}]],
              "DelayedClickEffect"]}, {}}, {}}, {}, {}},
         DynamicModuleValues:>{}], {{}, {}}, {{{}, {}, {}, {}}, {}}},
       ContentSelectable->False,
       DisplayFunction->Identity,
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->{{0., 0.}, {0., 0.}},
       PlotRange->{{-1., 1.}, {-1., 1.}},
       PlotRangePadding->Scaled[0.09166666666666669]], {1755., -585.}, 
      ImageScaled[{0.5, 0.5}], {360., 360.},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}]}, {
     InsetBox[
      GraphicsBox[{{}, {}, 
        DynamicModuleBox[{DynamicChart`click$6720$8355 = False, 
         DynamicChart`click$6726$8355 = False, DynamicChart`click$6732$8355 = 
         False, DynamicChart`click$6738$8355 = False}, {
          {RGBColor[0.5, 0.5, 1.], EdgeForm[{GrayLevel[0], Opacity[
           0.5]}], {{{}, {
              {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{GrayLevel[
               0], Opacity[0.5]}], 
               TagBox[GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {1.5707963267948966`, 
                    3.141592653589793}]},
                    
                    ImageSizeCache->{{9.588205718813455, 
                    56.863356781186546`}, {-102.7242942811865, \
-55.44914321881342}}],
                    "DelayedMouseEffectStyle"],
                    StatusArea[#, 1]& ,
                    TagBoxNote->"1"],
                    StyleBox["1", {}, StripOnInput -> False]],
                   Annotation[#, 
                    Style[1, {}], "Tooltip"]& ],
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$6720$8355, 
                    FEPrivate`Not[DynamicChart`click$6720$8355]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                 FEPrivate`If[
                  DynamicChart`click$6720$8355, {{{1., 0.}, {0., 
                    1.}}, {-0.1414213562373095, 0.14142135623730953`}}, {{1, 
                   0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$6720$8355}]],
                "DelayedClickEffect"]}, 
              {RGBColor[0.928, 0.5210666666666667, 0.2], EdgeForm[{GrayLevel[
               0], Opacity[0.5]}], 
               TagBox[GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    DiskBox[{0, 0}, 1., {0., 1.5707963267948966`}]},
                    ImageSizeCache->{{55.44914321881344, 
                    102.72429428118653`}, {-102.7242942811865, \
-55.44914321881342}}],
                    "DelayedMouseEffectStyle"],
                    StatusArea[#, 1]& ,
                    TagBoxNote->"1"],
                    StyleBox["1", {}, StripOnInput -> False]],
                   Annotation[#, 
                    Style[1, {}], "Tooltip"]& ],
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$6726$8355, 
                    FEPrivate`Not[DynamicChart`click$6726$8355]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                 FEPrivate`If[
                  DynamicChart`click$6726$8355, {{{1., 0.}, {0., 1.}}, {
                    0.14142135623730953`, 0.1414213562373095}}, {{1, 0}, {0, 
                   1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$6726$8355}]],
                "DelayedClickEffect"]}, 
              {RGBColor[0.7116405333333333, 0.4816, 0.5483194666666666], 
               EdgeForm[{GrayLevel[0], Opacity[0.5]}], 
               TagBox[GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    DiskBox[{0, 0}, 1., {-1.5707963267948966`, 0.}]},
                    
                    ImageSizeCache->{{55.44914321881344, 
                    102.72429428118653`}, {-56.86335678118653, \
-9.588205718813441}}],
                    "DelayedMouseEffectStyle"],
                    StatusArea[#, 1]& ,
                    TagBoxNote->"1"],
                    StyleBox["1", {}, StripOnInput -> False]],
                   Annotation[#, 
                    Style[1, {}], "Tooltip"]& ],
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$6732$8355, 
                    FEPrivate`Not[DynamicChart`click$6732$8355]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                 FEPrivate`If[
                  DynamicChart`click$6732$8355, {{{1., 0.}, {0., 1.}}, {
                    0.14142135623730953`, -0.1414213562373095}}, {{1, 0}, {0, 
                   1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$6732$8355}]],
                "DelayedClickEffect"]}, 
              {RGBColor[0.4992, 0.5552, 0.8309304], EdgeForm[{GrayLevel[0], 
               Opacity[0.5]}], 
               TagBox[GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -1.5707963267948966`}]},
                    
                    ImageSizeCache->{{9.58820571881346, 
                    56.863356781186546`}, {-56.863356781186525`, \
-9.588205718813443}}],
                    "DelayedMouseEffectStyle"],
                    StatusArea[#, 1]& ,
                    TagBoxNote->"1"],
                    StyleBox["1", {}, StripOnInput -> False]],
                   Annotation[#, 
                    Style[1, {}], "Tooltip"]& ],
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$6738$8355, 
                    FEPrivate`Not[DynamicChart`click$6738$8355]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                 FEPrivate`If[
                  DynamicChart`click$6738$8355, {{{1., 0.}, {0., 
                    1.}}, {-0.1414213562373095, -0.14142135623730953`}}, {{1, 
                   0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$6738$8355}]],
                "DelayedClickEffect"]}}}, {}}, {}}, {{{
             TagBox[GeometricTransformationBox[
               TagBox[
                TagBox[
                 TooltipBox[
                  TagBox[{{}, {}},
                   StatusArea[#, 1]& ,
                   TagBoxNote->"1"],
                  StyleBox["1", {}, StripOnInput -> False]],
                 Annotation[#, 
                  Style[1, {}], "Tooltip"]& ],
                
                EventHandlerTag[{
                 "MouseClicked" :> FEPrivate`Set[DynamicChart`click$6720$8355, 
                    FEPrivate`Not[DynamicChart`click$6720$8355]], 
                  PassEventsDown -> True, Method -> "Preemptive", 
                  PassEventsUp -> True}]], Dynamic[
               FEPrivate`If[
                DynamicChart`click$6720$8355, {{{1., 0.}, {0., 
                  1.}}, {-0.1414213562373095, 0.14142135623730953`}}, {{1, 
                 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                TrackedSymbols :> {DynamicChart`click$6720$8355}]],
              "DelayedClickEffect"], 
             TagBox[GeometricTransformationBox[
               TagBox[
                TagBox[
                 TooltipBox[
                  TagBox[{{}, {}},
                   StatusArea[#, 1]& ,
                   TagBoxNote->"1"],
                  StyleBox["1", {}, StripOnInput -> False]],
                 Annotation[#, 
                  Style[1, {}], "Tooltip"]& ],
                
                EventHandlerTag[{
                 "MouseClicked" :> FEPrivate`Set[DynamicChart`click$6726$8355, 
                    FEPrivate`Not[DynamicChart`click$6726$8355]], 
                  PassEventsDown -> True, Method -> "Preemptive", 
                  PassEventsUp -> True}]], Dynamic[
               FEPrivate`If[
                DynamicChart`click$6726$8355, {{{1., 0.}, {0., 1.}}, {
                  0.14142135623730953`, 0.1414213562373095}}, {{1, 0}, {0, 
                 1}}, {{1, 0}, {0, 1}}], 
                TrackedSymbols :> {DynamicChart`click$6726$8355}]],
              "DelayedClickEffect"], 
             TagBox[GeometricTransformationBox[
               TagBox[
                TagBox[
                 TooltipBox[
                  TagBox[{{}, {}},
                   StatusArea[#, 1]& ,
                   TagBoxNote->"1"],
                  StyleBox["1", {}, StripOnInput -> False]],
                 Annotation[#, 
                  Style[1, {}], "Tooltip"]& ],
                
                EventHandlerTag[{
                 "MouseClicked" :> FEPrivate`Set[DynamicChart`click$6732$8355, 
                    FEPrivate`Not[DynamicChart`click$6732$8355]], 
                  PassEventsDown -> True, Method -> "Preemptive", 
                  PassEventsUp -> True}]], Dynamic[
               FEPrivate`If[
                DynamicChart`click$6732$8355, {{{1., 0.}, {0., 1.}}, {
                  0.14142135623730953`, -0.1414213562373095}}, {{1, 0}, {0, 
                 1}}, {{1, 0}, {0, 1}}], 
                TrackedSymbols :> {DynamicChart`click$6732$8355}]],
              "DelayedClickEffect"], 
             TagBox[GeometricTransformationBox[
               TagBox[
                TagBox[
                 TooltipBox[
                  TagBox[{{}, {}},
                   StatusArea[#, 1]& ,
                   TagBoxNote->"1"],
                  StyleBox["1", {}, StripOnInput -> False]],
                 Annotation[#, 
                  Style[1, {}], "Tooltip"]& ],
                
                EventHandlerTag[{
                 "MouseClicked" :> FEPrivate`Set[DynamicChart`click$6738$8355, 
                    FEPrivate`Not[DynamicChart`click$6738$8355]], 
                  PassEventsDown -> True, Method -> "Preemptive", 
                  PassEventsUp -> True}]], Dynamic[
               FEPrivate`If[
                DynamicChart`click$6738$8355, {{{1., 0.}, {0., 
                  1.}}, {-0.1414213562373095, -0.14142135623730953`}}, {{1, 
                 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                TrackedSymbols :> {DynamicChart`click$6738$8355}]],
              "DelayedClickEffect"]}, {}}, {}}, {}, {}},
         DynamicModuleValues:>{}], {{}, {}}, {{{}, {}, {}, {}}, {}}},
       ContentSelectable->False,
       DisplayFunction->Identity,
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->{{0., 0.}, {0., 0.}},
       PlotRange->{{-1., 1.}, {-1., 1.}},
       PlotRangePadding->Scaled[0.09166666666666669]], {195., -975.}, 
      ImageScaled[{0.5, 0.5}], {360., 360.},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
     InsetBox[
      GraphicsBox[{{}, {}, 
        DynamicModuleBox[{DynamicChart`click$6807$8356 = False, 
         DynamicChart`click$6813$8356 = False, DynamicChart`click$6819$8356 = 
         False, DynamicChart`click$6825$8356 = False}, {
          {RGBColor[0.5, 0.5, 1.], EdgeForm[{GrayLevel[0], Opacity[
           0.5]}], {{{}, {
              {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{GrayLevel[
               0], Opacity[0.5]}], 
               TagBox[GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {1.5707963267948966`, 
                    3.141592653589793}]},
                    
                    ImageSizeCache->{{9.58820571881342, 
                    56.86335678118651}, {-102.7242942811865, \
-55.44914321881342}}],
                    "DelayedMouseEffectStyle"],
                    StatusArea[#, 1]& ,
                    TagBoxNote->"1"],
                    StyleBox["1", {}, StripOnInput -> False]],
                   Annotation[#, 
                    Style[1, {}], "Tooltip"]& ],
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$6807$8356, 
                    FEPrivate`Not[DynamicChart`click$6807$8356]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                 FEPrivate`If[
                  DynamicChart`click$6807$8356, {{{1., 0.}, {0., 
                    1.}}, {-0.1414213562373095, 0.14142135623730953`}}, {{1, 
                   0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$6807$8356}]],
                "DelayedClickEffect"]}, 
              {RGBColor[0.928, 0.5210666666666667, 0.2], EdgeForm[{GrayLevel[
               0], Opacity[0.5]}], 
               TagBox[GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    DiskBox[{0, 0}, 1., {0., 1.5707963267948966`}]},
                    
                    ImageSizeCache->{{55.449143218813404`, 
                    102.7242942811865}, {-102.7242942811865, \
-55.44914321881342}}],
                    "DelayedMouseEffectStyle"],
                    StatusArea[#, 1]& ,
                    TagBoxNote->"1"],
                    StyleBox["1", {}, StripOnInput -> False]],
                   Annotation[#, 
                    Style[1, {}], "Tooltip"]& ],
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$6813$8356, 
                    FEPrivate`Not[DynamicChart`click$6813$8356]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                 FEPrivate`If[
                  DynamicChart`click$6813$8356, {{{1., 0.}, {0., 1.}}, {
                    0.14142135623730953`, 0.1414213562373095}}, {{1, 0}, {0, 
                   1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$6813$8356}]],
                "DelayedClickEffect"]}, 
              {RGBColor[0.7116405333333333, 0.4816, 0.5483194666666666], 
               EdgeForm[{GrayLevel[0], Opacity[0.5]}], 
               TagBox[GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    DiskBox[{0, 0}, 1., {-1.5707963267948966`, 0.}]},
                    
                    ImageSizeCache->{{55.449143218813404`, 
                    102.7242942811865}, {-56.86335678118653, \
-9.588205718813441}}],
                    "DelayedMouseEffectStyle"],
                    StatusArea[#, 1]& ,
                    TagBoxNote->"1"],
                    StyleBox["1", {}, StripOnInput -> False]],
                   Annotation[#, 
                    Style[1, {}], "Tooltip"]& ],
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$6819$8356, 
                    FEPrivate`Not[DynamicChart`click$6819$8356]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                 FEPrivate`If[
                  DynamicChart`click$6819$8356, {{{1., 0.}, {0., 1.}}, {
                    0.14142135623730953`, -0.1414213562373095}}, {{1, 0}, {0, 
                   1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$6819$8356}]],
                "DelayedClickEffect"]}, 
              {RGBColor[0.4992, 0.5552, 0.8309304], EdgeForm[{GrayLevel[0], 
               Opacity[0.5]}], 
               TagBox[GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -1.5707963267948966`}]},
                    
                    ImageSizeCache->{{9.588205718813425, 
                    56.86335678118651}, {-56.863356781186525`, \
-9.588205718813443}}],
                    "DelayedMouseEffectStyle"],
                    StatusArea[#, 1]& ,
                    TagBoxNote->"1"],
                    StyleBox["1", {}, StripOnInput -> False]],
                   Annotation[#, 
                    Style[1, {}], "Tooltip"]& ],
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$6825$8356, 
                    FEPrivate`Not[DynamicChart`click$6825$8356]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                 FEPrivate`If[
                  DynamicChart`click$6825$8356, {{{1., 0.}, {0., 
                    1.}}, {-0.1414213562373095, -0.14142135623730953`}}, {{1, 
                   0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$6825$8356}]],
                "DelayedClickEffect"]}}}, {}}, {}}, {{{
             TagBox[GeometricTransformationBox[
               TagBox[
                TagBox[
                 TooltipBox[
                  TagBox[{{}, {}},
                   StatusArea[#, 1]& ,
                   TagBoxNote->"1"],
                  StyleBox["1", {}, StripOnInput -> False]],
                 Annotation[#, 
                  Style[1, {}], "Tooltip"]& ],
                
                EventHandlerTag[{
                 "MouseClicked" :> FEPrivate`Set[DynamicChart`click$6807$8356, 
                    FEPrivate`Not[DynamicChart`click$6807$8356]], 
                  PassEventsDown -> True, Method -> "Preemptive", 
                  PassEventsUp -> True}]], Dynamic[
               FEPrivate`If[
                DynamicChart`click$6807$8356, {{{1., 0.}, {0., 
                  1.}}, {-0.1414213562373095, 0.14142135623730953`}}, {{1, 
                 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                TrackedSymbols :> {DynamicChart`click$6807$8356}]],
              "DelayedClickEffect"], 
             TagBox[GeometricTransformationBox[
               TagBox[
                TagBox[
                 TooltipBox[
                  TagBox[{{}, {}},
                   StatusArea[#, 1]& ,
                   TagBoxNote->"1"],
                  StyleBox["1", {}, StripOnInput -> False]],
                 Annotation[#, 
                  Style[1, {}], "Tooltip"]& ],
                
                EventHandlerTag[{
                 "MouseClicked" :> FEPrivate`Set[DynamicChart`click$6813$8356, 
                    FEPrivate`Not[DynamicChart`click$6813$8356]], 
                  PassEventsDown -> True, Method -> "Preemptive", 
                  PassEventsUp -> True}]], Dynamic[
               FEPrivate`If[
                DynamicChart`click$6813$8356, {{{1., 0.}, {0., 1.}}, {
                  0.14142135623730953`, 0.1414213562373095}}, {{1, 0}, {0, 
                 1}}, {{1, 0}, {0, 1}}], 
                TrackedSymbols :> {DynamicChart`click$6813$8356}]],
              "DelayedClickEffect"], 
             TagBox[GeometricTransformationBox[
               TagBox[
                TagBox[
                 TooltipBox[
                  TagBox[{{}, {}},
                   StatusArea[#, 1]& ,
                   TagBoxNote->"1"],
                  StyleBox["1", {}, StripOnInput -> False]],
                 Annotation[#, 
                  Style[1, {}], "Tooltip"]& ],
                
                EventHandlerTag[{
                 "MouseClicked" :> FEPrivate`Set[DynamicChart`click$6819$8356, 
                    FEPrivate`Not[DynamicChart`click$6819$8356]], 
                  PassEventsDown -> True, Method -> "Preemptive", 
                  PassEventsUp -> True}]], Dynamic[
               FEPrivate`If[
                DynamicChart`click$6819$8356, {{{1., 0.}, {0., 1.}}, {
                  0.14142135623730953`, -0.1414213562373095}}, {{1, 0}, {0, 
                 1}}, {{1, 0}, {0, 1}}], 
                TrackedSymbols :> {DynamicChart`click$6819$8356}]],
              "DelayedClickEffect"], 
             TagBox[GeometricTransformationBox[
               TagBox[
                TagBox[
                 TooltipBox[
                  TagBox[{{}, {}},
                   StatusArea[#, 1]& ,
                   TagBoxNote->"1"],
                  StyleBox["1", {}, StripOnInput -> False]],
                 Annotation[#, 
                  Style[1, {}], "Tooltip"]& ],
                
                EventHandlerTag[{
                 "MouseClicked" :> FEPrivate`Set[DynamicChart`click$6825$8356, 
                    FEPrivate`Not[DynamicChart`click$6825$8356]], 
                  PassEventsDown -> True, Method -> "Preemptive", 
                  PassEventsUp -> True}]], Dynamic[
               FEPrivate`If[
                DynamicChart`click$6825$8356, {{{1., 0.}, {0., 
                  1.}}, {-0.1414213562373095, -0.14142135623730953`}}, {{1, 
                 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                TrackedSymbols :> {DynamicChart`click$6825$8356}]],
              "DelayedClickEffect"]}, {}}, {}}, {}, {}},
         DynamicModuleValues:>{}], {{}, {}}, {{{}, {}, {}, {}}, {}}},
       ContentSelectable->False,
       DisplayFunction->Identity,
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->{{0., 0.}, {0., 0.}},
       PlotRange->{{-1., 1.}, {-1., 1.}},
       PlotRangePadding->Scaled[0.09166666666666669]], {585., -975.}, 
      ImageScaled[{0.5, 0.5}], {360., 360.},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
     InsetBox[
      GraphicsBox[{{}, {}, 
        DynamicModuleBox[{DynamicChart`click$6894$8357 = False, 
         DynamicChart`click$6900$8357 = False, DynamicChart`click$6906$8357 = 
         False, DynamicChart`click$6912$8357 = False}, {
          {RGBColor[0.5, 0.5, 1.], EdgeForm[{GrayLevel[0], Opacity[
           0.5]}], {{{}, {
              {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{GrayLevel[
               0], Opacity[0.5]}], 
               TagBox[GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {1.5707963267948966`, 
                    3.141592653589793}]},
                    
                    ImageSizeCache->{{9.588205718813434, 
                    56.863356781186525`}, {-102.7242942811865, \
-55.44914321881342}}],
                    "DelayedMouseEffectStyle"],
                    StatusArea[#, 1]& ,
                    TagBoxNote->"1"],
                    StyleBox["1", {}, StripOnInput -> False]],
                   Annotation[#, 
                    Style[1, {}], "Tooltip"]& ],
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$6894$8357, 
                    FEPrivate`Not[DynamicChart`click$6894$8357]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                 FEPrivate`If[
                  DynamicChart`click$6894$8357, {{{1., 0.}, {0., 
                    1.}}, {-0.1414213562373095, 0.14142135623730953`}}, {{1, 
                   0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$6894$8357}]],
                "DelayedClickEffect"]}, 
              {RGBColor[0.928, 0.5210666666666667, 0.2], EdgeForm[{GrayLevel[
               0], Opacity[0.5]}], 
               TagBox[GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    DiskBox[{0, 0}, 1., {0., 1.5707963267948966`}]},
                    
                    ImageSizeCache->{{55.44914321881342, 
                    102.7242942811865}, {-102.7242942811865, \
-55.44914321881342}}],
                    "DelayedMouseEffectStyle"],
                    StatusArea[#, 1]& ,
                    TagBoxNote->"1"],
                    StyleBox["1", {}, StripOnInput -> False]],
                   Annotation[#, 
                    Style[1, {}], "Tooltip"]& ],
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$6900$8357, 
                    FEPrivate`Not[DynamicChart`click$6900$8357]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                 FEPrivate`If[
                  DynamicChart`click$6900$8357, {{{1., 0.}, {0., 1.}}, {
                    0.14142135623730953`, 0.1414213562373095}}, {{1, 0}, {0, 
                   1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$6900$8357}]],
                "DelayedClickEffect"]}, 
              {RGBColor[0.7116405333333333, 0.4816, 0.5483194666666666], 
               EdgeForm[{GrayLevel[0], Opacity[0.5]}], 
               TagBox[GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    DiskBox[{0, 0}, 1., {-1.5707963267948966`, 0.}]},
                    
                    ImageSizeCache->{{55.44914321881342, 
                    102.7242942811865}, {-56.86335678118653, \
-9.588205718813441}}],
                    "DelayedMouseEffectStyle"],
                    StatusArea[#, 1]& ,
                    TagBoxNote->"1"],
                    StyleBox["1", {}, StripOnInput -> False]],
                   Annotation[#, 
                    Style[1, {}], "Tooltip"]& ],
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$6906$8357, 
                    FEPrivate`Not[DynamicChart`click$6906$8357]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                 FEPrivate`If[
                  DynamicChart`click$6906$8357, {{{1., 0.}, {0., 1.}}, {
                    0.14142135623730953`, -0.1414213562373095}}, {{1, 0}, {0, 
                   1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$6906$8357}]],
                "DelayedClickEffect"]}, 
              {RGBColor[0.4992, 0.5552, 0.8309304], EdgeForm[{GrayLevel[0], 
               Opacity[0.5]}], 
               TagBox[GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -1.5707963267948966`}]},
                    
                    ImageSizeCache->{{9.58820571881344, 
                    56.863356781186525`}, {-56.863356781186525`, \
-9.588205718813443}}],
                    "DelayedMouseEffectStyle"],
                    StatusArea[#, 1]& ,
                    TagBoxNote->"1"],
                    StyleBox["1", {}, StripOnInput -> False]],
                   Annotation[#, 
                    Style[1, {}], "Tooltip"]& ],
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$6912$8357, 
                    FEPrivate`Not[DynamicChart`click$6912$8357]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                 FEPrivate`If[
                  DynamicChart`click$6912$8357, {{{1., 0.}, {0., 
                    1.}}, {-0.1414213562373095, -0.14142135623730953`}}, {{1, 
                   0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$6912$8357}]],
                "DelayedClickEffect"]}}}, {}}, {}}, {{{
             TagBox[GeometricTransformationBox[
               TagBox[
                TagBox[
                 TooltipBox[
                  TagBox[{{}, {}},
                   StatusArea[#, 1]& ,
                   TagBoxNote->"1"],
                  StyleBox["1", {}, StripOnInput -> False]],
                 Annotation[#, 
                  Style[1, {}], "Tooltip"]& ],
                
                EventHandlerTag[{
                 "MouseClicked" :> FEPrivate`Set[DynamicChart`click$6894$8357, 
                    FEPrivate`Not[DynamicChart`click$6894$8357]], 
                  PassEventsDown -> True, Method -> "Preemptive", 
                  PassEventsUp -> True}]], Dynamic[
               FEPrivate`If[
                DynamicChart`click$6894$8357, {{{1., 0.}, {0., 
                  1.}}, {-0.1414213562373095, 0.14142135623730953`}}, {{1, 
                 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                TrackedSymbols :> {DynamicChart`click$6894$8357}]],
              "DelayedClickEffect"], 
             TagBox[GeometricTransformationBox[
               TagBox[
                TagBox[
                 TooltipBox[
                  TagBox[{{}, {}},
                   StatusArea[#, 1]& ,
                   TagBoxNote->"1"],
                  StyleBox["1", {}, StripOnInput -> False]],
                 Annotation[#, 
                  Style[1, {}], "Tooltip"]& ],
                
                EventHandlerTag[{
                 "MouseClicked" :> FEPrivate`Set[DynamicChart`click$6900$8357, 
                    FEPrivate`Not[DynamicChart`click$6900$8357]], 
                  PassEventsDown -> True, Method -> "Preemptive", 
                  PassEventsUp -> True}]], Dynamic[
               FEPrivate`If[
                DynamicChart`click$6900$8357, {{{1., 0.}, {0., 1.}}, {
                  0.14142135623730953`, 0.1414213562373095}}, {{1, 0}, {0, 
                 1}}, {{1, 0}, {0, 1}}], 
                TrackedSymbols :> {DynamicChart`click$6900$8357}]],
              "DelayedClickEffect"], 
             TagBox[GeometricTransformationBox[
               TagBox[
                TagBox[
                 TooltipBox[
                  TagBox[{{}, {}},
                   StatusArea[#, 1]& ,
                   TagBoxNote->"1"],
                  StyleBox["1", {}, StripOnInput -> False]],
                 Annotation[#, 
                  Style[1, {}], "Tooltip"]& ],
                
                EventHandlerTag[{
                 "MouseClicked" :> FEPrivate`Set[DynamicChart`click$6906$8357, 
                    FEPrivate`Not[DynamicChart`click$6906$8357]], 
                  PassEventsDown -> True, Method -> "Preemptive", 
                  PassEventsUp -> True}]], Dynamic[
               FEPrivate`If[
                DynamicChart`click$6906$8357, {{{1., 0.}, {0., 1.}}, {
                  0.14142135623730953`, -0.1414213562373095}}, {{1, 0}, {0, 
                 1}}, {{1, 0}, {0, 1}}], 
                TrackedSymbols :> {DynamicChart`click$6906$8357}]],
              "DelayedClickEffect"], 
             TagBox[GeometricTransformationBox[
               TagBox[
                TagBox[
                 TooltipBox[
                  TagBox[{{}, {}},
                   StatusArea[#, 1]& ,
                   TagBoxNote->"1"],
                  StyleBox["1", {}, StripOnInput -> False]],
                 Annotation[#, 
                  Style[1, {}], "Tooltip"]& ],
                
                EventHandlerTag[{
                 "MouseClicked" :> FEPrivate`Set[DynamicChart`click$6912$8357, 
                    FEPrivate`Not[DynamicChart`click$6912$8357]], 
                  PassEventsDown -> True, Method -> "Preemptive", 
                  PassEventsUp -> True}]], Dynamic[
               FEPrivate`If[
                DynamicChart`click$6912$8357, {{{1., 0.}, {0., 
                  1.}}, {-0.1414213562373095, -0.14142135623730953`}}, {{1, 
                 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                TrackedSymbols :> {DynamicChart`click$6912$8357}]],
              "DelayedClickEffect"]}, {}}, {}}, {}, {}},
         DynamicModuleValues:>{}], {{}, {}}, {{{}, {}, {}, {}}, {}}},
       ContentSelectable->False,
       DisplayFunction->Identity,
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->{{0., 0.}, {0., 0.}},
       PlotRange->{{-1., 1.}, {-1., 1.}},
       PlotRangePadding->Scaled[0.09166666666666669]], {975., -975.}, 
      ImageScaled[{0.5, 0.5}], {360., 360.},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
     InsetBox[
      GraphicsBox[{{}, {}, 
        DynamicModuleBox[{DynamicChart`click$6981$8358 = False, 
         DynamicChart`click$6987$8358 = False, DynamicChart`click$6993$8358 = 
         False, DynamicChart`click$6999$8358 = False, 
         DynamicChart`click$7005$8358 = False}, {
          {RGBColor[0.5, 0.5, 1.], EdgeForm[{GrayLevel[0], Opacity[
           0.5]}], {{{}, {
              {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{GrayLevel[
               0], Opacity[0.5]}], 
               TagBox[GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {1.8849555921538759`, 
                    3.141592653589793}]},
                    
                    ImageSizeCache->{{9.588205718813548, 
                    56.86335678118664}, {-100.4797002339663, \
-55.44914321881343}}],
                    "DelayedMouseEffectStyle"],
                    StatusArea[#, 1]& ,
                    TagBoxNote->"1"],
                    StyleBox["1", {}, StripOnInput -> False]],
                   Annotation[#, 
                    Style[1, {}], "Tooltip"]& ],
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$6981$8358, 
                    FEPrivate`Not[DynamicChart`click$6981$8358]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                 FEPrivate`If[
                  DynamicChart`click$6981$8358, {{{1., 0.}, {0., 
                    1.}}, {-0.16180339887498948`, 0.11755705045849466`}}, {{1,
                    0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$6981$8358}]],
                "DelayedClickEffect"]}, 
              {RGBColor[1., 0.544, 0.2], EdgeForm[{GrayLevel[0], Opacity[
               0.5]}], 
               TagBox[GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {0.6283185307179586, 
                    1.8849555921538759`}]},
                    
                    ImageSizeCache->{{41.277334153346224`, 
                    93.96563459665393}, {-102.7242942811865, \
-55.44914321881342}}],
                    "DelayedMouseEffectStyle"],
                    StatusArea[#, 1]& ,
                    TagBoxNote->"1"],
                    StyleBox["1", {}, StripOnInput -> False]],
                   Annotation[#, 
                    Style[1, {}], "Tooltip"]& ],
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$6987$8358, 
                    FEPrivate`Not[DynamicChart`click$6987$8358]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                 FEPrivate`If[
                  DynamicChart`click$6987$8358, {{{1., 0.}, {0., 1.}}, {
                    0.06180339887498949, 0.1902113032590307}}, {{1, 0}, {0, 
                   1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$6987$8358}]],
                "DelayedClickEffect"]}, 
              {RGBColor[0.784, 0.47519999999999996`, 0.2], EdgeForm[{
               GrayLevel[0], Opacity[0.5]}], 
               TagBox[GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-0.6283185307179591, 
                    0.6283185307179586}]},
                    
                    ImageSizeCache->{{55.44914321881353, 
                    102.72429428118662`}, {-83.81973949999335, \
-28.49276050000657}}],
                    "DelayedMouseEffectStyle"],
                    StatusArea[#, 1]& ,
                    TagBoxNote->"1"],
                    StyleBox["1", {}, StripOnInput -> False]],
                   Annotation[#, 
                    Style[1, {}], "Tooltip"]& ],
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$6993$8358, 
                    FEPrivate`Not[DynamicChart`click$6993$8358]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                 FEPrivate`If[
                  DynamicChart`click$6993$8358, {{{1., 0.}, {0., 1.}}, {
                    0.2, -4.4408920985006264`*^-17}}, {{1, 0}, {0, 1}}, {{1, 
                   0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$6993$8358}]],
                "DelayedClickEffect"]}, 
              {RGBColor[0.6754608, 0.4848, 0.7224792], EdgeForm[{GrayLevel[0],
                Opacity[0.5]}], 
               TagBox[GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-1.8849555921538759`, -0.6283185307179591}]},
                    
                    ImageSizeCache->{{41.277334153346224`, 
                    93.96563459665393}, {-56.86335678118653, \
-9.588205718813441}}],
                    "DelayedMouseEffectStyle"],
                    StatusArea[#, 1]& ,
                    TagBoxNote->"1"],
                    StyleBox["1", {}, StripOnInput -> False]],
                   Annotation[#, 
                    Style[1, {}], "Tooltip"]& ],
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$6999$8358, 
                    FEPrivate`Not[DynamicChart`click$6999$8358]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                 FEPrivate`If[
                  DynamicChart`click$6999$8358, {{{1., 0.}, {0., 1.}}, {
                    0.06180339887498945, -0.19021130325903074`}}, {{1, 0}, {0,
                    1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$6999$8358}]],
                "DelayedClickEffect"]}, 
              {RGBColor[0.4992, 0.5552, 0.8309304], EdgeForm[{GrayLevel[0], 
               Opacity[0.5]}], 
               TagBox[GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -1.8849555921538759`}]},
                    
                    ImageSizeCache->{{9.588205718813553, 
                    56.86335678118664}, {-56.863356781186525`, \
-11.832799766033675`}}],
                    "DelayedMouseEffectStyle"],
                    StatusArea[#, 1]& ,
                    TagBoxNote->"1"],
                    StyleBox["1", {}, StripOnInput -> False]],
                   Annotation[#, 
                    Style[1, {}], "Tooltip"]& ],
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$7005$8358, 
                    FEPrivate`Not[DynamicChart`click$7005$8358]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                 FEPrivate`If[
                  DynamicChart`click$7005$8358, {{{1., 0.}, {0., 
                    1.}}, {-0.16180339887498948`, -0.11755705045849466`}}, {{
                   1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$7005$8358}]],
                "DelayedClickEffect"]}}}, {}}, {}}, {{{
             TagBox[GeometricTransformationBox[
               TagBox[
                TagBox[
                 TooltipBox[
                  TagBox[{{}, {}},
                   StatusArea[#, 1]& ,
                   TagBoxNote->"1"],
                  StyleBox["1", {}, StripOnInput -> False]],
                 Annotation[#, 
                  Style[1, {}], "Tooltip"]& ],
                
                EventHandlerTag[{
                 "MouseClicked" :> FEPrivate`Set[DynamicChart`click$6981$8358, 
                    FEPrivate`Not[DynamicChart`click$6981$8358]], 
                  PassEventsDown -> True, Method -> "Preemptive", 
                  PassEventsUp -> True}]], Dynamic[
               FEPrivate`If[
                DynamicChart`click$6981$8358, {{{1., 0.}, {0., 
                  1.}}, {-0.16180339887498948`, 0.11755705045849466`}}, {{1, 
                 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                TrackedSymbols :> {DynamicChart`click$6981$8358}]],
              "DelayedClickEffect"], 
             TagBox[GeometricTransformationBox[
               TagBox[
                TagBox[
                 TooltipBox[
                  TagBox[{{}, {}},
                   StatusArea[#, 1]& ,
                   TagBoxNote->"1"],
                  StyleBox["1", {}, StripOnInput -> False]],
                 Annotation[#, 
                  Style[1, {}], "Tooltip"]& ],
                
                EventHandlerTag[{
                 "MouseClicked" :> FEPrivate`Set[DynamicChart`click$6987$8358, 
                    FEPrivate`Not[DynamicChart`click$6987$8358]], 
                  PassEventsDown -> True, Method -> "Preemptive", 
                  PassEventsUp -> True}]], Dynamic[
               FEPrivate`If[
                DynamicChart`click$6987$8358, {{{1., 0.}, {0., 1.}}, {
                  0.06180339887498949, 0.1902113032590307}}, {{1, 0}, {0, 
                 1}}, {{1, 0}, {0, 1}}], 
                TrackedSymbols :> {DynamicChart`click$6987$8358}]],
              "DelayedClickEffect"], 
             TagBox[GeometricTransformationBox[
               TagBox[
                TagBox[
                 TooltipBox[
                  TagBox[{{}, {}},
                   StatusArea[#, 1]& ,
                   TagBoxNote->"1"],
                  StyleBox["1", {}, StripOnInput -> False]],
                 Annotation[#, 
                  Style[1, {}], "Tooltip"]& ],
                
                EventHandlerTag[{
                 "MouseClicked" :> FEPrivate`Set[DynamicChart`click$6993$8358, 
                    FEPrivate`Not[DynamicChart`click$6993$8358]], 
                  PassEventsDown -> True, Method -> "Preemptive", 
                  PassEventsUp -> True}]], Dynamic[
               FEPrivate`If[
                DynamicChart`click$6993$8358, {{{1., 0.}, {0., 1.}}, {
                  0.2, -4.4408920985006264`*^-17}}, {{1, 0}, {0, 1}}, {{1, 
                 0}, {0, 1}}], 
                TrackedSymbols :> {DynamicChart`click$6993$8358}]],
              "DelayedClickEffect"], 
             TagBox[GeometricTransformationBox[
               TagBox[
                TagBox[
                 TooltipBox[
                  TagBox[{{}, {}},
                   StatusArea[#, 1]& ,
                   TagBoxNote->"1"],
                  StyleBox["1", {}, StripOnInput -> False]],
                 Annotation[#, 
                  Style[1, {}], "Tooltip"]& ],
                
                EventHandlerTag[{
                 "MouseClicked" :> FEPrivate`Set[DynamicChart`click$6999$8358, 
                    FEPrivate`Not[DynamicChart`click$6999$8358]], 
                  PassEventsDown -> True, Method -> "Preemptive", 
                  PassEventsUp -> True}]], Dynamic[
               FEPrivate`If[
                DynamicChart`click$6999$8358, {{{1., 0.}, {0., 1.}}, {
                  0.06180339887498945, -0.19021130325903074`}}, {{1, 0}, {0, 
                 1}}, {{1, 0}, {0, 1}}], 
                TrackedSymbols :> {DynamicChart`click$6999$8358}]],
              "DelayedClickEffect"], 
             TagBox[GeometricTransformationBox[
               TagBox[
                TagBox[
                 TooltipBox[
                  TagBox[{{}, {}},
                   StatusArea[#, 1]& ,
                   TagBoxNote->"1"],
                  StyleBox["1", {}, StripOnInput -> False]],
                 Annotation[#, 
                  Style[1, {}], "Tooltip"]& ],
                
                EventHandlerTag[{
                 "MouseClicked" :> FEPrivate`Set[DynamicChart`click$7005$8358, 
                    FEPrivate`Not[DynamicChart`click$7005$8358]], 
                  PassEventsDown -> True, Method -> "Preemptive", 
                  PassEventsUp -> True}]], Dynamic[
               FEPrivate`If[
                DynamicChart`click$7005$8358, {{{1., 0.}, {0., 
                  1.}}, {-0.16180339887498948`, -0.11755705045849466`}}, {{1, 
                 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                TrackedSymbols :> {DynamicChart`click$7005$8358}]],
              "DelayedClickEffect"]}, {}}, {}}, {}, {}},
         DynamicModuleValues:>{}], {{}, {}}, {{{}, {}, {}, {}}, {}}},
       ContentSelectable->False,
       DisplayFunction->Identity,
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->{{0., 0.}, {0., 0.}},
       PlotRange->{{-1., 1.}, {-1., 1.}},
       PlotRangePadding->Scaled[0.09166666666666669]], {1365., -975.}, 
      ImageScaled[{0.5, 0.5}], {360., 360.},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
     InsetBox[
      GraphicsBox[{{}, {}, 
        DynamicModuleBox[{DynamicChart`click$7089$8359 = False, 
         DynamicChart`click$7095$8359 = False, DynamicChart`click$7101$8359 = 
         False, DynamicChart`click$7107$8359 = False, 
         DynamicChart`click$7113$8359 = False}, {
          {RGBColor[0.5, 0.5, 1.], EdgeForm[{GrayLevel[0], Opacity[
           0.5]}], {{{}, {
              {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{GrayLevel[
               0], Opacity[0.5]}], 
               TagBox[GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {1.8849555921538759`, 
                    3.141592653589793}]},
                    
                    ImageSizeCache->{{9.588205718813434, 
                    56.863356781186525`}, {-100.4797002339663, \
-55.44914321881343}}],
                    "DelayedMouseEffectStyle"],
                    StatusArea[#, 1]& ,
                    TagBoxNote->"1"],
                    StyleBox["1", {}, StripOnInput -> False]],
                   Annotation[#, 
                    Style[1, {}], "Tooltip"]& ],
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$7089$8359, 
                    FEPrivate`Not[DynamicChart`click$7089$8359]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                 FEPrivate`If[
                  DynamicChart`click$7089$8359, {{{1., 0.}, {0., 
                    1.}}, {-0.16180339887498948`, 0.11755705045849466`}}, {{1,
                    0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$7089$8359}]],
                "DelayedClickEffect"]}, 
              {RGBColor[1., 0.544, 0.2], EdgeForm[{GrayLevel[0], Opacity[
               0.5]}], 
               TagBox[GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {0.6283185307179586, 
                    1.8849555921538759`}]},
                    
                    ImageSizeCache->{{41.27733415334611, 
                    93.96563459665381}, {-102.7242942811865, \
-55.44914321881342}}],
                    "DelayedMouseEffectStyle"],
                    StatusArea[#, 1]& ,
                    TagBoxNote->"1"],
                    StyleBox["1", {}, StripOnInput -> False]],
                   Annotation[#, 
                    Style[1, {}], "Tooltip"]& ],
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$7095$8359, 
                    FEPrivate`Not[DynamicChart`click$7095$8359]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                 FEPrivate`If[
                  DynamicChart`click$7095$8359, {{{1., 0.}, {0., 1.}}, {
                    0.06180339887498949, 0.1902113032590307}}, {{1, 0}, {0, 
                   1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$7095$8359}]],
                "DelayedClickEffect"]}, 
              {RGBColor[0.784, 0.47519999999999996`, 0.2], EdgeForm[{
               GrayLevel[0], Opacity[0.5]}], 
               TagBox[GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-0.6283185307179591, 
                    0.6283185307179586}]},
                    
                    ImageSizeCache->{{55.44914321881342, 
                    102.7242942811865}, {-83.81973949999335, \
-28.49276050000657}}],
                    "DelayedMouseEffectStyle"],
                    StatusArea[#, 1]& ,
                    TagBoxNote->"1"],
                    StyleBox["1", {}, StripOnInput -> False]],
                   Annotation[#, 
                    Style[1, {}], "Tooltip"]& ],
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$7101$8359, 
                    FEPrivate`Not[DynamicChart`click$7101$8359]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                 FEPrivate`If[
                  DynamicChart`click$7101$8359, {{{1., 0.}, {0., 1.}}, {
                    0.2, -4.4408920985006264`*^-17}}, {{1, 0}, {0, 1}}, {{1, 
                   0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$7101$8359}]],
                "DelayedClickEffect"]}, 
              {RGBColor[0.6754608, 0.4848, 0.7224792], EdgeForm[{GrayLevel[0],
                Opacity[0.5]}], 
               TagBox[GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-1.8849555921538759`, -0.6283185307179591}]},
                    
                    ImageSizeCache->{{41.27733415334611, 
                    93.96563459665381}, {-56.86335678118653, \
-9.588205718813441}}],
                    "DelayedMouseEffectStyle"],
                    StatusArea[#, 1]& ,
                    TagBoxNote->"1"],
                    StyleBox["1", {}, StripOnInput -> False]],
                   Annotation[#, 
                    Style[1, {}], "Tooltip"]& ],
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$7107$8359, 
                    FEPrivate`Not[DynamicChart`click$7107$8359]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                 FEPrivate`If[
                  DynamicChart`click$7107$8359, {{{1., 0.}, {0., 1.}}, {
                    0.06180339887498945, -0.19021130325903074`}}, {{1, 0}, {0,
                    1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$7107$8359}]],
                "DelayedClickEffect"]}, 
              {RGBColor[0.4992, 0.5552, 0.8309304], EdgeForm[{GrayLevel[0], 
               Opacity[0.5]}], 
               TagBox[GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -1.8849555921538759`}]},
                    
                    ImageSizeCache->{{9.58820571881344, 
                    56.863356781186525`}, {-56.863356781186525`, \
-11.832799766033675`}}],
                    "DelayedMouseEffectStyle"],
                    StatusArea[#, 1]& ,
                    TagBoxNote->"1"],
                    StyleBox["1", {}, StripOnInput -> False]],
                   Annotation[#, 
                    Style[1, {}], "Tooltip"]& ],
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$7113$8359, 
                    FEPrivate`Not[DynamicChart`click$7113$8359]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                 FEPrivate`If[
                  DynamicChart`click$7113$8359, {{{1., 0.}, {0., 
                    1.}}, {-0.16180339887498948`, -0.11755705045849466`}}, {{
                   1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$7113$8359}]],
                "DelayedClickEffect"]}}}, {}}, {}}, {{{
             TagBox[GeometricTransformationBox[
               TagBox[
                TagBox[
                 TooltipBox[
                  TagBox[{{}, {}},
                   StatusArea[#, 1]& ,
                   TagBoxNote->"1"],
                  StyleBox["1", {}, StripOnInput -> False]],
                 Annotation[#, 
                  Style[1, {}], "Tooltip"]& ],
                
                EventHandlerTag[{
                 "MouseClicked" :> FEPrivate`Set[DynamicChart`click$7089$8359, 
                    FEPrivate`Not[DynamicChart`click$7089$8359]], 
                  PassEventsDown -> True, Method -> "Preemptive", 
                  PassEventsUp -> True}]], Dynamic[
               FEPrivate`If[
                DynamicChart`click$7089$8359, {{{1., 0.}, {0., 
                  1.}}, {-0.16180339887498948`, 0.11755705045849466`}}, {{1, 
                 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                TrackedSymbols :> {DynamicChart`click$7089$8359}]],
              "DelayedClickEffect"], 
             TagBox[GeometricTransformationBox[
               TagBox[
                TagBox[
                 TooltipBox[
                  TagBox[{{}, {}},
                   StatusArea[#, 1]& ,
                   TagBoxNote->"1"],
                  StyleBox["1", {}, StripOnInput -> False]],
                 Annotation[#, 
                  Style[1, {}], "Tooltip"]& ],
                
                EventHandlerTag[{
                 "MouseClicked" :> FEPrivate`Set[DynamicChart`click$7095$8359, 
                    FEPrivate`Not[DynamicChart`click$7095$8359]], 
                  PassEventsDown -> True, Method -> "Preemptive", 
                  PassEventsUp -> True}]], Dynamic[
               FEPrivate`If[
                DynamicChart`click$7095$8359, {{{1., 0.}, {0., 1.}}, {
                  0.06180339887498949, 0.1902113032590307}}, {{1, 0}, {0, 
                 1}}, {{1, 0}, {0, 1}}], 
                TrackedSymbols :> {DynamicChart`click$7095$8359}]],
              "DelayedClickEffect"], 
             TagBox[GeometricTransformationBox[
               TagBox[
                TagBox[
                 TooltipBox[
                  TagBox[{{}, {}},
                   StatusArea[#, 1]& ,
                   TagBoxNote->"1"],
                  StyleBox["1", {}, StripOnInput -> False]],
                 Annotation[#, 
                  Style[1, {}], "Tooltip"]& ],
                
                EventHandlerTag[{
                 "MouseClicked" :> FEPrivate`Set[DynamicChart`click$7101$8359, 
                    FEPrivate`Not[DynamicChart`click$7101$8359]], 
                  PassEventsDown -> True, Method -> "Preemptive", 
                  PassEventsUp -> True}]], Dynamic[
               FEPrivate`If[
                DynamicChart`click$7101$8359, {{{1., 0.}, {0., 1.}}, {
                  0.2, -4.4408920985006264`*^-17}}, {{1, 0}, {0, 1}}, {{1, 
                 0}, {0, 1}}], 
                TrackedSymbols :> {DynamicChart`click$7101$8359}]],
              "DelayedClickEffect"], 
             TagBox[GeometricTransformationBox[
               TagBox[
                TagBox[
                 TooltipBox[
                  TagBox[{{}, {}},
                   StatusArea[#, 1]& ,
                   TagBoxNote->"1"],
                  StyleBox["1", {}, StripOnInput -> False]],
                 Annotation[#, 
                  Style[1, {}], "Tooltip"]& ],
                
                EventHandlerTag[{
                 "MouseClicked" :> FEPrivate`Set[DynamicChart`click$7107$8359, 
                    FEPrivate`Not[DynamicChart`click$7107$8359]], 
                  PassEventsDown -> True, Method -> "Preemptive", 
                  PassEventsUp -> True}]], Dynamic[
               FEPrivate`If[
                DynamicChart`click$7107$8359, {{{1., 0.}, {0., 1.}}, {
                  0.06180339887498945, -0.19021130325903074`}}, {{1, 0}, {0, 
                 1}}, {{1, 0}, {0, 1}}], 
                TrackedSymbols :> {DynamicChart`click$7107$8359}]],
              "DelayedClickEffect"], 
             TagBox[GeometricTransformationBox[
               TagBox[
                TagBox[
                 TooltipBox[
                  TagBox[{{}, {}},
                   StatusArea[#, 1]& ,
                   TagBoxNote->"1"],
                  StyleBox["1", {}, StripOnInput -> False]],
                 Annotation[#, 
                  Style[1, {}], "Tooltip"]& ],
                
                EventHandlerTag[{
                 "MouseClicked" :> FEPrivate`Set[DynamicChart`click$7113$8359, 
                    FEPrivate`Not[DynamicChart`click$7113$8359]], 
                  PassEventsDown -> True, Method -> "Preemptive", 
                  PassEventsUp -> True}]], Dynamic[
               FEPrivate`If[
                DynamicChart`click$7113$8359, {{{1., 0.}, {0., 
                  1.}}, {-0.16180339887498948`, -0.11755705045849466`}}, {{1, 
                 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                TrackedSymbols :> {DynamicChart`click$7113$8359}]],
              "DelayedClickEffect"]}, {}}, {}}, {}, {}},
         DynamicModuleValues:>{}], {{}, {}}, {{{}, {}, {}, {}}, {}}},
       ContentSelectable->False,
       DisplayFunction->Identity,
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->{{0., 0.}, {0., 0.}},
       PlotRange->{{-1., 1.}, {-1., 1.}},
       PlotRangePadding->Scaled[0.09166666666666669]], {1755., -975.}, 
      ImageScaled[{0.5, 0.5}], {360., 360.},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}]}, {
     InsetBox[
      GraphicsBox[{{}, {}, 
        DynamicModuleBox[{DynamicChart`click$7197$8360 = False, 
         DynamicChart`click$7203$8360 = False, DynamicChart`click$7209$8360 = 
         False}, {
          {RGBColor[0.5, 0.5, 1.], EdgeForm[{GrayLevel[0], Opacity[
           0.5]}], {{{}, {
              {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{GrayLevel[
               0], Opacity[0.5]}], 
               TagBox[GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {0.6283185307179586, 
                    3.141592653589793}]},
                    
                    ImageSizeCache->{{9.588205718813455, 
                    93.96563459665383}, {-102.72429428118647`, \
-55.44914321881338}}],
                    "DelayedMouseEffectStyle"],
                    StatusArea[#, 2]& ,
                    TagBoxNote->"2"],
                    StyleBox["2", {}, StripOnInput -> False]],
                   Annotation[#, 
                    Style[2, {}], "Tooltip"]& ],
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$7197$8360, 
                    FEPrivate`Not[DynamicChart`click$7197$8360]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                 FEPrivate`If[
                  DynamicChart`click$7197$8360, {{{1., 0.}, {0., 
                    1.}}, {-0.06180339887498947, 0.19021130325903074`}}, {{1, 
                   0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$7197$8360}]],
                "DelayedClickEffect"]}, 
              {RGBColor[0.784, 0.47519999999999996`, 0.2], EdgeForm[{
               GrayLevel[0], Opacity[0.5]}], 
               TagBox[GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-1.8849555921538759`, 
                    0.6283185307179586}]},
                    
                    ImageSizeCache->{{41.27733415334613, 
                    102.72429428118653`}, {-83.81973949999332, \
-9.588205718813398}}],
                    "DelayedMouseEffectStyle"],
                    StatusArea[#, 2]& ,
                    TagBoxNote->"2"],
                    StyleBox["2", {}, StripOnInput -> False]],
                   Annotation[#, 
                    Style[2, {}], "Tooltip"]& ],
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$7203$8360, 
                    FEPrivate`Not[DynamicChart`click$7203$8360]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                 FEPrivate`If[
                  DynamicChart`click$7203$8360, {{{1., 0.}, {0., 1.}}, {
                    0.1618033988749895, -0.11755705045849463`}}, {{1, 0}, {0, 
                   1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$7203$8360}]],
                "DelayedClickEffect"]}, 
              {RGBColor[0.4992, 0.5552, 0.8309304], EdgeForm[{GrayLevel[0], 
               Opacity[0.5]}], 
               TagBox[GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -1.8849555921538759`}]},
                    
                    ImageSizeCache->{{9.58820571881346, 
                    56.863356781186546`}, {-56.863356781186475`, \
-11.832799766033625`}}],
                    "DelayedMouseEffectStyle"],
                    StatusArea[#, 1]& ,
                    TagBoxNote->"1"],
                    StyleBox["1", {}, StripOnInput -> False]],
                   Annotation[#, 
                    Style[1, {}], "Tooltip"]& ],
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$7209$8360, 
                    FEPrivate`Not[DynamicChart`click$7209$8360]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                 FEPrivate`If[
                  DynamicChart`click$7209$8360, {{{1., 0.}, {0., 
                    1.}}, {-0.16180339887498948`, -0.11755705045849466`}}, {{
                   1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$7209$8360}]],
                "DelayedClickEffect"]}}}, {}}, {}}, {{{
             TagBox[GeometricTransformationBox[
               TagBox[
                TagBox[
                 TooltipBox[
                  TagBox[{{}, {}},
                   StatusArea[#, 2]& ,
                   TagBoxNote->"2"],
                  StyleBox["2", {}, StripOnInput -> False]],
                 Annotation[#, 
                  Style[2, {}], "Tooltip"]& ],
                
                EventHandlerTag[{
                 "MouseClicked" :> FEPrivate`Set[DynamicChart`click$7197$8360, 
                    FEPrivate`Not[DynamicChart`click$7197$8360]], 
                  PassEventsDown -> True, Method -> "Preemptive", 
                  PassEventsUp -> True}]], Dynamic[
               FEPrivate`If[
                DynamicChart`click$7197$8360, {{{1., 0.}, {0., 
                  1.}}, {-0.06180339887498947, 0.19021130325903074`}}, {{1, 
                 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                TrackedSymbols :> {DynamicChart`click$7197$8360}]],
              "DelayedClickEffect"], 
             TagBox[GeometricTransformationBox[
               TagBox[
                TagBox[
                 TooltipBox[
                  TagBox[{{}, {}},
                   StatusArea[#, 2]& ,
                   TagBoxNote->"2"],
                  StyleBox["2", {}, StripOnInput -> False]],
                 Annotation[#, 
                  Style[2, {}], "Tooltip"]& ],
                
                EventHandlerTag[{
                 "MouseClicked" :> FEPrivate`Set[DynamicChart`click$7203$8360, 
                    FEPrivate`Not[DynamicChart`click$7203$8360]], 
                  PassEventsDown -> True, Method -> "Preemptive", 
                  PassEventsUp -> True}]], Dynamic[
               FEPrivate`If[
                DynamicChart`click$7203$8360, {{{1., 0.}, {0., 1.}}, {
                  0.1618033988749895, -0.11755705045849463`}}, {{1, 0}, {0, 
                 1}}, {{1, 0}, {0, 1}}], 
                TrackedSymbols :> {DynamicChart`click$7203$8360}]],
              "DelayedClickEffect"], 
             TagBox[GeometricTransformationBox[
               TagBox[
                TagBox[
                 TooltipBox[
                  TagBox[{{}, {}},
                   StatusArea[#, 1]& ,
                   TagBoxNote->"1"],
                  StyleBox["1", {}, StripOnInput -> False]],
                 Annotation[#, 
                  Style[1, {}], "Tooltip"]& ],
                
                EventHandlerTag[{
                 "MouseClicked" :> FEPrivate`Set[DynamicChart`click$7209$8360, 
                    FEPrivate`Not[DynamicChart`click$7209$8360]], 
                  PassEventsDown -> True, Method -> "Preemptive", 
                  PassEventsUp -> True}]], Dynamic[
               FEPrivate`If[
                DynamicChart`click$7209$8360, {{{1., 0.}, {0., 
                  1.}}, {-0.16180339887498948`, -0.11755705045849466`}}, {{1, 
                 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                TrackedSymbols :> {DynamicChart`click$7209$8360}]],
              "DelayedClickEffect"]}, {}}, {}}, {}, {}},
         DynamicModuleValues:>{}], {{}, {}}, {{{}, {}, {}, {}}, {}}},
       ContentSelectable->False,
       DisplayFunction->Identity,
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->{{0., 0.}, {0., 0.}},
       PlotRange->{{-1., 1.}, {-1., 1.}},
       PlotRangePadding->Scaled[0.09166666666666669]], {195., -1365.}, 
      ImageScaled[{0.5, 0.5}], {360., 360.},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
     InsetBox[
      GraphicsBox[{{}, {}, 
        DynamicModuleBox[{DynamicChart`click$7266$8361 = False, 
         DynamicChart`click$7272$8361 = False, DynamicChart`click$7278$8361 = 
         False, DynamicChart`click$7284$8361 = False, 
         DynamicChart`click$7290$8361 = False}, {
          {RGBColor[0.5, 0.5, 1.], EdgeForm[{GrayLevel[0], Opacity[
           0.5]}], {{{}, {
              {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{GrayLevel[
               0], Opacity[0.5]}], 
               TagBox[GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {1.0471975511965979`, 
                    3.141592653589793}]},
                    
                    ImageSizeCache->{{9.58820571881342, 
                    79.79382553118649}, {-102.72429428118647`, \
-55.44914321881338}}],
                    "DelayedMouseEffectStyle"],
                    StatusArea[#, 2]& ,
                    TagBoxNote->"2"],
                    StyleBox["2", {}, StripOnInput -> False]],
                   Annotation[#, 
                    Style[2, {}], "Tooltip"]& ],
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$7266$8361, 
                    FEPrivate`Not[DynamicChart`click$7266$8361]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                 FEPrivate`If[
                  DynamicChart`click$7266$8361, {{{1., 0.}, {0., 
                    1.}}, {-0.10000000000000003`, 0.17320508075688773`}}, {{1,
                    0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$7266$8361}]],
                "DelayedClickEffect"]}, 
              {RGBColor[1., 0.544, 0.2], EdgeForm[{GrayLevel[0], Opacity[
               0.5]}], 
               TagBox[GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    DiskBox[{0, 0}, 1., {0., 1.0471975511965979`}]},
                    
                    ImageSizeCache->{{55.449143218813404`, 
                    102.7242942811865}, {-96.58009369755686, \
-55.44914321881337}}],
                    "DelayedMouseEffectStyle"],
                    StatusArea[#, 1]& ,
                    TagBoxNote->"1"],
                    StyleBox["1", {}, StripOnInput -> False]],
                   Annotation[#, 
                    Style[1, {}], "Tooltip"]& ],
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$7272$8361, 
                    FEPrivate`Not[DynamicChart`click$7272$8361]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                 FEPrivate`If[
                  DynamicChart`click$7272$8361, {{{1., 0.}, {0., 1.}}, {
                    0.17320508075688773`, 0.1}}, {{1, 0}, {0, 1}}, {{1, 0}, {
                   0, 1}}], TrackedSymbols :> {DynamicChart`click$7272$8361}]],
                "DelayedClickEffect"]}, 
              {RGBColor[0.784, 0.47519999999999996`, 0.2], EdgeForm[{
               GrayLevel[0], Opacity[0.5]}], 
               TagBox[GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    DiskBox[{0, 0}, 1., {-1.0471975511965974`, 0.}]},
                    
                    ImageSizeCache->{{55.449143218813404`, 
                    102.7242942811865}, {-56.86335678118648, \
-15.732406302442989`}}],
                    "DelayedMouseEffectStyle"],
                    StatusArea[#, 1]& ,
                    TagBoxNote->"1"],
                    StyleBox["1", {}, StripOnInput -> False]],
                   Annotation[#, 
                    Style[1, {}], "Tooltip"]& ],
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$7278$8361, 
                    FEPrivate`Not[DynamicChart`click$7278$8361]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                 FEPrivate`If[
                  DynamicChart`click$7278$8361, {{{1., 0.}, {0., 1.}}, {
                    0.17320508075688776`, -0.09999999999999998}}, {{1, 0}, {0,
                    1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$7278$8361}]],
                "DelayedClickEffect"]}, 
              {RGBColor[0.6754608, 0.4848, 0.7224792], EdgeForm[{GrayLevel[0],
                Opacity[0.5]}], 
               TagBox[GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-2.094395102393195, -1.0471975511965974`}]},
                    
                    ImageSizeCache->{{32.518674468813444`, 
                    79.79382553118651}, {-56.86335678118648, \
-9.588205718813391}}],
                    "DelayedMouseEffectStyle"],
                    StatusArea[#, 1]& ,
                    TagBoxNote->"1"],
                    StyleBox["1", {}, StripOnInput -> False]],
                   Annotation[#, 
                    Style[1, {}], "Tooltip"]& ],
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$7284$8361, 
                    FEPrivate`Not[DynamicChart`click$7284$8361]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                 FEPrivate`If[
                  DynamicChart`click$7284$8361, {{{1., 0.}, {0., 1.}}, {
                    1.0106430996148606`*^-16, -0.2}}, {{1, 0}, {0, 1}}, {{1, 
                   0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$7284$8361}]],
                "DelayedClickEffect"]}, 
              {RGBColor[0.4992, 0.5552, 0.8309304], EdgeForm[{GrayLevel[0], 
               Opacity[0.5]}], 
               TagBox[GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -2.094395102393195}]},
                    
                    ImageSizeCache->{{9.588205718813425, 
                    56.86335678118651}, {-56.863356781186475`, \
-15.732406302442977`}}],
                    "DelayedMouseEffectStyle"],
                    StatusArea[#, 1]& ,
                    TagBoxNote->"1"],
                    StyleBox["1", {}, StripOnInput -> False]],
                   Annotation[#, 
                    Style[1, {}], "Tooltip"]& ],
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$7290$8361, 
                    FEPrivate`Not[DynamicChart`click$7290$8361]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                 FEPrivate`If[
                  DynamicChart`click$7290$8361, {{{1., 0.}, {0., 
                    1.}}, {-0.1732050807568877, -0.10000000000000007`}}, {{1, 
                   0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$7290$8361}]],
                "DelayedClickEffect"]}}}, {}}, {}}, {{{
             TagBox[GeometricTransformationBox[
               TagBox[
                TagBox[
                 TooltipBox[
                  TagBox[{{}, {}},
                   StatusArea[#, 2]& ,
                   TagBoxNote->"2"],
                  StyleBox["2", {}, StripOnInput -> False]],
                 Annotation[#, 
                  Style[2, {}], "Tooltip"]& ],
                
                EventHandlerTag[{
                 "MouseClicked" :> FEPrivate`Set[DynamicChart`click$7266$8361, 
                    FEPrivate`Not[DynamicChart`click$7266$8361]], 
                  PassEventsDown -> True, Method -> "Preemptive", 
                  PassEventsUp -> True}]], Dynamic[
               FEPrivate`If[
                DynamicChart`click$7266$8361, {{{1., 0.}, {0., 
                  1.}}, {-0.10000000000000003`, 0.17320508075688773`}}, {{1, 
                 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                TrackedSymbols :> {DynamicChart`click$7266$8361}]],
              "DelayedClickEffect"], 
             TagBox[GeometricTransformationBox[
               TagBox[
                TagBox[
                 TooltipBox[
                  TagBox[{{}, {}},
                   StatusArea[#, 1]& ,
                   TagBoxNote->"1"],
                  StyleBox["1", {}, StripOnInput -> False]],
                 Annotation[#, 
                  Style[1, {}], "Tooltip"]& ],
                
                EventHandlerTag[{
                 "MouseClicked" :> FEPrivate`Set[DynamicChart`click$7272$8361, 
                    FEPrivate`Not[DynamicChart`click$7272$8361]], 
                  PassEventsDown -> True, Method -> "Preemptive", 
                  PassEventsUp -> True}]], Dynamic[
               FEPrivate`If[
                DynamicChart`click$7272$8361, {{{1., 0.}, {0., 1.}}, {
                  0.17320508075688773`, 0.1}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 
                 1}}], TrackedSymbols :> {DynamicChart`click$7272$8361}]],
              "DelayedClickEffect"], 
             TagBox[GeometricTransformationBox[
               TagBox[
                TagBox[
                 TooltipBox[
                  TagBox[{{}, {}},
                   StatusArea[#, 1]& ,
                   TagBoxNote->"1"],
                  StyleBox["1", {}, StripOnInput -> False]],
                 Annotation[#, 
                  Style[1, {}], "Tooltip"]& ],
                
                EventHandlerTag[{
                 "MouseClicked" :> FEPrivate`Set[DynamicChart`click$7278$8361, 
                    FEPrivate`Not[DynamicChart`click$7278$8361]], 
                  PassEventsDown -> True, Method -> "Preemptive", 
                  PassEventsUp -> True}]], Dynamic[
               FEPrivate`If[
                DynamicChart`click$7278$8361, {{{1., 0.}, {0., 1.}}, {
                  0.17320508075688776`, -0.09999999999999998}}, {{1, 0}, {0, 
                 1}}, {{1, 0}, {0, 1}}], 
                TrackedSymbols :> {DynamicChart`click$7278$8361}]],
              "DelayedClickEffect"], 
             TagBox[GeometricTransformationBox[
               TagBox[
                TagBox[
                 TooltipBox[
                  TagBox[{{}, {}},
                   StatusArea[#, 1]& ,
                   TagBoxNote->"1"],
                  StyleBox["1", {}, StripOnInput -> False]],
                 Annotation[#, 
                  Style[1, {}], "Tooltip"]& ],
                
                EventHandlerTag[{
                 "MouseClicked" :> FEPrivate`Set[DynamicChart`click$7284$8361, 
                    FEPrivate`Not[DynamicChart`click$7284$8361]], 
                  PassEventsDown -> True, Method -> "Preemptive", 
                  PassEventsUp -> True}]], Dynamic[
               FEPrivate`If[
                DynamicChart`click$7284$8361, {{{1., 0.}, {0., 1.}}, {
                  1.0106430996148606`*^-16, -0.2}}, {{1, 0}, {0, 1}}, {{1, 
                 0}, {0, 1}}], 
                TrackedSymbols :> {DynamicChart`click$7284$8361}]],
              "DelayedClickEffect"], 
             TagBox[GeometricTransformationBox[
               TagBox[
                TagBox[
                 TooltipBox[
                  TagBox[{{}, {}},
                   StatusArea[#, 1]& ,
                   TagBoxNote->"1"],
                  StyleBox["1", {}, StripOnInput -> False]],
                 Annotation[#, 
                  Style[1, {}], "Tooltip"]& ],
                
                EventHandlerTag[{
                 "MouseClicked" :> FEPrivate`Set[DynamicChart`click$7290$8361, 
                    FEPrivate`Not[DynamicChart`click$7290$8361]], 
                  PassEventsDown -> True, Method -> "Preemptive", 
                  PassEventsUp -> True}]], Dynamic[
               FEPrivate`If[
                DynamicChart`click$7290$8361, {{{1., 0.}, {0., 
                  1.}}, {-0.1732050807568877, -0.10000000000000007`}}, {{1, 
                 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                TrackedSymbols :> {DynamicChart`click$7290$8361}]],
              "DelayedClickEffect"]}, {}}, {}}, {}, {}},
         DynamicModuleValues:>{}], {{}, {}}, {{{}, {}, {}, {}}, {}}},
       ContentSelectable->False,
       DisplayFunction->Identity,
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->{{0., 0.}, {0., 0.}},
       PlotRange->{{-1., 1.}, {-1., 1.}},
       PlotRangePadding->Scaled[0.09166666666666669]], {585., -1365.}, 
      ImageScaled[{0.5, 0.5}], {360., 360.},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
     InsetBox[
      GraphicsBox[{{}, {}, 
        DynamicModuleBox[{DynamicChart`click$7374$8362 = False, 
         DynamicChart`click$7380$8362 = False, DynamicChart`click$7386$8362 = 
         False, DynamicChart`click$7392$8362 = False}, {
          {RGBColor[0.5, 0.5, 1.], EdgeForm[{GrayLevel[0], Opacity[
           0.5]}], {{{}, {
              {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{GrayLevel[
               0], Opacity[0.5]}], 
               TagBox[GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {1.0471975511965979`, 
                    3.141592653589793}]},
                    
                    ImageSizeCache->{{9.588205718813434, 
                    79.79382553118651}, {-102.72429428118647`, \
-55.44914321881338}}],
                    "DelayedMouseEffectStyle"],
                    StatusArea[#, 2]& ,
                    TagBoxNote->"2"],
                    StyleBox["2", {}, StripOnInput -> False]],
                   Annotation[#, 
                    Style[2, {}], "Tooltip"]& ],
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$7374$8362, 
                    FEPrivate`Not[DynamicChart`click$7374$8362]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                 FEPrivate`If[
                  DynamicChart`click$7374$8362, {{{1., 0.}, {0., 
                    1.}}, {-0.10000000000000003`, 0.17320508075688773`}}, {{1,
                    0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$7374$8362}]],
                "DelayedClickEffect"]}, 
              {RGBColor[0.928, 0.5210666666666667, 0.2], EdgeForm[{GrayLevel[
               0], Opacity[0.5]}], 
               TagBox[GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    DiskBox[{0, 0}, 1., {0., 1.0471975511965979`}]},
                    ImageSizeCache->{{55.44914321881342, 
                    102.7242942811865}, {-96.58009369755686, \
-55.44914321881337}}],
                    "DelayedMouseEffectStyle"],
                    StatusArea[#, 1]& ,
                    TagBoxNote->"1"],
                    StyleBox["1", {}, StripOnInput -> False]],
                   Annotation[#, 
                    Style[1, {}], "Tooltip"]& ],
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$7380$8362, 
                    FEPrivate`Not[DynamicChart`click$7380$8362]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                 FEPrivate`If[
                  DynamicChart`click$7380$8362, {{{1., 0.}, {0., 1.}}, {
                    0.17320508075688773`, 0.1}}, {{1, 0}, {0, 1}}, {{1, 0}, {
                   0, 1}}], TrackedSymbols :> {DynamicChart`click$7380$8362}]],
                "DelayedClickEffect"]}, 
              {RGBColor[0.7116405333333333, 0.4816, 0.5483194666666666], 
               EdgeForm[{GrayLevel[0], Opacity[0.5]}], 
               TagBox[GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    DiskBox[{0, 0}, 1., {-1.0471975511965974`, 0.}]},
                    
                    ImageSizeCache->{{55.44914321881342, 
                    102.7242942811865}, {-56.86335678118648, \
-15.732406302442989`}}],
                    "DelayedMouseEffectStyle"],
                    StatusArea[#, 1]& ,
                    TagBoxNote->"1"],
                    StyleBox["1", {}, StripOnInput -> False]],
                   Annotation[#, 
                    Style[1, {}], "Tooltip"]& ],
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$7386$8362, 
                    FEPrivate`Not[DynamicChart`click$7386$8362]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                 FEPrivate`If[
                  DynamicChart`click$7386$8362, {{{1., 0.}, {0., 1.}}, {
                    0.17320508075688776`, -0.09999999999999998}}, {{1, 0}, {0,
                    1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$7386$8362}]],
                "DelayedClickEffect"]}, 
              {RGBColor[0.4992, 0.5552, 0.8309304], EdgeForm[{GrayLevel[0], 
               Opacity[0.5]}], 
               TagBox[GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -1.0471975511965974`}]},
                    
                    ImageSizeCache->{{9.588205718813434, 
                    79.79382553118654}, {-56.86335678118648, \
-9.588205718813391}}],
                    "DelayedMouseEffectStyle"],
                    StatusArea[#, 2]& ,
                    TagBoxNote->"2"],
                    StyleBox["2", {}, StripOnInput -> False]],
                   Annotation[#, 
                    Style[2, {}], "Tooltip"]& ],
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$7392$8362, 
                    FEPrivate`Not[DynamicChart`click$7392$8362]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                 FEPrivate`If[
                  DynamicChart`click$7392$8362, {{{1., 0.}, {0., 
                    1.}}, {-0.09999999999999996, -0.17320508075688779`}}, {{1,
                    0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$7392$8362}]],
                "DelayedClickEffect"]}}}, {}}, {}}, {{{
             TagBox[GeometricTransformationBox[
               TagBox[
                TagBox[
                 TooltipBox[
                  TagBox[{{}, {}},
                   StatusArea[#, 2]& ,
                   TagBoxNote->"2"],
                  StyleBox["2", {}, StripOnInput -> False]],
                 Annotation[#, 
                  Style[2, {}], "Tooltip"]& ],
                
                EventHandlerTag[{
                 "MouseClicked" :> FEPrivate`Set[DynamicChart`click$7374$8362, 
                    FEPrivate`Not[DynamicChart`click$7374$8362]], 
                  PassEventsDown -> True, Method -> "Preemptive", 
                  PassEventsUp -> True}]], Dynamic[
               FEPrivate`If[
                DynamicChart`click$7374$8362, {{{1., 0.}, {0., 
                  1.}}, {-0.10000000000000003`, 0.17320508075688773`}}, {{1, 
                 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                TrackedSymbols :> {DynamicChart`click$7374$8362}]],
              "DelayedClickEffect"], 
             TagBox[GeometricTransformationBox[
               TagBox[
                TagBox[
                 TooltipBox[
                  TagBox[{{}, {}},
                   StatusArea[#, 1]& ,
                   TagBoxNote->"1"],
                  StyleBox["1", {}, StripOnInput -> False]],
                 Annotation[#, 
                  Style[1, {}], "Tooltip"]& ],
                
                EventHandlerTag[{
                 "MouseClicked" :> FEPrivate`Set[DynamicChart`click$7380$8362, 
                    FEPrivate`Not[DynamicChart`click$7380$8362]], 
                  PassEventsDown -> True, Method -> "Preemptive", 
                  PassEventsUp -> True}]], Dynamic[
               FEPrivate`If[
                DynamicChart`click$7380$8362, {{{1., 0.}, {0., 1.}}, {
                  0.17320508075688773`, 0.1}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 
                 1}}], TrackedSymbols :> {DynamicChart`click$7380$8362}]],
              "DelayedClickEffect"], 
             TagBox[GeometricTransformationBox[
               TagBox[
                TagBox[
                 TooltipBox[
                  TagBox[{{}, {}},
                   StatusArea[#, 1]& ,
                   TagBoxNote->"1"],
                  StyleBox["1", {}, StripOnInput -> False]],
                 Annotation[#, 
                  Style[1, {}], "Tooltip"]& ],
                
                EventHandlerTag[{
                 "MouseClicked" :> FEPrivate`Set[DynamicChart`click$7386$8362, 
                    FEPrivate`Not[DynamicChart`click$7386$8362]], 
                  PassEventsDown -> True, Method -> "Preemptive", 
                  PassEventsUp -> True}]], Dynamic[
               FEPrivate`If[
                DynamicChart`click$7386$8362, {{{1., 0.}, {0., 1.}}, {
                  0.17320508075688776`, -0.09999999999999998}}, {{1, 0}, {0, 
                 1}}, {{1, 0}, {0, 1}}], 
                TrackedSymbols :> {DynamicChart`click$7386$8362}]],
              "DelayedClickEffect"], 
             TagBox[GeometricTransformationBox[
               TagBox[
                TagBox[
                 TooltipBox[
                  TagBox[{{}, {}},
                   StatusArea[#, 2]& ,
                   TagBoxNote->"2"],
                  StyleBox["2", {}, StripOnInput -> False]],
                 Annotation[#, 
                  Style[2, {}], "Tooltip"]& ],
                
                EventHandlerTag[{
                 "MouseClicked" :> FEPrivate`Set[DynamicChart`click$7392$8362, 
                    FEPrivate`Not[DynamicChart`click$7392$8362]], 
                  PassEventsDown -> True, Method -> "Preemptive", 
                  PassEventsUp -> True}]], Dynamic[
               FEPrivate`If[
                DynamicChart`click$7392$8362, {{{1., 0.}, {0., 
                  1.}}, {-0.09999999999999996, -0.17320508075688779`}}, {{1, 
                 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                TrackedSymbols :> {DynamicChart`click$7392$8362}]],
              "DelayedClickEffect"]}, {}}, {}}, {}, {}},
         DynamicModuleValues:>{}], {{}, {}}, {{{}, {}, {}, {}}, {}}},
       ContentSelectable->False,
       DisplayFunction->Identity,
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->{{0., 0.}, {0., 0.}},
       PlotRange->{{-1., 1.}, {-1., 1.}},
       PlotRangePadding->Scaled[0.09166666666666669]], {975., -1365.}, 
      ImageScaled[{0.5, 0.5}], {360., 360.},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
     InsetBox[
      GraphicsBox[{{}, {}, 
        DynamicModuleBox[{DynamicChart`click$7461$8363 = False, 
         DynamicChart`click$7467$8363 = False, DynamicChart`click$7473$8363 = 
         False, DynamicChart`click$7479$8363 = False}, {
          {RGBColor[0.5, 0.5, 1.], EdgeForm[{GrayLevel[0], Opacity[
           0.5]}], {{{}, {
              {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{GrayLevel[
               0], Opacity[0.5]}], 
               TagBox[GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {2.0943951023931957`, 
                    3.141592653589793}]},
                    
                    ImageSizeCache->{{9.588205718813548, 
                    56.86335678118664}, {-96.58009369755686, \
-55.44914321881338}}],
                    "DelayedMouseEffectStyle"],
                    StatusArea[#, 1]& ,
                    TagBoxNote->"1"],
                    StyleBox["1", {}, StripOnInput -> False]],
                   Annotation[#, 
                    Style[1, {}], "Tooltip"]& ],
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$7461$8363, 
                    FEPrivate`Not[DynamicChart`click$7461$8363]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                 FEPrivate`If[
                  DynamicChart`click$7461$8363, {{{1., 0.}, {0., 
                    1.}}, {-0.17320508075688776`, 0.09999999999999999}}, {{1, 
                   0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$7461$8363}]],
                "DelayedClickEffect"]}, 
              {RGBColor[0.928, 0.5210666666666667, 0.2], EdgeForm[{GrayLevel[
               0], Opacity[0.5]}], 
               TagBox[GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    DiskBox[{0, 0}, 1., {0., 2.0943951023931957`}]},
                    
                    ImageSizeCache->{{32.518674468813536`, 
                    102.72429428118662`}, {-102.72429428118647`, \
-55.44914321881338}}],
                    "DelayedMouseEffectStyle"],
                    StatusArea[#, 2]& ,
                    TagBoxNote->"2"],
                    StyleBox["2", {}, StripOnInput -> False]],
                   Annotation[#, 
                    Style[2, {}], "Tooltip"]& ],
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$7467$8363, 
                    FEPrivate`Not[DynamicChart`click$7467$8363]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                 FEPrivate`If[
                  DynamicChart`click$7467$8363, {{{1., 0.}, {0., 1.}}, {
                    0.09999999999999999, 0.17320508075688776`}}, {{1, 0}, {0, 
                   1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$7467$8363}]],
                "DelayedClickEffect"]}, 
              {RGBColor[0.7116405333333333, 0.4816, 0.5483194666666666], 
               EdgeForm[{GrayLevel[0], Opacity[0.5]}], 
               TagBox[GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    DiskBox[{0, 0}, 1., {-1.0471975511965974`, 0.}]},
                    
                    ImageSizeCache->{{55.44914321881353, 
                    102.72429428118662`}, {-56.86335678118648, \
-15.732406302442989`}}],
                    "DelayedMouseEffectStyle"],
                    StatusArea[#, 1]& ,
                    TagBoxNote->"1"],
                    StyleBox["1", {}, StripOnInput -> False]],
                   Annotation[#, 
                    Style[1, {}], "Tooltip"]& ],
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$7473$8363, 
                    FEPrivate`Not[DynamicChart`click$7473$8363]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                 FEPrivate`If[
                  DynamicChart`click$7473$8363, {{{1., 0.}, {0., 1.}}, {
                    0.17320508075688776`, -0.09999999999999998}}, {{1, 0}, {0,
                    1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$7473$8363}]],
                "DelayedClickEffect"]}, 
              {RGBColor[0.4992, 0.5552, 0.8309304], EdgeForm[{GrayLevel[0], 
               Opacity[0.5]}], 
               TagBox[GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -1.0471975511965974`}]},
                    
                    ImageSizeCache->{{9.588205718813548, 
                    79.79382553118666}, {-56.86335678118648, \
-9.588205718813391}}],
                    "DelayedMouseEffectStyle"],
                    StatusArea[#, 2]& ,
                    TagBoxNote->"2"],
                    StyleBox["2", {}, StripOnInput -> False]],
                   Annotation[#, 
                    Style[2, {}], "Tooltip"]& ],
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$7479$8363, 
                    FEPrivate`Not[DynamicChart`click$7479$8363]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                 FEPrivate`If[
                  DynamicChart`click$7479$8363, {{{1., 0.}, {0., 
                    1.}}, {-0.09999999999999996, -0.17320508075688779`}}, {{1,
                    0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$7479$8363}]],
                "DelayedClickEffect"]}}}, {}}, {}}, {{{
             TagBox[GeometricTransformationBox[
               TagBox[
                TagBox[
                 TooltipBox[
                  TagBox[{{}, {}},
                   StatusArea[#, 1]& ,
                   TagBoxNote->"1"],
                  StyleBox["1", {}, StripOnInput -> False]],
                 Annotation[#, 
                  Style[1, {}], "Tooltip"]& ],
                
                EventHandlerTag[{
                 "MouseClicked" :> FEPrivate`Set[DynamicChart`click$7461$8363, 
                    FEPrivate`Not[DynamicChart`click$7461$8363]], 
                  PassEventsDown -> True, Method -> "Preemptive", 
                  PassEventsUp -> True}]], Dynamic[
               FEPrivate`If[
                DynamicChart`click$7461$8363, {{{1., 0.}, {0., 
                  1.}}, {-0.17320508075688776`, 0.09999999999999999}}, {{1, 
                 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                TrackedSymbols :> {DynamicChart`click$7461$8363}]],
              "DelayedClickEffect"], 
             TagBox[GeometricTransformationBox[
               TagBox[
                TagBox[
                 TooltipBox[
                  TagBox[{{}, {}},
                   StatusArea[#, 2]& ,
                   TagBoxNote->"2"],
                  StyleBox["2", {}, StripOnInput -> False]],
                 Annotation[#, 
                  Style[2, {}], "Tooltip"]& ],
                
                EventHandlerTag[{
                 "MouseClicked" :> FEPrivate`Set[DynamicChart`click$7467$8363, 
                    FEPrivate`Not[DynamicChart`click$7467$8363]], 
                  PassEventsDown -> True, Method -> "Preemptive", 
                  PassEventsUp -> True}]], Dynamic[
               FEPrivate`If[
                DynamicChart`click$7467$8363, {{{1., 0.}, {0., 1.}}, {
                  0.09999999999999999, 0.17320508075688776`}}, {{1, 0}, {0, 
                 1}}, {{1, 0}, {0, 1}}], 
                TrackedSymbols :> {DynamicChart`click$7467$8363}]],
              "DelayedClickEffect"], 
             TagBox[GeometricTransformationBox[
               TagBox[
                TagBox[
                 TooltipBox[
                  TagBox[{{}, {}},
                   StatusArea[#, 1]& ,
                   TagBoxNote->"1"],
                  StyleBox["1", {}, StripOnInput -> False]],
                 Annotation[#, 
                  Style[1, {}], "Tooltip"]& ],
                
                EventHandlerTag[{
                 "MouseClicked" :> FEPrivate`Set[DynamicChart`click$7473$8363, 
                    FEPrivate`Not[DynamicChart`click$7473$8363]], 
                  PassEventsDown -> True, Method -> "Preemptive", 
                  PassEventsUp -> True}]], Dynamic[
               FEPrivate`If[
                DynamicChart`click$7473$8363, {{{1., 0.}, {0., 1.}}, {
                  0.17320508075688776`, -0.09999999999999998}}, {{1, 0}, {0, 
                 1}}, {{1, 0}, {0, 1}}], 
                TrackedSymbols :> {DynamicChart`click$7473$8363}]],
              "DelayedClickEffect"], 
             TagBox[GeometricTransformationBox[
               TagBox[
                TagBox[
                 TooltipBox[
                  TagBox[{{}, {}},
                   StatusArea[#, 2]& ,
                   TagBoxNote->"2"],
                  StyleBox["2", {}, StripOnInput -> False]],
                 Annotation[#, 
                  Style[2, {}], "Tooltip"]& ],
                
                EventHandlerTag[{
                 "MouseClicked" :> FEPrivate`Set[DynamicChart`click$7479$8363, 
                    FEPrivate`Not[DynamicChart`click$7479$8363]], 
                  PassEventsDown -> True, Method -> "Preemptive", 
                  PassEventsUp -> True}]], Dynamic[
               FEPrivate`If[
                DynamicChart`click$7479$8363, {{{1., 0.}, {0., 
                  1.}}, {-0.09999999999999996, -0.17320508075688779`}}, {{1, 
                 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                TrackedSymbols :> {DynamicChart`click$7479$8363}]],
              "DelayedClickEffect"]}, {}}, {}}, {}, {}},
         DynamicModuleValues:>{}], {{}, {}}, {{{}, {}, {}, {}}, {}}},
       ContentSelectable->False,
       DisplayFunction->Identity,
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->{{0., 0.}, {0., 0.}},
       PlotRange->{{-1., 1.}, {-1., 1.}},
       PlotRangePadding->Scaled[0.09166666666666669]], {1365., -1365.}, 
      ImageScaled[{0.5, 0.5}], {360., 360.},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
     InsetBox[
      GraphicsBox[{{}, {}, 
        DynamicModuleBox[{DynamicChart`click$7548$8364 = False, 
         DynamicChart`click$7554$8364 = False, DynamicChart`click$7560$8364 = 
         False, DynamicChart`click$7566$8364 = False, 
         DynamicChart`click$7572$8364 = False, DynamicChart`click$7578$8364 = 
         False, DynamicChart`click$7584$8364 = False}, {
          {RGBColor[0.5, 0.5, 1.], EdgeForm[{GrayLevel[0], Opacity[
           0.5]}], {{{}, {
              {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{GrayLevel[
               0], Opacity[0.5]}], 
               TagBox[GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {2.243994752564138, 
                    3.141592653589793}]},
                    
                    ImageSizeCache->{{9.588205718813434, 
                    56.863356781186525`}, {-92.71888153418513, \
-55.44914321881338}}],
                    "DelayedMouseEffectStyle"],
                    StatusArea[#, 1]& ,
                    TagBoxNote->"1"],
                    StyleBox["1", {}, StripOnInput -> False]],
                   Annotation[#, 
                    Style[1, {}], "Tooltip"]& ],
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$7548$8364, 
                    FEPrivate`Not[DynamicChart`click$7548$8364]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                 FEPrivate`If[
                  DynamicChart`click$7548$8364, {{{1., 0.}, {0., 
                    1.}}, {-0.18019377358048383`, 0.08677674782351165}}, {{1, 
                   0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$7548$8364}]],
                "DelayedClickEffect"]}, 
              {RGBColor[0.994288, 0.6103824, 0.24208906666666669`], EdgeForm[{
               GrayLevel[0], Opacity[0.5]}], 
               TagBox[GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {1.3463968515384828`, 
                    2.243994752564138}]},
                    
                    ImageSizeCache->{{26.855316383882666`, 
                    67.06837542579868}, {-102.72429428118647`, \
-55.44914321881338}}],
                    "DelayedMouseEffectStyle"],
                    StatusArea[#, 1]& ,
                    TagBoxNote->"1"],
                    StyleBox["1", {}, StripOnInput -> False]],
                   Annotation[#, 
                    Style[1, {}], "Tooltip"]& ],
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$7554$8364, 
                    FEPrivate`Not[DynamicChart`click$7554$8364]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                 FEPrivate`If[
                  DynamicChart`click$7554$8364, {{{1., 0.}, {0., 
                    1.}}, {-0.04450418679126287, 0.19498558243636474`}}, {{1, 
                   0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$7554$8364}]],
                "DelayedClickEffect"]}, 
              {RGBColor[0.928, 0.5210666666666667, 0.2], EdgeForm[{GrayLevel[
               0], Opacity[0.5]}], 
               TagBox[GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {0.4487989505128276, 
                    1.3463968515384828`}]},
                    
                    ImageSizeCache->{{55.44914321881342, 
                    98.18263372150511}, {-101.57446482876256`, \
-55.44914321881338}}],
                    "DelayedMouseEffectStyle"],
                    StatusArea[#, 1]& ,
                    TagBoxNote->"1"],
                    StyleBox["1", {}, StripOnInput -> False]],
                   Annotation[#, 
                    Style[1, {}], "Tooltip"]& ],
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$7560$8364, 
                    FEPrivate`Not[DynamicChart`click$7560$8364]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                 FEPrivate`If[
                  DynamicChart`click$7560$8364, {{{1., 0.}, {0., 1.}}, {
                    0.12469796037174673`, 0.15636629649360595`}}, {{1, 0}, {0,
                    1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$7560$8364}]],
                "DelayedClickEffect"]}, 
              {RGBColor[0.784, 0.47519999999999996`, 0.2], EdgeForm[{
               GrayLevel[0], Opacity[0.5]}], 
               TagBox[GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-0.4487989505128276, 
                    0.4487989505128276}]},
                    
                    ImageSizeCache->{{55.44914321881342, 
                    102.7242942811865}, {-76.7616718231231, \
-35.55082817687674}}],
                    "DelayedMouseEffectStyle"],
                    StatusArea[#, 1]& ,
                    TagBoxNote->"1"],
                    StyleBox["1", {}, StripOnInput -> False]],
                   Annotation[#, 
                    Style[1, {}], "Tooltip"]& ],
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$7566$8364, 
                    FEPrivate`Not[DynamicChart`click$7566$8364]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                 FEPrivate`If[
                  DynamicChart`click$7566$8364, {{{1., 0.}, {0., 1.}}, {0.2, 
                    0.}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$7566$8364}]],
                "DelayedClickEffect"]}, 
              {RGBColor[0.7116405333333333, 0.4816, 0.5483194666666666], 
               EdgeForm[{GrayLevel[0], Opacity[0.5]}], 
               TagBox[GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-1.3463968515384819`, -0.4487989505128276}]},
                    
                    ImageSizeCache->{{55.44914321881342, 
                    98.18263372150511}, {-56.86335678118648, \
-10.7380351712373}}],
                    "DelayedMouseEffectStyle"],
                    StatusArea[#, 1]& ,
                    TagBoxNote->"1"],
                    StyleBox["1", {}, StripOnInput -> False]],
                   Annotation[#, 
                    Style[1, {}], "Tooltip"]& ],
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$7572$8364, 
                    FEPrivate`Not[DynamicChart`click$7572$8364]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                 FEPrivate`If[
                  DynamicChart`click$7572$8364, {{{1., 0.}, {0., 1.}}, {
                    0.1246979603717468, -0.1563662964936059}}, {{1, 0}, {0, 
                   1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$7572$8364}]],
                "DelayedClickEffect"]}, 
              {RGBColor[0.6167072, 0.5082666666666666, 0.7586295999999999], 
               EdgeForm[{GrayLevel[0], Opacity[0.5]}], 
               TagBox[GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-2.243994752564138, -1.3463968515384819`}]},
                    
                    ImageSizeCache->{{26.855316383882666`, 
                    67.0683754257987}, {-56.86335678118648, \
-9.588205718813391}}],
                    "DelayedMouseEffectStyle"],
                    StatusArea[#, 1]& ,
                    TagBoxNote->"1"],
                    StyleBox["1", {}, StripOnInput -> False]],
                   Annotation[#, 
                    Style[1, {}], "Tooltip"]& ],
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$7578$8364, 
                    FEPrivate`Not[DynamicChart`click$7578$8364]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                 FEPrivate`If[
                  DynamicChart`click$7578$8364, {{{1., 0.}, {0., 
                    1.}}, {-0.044504186791262786`, -0.19498558243636477`}}, {{
                   1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$7578$8364}]],
                "DelayedClickEffect"]}, 
              {RGBColor[0.4992, 0.5552, 0.8309304], EdgeForm[{GrayLevel[0], 
               Opacity[0.5]}], 
               TagBox[GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -2.243994752564138}]},
                    
                    ImageSizeCache->{{9.58820571881344, 
                    56.863356781186525`}, {-56.863356781186475`, \
-19.59361846581472}}],
                    "DelayedMouseEffectStyle"],
                    StatusArea[#, 1]& ,
                    TagBoxNote->"1"],
                    StyleBox["1", {}, StripOnInput -> False]],
                   Annotation[#, 
                    Style[1, {}], "Tooltip"]& ],
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$7584$8364, 
                    FEPrivate`Not[DynamicChart`click$7584$8364]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                 FEPrivate`If[
                  DynamicChart`click$7584$8364, {{{1., 0.}, {0., 
                    1.}}, {-0.18019377358048383`, -0.08677674782351165}}, {{1,
                    0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$7584$8364}]],
                "DelayedClickEffect"]}}}, {}}, {}}, {{{
             TagBox[GeometricTransformationBox[
               TagBox[
                TagBox[
                 TooltipBox[
                  TagBox[{{}, {}},
                   StatusArea[#, 1]& ,
                   TagBoxNote->"1"],
                  StyleBox["1", {}, StripOnInput -> False]],
                 Annotation[#, 
                  Style[1, {}], "Tooltip"]& ],
                
                EventHandlerTag[{
                 "MouseClicked" :> FEPrivate`Set[DynamicChart`click$7548$8364, 
                    FEPrivate`Not[DynamicChart`click$7548$8364]], 
                  PassEventsDown -> True, Method -> "Preemptive", 
                  PassEventsUp -> True}]], Dynamic[
               FEPrivate`If[
                DynamicChart`click$7548$8364, {{{1., 0.}, {0., 
                  1.}}, {-0.18019377358048383`, 0.08677674782351165}}, {{1, 
                 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                TrackedSymbols :> {DynamicChart`click$7548$8364}]],
              "DelayedClickEffect"], 
             TagBox[GeometricTransformationBox[
               TagBox[
                TagBox[
                 TooltipBox[
                  TagBox[{{}, {}},
                   StatusArea[#, 1]& ,
                   TagBoxNote->"1"],
                  StyleBox["1", {}, StripOnInput -> False]],
                 Annotation[#, 
                  Style[1, {}], "Tooltip"]& ],
                
                EventHandlerTag[{
                 "MouseClicked" :> FEPrivate`Set[DynamicChart`click$7554$8364, 
                    FEPrivate`Not[DynamicChart`click$7554$8364]], 
                  PassEventsDown -> True, Method -> "Preemptive", 
                  PassEventsUp -> True}]], Dynamic[
               FEPrivate`If[
                DynamicChart`click$7554$8364, {{{1., 0.}, {0., 
                  1.}}, {-0.04450418679126287, 0.19498558243636474`}}, {{1, 
                 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                TrackedSymbols :> {DynamicChart`click$7554$8364}]],
              "DelayedClickEffect"], 
             TagBox[GeometricTransformationBox[
               TagBox[
                TagBox[
                 TooltipBox[
                  TagBox[{{}, {}},
                   StatusArea[#, 1]& ,
                   TagBoxNote->"1"],
                  StyleBox["1", {}, StripOnInput -> False]],
                 Annotation[#, 
                  Style[1, {}], "Tooltip"]& ],
                
                EventHandlerTag[{
                 "MouseClicked" :> FEPrivate`Set[DynamicChart`click$7560$8364, 
                    FEPrivate`Not[DynamicChart`click$7560$8364]], 
                  PassEventsDown -> True, Method -> "Preemptive", 
                  PassEventsUp -> True}]], Dynamic[
               FEPrivate`If[
                DynamicChart`click$7560$8364, {{{1., 0.}, {0., 1.}}, {
                  0.12469796037174673`, 0.15636629649360595`}}, {{1, 0}, {0, 
                 1}}, {{1, 0}, {0, 1}}], 
                TrackedSymbols :> {DynamicChart`click$7560$8364}]],
              "DelayedClickEffect"], 
             TagBox[GeometricTransformationBox[
               TagBox[
                TagBox[
                 TooltipBox[
                  TagBox[{{}, {}},
                   StatusArea[#, 1]& ,
                   TagBoxNote->"1"],
                  StyleBox["1", {}, StripOnInput -> False]],
                 Annotation[#, 
                  Style[1, {}], "Tooltip"]& ],
                
                EventHandlerTag[{
                 "MouseClicked" :> FEPrivate`Set[DynamicChart`click$7566$8364, 
                    FEPrivate`Not[DynamicChart`click$7566$8364]], 
                  PassEventsDown -> True, Method -> "Preemptive", 
                  PassEventsUp -> True}]], Dynamic[
               FEPrivate`If[
                DynamicChart`click$7566$8364, {{{1., 0.}, {0., 1.}}, {0.2, 
                  0.}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                TrackedSymbols :> {DynamicChart`click$7566$8364}]],
              "DelayedClickEffect"], 
             TagBox[GeometricTransformationBox[
               TagBox[
                TagBox[
                 TooltipBox[
                  TagBox[{{}, {}},
                   StatusArea[#, 1]& ,
                   TagBoxNote->"1"],
                  StyleBox["1", {}, StripOnInput -> False]],
                 Annotation[#, 
                  Style[1, {}], "Tooltip"]& ],
                
                EventHandlerTag[{
                 "MouseClicked" :> FEPrivate`Set[DynamicChart`click$7572$8364, 
                    FEPrivate`Not[DynamicChart`click$7572$8364]], 
                  PassEventsDown -> True, Method -> "Preemptive", 
                  PassEventsUp -> True}]], Dynamic[
               FEPrivate`If[
                DynamicChart`click$7572$8364, {{{1., 0.}, {0., 1.}}, {
                  0.1246979603717468, -0.1563662964936059}}, {{1, 0}, {0, 
                 1}}, {{1, 0}, {0, 1}}], 
                TrackedSymbols :> {DynamicChart`click$7572$8364}]],
              "DelayedClickEffect"], 
             TagBox[GeometricTransformationBox[
               TagBox[
                TagBox[
                 TooltipBox[
                  TagBox[{{}, {}},
                   StatusArea[#, 1]& ,
                   TagBoxNote->"1"],
                  StyleBox["1", {}, StripOnInput -> False]],
                 Annotation[#, 
                  Style[1, {}], "Tooltip"]& ],
                
                EventHandlerTag[{
                 "MouseClicked" :> FEPrivate`Set[DynamicChart`click$7578$8364, 
                    FEPrivate`Not[DynamicChart`click$7578$8364]], 
                  PassEventsDown -> True, Method -> "Preemptive", 
                  PassEventsUp -> True}]], Dynamic[
               FEPrivate`If[
                DynamicChart`click$7578$8364, {{{1., 0.}, {0., 
                  1.}}, {-0.044504186791262786`, -0.19498558243636477`}}, {{1,
                  0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                TrackedSymbols :> {DynamicChart`click$7578$8364}]],
              "DelayedClickEffect"], 
             TagBox[GeometricTransformationBox[
               TagBox[
                TagBox[
                 TooltipBox[
                  TagBox[{{}, {}},
                   StatusArea[#, 1]& ,
                   TagBoxNote->"1"],
                  StyleBox["1", {}, StripOnInput -> False]],
                 Annotation[#, 
                  Style[1, {}], "Tooltip"]& ],
                
                EventHandlerTag[{
                 "MouseClicked" :> FEPrivate`Set[DynamicChart`click$7584$8364, 
                    FEPrivate`Not[DynamicChart`click$7584$8364]], 
                  PassEventsDown -> True, Method -> "Preemptive", 
                  PassEventsUp -> True}]], Dynamic[
               FEPrivate`If[
                DynamicChart`click$7584$8364, {{{1., 0.}, {0., 
                  1.}}, {-0.18019377358048383`, -0.08677674782351165}}, {{1, 
                 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                TrackedSymbols :> {DynamicChart`click$7584$8364}]],
              "DelayedClickEffect"]}, {}}, {}}, {}, {}},
         DynamicModuleValues:>{}], {{}, {}}, {{{}, {}, {}, {}}, {}}},
       ContentSelectable->False,
       DisplayFunction->Identity,
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->{{0., 0.}, {0., 0.}},
       PlotRange->{{-1., 1.}, {-1., 1.}},
       PlotRangePadding->Scaled[0.09166666666666669]], {1755., -1365.}, 
      ImageScaled[{0.5, 0.5}], {360., 360.},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}]}, {
     InsetBox[
      GraphicsBox[{{}, {}, 
        DynamicModuleBox[{DynamicChart`click$7707$8365 = False, 
         DynamicChart`click$7713$8365 = False, DynamicChart`click$7719$8365 = 
         False, DynamicChart`click$7725$8365 = False, 
         DynamicChart`click$7731$8365 = False, DynamicChart`click$7737$8365 = 
         False}, {
          {RGBColor[0.5, 0.5, 1.], EdgeForm[{GrayLevel[0], Opacity[
           0.5]}], {{{}, {
              {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{GrayLevel[
               0], Opacity[0.5]}], 
               TagBox[GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {1.3463968515384828`, 
                    3.141592653589793}]},
                    
                    ImageSizeCache->{{9.588205718813455, 
                    67.06837542579869}, {-102.72429428118645`, \
-55.44914321881337}}],
                    "DelayedMouseEffectStyle"],
                    StatusArea[#, 2]& ,
                    TagBoxNote->"2"],
                    StyleBox["2", {}, StripOnInput -> False]],
                   Annotation[#, 
                    Style[2, {}], "Tooltip"]& ],
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$7707$8365, 
                    FEPrivate`Not[DynamicChart`click$7707$8365]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                 FEPrivate`If[
                  DynamicChart`click$7707$8365, {{{1., 0.}, {0., 
                    1.}}, {-0.1246979603717467, 0.156366296493606}}, {{1, 
                   0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$7707$8365}]],
                "DelayedClickEffect"]}, 
              {RGBColor[0.9965728, 0.58382944, 0.22525344], EdgeForm[{
               GrayLevel[0], Opacity[0.5]}], 
               TagBox[GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {0.4487989505128276, 
                    1.3463968515384828`}]},
                    
                    ImageSizeCache->{{55.44914321881344, 
                    98.18263372150514}, {-101.57446482876256`, \
-55.44914321881337}}],
                    "DelayedMouseEffectStyle"],
                    StatusArea[#, 1]& ,
                    TagBoxNote->"1"],
                    StyleBox["1", {}, StripOnInput -> False]],
                   Annotation[#, 
                    Style[1, {}], "Tooltip"]& ],
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$7713$8365, 
                    FEPrivate`Not[DynamicChart`click$7713$8365]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                 FEPrivate`If[
                  DynamicChart`click$7713$8365, {{{1., 0.}, {0., 1.}}, {
                    0.12469796037174673`, 0.15636629649360595`}}, {{1, 0}, {0,
                    1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$7713$8365}]],
                "DelayedClickEffect"]}, 
              {RGBColor[0.8704000000000001, 0.50272, 0.2], EdgeForm[{
               GrayLevel[0], Opacity[0.5]}], 
               TagBox[GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-0.4487989505128276, 
                    0.4487989505128276}]},
                    
                    ImageSizeCache->{{55.44914321881344, 
                    102.72429428118653`}, {-76.7616718231231, \
-35.55082817687674}}],
                    "DelayedMouseEffectStyle"],
                    StatusArea[#, 1]& ,
                    TagBoxNote->"1"],
                    StyleBox["1", {}, StripOnInput -> False]],
                   Annotation[#, 
                    Style[1, {}], "Tooltip"]& ],
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$7719$8365, 
                    FEPrivate`Not[DynamicChart`click$7719$8365]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                 FEPrivate`If[
                  DynamicChart`click$7719$8365, {{{1., 0.}, {0., 1.}}, {0.2, 
                    0.}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$7719$8365}]],
                "DelayedClickEffect"]}, 
              {RGBColor[0.74058432, 0.47903999999999997`, 0.4089916800000002],
                EdgeForm[{GrayLevel[0], Opacity[0.5]}], 
               TagBox[GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-1.3463968515384819`, -0.4487989505128276}]},
                    
                    ImageSizeCache->{{55.44914321881344, 
                    98.18263372150514}, {-56.86335678118647, \
-10.738035171237286`}}],
                    "DelayedMouseEffectStyle"],
                    StatusArea[#, 1]& ,
                    TagBoxNote->"1"],
                    StyleBox["1", {}, StripOnInput -> False]],
                   Annotation[#, 
                    Style[1, {}], "Tooltip"]& ],
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$7725$8365, 
                    FEPrivate`Not[DynamicChart`click$7725$8365]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                 FEPrivate`If[
                  DynamicChart`click$7725$8365, {{{1., 0.}, {0., 1.}}, {
                    0.1246979603717468, -0.1563662964936059}}, {{1, 0}, {0, 
                   1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$7725$8365}]],
                "DelayedClickEffect"]}, 
              {RGBColor[0.64020864, 0.49888000000000005`, 0.74416944], 
               EdgeForm[{GrayLevel[0], Opacity[0.5]}], 
               TagBox[GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-2.243994752564138, -1.3463968515384819`}]},
                    
                    ImageSizeCache->{{26.855316383882688`, 
                    67.06837542579873}, {-56.86335678118647, \
-9.588205718813377}}],
                    "DelayedMouseEffectStyle"],
                    StatusArea[#, 1]& ,
                    TagBoxNote->"1"],
                    StyleBox["1", {}, StripOnInput -> False]],
                   Annotation[#, 
                    Style[1, {}], "Tooltip"]& ],
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$7731$8365, 
                    FEPrivate`Not[DynamicChart`click$7731$8365]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                 FEPrivate`If[
                  DynamicChart`click$7731$8365, {{{1., 0.}, {0., 
                    1.}}, {-0.044504186791262786`, -0.19498558243636477`}}, {{
                   1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$7731$8365}]],
                "DelayedClickEffect"]}, 
              {RGBColor[0.4992, 0.5552, 0.8309304], EdgeForm[{GrayLevel[0], 
               Opacity[0.5]}], 
               TagBox[GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -2.243994752564138}]},
                    
                    ImageSizeCache->{{9.58820571881346, 
                    56.863356781186546`}, {-56.86335678118646, \
-19.593618465814707`}}],
                    "DelayedMouseEffectStyle"],
                    StatusArea[#, 1]& ,
                    TagBoxNote->"1"],
                    StyleBox["1", {}, StripOnInput -> False]],
                   Annotation[#, 
                    Style[1, {}], "Tooltip"]& ],
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$7737$8365, 
                    FEPrivate`Not[DynamicChart`click$7737$8365]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                 FEPrivate`If[
                  DynamicChart`click$7737$8365, {{{1., 0.}, {0., 
                    1.}}, {-0.18019377358048383`, -0.08677674782351165}}, {{1,
                    0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$7737$8365}]],
                "DelayedClickEffect"]}}}, {}}, {}}, {{{
             TagBox[GeometricTransformationBox[
               TagBox[
                TagBox[
                 TooltipBox[
                  TagBox[{{}, {}},
                   StatusArea[#, 2]& ,
                   TagBoxNote->"2"],
                  StyleBox["2", {}, StripOnInput -> False]],
                 Annotation[#, 
                  Style[2, {}], "Tooltip"]& ],
                
                EventHandlerTag[{
                 "MouseClicked" :> FEPrivate`Set[DynamicChart`click$7707$8365, 
                    FEPrivate`Not[DynamicChart`click$7707$8365]], 
                  PassEventsDown -> True, Method -> "Preemptive", 
                  PassEventsUp -> True}]], Dynamic[
               FEPrivate`If[
                DynamicChart`click$7707$8365, {{{1., 0.}, {0., 
                  1.}}, {-0.1246979603717467, 0.156366296493606}}, {{1, 0}, {
                 0, 1}}, {{1, 0}, {0, 1}}], 
                TrackedSymbols :> {DynamicChart`click$7707$8365}]],
              "DelayedClickEffect"], 
             TagBox[GeometricTransformationBox[
               TagBox[
                TagBox[
                 TooltipBox[
                  TagBox[{{}, {}},
                   StatusArea[#, 1]& ,
                   TagBoxNote->"1"],
                  StyleBox["1", {}, StripOnInput -> False]],
                 Annotation[#, 
                  Style[1, {}], "Tooltip"]& ],
                
                EventHandlerTag[{
                 "MouseClicked" :> FEPrivate`Set[DynamicChart`click$7713$8365, 
                    FEPrivate`Not[DynamicChart`click$7713$8365]], 
                  PassEventsDown -> True, Method -> "Preemptive", 
                  PassEventsUp -> True}]], Dynamic[
               FEPrivate`If[
                DynamicChart`click$7713$8365, {{{1., 0.}, {0., 1.}}, {
                  0.12469796037174673`, 0.15636629649360595`}}, {{1, 0}, {0, 
                 1}}, {{1, 0}, {0, 1}}], 
                TrackedSymbols :> {DynamicChart`click$7713$8365}]],
              "DelayedClickEffect"], 
             TagBox[GeometricTransformationBox[
               TagBox[
                TagBox[
                 TooltipBox[
                  TagBox[{{}, {}},
                   StatusArea[#, 1]& ,
                   TagBoxNote->"1"],
                  StyleBox["1", {}, StripOnInput -> False]],
                 Annotation[#, 
                  Style[1, {}], "Tooltip"]& ],
                
                EventHandlerTag[{
                 "MouseClicked" :> FEPrivate`Set[DynamicChart`click$7719$8365, 
                    FEPrivate`Not[DynamicChart`click$7719$8365]], 
                  PassEventsDown -> True, Method -> "Preemptive", 
                  PassEventsUp -> True}]], Dynamic[
               FEPrivate`If[
                DynamicChart`click$7719$8365, {{{1., 0.}, {0., 1.}}, {0.2, 
                  0.}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                TrackedSymbols :> {DynamicChart`click$7719$8365}]],
              "DelayedClickEffect"], 
             TagBox[GeometricTransformationBox[
               TagBox[
                TagBox[
                 TooltipBox[
                  TagBox[{{}, {}},
                   StatusArea[#, 1]& ,
                   TagBoxNote->"1"],
                  StyleBox["1", {}, StripOnInput -> False]],
                 Annotation[#, 
                  Style[1, {}], "Tooltip"]& ],
                
                EventHandlerTag[{
                 "MouseClicked" :> FEPrivate`Set[DynamicChart`click$7725$8365, 
                    FEPrivate`Not[DynamicChart`click$7725$8365]], 
                  PassEventsDown -> True, Method -> "Preemptive", 
                  PassEventsUp -> True}]], Dynamic[
               FEPrivate`If[
                DynamicChart`click$7725$8365, {{{1., 0.}, {0., 1.}}, {
                  0.1246979603717468, -0.1563662964936059}}, {{1, 0}, {0, 
                 1}}, {{1, 0}, {0, 1}}], 
                TrackedSymbols :> {DynamicChart`click$7725$8365}]],
              "DelayedClickEffect"], 
             TagBox[GeometricTransformationBox[
               TagBox[
                TagBox[
                 TooltipBox[
                  TagBox[{{}, {}},
                   StatusArea[#, 1]& ,
                   TagBoxNote->"1"],
                  StyleBox["1", {}, StripOnInput -> False]],
                 Annotation[#, 
                  Style[1, {}], "Tooltip"]& ],
                
                EventHandlerTag[{
                 "MouseClicked" :> FEPrivate`Set[DynamicChart`click$7731$8365, 
                    FEPrivate`Not[DynamicChart`click$7731$8365]], 
                  PassEventsDown -> True, Method -> "Preemptive", 
                  PassEventsUp -> True}]], Dynamic[
               FEPrivate`If[
                DynamicChart`click$7731$8365, {{{1., 0.}, {0., 
                  1.}}, {-0.044504186791262786`, -0.19498558243636477`}}, {{1,
                  0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                TrackedSymbols :> {DynamicChart`click$7731$8365}]],
              "DelayedClickEffect"], 
             TagBox[GeometricTransformationBox[
               TagBox[
                TagBox[
                 TooltipBox[
                  TagBox[{{}, {}},
                   StatusArea[#, 1]& ,
                   TagBoxNote->"1"],
                  StyleBox["1", {}, StripOnInput -> False]],
                 Annotation[#, 
                  Style[1, {}], "Tooltip"]& ],
                
                EventHandlerTag[{
                 "MouseClicked" :> FEPrivate`Set[DynamicChart`click$7737$8365, 
                    FEPrivate`Not[DynamicChart`click$7737$8365]], 
                  PassEventsDown -> True, Method -> "Preemptive", 
                  PassEventsUp -> True}]], Dynamic[
               FEPrivate`If[
                DynamicChart`click$7737$8365, {{{1., 0.}, {0., 
                  1.}}, {-0.18019377358048383`, -0.08677674782351165}}, {{1, 
                 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                TrackedSymbols :> {DynamicChart`click$7737$8365}]],
              "DelayedClickEffect"]}, {}}, {}}, {}, {}},
         DynamicModuleValues:>{}], {{}, {}}, {{{}, {}, {}, {}}, {}}},
       ContentSelectable->False,
       DisplayFunction->Identity,
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->{{0., 0.}, {0., 0.}},
       PlotRange->{{-1., 1.}, {-1., 1.}},
       PlotRangePadding->Scaled[0.09166666666666669]], {195., -1755.}, 
      ImageScaled[{0.5, 0.5}], {360., 360.},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
     InsetBox[
      GraphicsBox[{{}, {}, 
        DynamicModuleBox[{DynamicChart`click$7839$8366 = False, 
         DynamicChart`click$7845$8366 = False, DynamicChart`click$7851$8366 = 
         False, DynamicChart`click$7857$8366 = False, 
         DynamicChart`click$7863$8366 = False}, {
          {RGBColor[0.5, 0.5, 1.], EdgeForm[{GrayLevel[0], Opacity[
           0.5]}], {{{}, {
              {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{GrayLevel[
               0], Opacity[0.5]}], 
               TagBox[GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {0.4487989505128276, 
                    3.141592653589793}]},
                    
                    ImageSizeCache->{{9.58820571881342, 
                    98.18263372150508}, {-102.72429428118645`, \
-55.44914321881337}}],
                    "DelayedMouseEffectStyle"],
                    StatusArea[#, 3]& ,
                    TagBoxNote->"3"],
                    StyleBox["3", {}, StripOnInput -> False]],
                   Annotation[#, 
                    Style[3, {}], "Tooltip"]& ],
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$7839$8366, 
                    FEPrivate`Not[DynamicChart`click$7839$8366]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                 FEPrivate`If[
                  DynamicChart`click$7839$8366, {{{1., 0.}, {0., 
                    1.}}, {-0.04450418679126287, 0.19498558243636474`}}, {{1, 
                   0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$7839$8366}]],
                "DelayedClickEffect"]}, 
              {RGBColor[1., 0.544, 0.2], EdgeForm[{GrayLevel[0], Opacity[
               0.5]}], 
               TagBox[GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-0.4487989505128276, 
                    0.4487989505128276}]},
                    
                    ImageSizeCache->{{55.449143218813404`, 
                    102.7242942811865}, {-76.7616718231231, \
-35.55082817687674}}],
                    "DelayedMouseEffectStyle"],
                    StatusArea[#, 1]& ,
                    TagBoxNote->"1"],
                    StyleBox["1", {}, StripOnInput -> False]],
                   Annotation[#, 
                    Style[1, {}], "Tooltip"]& ],
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$7845$8366, 
                    FEPrivate`Not[DynamicChart`click$7845$8366]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                 FEPrivate`If[
                  DynamicChart`click$7845$8366, {{{1., 0.}, {0., 1.}}, {0.2, 
                    0.}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$7845$8366}]],
                "DelayedClickEffect"]}, 
              {RGBColor[0.784, 0.47519999999999996`, 0.2], EdgeForm[{
               GrayLevel[0], Opacity[0.5]}], 
               TagBox[GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-1.3463968515384819`, -0.4487989505128276}]},
                    
                    ImageSizeCache->{{55.449143218813404`, 
                    98.18263372150508}, {-56.86335678118647, \
-10.738035171237286`}}],
                    "DelayedMouseEffectStyle"],
                    StatusArea[#, 1]& ,
                    TagBoxNote->"1"],
                    StyleBox["1", {}, StripOnInput -> False]],
                   Annotation[#, 
                    Style[1, {}], "Tooltip"]& ],
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$7851$8366, 
                    FEPrivate`Not[DynamicChart`click$7851$8366]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                 FEPrivate`If[
                  DynamicChart`click$7851$8366, {{{1., 0.}, {0., 1.}}, {
                    0.1246979603717468, -0.1563662964936059}}, {{1, 0}, {0, 
                   1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$7851$8366}]],
                "DelayedClickEffect"]}, 
              {RGBColor[0.6754608, 0.4848, 0.7224792], EdgeForm[{GrayLevel[0],
                Opacity[0.5]}], 
               TagBox[GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-2.243994752564138, -1.3463968515384819`}]},
                    
                    ImageSizeCache->{{26.855316383882652`, 
                    67.0683754257987}, {-56.86335678118647, \
-9.588205718813377}}],
                    "DelayedMouseEffectStyle"],
                    StatusArea[#, 1]& ,
                    TagBoxNote->"1"],
                    StyleBox["1", {}, StripOnInput -> False]],
                   Annotation[#, 
                    Style[1, {}], "Tooltip"]& ],
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$7857$8366, 
                    FEPrivate`Not[DynamicChart`click$7857$8366]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                 FEPrivate`If[
                  DynamicChart`click$7857$8366, {{{1., 0.}, {0., 
                    1.}}, {-0.044504186791262786`, -0.19498558243636477`}}, {{
                   1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$7857$8366}]],
                "DelayedClickEffect"]}, 
              {RGBColor[0.4992, 0.5552, 0.8309304], EdgeForm[{GrayLevel[0], 
               Opacity[0.5]}], 
               TagBox[GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -2.243994752564138}]},
                    
                    ImageSizeCache->{{9.588205718813425, 
                    56.86335678118651}, {-56.86335678118646, \
-19.593618465814707`}}],
                    "DelayedMouseEffectStyle"],
                    StatusArea[#, 1]& ,
                    TagBoxNote->"1"],
                    StyleBox["1", {}, StripOnInput -> False]],
                   Annotation[#, 
                    Style[1, {}], "Tooltip"]& ],
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$7863$8366, 
                    FEPrivate`Not[DynamicChart`click$7863$8366]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                 FEPrivate`If[
                  DynamicChart`click$7863$8366, {{{1., 0.}, {0., 
                    1.}}, {-0.18019377358048383`, -0.08677674782351165}}, {{1,
                    0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$7863$8366}]],
                "DelayedClickEffect"]}}}, {}}, {}}, {{{
             TagBox[GeometricTransformationBox[
               TagBox[
                TagBox[
                 TooltipBox[
                  TagBox[{{}, {}},
                   StatusArea[#, 3]& ,
                   TagBoxNote->"3"],
                  StyleBox["3", {}, StripOnInput -> False]],
                 Annotation[#, 
                  Style[3, {}], "Tooltip"]& ],
                
                EventHandlerTag[{
                 "MouseClicked" :> FEPrivate`Set[DynamicChart`click$7839$8366, 
                    FEPrivate`Not[DynamicChart`click$7839$8366]], 
                  PassEventsDown -> True, Method -> "Preemptive", 
                  PassEventsUp -> True}]], Dynamic[
               FEPrivate`If[
                DynamicChart`click$7839$8366, {{{1., 0.}, {0., 
                  1.}}, {-0.04450418679126287, 0.19498558243636474`}}, {{1, 
                 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                TrackedSymbols :> {DynamicChart`click$7839$8366}]],
              "DelayedClickEffect"], 
             TagBox[GeometricTransformationBox[
               TagBox[
                TagBox[
                 TooltipBox[
                  TagBox[{{}, {}},
                   StatusArea[#, 1]& ,
                   TagBoxNote->"1"],
                  StyleBox["1", {}, StripOnInput -> False]],
                 Annotation[#, 
                  Style[1, {}], "Tooltip"]& ],
                
                EventHandlerTag[{
                 "MouseClicked" :> FEPrivate`Set[DynamicChart`click$7845$8366, 
                    FEPrivate`Not[DynamicChart`click$7845$8366]], 
                  PassEventsDown -> True, Method -> "Preemptive", 
                  PassEventsUp -> True}]], Dynamic[
               FEPrivate`If[
                DynamicChart`click$7845$8366, {{{1., 0.}, {0., 1.}}, {0.2, 
                  0.}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                TrackedSymbols :> {DynamicChart`click$7845$8366}]],
              "DelayedClickEffect"], 
             TagBox[GeometricTransformationBox[
               TagBox[
                TagBox[
                 TooltipBox[
                  TagBox[{{}, {}},
                   StatusArea[#, 1]& ,
                   TagBoxNote->"1"],
                  StyleBox["1", {}, StripOnInput -> False]],
                 Annotation[#, 
                  Style[1, {}], "Tooltip"]& ],
                
                EventHandlerTag[{
                 "MouseClicked" :> FEPrivate`Set[DynamicChart`click$7851$8366, 
                    FEPrivate`Not[DynamicChart`click$7851$8366]], 
                  PassEventsDown -> True, Method -> "Preemptive", 
                  PassEventsUp -> True}]], Dynamic[
               FEPrivate`If[
                DynamicChart`click$7851$8366, {{{1., 0.}, {0., 1.}}, {
                  0.1246979603717468, -0.1563662964936059}}, {{1, 0}, {0, 
                 1}}, {{1, 0}, {0, 1}}], 
                TrackedSymbols :> {DynamicChart`click$7851$8366}]],
              "DelayedClickEffect"], 
             TagBox[GeometricTransformationBox[
               TagBox[
                TagBox[
                 TooltipBox[
                  TagBox[{{}, {}},
                   StatusArea[#, 1]& ,
                   TagBoxNote->"1"],
                  StyleBox["1", {}, StripOnInput -> False]],
                 Annotation[#, 
                  Style[1, {}], "Tooltip"]& ],
                
                EventHandlerTag[{
                 "MouseClicked" :> FEPrivate`Set[DynamicChart`click$7857$8366, 
                    FEPrivate`Not[DynamicChart`click$7857$8366]], 
                  PassEventsDown -> True, Method -> "Preemptive", 
                  PassEventsUp -> True}]], Dynamic[
               FEPrivate`If[
                DynamicChart`click$7857$8366, {{{1., 0.}, {0., 
                  1.}}, {-0.044504186791262786`, -0.19498558243636477`}}, {{1,
                  0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                TrackedSymbols :> {DynamicChart`click$7857$8366}]],
              "DelayedClickEffect"], 
             TagBox[GeometricTransformationBox[
               TagBox[
                TagBox[
                 TooltipBox[
                  TagBox[{{}, {}},
                   StatusArea[#, 1]& ,
                   TagBoxNote->"1"],
                  StyleBox["1", {}, StripOnInput -> False]],
                 Annotation[#, 
                  Style[1, {}], "Tooltip"]& ],
                
                EventHandlerTag[{
                 "MouseClicked" :> FEPrivate`Set[DynamicChart`click$7863$8366, 
                    FEPrivate`Not[DynamicChart`click$7863$8366]], 
                  PassEventsDown -> True, Method -> "Preemptive", 
                  PassEventsUp -> True}]], Dynamic[
               FEPrivate`If[
                DynamicChart`click$7863$8366, {{{1., 0.}, {0., 
                  1.}}, {-0.18019377358048383`, -0.08677674782351165}}, {{1, 
                 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                TrackedSymbols :> {DynamicChart`click$7863$8366}]],
              "DelayedClickEffect"]}, {}}, {}}, {}, {}},
         DynamicModuleValues:>{}], {{}, {}}, {{{}, {}, {}, {}}, {}}},
       ContentSelectable->False,
       DisplayFunction->Identity,
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->{{0., 0.}, {0., 0.}},
       PlotRange->{{-1., 1.}, {-1., 1.}},
       PlotRangePadding->Scaled[0.09166666666666669]], {585., -1755.}, 
      ImageScaled[{0.5, 0.5}], {360., 360.},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
     InsetBox[
      GraphicsBox[{{}, {}, 
        DynamicModuleBox[{DynamicChart`click$7947$8367 = False, 
         DynamicChart`click$7953$8367 = False, DynamicChart`click$7959$8367 = 
         False, DynamicChart`click$7965$8367 = False}, {
          {RGBColor[0.5, 0.5, 1.], EdgeForm[{GrayLevel[0], Opacity[
           0.5]}], {{{}, {
              {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{GrayLevel[
               0], Opacity[0.5]}], 
               TagBox[GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-0.4487989505128276, 
                    3.141592653589793}]},
                    
                    ImageSizeCache->{{9.588205718813434, 
                    102.7242942811865}, {-102.72429428118645`, \
-35.550828176876735`}}],
                    "DelayedMouseEffectStyle"],
                    StatusArea[#, 4]& ,
                    TagBoxNote->"4"],
                    StyleBox["4", {}, StripOnInput -> False]],
                   Annotation[#, 
                    Style[4, {}], "Tooltip"]& ],
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$7947$8367, 
                    FEPrivate`Not[DynamicChart`click$7947$8367]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                 FEPrivate`If[
                  DynamicChart`click$7947$8367, {{{1., 0.}, {0., 1.}}, {
                    0.04450418679126289, 0.19498558243636474`}}, {{1, 0}, {0, 
                   1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$7947$8367}]],
                "DelayedClickEffect"]}, 
              {RGBColor[0.928, 0.5210666666666667, 0.2], EdgeForm[{GrayLevel[
               0], Opacity[0.5]}], 
               TagBox[GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-1.3463968515384819`, -0.4487989505128276}]},
                    
                    ImageSizeCache->{{55.44914321881342, 
                    98.18263372150511}, {-56.86335678118647, \
-10.738035171237286`}}],
                    "DelayedMouseEffectStyle"],
                    StatusArea[#, 1]& ,
                    TagBoxNote->"1"],
                    StyleBox["1", {}, StripOnInput -> False]],
                   Annotation[#, 
                    Style[1, {}], "Tooltip"]& ],
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$7953$8367, 
                    FEPrivate`Not[DynamicChart`click$7953$8367]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                 FEPrivate`If[
                  DynamicChart`click$7953$8367, {{{1., 0.}, {0., 1.}}, {
                    0.1246979603717468, -0.1563662964936059}}, {{1, 0}, {0, 
                   1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$7953$8367}]],
                "DelayedClickEffect"]}, 
              {RGBColor[0.7116405333333333, 0.4816, 0.5483194666666666], 
               EdgeForm[{GrayLevel[0], Opacity[0.5]}], 
               TagBox[GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-2.243994752564138, -1.3463968515384819`}]},
                    
                    ImageSizeCache->{{26.855316383882666`, 
                    67.0683754257987}, {-56.86335678118647, \
-9.588205718813377}}],
                    "DelayedMouseEffectStyle"],
                    StatusArea[#, 1]& ,
                    TagBoxNote->"1"],
                    StyleBox["1", {}, StripOnInput -> False]],
                   Annotation[#, 
                    Style[1, {}], "Tooltip"]& ],
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$7959$8367, 
                    FEPrivate`Not[DynamicChart`click$7959$8367]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                 FEPrivate`If[
                  DynamicChart`click$7959$8367, {{{1., 0.}, {0., 
                    1.}}, {-0.044504186791262786`, -0.19498558243636477`}}, {{
                   1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$7959$8367}]],
                "DelayedClickEffect"]}, 
              {RGBColor[0.4992, 0.5552, 0.8309304], EdgeForm[{GrayLevel[0], 
               Opacity[0.5]}], 
               TagBox[GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -2.243994752564138}]},
                    
                    ImageSizeCache->{{9.58820571881344, 
                    56.863356781186525`}, {-56.86335678118646, \
-19.593618465814707`}}],
                    "DelayedMouseEffectStyle"],
                    StatusArea[#, 1]& ,
                    TagBoxNote->"1"],
                    StyleBox["1", {}, StripOnInput -> False]],
                   Annotation[#, 
                    Style[1, {}], "Tooltip"]& ],
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$7965$8367, 
                    FEPrivate`Not[DynamicChart`click$7965$8367]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                 FEPrivate`If[
                  DynamicChart`click$7965$8367, {{{1., 0.}, {0., 
                    1.}}, {-0.18019377358048383`, -0.08677674782351165}}, {{1,
                    0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$7965$8367}]],
                "DelayedClickEffect"]}}}, {}}, {}}, {{{
             TagBox[GeometricTransformationBox[
               TagBox[
                TagBox[
                 TooltipBox[
                  TagBox[{{}, {}},
                   StatusArea[#, 4]& ,
                   TagBoxNote->"4"],
                  StyleBox["4", {}, StripOnInput -> False]],
                 Annotation[#, 
                  Style[4, {}], "Tooltip"]& ],
                
                EventHandlerTag[{
                 "MouseClicked" :> FEPrivate`Set[DynamicChart`click$7947$8367, 
                    FEPrivate`Not[DynamicChart`click$7947$8367]], 
                  PassEventsDown -> True, Method -> "Preemptive", 
                  PassEventsUp -> True}]], Dynamic[
               FEPrivate`If[
                DynamicChart`click$7947$8367, {{{1., 0.}, {0., 1.}}, {
                  0.04450418679126289, 0.19498558243636474`}}, {{1, 0}, {0, 
                 1}}, {{1, 0}, {0, 1}}], 
                TrackedSymbols :> {DynamicChart`click$7947$8367}]],
              "DelayedClickEffect"], 
             TagBox[GeometricTransformationBox[
               TagBox[
                TagBox[
                 TooltipBox[
                  TagBox[{{}, {}},
                   StatusArea[#, 1]& ,
                   TagBoxNote->"1"],
                  StyleBox["1", {}, StripOnInput -> False]],
                 Annotation[#, 
                  Style[1, {}], "Tooltip"]& ],
                
                EventHandlerTag[{
                 "MouseClicked" :> FEPrivate`Set[DynamicChart`click$7953$8367, 
                    FEPrivate`Not[DynamicChart`click$7953$8367]], 
                  PassEventsDown -> True, Method -> "Preemptive", 
                  PassEventsUp -> True}]], Dynamic[
               FEPrivate`If[
                DynamicChart`click$7953$8367, {{{1., 0.}, {0., 1.}}, {
                  0.1246979603717468, -0.1563662964936059}}, {{1, 0}, {0, 
                 1}}, {{1, 0}, {0, 1}}], 
                TrackedSymbols :> {DynamicChart`click$7953$8367}]],
              "DelayedClickEffect"], 
             TagBox[GeometricTransformationBox[
               TagBox[
                TagBox[
                 TooltipBox[
                  TagBox[{{}, {}},
                   StatusArea[#, 1]& ,
                   TagBoxNote->"1"],
                  StyleBox["1", {}, StripOnInput -> False]],
                 Annotation[#, 
                  Style[1, {}], "Tooltip"]& ],
                
                EventHandlerTag[{
                 "MouseClicked" :> FEPrivate`Set[DynamicChart`click$7959$8367, 
                    FEPrivate`Not[DynamicChart`click$7959$8367]], 
                  PassEventsDown -> True, Method -> "Preemptive", 
                  PassEventsUp -> True}]], Dynamic[
               FEPrivate`If[
                DynamicChart`click$7959$8367, {{{1., 0.}, {0., 
                  1.}}, {-0.044504186791262786`, -0.19498558243636477`}}, {{1,
                  0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                TrackedSymbols :> {DynamicChart`click$7959$8367}]],
              "DelayedClickEffect"], 
             TagBox[GeometricTransformationBox[
               TagBox[
                TagBox[
                 TooltipBox[
                  TagBox[{{}, {}},
                   StatusArea[#, 1]& ,
                   TagBoxNote->"1"],
                  StyleBox["1", {}, StripOnInput -> False]],
                 Annotation[#, 
                  Style[1, {}], "Tooltip"]& ],
                
                EventHandlerTag[{
                 "MouseClicked" :> FEPrivate`Set[DynamicChart`click$7965$8367, 
                    FEPrivate`Not[DynamicChart`click$7965$8367]], 
                  PassEventsDown -> True, Method -> "Preemptive", 
                  PassEventsUp -> True}]], Dynamic[
               FEPrivate`If[
                DynamicChart`click$7965$8367, {{{1., 0.}, {0., 
                  1.}}, {-0.18019377358048383`, -0.08677674782351165}}, {{1, 
                 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                TrackedSymbols :> {DynamicChart`click$7965$8367}]],
              "DelayedClickEffect"]}, {}}, {}}, {}, {}},
         DynamicModuleValues:>{}], {{}, {}}, {{{}, {}, {}, {}}, {}}},
       ContentSelectable->False,
       DisplayFunction->Identity,
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->{{0., 0.}, {0., 0.}},
       PlotRange->{{-1., 1.}, {-1., 1.}},
       PlotRangePadding->Scaled[0.09166666666666669]], {975., -1755.}, 
      ImageScaled[{0.5, 0.5}], {360., 360.},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
     InsetBox[
      GraphicsBox[{{}, {}, 
        DynamicModuleBox[{DynamicChart`click$8034$8368 = False, 
         DynamicChart`click$8040$8368 = False, DynamicChart`click$8046$8368 = 
         False, DynamicChart`click$8052$8368 = False}, {
          {RGBColor[0.5, 0.5, 1.], EdgeForm[{GrayLevel[0], Opacity[
           0.5]}], {{{}, {
              {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{GrayLevel[
               0], Opacity[0.5]}], 
               TagBox[GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {1.5707963267948966`, 
                    3.141592653589793}]},
                    
                    ImageSizeCache->{{9.588205718813548, 
                    56.86335678118664}, {-102.72429428118645`, \
-55.44914321881337}}],
                    "DelayedMouseEffectStyle"],
                    StatusArea[#, 2]& ,
                    TagBoxNote->"2"],
                    StyleBox["2", {}, StripOnInput -> False]],
                   Annotation[#, 
                    Style[2, {}], "Tooltip"]& ],
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$8034$8368, 
                    FEPrivate`Not[DynamicChart`click$8034$8368]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                 FEPrivate`If[
                  DynamicChart`click$8034$8368, {{{1., 0.}, {0., 
                    1.}}, {-0.1414213562373095, 0.14142135623730953`}}, {{1, 
                   0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$8034$8368}]],
                "DelayedClickEffect"]}, 
              {RGBColor[0.928, 0.5210666666666667, 0.2], EdgeForm[{GrayLevel[
               0], Opacity[0.5]}], 
               TagBox[GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    DiskBox[{0, 0}, 1., {0., 1.5707963267948966`}]},
                    
                    ImageSizeCache->{{55.44914321881353, 
                    102.72429428118662`}, {-102.72429428118645`, \
-55.44914321881337}}],
                    "DelayedMouseEffectStyle"],
                    StatusArea[#, 2]& ,
                    TagBoxNote->"2"],
                    StyleBox["2", {}, StripOnInput -> False]],
                   Annotation[#, 
                    Style[2, {}], "Tooltip"]& ],
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$8040$8368, 
                    FEPrivate`Not[DynamicChart`click$8040$8368]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                 FEPrivate`If[
                  DynamicChart`click$8040$8368, {{{1., 0.}, {0., 1.}}, {
                    0.14142135623730953`, 0.1414213562373095}}, {{1, 0}, {0, 
                   1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$8040$8368}]],
                "DelayedClickEffect"]}, 
              {RGBColor[0.7116405333333333, 0.4816, 0.5483194666666666], 
               EdgeForm[{GrayLevel[0], Opacity[0.5]}], 
               TagBox[GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    DiskBox[{0, 0}, 1., {-2.356194490192345, 0.}]},
                    
                    ImageSizeCache->{{23.020563320991116`, 
                    102.72429428118662`}, {-56.86335678118647, \
-9.588205718813377}}],
                    "DelayedMouseEffectStyle"],
                    StatusArea[#, 3]& ,
                    TagBoxNote->"3"],
                    StyleBox["3", {}, StripOnInput -> False]],
                   Annotation[#, 
                    Style[3, {}], "Tooltip"]& ],
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$8046$8368, 
                    FEPrivate`Not[DynamicChart`click$8046$8368]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                 FEPrivate`If[
                  DynamicChart`click$8046$8368, {{{1., 0.}, {0., 1.}}, {
                    0.07653668647301798, -0.18477590650225736`}}, {{1, 0}, {0,
                    1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$8046$8368}]],
                "DelayedClickEffect"]}, 
              {RGBColor[0.4992, 0.5552, 0.8309304], EdgeForm[{GrayLevel[0], 
               Opacity[0.5]}], 
               TagBox[GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -2.356194490192345}]},
                    
                    ImageSizeCache->{{9.588205718813553, 
                    56.86335678118664}, {-56.86335678118646, \
-23.020563320990938`}}],
                    "DelayedMouseEffectStyle"],
                    StatusArea[#, 1]& ,
                    TagBoxNote->"1"],
                    StyleBox["1", {}, StripOnInput -> False]],
                   Annotation[#, 
                    Style[1, {}], "Tooltip"]& ],
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$8052$8368, 
                    FEPrivate`Not[DynamicChart`click$8052$8368]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                 FEPrivate`If[
                  DynamicChart`click$8052$8368, {{{1., 0.}, {0., 
                    1.}}, {-0.18477590650225736`, -0.07653668647301798}}, {{1,
                    0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$8052$8368}]],
                "DelayedClickEffect"]}}}, {}}, {}}, {{{
             TagBox[GeometricTransformationBox[
               TagBox[
                TagBox[
                 TooltipBox[
                  TagBox[{{}, {}},
                   StatusArea[#, 2]& ,
                   TagBoxNote->"2"],
                  StyleBox["2", {}, StripOnInput -> False]],
                 Annotation[#, 
                  Style[2, {}], "Tooltip"]& ],
                
                EventHandlerTag[{
                 "MouseClicked" :> FEPrivate`Set[DynamicChart`click$8034$8368, 
                    FEPrivate`Not[DynamicChart`click$8034$8368]], 
                  PassEventsDown -> True, Method -> "Preemptive", 
                  PassEventsUp -> True}]], Dynamic[
               FEPrivate`If[
                DynamicChart`click$8034$8368, {{{1., 0.}, {0., 
                  1.}}, {-0.1414213562373095, 0.14142135623730953`}}, {{1, 
                 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                TrackedSymbols :> {DynamicChart`click$8034$8368}]],
              "DelayedClickEffect"], 
             TagBox[GeometricTransformationBox[
               TagBox[
                TagBox[
                 TooltipBox[
                  TagBox[{{}, {}},
                   StatusArea[#, 2]& ,
                   TagBoxNote->"2"],
                  StyleBox["2", {}, StripOnInput -> False]],
                 Annotation[#, 
                  Style[2, {}], "Tooltip"]& ],
                
                EventHandlerTag[{
                 "MouseClicked" :> FEPrivate`Set[DynamicChart`click$8040$8368, 
                    FEPrivate`Not[DynamicChart`click$8040$8368]], 
                  PassEventsDown -> True, Method -> "Preemptive", 
                  PassEventsUp -> True}]], Dynamic[
               FEPrivate`If[
                DynamicChart`click$8040$8368, {{{1., 0.}, {0., 1.}}, {
                  0.14142135623730953`, 0.1414213562373095}}, {{1, 0}, {0, 
                 1}}, {{1, 0}, {0, 1}}], 
                TrackedSymbols :> {DynamicChart`click$8040$8368}]],
              "DelayedClickEffect"], 
             TagBox[GeometricTransformationBox[
               TagBox[
                TagBox[
                 TooltipBox[
                  TagBox[{{}, {}},
                   StatusArea[#, 3]& ,
                   TagBoxNote->"3"],
                  StyleBox["3", {}, StripOnInput -> False]],
                 Annotation[#, 
                  Style[3, {}], "Tooltip"]& ],
                
                EventHandlerTag[{
                 "MouseClicked" :> FEPrivate`Set[DynamicChart`click$8046$8368, 
                    FEPrivate`Not[DynamicChart`click$8046$8368]], 
                  PassEventsDown -> True, Method -> "Preemptive", 
                  PassEventsUp -> True}]], Dynamic[
               FEPrivate`If[
                DynamicChart`click$8046$8368, {{{1., 0.}, {0., 1.}}, {
                  0.07653668647301798, -0.18477590650225736`}}, {{1, 0}, {0, 
                 1}}, {{1, 0}, {0, 1}}], 
                TrackedSymbols :> {DynamicChart`click$8046$8368}]],
              "DelayedClickEffect"], 
             TagBox[GeometricTransformationBox[
               TagBox[
                TagBox[
                 TooltipBox[
                  TagBox[{{}, {}},
                   StatusArea[#, 1]& ,
                   TagBoxNote->"1"],
                  StyleBox["1", {}, StripOnInput -> False]],
                 Annotation[#, 
                  Style[1, {}], "Tooltip"]& ],
                
                EventHandlerTag[{
                 "MouseClicked" :> FEPrivate`Set[DynamicChart`click$8052$8368, 
                    FEPrivate`Not[DynamicChart`click$8052$8368]], 
                  PassEventsDown -> True, Method -> "Preemptive", 
                  PassEventsUp -> True}]], Dynamic[
               FEPrivate`If[
                DynamicChart`click$8052$8368, {{{1., 0.}, {0., 
                  1.}}, {-0.18477590650225736`, -0.07653668647301798}}, {{1, 
                 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                TrackedSymbols :> {DynamicChart`click$8052$8368}]],
              "DelayedClickEffect"]}, {}}, {}}, {}, {}},
         DynamicModuleValues:>{}], {{}, {}}, {{{}, {}, {}, {}}, {}}},
       ContentSelectable->False,
       DisplayFunction->Identity,
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->{{0., 0.}, {0., 0.}},
       PlotRange->{{-1., 1.}, {-1., 1.}},
       PlotRangePadding->Scaled[0.09166666666666669]], {1365., -1755.}, 
      ImageScaled[{0.5, 0.5}], {360., 360.},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
     InsetBox[
      GraphicsBox[{{}, {}, 
        DynamicModuleBox[{DynamicChart`click$8121$8369 = False, 
         DynamicChart`click$8127$8369 = False, DynamicChart`click$8133$8369 = 
         False, DynamicChart`click$8139$8369 = False}, {
          {RGBColor[0.5, 0.5, 1.], EdgeForm[{GrayLevel[0], Opacity[
           0.5]}], {{{}, {
              {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{GrayLevel[
               0], Opacity[0.5]}], 
               TagBox[GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {0.7853981633974483, 
                    3.141592653589793}]},
                    
                    ImageSizeCache->{{9.588205718813434, 
                    89.29193667900896}, {-102.72429428118645`, \
-55.44914321881337}}],
                    "DelayedMouseEffectStyle"],
                    StatusArea[#, 3]& ,
                    TagBoxNote->"3"],
                    StyleBox["3", {}, StripOnInput -> False]],
                   Annotation[#, 
                    Style[3, {}], "Tooltip"]& ],
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$8121$8369, 
                    FEPrivate`Not[DynamicChart`click$8121$8369]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                 FEPrivate`If[
                  DynamicChart`click$8121$8369, {{{1., 0.}, {0., 
                    1.}}, {-0.07653668647301795, 0.18477590650225736`}}, {{1, 
                   0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$8121$8369}]],
                "DelayedClickEffect"]}, 
              {RGBColor[0.928, 0.5210666666666667, 0.2], EdgeForm[{GrayLevel[
               0], Opacity[0.5]}], 
               TagBox[GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-0.7853981633974483, 
                    0.7853981633974483}]},
                    
                    ImageSizeCache->{{55.44914321881342, 
                    102.7242942811865}, {-89.29193667900887, \
-23.02056332099093}}],
                    "DelayedMouseEffectStyle"],
                    StatusArea[#, 2]& ,
                    TagBoxNote->"2"],
                    StyleBox["2", {}, StripOnInput -> False]],
                   Annotation[#, 
                    Style[2, {}], "Tooltip"]& ],
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$8127$8369, 
                    FEPrivate`Not[DynamicChart`click$8127$8369]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                 FEPrivate`If[
                  DynamicChart`click$8127$8369, {{{1., 0.}, {0., 1.}}, {0.2, 
                    0.}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$8127$8369}]],
                "DelayedClickEffect"]}, 
              {RGBColor[0.7116405333333333, 0.4816, 0.5483194666666666], 
               EdgeForm[{GrayLevel[0], Opacity[0.5]}], 
               TagBox[GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-2.356194490192345, -0.7853981633974483}]},
                    
                    ImageSizeCache->{{23.020563320991002`, 
                    89.29193667900896}, {-56.86335678118647, \
-9.588205718813377}}],
                    "DelayedMouseEffectStyle"],
                    StatusArea[#, 2]& ,
                    TagBoxNote->"2"],
                    StyleBox["2", {}, StripOnInput -> False]],
                   Annotation[#, 
                    Style[2, {}], "Tooltip"]& ],
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$8133$8369, 
                    FEPrivate`Not[DynamicChart`click$8133$8369]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                 FEPrivate`If[
                  DynamicChart`click$8133$8369, {{{1., 0.}, {0., 1.}}, {
                    1.2246467991473533`*^-17, -0.2}}, {{1, 0}, {0, 1}}, {{1, 
                   0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$8133$8369}]],
                "DelayedClickEffect"]}, 
              {RGBColor[0.4992, 0.5552, 0.8309304], EdgeForm[{GrayLevel[0], 
               Opacity[0.5]}], 
               TagBox[GeometricTransformationBox[
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -2.356194490192345}]},
                    
                    ImageSizeCache->{{9.58820571881344, 
                    56.863356781186525`}, {-56.86335678118646, \
-23.020563320990938`}}],
                    "DelayedMouseEffectStyle"],
                    StatusArea[#, 1]& ,
                    TagBoxNote->"1"],
                    StyleBox["1", {}, StripOnInput -> False]],
                   Annotation[#, 
                    Style[1, {}], "Tooltip"]& ],
                  
                  EventHandlerTag[{
                   "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$8139$8369, 
                    FEPrivate`Not[DynamicChart`click$8139$8369]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                 FEPrivate`If[
                  DynamicChart`click$8139$8369, {{{1., 0.}, {0., 
                    1.}}, {-0.18477590650225736`, -0.07653668647301798}}, {{1,
                    0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                  TrackedSymbols :> {DynamicChart`click$8139$8369}]],
                "DelayedClickEffect"]}}}, {}}, {}}, {{{
             TagBox[GeometricTransformationBox[
               TagBox[
                TagBox[
                 TooltipBox[
                  TagBox[{{}, {}},
                   StatusArea[#, 3]& ,
                   TagBoxNote->"3"],
                  StyleBox["3", {}, StripOnInput -> False]],
                 Annotation[#, 
                  Style[3, {}], "Tooltip"]& ],
                
                EventHandlerTag[{
                 "MouseClicked" :> FEPrivate`Set[DynamicChart`click$8121$8369, 
                    FEPrivate`Not[DynamicChart`click$8121$8369]], 
                  PassEventsDown -> True, Method -> "Preemptive", 
                  PassEventsUp -> True}]], Dynamic[
               FEPrivate`If[
                DynamicChart`click$8121$8369, {{{1., 0.}, {0., 
                  1.}}, {-0.07653668647301795, 0.18477590650225736`}}, {{1, 
                 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                TrackedSymbols :> {DynamicChart`click$8121$8369}]],
              "DelayedClickEffect"], 
             TagBox[GeometricTransformationBox[
               TagBox[
                TagBox[
                 TooltipBox[
                  TagBox[{{}, {}},
                   StatusArea[#, 2]& ,
                   TagBoxNote->"2"],
                  StyleBox["2", {}, StripOnInput -> False]],
                 Annotation[#, 
                  Style[2, {}], "Tooltip"]& ],
                
                EventHandlerTag[{
                 "MouseClicked" :> FEPrivate`Set[DynamicChart`click$8127$8369, 
                    FEPrivate`Not[DynamicChart`click$8127$8369]], 
                  PassEventsDown -> True, Method -> "Preemptive", 
                  PassEventsUp -> True}]], Dynamic[
               FEPrivate`If[
                DynamicChart`click$8127$8369, {{{1., 0.}, {0., 1.}}, {0.2, 
                  0.}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                TrackedSymbols :> {DynamicChart`click$8127$8369}]],
              "DelayedClickEffect"], 
             TagBox[GeometricTransformationBox[
               TagBox[
                TagBox[
                 TooltipBox[
                  TagBox[{{}, {}},
                   StatusArea[#, 2]& ,
                   TagBoxNote->"2"],
                  StyleBox["2", {}, StripOnInput -> False]],
                 Annotation[#, 
                  Style[2, {}], "Tooltip"]& ],
                
                EventHandlerTag[{
                 "MouseClicked" :> FEPrivate`Set[DynamicChart`click$8133$8369, 
                    FEPrivate`Not[DynamicChart`click$8133$8369]], 
                  PassEventsDown -> True, Method -> "Preemptive", 
                  PassEventsUp -> True}]], Dynamic[
               FEPrivate`If[
                DynamicChart`click$8133$8369, {{{1., 0.}, {0., 1.}}, {
                  1.2246467991473533`*^-17, -0.2}}, {{1, 0}, {0, 1}}, {{1, 
                 0}, {0, 1}}], 
                TrackedSymbols :> {DynamicChart`click$8133$8369}]],
              "DelayedClickEffect"], 
             TagBox[GeometricTransformationBox[
               TagBox[
                TagBox[
                 TooltipBox[
                  TagBox[{{}, {}},
                   StatusArea[#, 1]& ,
                   TagBoxNote->"1"],
                  StyleBox["1", {}, StripOnInput -> False]],
                 Annotation[#, 
                  Style[1, {}], "Tooltip"]& ],
                
                EventHandlerTag[{
                 "MouseClicked" :> FEPrivate`Set[DynamicChart`click$8139$8369, 
                    FEPrivate`Not[DynamicChart`click$8139$8369]], 
                  PassEventsDown -> True, Method -> "Preemptive", 
                  PassEventsUp -> True}]], Dynamic[
               FEPrivate`If[
                DynamicChart`click$8139$8369, {{{1., 0.}, {0., 
                  1.}}, {-0.18477590650225736`, -0.07653668647301798}}, {{1, 
                 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                TrackedSymbols :> {DynamicChart`click$8139$8369}]],
              "DelayedClickEffect"]}, {}}, {}}, {}, {}},
         DynamicModuleValues:>{}], {{}, {}}, {{{}, {}, {}, {}}, {}}},
       ContentSelectable->False,
       DisplayFunction->Identity,
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->{{0., 0.}, {0., 0.}},
       PlotRange->{{-1., 1.}, {-1., 1.}},
       PlotRangePadding->Scaled[0.09166666666666669]], {1755., -1755.}, 
      ImageScaled[{0.5, 0.5}], {360., 360.},
      BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}]}}, {}},
  
  ImageSize->{
    UpTo[600], 
    UpTo[700]},
  Method->{"IgnoreImageSizeAutomaticLimit" -> True},
  PlotRangePadding->Automatic]], "Output",
 CellChangeTimes->{{3.952506465182232*^9, 3.952506495178175*^9}, {
   3.9525065713291616`*^9, 3.952506665370027*^9}, 3.952508432257818*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"affd533f-585a-4971-93ef-38268a6dafa3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphicsRow", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"WordCloud", "[", 
     RowBox[{"TextWords", "[", 
      RowBox[{"WikipediaData", "[", "#", "]"}], "]"}], "]"}], "&"}], "/@", 
   RowBox[{"EntityList", "[", 
    TemplateBox[<|
     "query" -> "g5 countries", "boxes" -> TemplateBox[{"\"Group of 5\"", 
         RowBox[{"EntityClass", "[", 
           RowBox[{"\"Country\"", ",", "\"GroupOf5\""}], "]"}], 
         "\"EntityClass[\\\"Country\\\", \\\"GroupOf5\\\"]\"", 
         "\"countries\""}, "EntityClass"], 
      "allassumptions" -> {{
        "word" -> "", "template" -> 
         "Assuming the input is a class of countries${separator}Use \"g5\" as \
${desc} instead", "count" -> "2", "pulldown" -> "false", "type" -> 
         "MultiClash", "default" -> 
         "{\"MC\", \"\"} -> {\"CountryClass\", \"dflt\"}", 
         "Values" -> {{
           "name" -> "CountryClass", "desc" -> "a class of countries", 
            "input" -> "{\"MC\", \"\"} -> {\"CountryClass\"}", "word" -> 
            "the input"}, {
           "name" -> "Company", "desc" -> "a company", "input" -> 
            "{\"MC\", \"\"} -> {\"Company\"}", "word" -> "g5"}}}}, 
      "assumptions" -> {}, "open" -> {1, 2}, 
      "querystate" -> {
       "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
        1.35791`6.584415980083578, "Messages" -> {}}, "contextinfo" -> 
      Automatic, "version" -> 5|>,
     "LinguisticAssistantTemplate"], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.95250668358668*^9, 3.952506719661138*^9}, {
  3.95250678465449*^9, 3.952506789272072*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"3a5121e5-4976-4ef8-a9c0-f061ff4f7c2b"],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     GraphicsBox[{InsetBox[
        StyleBox["\<\"the\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.32407407407407407`],
         FontColor->RGBColor[0.368417, 0.506779, 0.709798]], {0, 0}, Center, 
        Automatic], InsetBox[
        StyleBox["\<\"and\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.1674074074074074],
         FontColor->RGBColor[0.560181, 0.691569, 0.194885]], {18., 28.}, 
        Center, Automatic], InsetBox[
        StyleBox["\<\"France\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.09496296296296296],
         FontColor->RGBColor[0.528488, 0.470624, 0.701351]], {4., -35.}, 
        Center, Automatic], InsetBox[
        StyleBox["\<\"of\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.17296296296296296`],
         FontColor->RGBColor[0.880722, 0.611041, 0.142051]], {-23., 43.}, 
        Center, Automatic], InsetBox[
        StyleBox["\<\"French\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.08629629629629629],
         FontColor->RGBColor[0.363898, 0.618501, 0.782349]], {-6., -53.}, 
        Center, Automatic], InsetBox[
        StyleBox["\<\"government\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04940740740740741],
         FontColor->RGBColor[
          0.9052934053395919, 0.510195603559728, 0.06776406480563275]], {24., 50.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"Metropolitan\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.047407407407407405`],
         FontColor->RGBColor[
          0.845266573755366, 0.437100139366951, 0.03816643438841502]], {-54., -32.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"European\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.05051851851851852],
         FontColor->RGBColor[
          0.7132613816472081, 0.358, 0.5392132590042952]], {19., 62.}, Center,
         Automatic], InsetBox[
        StyleBox["\<\"population\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.048074074074074075`],
         FontColor->RGBColor[
          0.47929071933511125`, 0.715, 0.1759027208462221]], {60., -31.}, 
        Center, Automatic], InsetBox[
        StyleBox["\<\"including\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.046518518518518515`],
         FontColor->RGBColor[
          0.3383114092015346, 0.5643508726387724, 0.8209736910418415]], {-66., -1.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"Republic\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.047851851851851854`],
         FontColor->RGBColor[
          0.7896667828057927, 0.3575666434388414, 0.4213886953236787]], {-64., -15.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"century\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.054740740740740736`],
         FontColor->RGBColor[
          0.5407932311309059, 0.715, 0.09762679674248334]], {42., -50.}, 
        Center, Automatic], InsetBox[
        StyleBox["\<\"in\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.14829629629629626`],
         FontColor->RGBColor[0.922526, 0.385626, 0.209179]], {59., 0.}, 
        Center, Automatic], InsetBox[
        StyleBox["\<\"Europe\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.05074074074074074],
         FontColor->RGBColor[
          0.35558897405758294`, 0.5505288207539337, 0.8417067688690995]], {-58., 29.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"country\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.048296296296296296`],
         FontColor->RGBColor[
          0.2187618985811806, 0.715, 0.5074848563512248]], {-5., -66.}, 
        Center, Automatic], InsetBox[
        StyleBox["\<\"economic\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.048074074074074075`],
         FontColor->RGBColor[
          0.3103557220216354, 0.5867154223826917, 0.7874268664259625]], {-41., 58.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"leading\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.046518518518518515`],
         FontColor->RGBColor[
          0.7042770479220728, 0.358, 0.5530353108891188]], {63., 19.}, Center,
         Automatic], InsetBox[
        StyleBox["\<\"Empire\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.048962962962962965`],
         FontColor->RGBColor[
          0.9038177251280404, 0.3492734123079395, 0.18454431282010084`]], {-51., -43.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"military\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.046740740740740735`],
         FontColor->RGBColor[
          0.9840111653093676, 0.677555826546838, 0.04316985366470745]], {-67., 12.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"largest\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.049851851851851856`],
         FontColor->RGBColor[0.9810598048862722, 0.7553955338762525, 0.]], {-57., 40.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"countries\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04696296296296296],
         FontColor->RGBColor[
          0.922066817647527, 0.5213778784316846, 0.08286013588277422]], {0., 73.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"among\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.047629629629629626`],
         FontColor->RGBColor[0.7175796237092107, 0.7261199581899123, 0.]], {63., 31.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"between\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.048962962962962965`],
         FontColor->RGBColor[0.6361597700445392, 0.7170733077827265, 0.]], {42., -62.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"France's\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.048074074074074075`],
         FontColor->RGBColor[
          0.9492067688690977, 0.5394711792460651, 0.10728609198218791`]], {-54., -55.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"National\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04962962962962963],
         FontColor->RGBColor[
          0.8168067340273636, 0.3521386531945273, 0.3761554432877274]], {0., -78.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"power\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.047629629629629626`],
         FontColor->RGBColor[
          0.9046334610863751, 0.334573307782725, 0.22977756485604156`]], {-40., -65.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"during\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.048074074074074075`],
         FontColor->RGBColor[
          0.8607200975568693, 0.34335598048862614`, 0.30296650407188447`]], {37., 70.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"became\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.047407407407407405`],
         FontColor->RGBColor[
          0.38354466123747527`, 0.5323732032575149, 0.85]], {-40., 70.}, 
        Center, Automatic], InsetBox[
        StyleBox["\<\"major\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.047851851851851854`],
         FontColor->RGBColor[
          0.5019668524892619, 0.46131988850644284`, 0.85]], {68., 43.}, 
        Center, Automatic], InsetBox[
        StyleBox["\<\"million\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.05318518518518518],
         FontColor->RGBColor[
          0.9874666782805795, 0.6948333914028977, 0.033839968642435214`]], {-11., 83.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"which\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.05762962962962963],
         FontColor->RGBColor[
          0.5833680111493557, 0.4126186601628758, 0.8290799721266107]], {37., -76.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"modern\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.046518518518518515`],
         FontColor->RGBColor[
          0.8633598745697435, 0.40996018814538476`, 0.08339968642435877]], {-39., -77.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"overseas\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.047407407407407405`],
         FontColor->RGBColor[
          0.5750747800184488, 0.4174563783225715, 0.8498130499538777]], {32., 82.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"Second\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.047185185185185184`],
         FontColor->RGBColor[
          0.26512246998569167`, 0.6229020240114467, 0.73314696398283]], {71., 55.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"world\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.055185185185185184`],
         FontColor->RGBColor[
          0.6753413537738198, 0.3589675436319385, 0.5991466155654507]], {78., -42.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"from\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.061629629629629624`],
         FontColor->RGBColor[
          0.9728288904374106, 0.621644452187053, 0.07336199581899142]], {-13., -90.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"world's\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.046740740740740735`],
         FontColor->RGBColor[
          0.6102054708420535, 0.39696347534213544`, 0.7619863228948663]], {81., -17.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"many\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.047407407407407405`],
         FontColor->RGBColor[
          0.31827505306025683`, 0.715, 0.3808317506505822]], {15., -89.}, 
        Center, Automatic], InsetBox[
        StyleBox["\<\"nuclear\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.046740740740740735`],
         FontColor->RGBColor[
          0.7658565873730018, 0.358, 0.4582975578876895]], {-47., 81.}, 
        Center, Automatic], InsetBox[
        StyleBox["\<\"by\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.0714074074074074],
         FontColor->RGBColor[0.571589, 0.586483, 0.]], {80., 0.}, Center, 
        Automatic], InsetBox[
        StyleBox["\<\"with\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.061629629629629624`],
         FontColor->RGBColor[0.736782672705901, 0.358, 0.5030266573755369]], {-77., 54.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"was\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.07118518518518518],
         FontColor->RGBColor[0.915, 0.3325, 0.2125]], {76., -55.}, Center, 
        Automatic], InsetBox[
        StyleBox["\<\"most\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.05651851851851852],
         FontColor->RGBColor[
          0.28240003484173815`, 0.6090799721266095, 0.7538800418100857]], {68., 67.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"under\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.046740740740740735`],
         FontColor->RGBColor[
          0.8510135028964549, 0.47400900193096995`, 0.018912152606809424`]], {-70., -66.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"known\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.046518518518518515`],
         FontColor->RGBColor[
          0.9603267270590103, 0.5591336352950514, 0.10711783694067224`]], {-43., -89.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"include\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.046296296296296294`],
         FontColor->RGBColor[
          0.6453361616656581, 0.37647057236169945`, 0.6741595958358548]], {12., 92.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"to\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.08940740740740741],
         FontColor->RGBColor[0.772079, 0.431554, 0.102387]], {-86., 25.}, 
        Center, Automatic], InsetBox[
        StyleBox["\<\"Years\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.047407407407407405`],
         FontColor->RGBColor[
          0.8335801463353031, 0.3487839707329394, 0.3481997561078282]], {-82., -41.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"were\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.0514074074074074],
         FontColor->RGBColor[
          0.8613800418100862, 0.48092002787339083`, 0.02824203762907758]], {42., -87.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"Louis\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.046518518518518515`],
         FontColor->RGBColor[
          0.4177882075393331, 0.715, 0.25417864494993975`]], {-72., 68.}, 
        Center, Automatic], InsetBox[
        StyleBox["\<\"other\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.048074074074074075`],
         FontColor->RGBColor[
          0.6897400905885174, 0.358, 0.5753998606330502]], {68., -72.}, 
        Center, Automatic], InsetBox[
        StyleBox["\<\"Franks\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.046518518518518515`],
         FontColor->RGBColor[
          0.8774935098648088, 0.34000129802703827`, 0.2750108168919853]], {-41., 92.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"such\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.052962962962962955`],
         FontColor->RGBColor[
          0.7748409210981391, 0.358, 0.4444755060028629]], {66., 77.}, Center,
         Automatic], InsetBox[
        StyleBox["\<\"more\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.047851851851851854`],
         FontColor->RGBColor[
          0.9930578157165594, 0.7227890785827968, 0.01874389756528967]], {-71., -76.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"Public\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04696296296296296],
         FontColor->RGBColor[
          0.5788038738141875, 0.715, 0.049249615145579635`]], {44., 92.}, 
        Center, Automatic], InsetBox[
        StyleBox["\<\"three\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.046518518518518515`],
         FontColor->RGBColor[
          0.9986489531525362, 0.7507447657626809, 0.0036478264881522893`]], {68., -85.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"There\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.046518518518518515`],
         FontColor->RGBColor[
          0.529922539669161, 0.44454647619850335`, 0.85]], {-79., 79.}, 
        Center, Automatic], InsetBox[
        StyleBox["\<\"Union\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.047407407407407405`],
         FontColor->RGBColor[0.9307395679624266, 0.7498043964402695, 0.]], {74., 87.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"after\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.047629629629629626`],
         FontColor->RGBColor[
          0.6319174318193065, 0.38429816477207124`, 0.7077064204517338]], {-71., -88.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"been\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04874074074074074],
         FontColor->RGBColor[0.428777913273419, 0.5052332520359486, 0.85]], {-69., 91.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"since\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04962962962962963],
         FontColor->RGBColor[
          0.23716678280579248`, 0.645266573755366, 0.699600139366951]], {94., 9.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"Paris\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.050074074074074076`],
         FontColor->RGBColor[
          0.5472001045252132, 0.43417993728487203`, 0.85]], {-87., 38.}, 
        Center, Automatic], InsetBox[
        StyleBox["\<\"over\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.048518518518518516`],
         FontColor->RGBColor[
          0.7513196300394465, 0.358, 0.48066210763162087`]], {90., 28.}, 
        Center, Automatic], InsetBox[
        StyleBox["\<\"part\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04696296296296296],
         FontColor->RGBColor[
          0.6670481226429111, 0.3638052617916352, 0.6198796933927223]], {-95., -12.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"are\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.061407407407407404`],
         FontColor->RGBColor[
          0.28026441037696703`, 0.715, 0.4292089322474965]], {-97., 1.}, 
        Center, Automatic], InsetBox[
        StyleBox["\<\"their\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.046740740740740735`],
         FontColor->RGBColor[
          0.15725938678540247`, 0.715, 0.5857607804549424]], {-95., -25.}, 
        Center, Automatic], InsetBox[
        StyleBox["\<\"than\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.048074074074074075`],
         FontColor->RGBColor[
          0.8745421494417032, 0.39318677583744527`, 0.11135537360425793`]], {-85., -53.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"one\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.05118518518518518],
         FontColor->RGBColor[
          0.6184987019729621, 0.39212575718243875`, 0.7412532450675947]], {96., -27.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"has\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.05696296296296296],
         FontColor->RGBColor[0.8996399512215667, 0.7463488834690629, 0.]], {93., 38.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"some\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04696296296296296],
         FontColor->RGBColor[
          0.8926354502560807, 0.366046824615879, 0.15658862564020168`]], {1., -101.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"19th\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.046518518518518515`],
         FontColor->RGBColor[0.7989994773739094, 0.735166608597101, 0.]], {25., -101.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"War\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.047851851851851854`],
         FontColor->RGBColor[
          0.8781534541180211, 0.4921023027453475, 0.04333810870621905]], {-14., 100.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"state\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.047851851851851854`],
         FontColor->RGBColor[
          0.19193353076984873`, 0.681453175384121, 0.6453202369238185]], {-24., -102.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"for\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.05985185185185185],
         FontColor->RGBColor[
          0.838355547812947, 0.44746667828057946`, 0.0208888695323676]], {96., 48.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"also\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.048074074074074075`],
         FontColor->RGBColor[0.8493197142977551, 0.7407577460330839, 0.]], {-47., -100.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"into\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.049185185185185186`],
         FontColor->RGBColor[
          0.6536293927965667, 0.37163285420200276`, 0.6534265180085832]], {47., -100.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"have\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.048296296296296296`],
         FontColor->RGBColor[
          0.8342400905885153, 0.4628267270590103, 0.0038160815296638794`]], {94., 65.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"New\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.046296296296296294`],
         FontColor->RGBColor[0.6672593867853922, 0.7205288207539324, 0.]], {-96., 62.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"20th\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.046296296296296294`],
         FontColor->RGBColor[
          0.8064401951137368, 0.3542119609772526, 0.39343300814377197`]], {92., -68.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"First\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.047407407407407405`],
         FontColor->RGBColor[
          0.7277983389807635, 0.358, 0.5168487092603637]], {-95., -65.}, 
        Center, Automatic], InsetBox[
        StyleBox["\<\"that\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.0502962962962963],
         FontColor->RGBColor[
          0.8564488486273256, 0.42032672705901153`, 0.06612212156831418]], {69., -98.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"law\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.05074074074074074],
         FontColor->RGBColor[
          0.9637822400302223, 0.5764112001511111, 0.0977879519184]], {-93., -77.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"as\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.06962962962962962],
         FontColor->RGBColor[
          0.40082222609352647`, 0.5220066643438841, 0.85]], {98., -2.}, 
        Center, Automatic], InsetBox[
        StyleBox["\<\"not\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.046296296296296294`],
         FontColor->RGBColor[
          0.9107287510704583, 0.33890687339431275`, 0.20182187767614543`]], {89., 77.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"had\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.046296296296296294`],
         FontColor->RGBColor[
          0.8949268664259606, 0.5032845776173072, 0.05843417978336459]], {-67., -100.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"this\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.048296296296296296`],
         FontColor->RGBColor[
          0.596786740995709, 0.404791067752503, 0.7955331475107271]], {91., -80.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"area\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.046740740740740735`],
         FontColor->RGBColor[0.4567336004533182, 0.4884598397280091, 0.85]], {-65., 102.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"is\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.07585185185185185],
         FontColor->RGBColor[0.647624, 0.37816, 0.614037]], {100., -42.}, 
        Center, Automatic], InsetBox[
        StyleBox["\<\"but\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.047407407407407405`],
         FontColor->RGBColor[
          0.969373377466199, 0.6043668873309952, 0.08269188084126262]], {68., 99.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"a\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.08274074074074074],
         FontColor->RGBColor[1, 0.75, 0]], {-100., 14.}, Center, Automatic], 
       InsetBox[
        StyleBox["\<\"an\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.05074074074074074],
         FontColor->RGBColor[
          0.8878600487784333, 0.33792799024431336`, 0.2577332520359445]], {54., -17.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"on\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.05096296296296295],
         FontColor->RGBColor[0.7678998606330495, 0.7317110956258943, 0.]], {-98., 50.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"BC\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.046296296296296294`],
         FontColor->RGBColor[
          0.2198892179497479, 0.6590886256402017, 0.6788670615396974]], {100., -55.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"de\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.054518518518518515`],
         FontColor->RGBColor[
          0.8857244243136628, 0.3764133635295058, 0.1393110607841571]], {-98., 73.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"Its\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.056296296296296296`],
         FontColor->RGBColor[
          0.9324333565611593, 0.5282889043741062, 0.0921900209050434]], {-90., -91.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"His\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.048518518518518516`],
         FontColor->RGBColor[
          0.9784200278733908, 0.649600139366954, 0.058265924741844846`]], {-90., 91.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"or\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.05051851851851852],
         FontColor->RGBColor[
          0.37977756485605163`, 0.715, 0.3025558265468435]], {-101., -44.}, 
        Center, Automatic], InsetBox[
        StyleBox["\<\"%\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.0534074074074074],
         FontColor->RGBColor[
          0.47401116530937026`, 0.47809330081437784`, 0.85]], {-102., 25.}, 
        Center, Automatic], InsetBox[
        StyleBox["\<\"at\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.052740740740740734`],
         FontColor->RGBColor[
          0.16397784358994957`, 0.7038177251280403, 0.6117734123079395]], {87., -93.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"it\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.05651851851851852],
         FontColor->RGBColor[
          0.8439466852489265, 0.3467106629502147, 0.3309221912517893]], {82., 98.},
         Center, Automatic]},
      DefaultBaseStyle->{"Graphics", FontFamily -> "Source Sans Pro"},
      DisplayFunction->Identity,
      ImagePadding->{{0., 0.}, {0., 0.}},
      Method->{
       "DefaultBoundaryStyle" -> Automatic, 
        "DefaultGraphicsInteraction" -> {
         "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
          "Effects" -> {
           "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
            "Droplines" -> {
             "freeformCursorMode" -> True, 
              "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
        "DefaultPlotStyle" -> Automatic},
      PlotRange->{{-108.5, 107.5}, {-108.5, 106.5}}], {65., -62.71875000000001},
      ImageScaled[{0.5, 0.5}], {120., 119.46428571428572},
     BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
    InsetBox[
     GraphicsBox[{InsetBox[
        StyleBox["\<\"the\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.31674208144796384`],
         FontColor->RGBColor[0.368417, 0.506779, 0.709798]], {0, 0}, Center, 
        Automatic], InsetBox[
        StyleBox["\<\"Germany\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.09831500744637754],
         FontColor->RGBColor[0.528488, 0.470624, 0.701351]], {-13., -32.}, 
        Center, Automatic], InsetBox[
        StyleBox["\<\"and\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.1554894923339401],
         FontColor->RGBColor[0.560181, 0.691569, 0.194885]], {16., 28.}, 
        Center, Automatic], InsetBox[
        StyleBox["\<\"German\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.08496288223311442],
         FontColor->RGBColor[0.772079, 0.431554, 0.102387]], {0., 43.}, 
        Center, Automatic], InsetBox[
        StyleBox["\<\"of\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.16952634191711413`],
         FontColor->RGBColor[0.880722, 0.611041, 0.142051]], {-2., -57.}, 
        Center, Automatic], InsetBox[
        StyleBox["\<\"government\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04696067970305787],
         FontColor->RGBColor[
          0.8745421494417032, 0.39318677583744527`, 0.11135537360425793`]], {9., 55.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"development\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04559123096323601],
         FontColor->RGBColor[0.4567336004533182, 0.4884598397280091, 0.85]], {-59., 28.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"European\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.051753750292434376`],
         FontColor->RGBColor[
          0.6753413537738198, 0.3589675436319385, 0.5991466155654507]], {-42., -47.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"Germany's\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04867249062783519],
         FontColor->RGBColor[
          0.8168067340273636, 0.3521386531945273, 0.3761554432877274]], {56., -32.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"population\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.048330128442879726`],
         FontColor->RGBColor[0.6361597700445392, 0.7170733077827265, 0.]], {-10., 64.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"According\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04524886877828055],
         FontColor->RGBColor[
          0.8633598745697435, 0.40996018814538476`, 0.08339968642435877]], {38., -51.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"economy\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.0466183175181024],
         FontColor->RGBColor[
          0.19193353076984873`, 0.681453175384121, 0.6453202369238185]], {-65., 0.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"international\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04696067970305787],
         FontColor->RGBColor[
          0.5019668524892619, 0.46131988850644284`, 0.85]], {-63., 40.}, 
        Center, Automatic], InsetBox[
        StyleBox["\<\"in\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.15069642174456357`],
         FontColor->RGBColor[0.922526, 0.385626, 0.209179]], {60., 0.}, 
        Center, Automatic], InsetBox[
        StyleBox["\<\"Republic\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.0476454040729688],
         FontColor->RGBColor[0.8493197142977551, 0.7407577460330839, 0.]], {-65., -15.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"country\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.049357214997746125`],
         FontColor->RGBColor[
          0.37977756485605163`, 0.715, 0.3025558265468435]], {62., 19.}, 
        Center, Automatic], InsetBox[
        StyleBox["\<\"Democratic\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04524886877828055],
         FontColor->RGBColor[0.6672593867853922, 0.7205288207539324, 0.]], {72., -19.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"Economic\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04524886877828055],
         FontColor->RGBColor[
          0.9107287510704583, 0.33890687339431275`, 0.20182187767614543`]], {32., -63.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"military\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04593359314819148],
         FontColor->RGBColor[
          0.5750747800184488, 0.4174563783225715, 0.8498130499538777]], {-67., 12.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"Empire\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.0476454040729688],
         FontColor->RGBColor[
          0.2187618985811806, 0.715, 0.5074848563512248]], {61., 31.}, Center,
         Automatic], InsetBox[
        StyleBox["\<\"Europe\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.0514113881074789],
         FontColor->RGBColor[
          0.47401116530937026`, 0.47809330081437784`, 0.85]], {-37., -62.}, 
        Center, Automatic], InsetBox[
        StyleBox["\<\"Germanic\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04559123096323601],
         FontColor->RGBColor[
          0.8510135028964549, 0.47400900193096995`, 0.018912152606809424`]], {38., 65.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"system\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.0466183175181024],
         FontColor->RGBColor[
          0.38354466123747527`, 0.5323732032575149, 0.85]], {55., 50.}, 
        Center, Automatic], InsetBox[
        StyleBox["\<\"chancellor\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04559123096323601],
         FontColor->RGBColor[
          0.8926354502560807, 0.366046824615879, 0.15658862564020168`]], {0., 75.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"National\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04867249062783519],
         FontColor->RGBColor[
          0.9052934053395919, 0.510195603559728, 0.06776406480563275]], {-56., 53.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"largest\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04901485281279065],
         FontColor->RGBColor[
          0.5472001045252132, 0.43417993728487203`, 0.85]], {-73., -28.}, 
        Center, Automatic], InsetBox[
        StyleBox["\<\"power\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.0466183175181024],
         FontColor->RGBColor[
          0.9046334610863751, 0.334573307782725, 0.22977756485604156`]], {11., -76.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"During\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04559123096323601],
         FontColor->RGBColor[
          0.9840111653093676, 0.677555826546838, 0.04316985366470745]], {-20., -78.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"Federal\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.051753750292434376`],
         FontColor->RGBColor[
          0.5407932311309059, 0.715, 0.09762679674248334]], {-55., 65.}, 
        Center, Automatic], InsetBox[
        StyleBox["\<\"among\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04524886877828055],
         FontColor->RGBColor[
          0.529922539669161, 0.44454647619850335`, 0.85]], {43., -74.}, 
        Center, Automatic], InsetBox[
        StyleBox["\<\"million\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.05038430155261251],
         FontColor->RGBColor[0.7678998606330495, 0.7317110956258943, 0.]], {-4., 87.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"countries\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04524886877828055],
         FontColor->RGBColor[
          0.8949268664259606, 0.5032845776173072, 0.05843417978336459]], {45., 76.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"major\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.0476454040729688],
         FontColor->RGBColor[
          0.8342400905885153, 0.4628267270590103, 0.0038160815296638794`]], {75., -45.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"include\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04798776625792426],
         FontColor->RGBColor[
          0.9038177251280404, 0.3492734123079395, 0.18454431282010084`]], {-42., 78.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"years\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04593359314819148],
         FontColor->RGBColor[
          0.6670481226429111, 0.3638052617916352, 0.6198796933927223]], {86., 0.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"Austria\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04559123096323601],
         FontColor->RGBColor[
          0.5788038738141875, 0.715, 0.049249615145579635`]], {17., -87.}, 
        Center, Automatic], InsetBox[
        StyleBox["\<\"world's\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04696067970305787],
         FontColor->RGBColor[
          0.9930578157165594, 0.7227890785827968, 0.01874389756528967]], {-53., -74.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"Roman\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04627595533314694],
         FontColor->RGBColor[
          0.31827505306025683`, 0.715, 0.3808317506505822]], {-17., -90.}, 
        Center, Automatic], InsetBox[
        StyleBox["\<\"Around\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04524886877828055],
         FontColor->RGBColor[
          0.9986489531525362, 0.7507447657626809, 0.0036478264881522893`]], {31., 87.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"which\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.05072666373756798],
         FontColor->RGBColor[
          0.8613800418100862, 0.48092002787339083`, 0.02824203762907758]], {-82., -43.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"World\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.05449264777207809],
         FontColor->RGBColor[
          0.28240003484173815`, 0.6090799721266095, 0.7538800418100857]], {-71., -61.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"became\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.0476454040729688],
         FontColor->RGBColor[
          0.7513196300394465, 0.358, 0.48066210763162087`]], {-41., 89.}, 
        Center, Automatic], InsetBox[
        StyleBox["\<\"France\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04593359314819148],
         FontColor->RGBColor[
          0.845266573755366, 0.437100139366951, 0.03816643438841502]], {76., -57.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"from\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.05825863180658819],
         FontColor->RGBColor[
          0.28026441037696703`, 0.715, 0.4292089322474965]], {75., 60.}, 
        Center, Automatic], InsetBox[
        StyleBox["\<\"market\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04559123096323601],
         FontColor->RGBColor[0.7989994773739094, 0.735166608597101, 0.]], {50., -88.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"health\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04559123096323601],
         FontColor->RGBColor[
          0.6102054708420535, 0.39696347534213544`, 0.7619863228948663]], {-50., -86.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"states\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04798776625792426],
         FontColor->RGBColor[
          0.9784200278733908, 0.649600139366954, 0.058265924741844846`]], {74., -68.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"by\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.06750241080038573],
         FontColor->RGBColor[0.571589, 0.586483, 0.]], {80., 42.}, Center, 
        Automatic], InsetBox[
        StyleBox["\<\"early\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04559123096323601],
         FontColor->RGBColor[
          0.7658565873730018, 0.358, 0.4582975578876895]], {59., 88.}, Center,
         Automatic], InsetBox[
        StyleBox["\<\"with\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.059628080546410056`],
         FontColor->RGBColor[
          0.9728288904374106, 0.621644452187053, 0.07336199581899142]], {-73., 77.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"other\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04627595533314694],
         FontColor->RGBColor[
          0.7277983389807635, 0.358, 0.5168487092603637]], {81., 70.}, Center,
         Automatic], InsetBox[
        StyleBox["\<\"North\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.0476454040729688],
         FontColor->RGBColor[
          0.596786740995709, 0.404791067752503, 0.7955331475107271]], {-85., -73.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"Berlin\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.050041939367657044`],
         FontColor->RGBColor[
          0.9637822400302223, 0.5764112001511111, 0.0977879519184]], {82., -82.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"more\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04593359314819148],
         FontColor->RGBColor[0.9307395679624266, 0.7498043964402695, 0.]], {-78., -83.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"Court\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04524886877828055],
         FontColor->RGBColor[
          0.6453361616656581, 0.37647057236169945`, 0.6741595958358548]], {-74., 89.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"to\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.08393579567824802],
         FontColor->RGBColor[0.363898, 0.618501, 0.782349]], {-86., 55.}, 
        Center, Automatic], InsetBox[
        StyleBox["\<\"After\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.050041939367657044`],
         FontColor->RGBColor[
          0.35558897405758294`, 0.5505288207539337, 0.8417067688690995]], {84., 81.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"most\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.05072666373756798],
         FontColor->RGBColor[
          0.16397784358994957`, 0.7038177251280403, 0.6117734123079395]], {85., 93.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"Union\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.047303041888013334`],
         FontColor->RGBColor[
          0.9492067688690977, 0.5394711792460651, 0.10728609198218791`]], {19., 96.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"state\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.0476454040729688],
         FontColor->RGBColor[
          0.8607200975568693, 0.34335598048862614`, 0.30296650407188447`]], {94., 10.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"east\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.052438474662345295`],
         FontColor->RGBColor[
          0.9324333565611593, 0.5282889043741062, 0.0921900209050434]], {94., 21.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"was\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.059628080546410056`],
         FontColor->RGBColor[
          0.40082222609352647`, 0.5220066643438841, 0.85]], {-97., 9.}, 
        Center, Automatic], InsetBox[
        StyleBox["\<\"been\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04901485281279065],
         FontColor->RGBColor[
          0.8564488486273256, 0.42032672705901153`, 0.06612212156831418]], {-8., 98.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"were\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.050041939367657044`],
         FontColor->RGBColor[
          0.7132613816472081, 0.358, 0.5392132590042952]], {94., -30.}, 
        Center, Automatic], InsetBox[
        StyleBox["\<\"2019\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04696067970305787],
         FontColor->RGBColor[
          0.6897400905885174, 0.358, 0.5753998606330502]], {-98., -8.}, 
        Center, Automatic], InsetBox[
        StyleBox["\<\"have\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04867249062783519],
         FontColor->RGBColor[
          0.23716678280579248`, 0.645266573755366, 0.699600139366951]], {12., -99.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"west\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.05038430155261251],
         FontColor->RGBColor[
          0.8878600487784333, 0.33792799024431336`, 0.2577332520359445]], {-13., -103.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"their\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04593359314819148],
         FontColor->RGBColor[
          0.26512246998569167`, 0.6229020240114467, 0.73314696398283]], {-32., 100.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"2023\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04627595533314694],
         FontColor->RGBColor[
          0.969373377466199, 0.6043668873309952, 0.08269188084126262]], {36., -98.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"since\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04798776625792426],
         FontColor->RGBColor[0.428777913273419, 0.5052332520359486, 0.85]], {-39., -100.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"Park\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04559123096323601],
         FontColor->RGBColor[
          0.3383114092015346, 0.5643508726387724, 0.8209736910418415]], {44., 98.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"for\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.05928571836145458],
         FontColor->RGBColor[0.736782672705901, 0.358, 0.5030266573755369]], {-98., 21.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"who\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04559123096323601],
         FontColor->RGBColor[
          0.4177882075393331, 0.715, 0.25417864494993975`]], {99., 33.}, 
        Center, Automatic], InsetBox[
        StyleBox["\<\"GDP\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04559123096323601],
         FontColor->RGBColor[
          0.15725938678540247`, 0.715, 0.5857607804549424]], {99., 50.}, 
        Center, Automatic], InsetBox[
        StyleBox["\<\"This\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04593359314819148],
         FontColor->RGBColor[
          0.922066817647527, 0.5213778784316846, 0.08286013588277422]], {-98., -55.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"also\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04696067970305787],
         FontColor->RGBColor[
          0.47929071933511125`, 0.715, 0.1759027208462221]], {58., -99.}, 
        Center, Automatic], InsetBox[
        StyleBox["\<\"War\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04867249062783519],
         FontColor->RGBColor[
          0.6536293927965667, 0.37163285420200276`, 0.6534265180085832]], {-62., -97.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"has\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.05586209651189994],
         FontColor->RGBColor[0.8996399512215667, 0.7463488834690629, 0.]], {-54., 102.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"that\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04559123096323601],
         FontColor->RGBColor[
          0.7042770479220728, 0.358, 0.5530353108891188]], {-98., 68.}, 
        Center, Automatic], InsetBox[
        StyleBox["\<\"As\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.06510587550569748],
         FontColor->RGBColor[0.915, 0.3325, 0.2125]], {-98., -22.}, Center, 
        Automatic], InsetBox[
        StyleBox["\<\"rate\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04593359314819148],
         FontColor->RGBColor[
          0.8335801463353031, 0.3487839707329394, 0.3481997561078282]], {100., -41.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"one\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.047303041888013334`],
         FontColor->RGBColor[
          0.3103557220216354, 0.5867154223826917, 0.7874268664259625]], {99., -67.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"are\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.0572315452517218],
         FontColor->RGBColor[
          0.838355547812947, 0.44746667828057946`, 0.0208888695323676]], {78., -93.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"but\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04524886877828055],
         FontColor->RGBColor[
          0.2198892179497479, 0.6590886256402017, 0.6788670615396974]], {65., 103.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"over\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04559123096323601],
         FontColor->RGBColor[
          0.8774935098648088, 0.34000129802703827`, 0.2750108168919853]], {-76., 99.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"film\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.0466183175181024],
         FontColor->RGBColor[
          0.8781534541180211, 0.4921023027453475, 0.04333810870621905]], {-96., 79.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"into\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.0466183175181024],
         FontColor->RGBColor[0.7175796237092107, 0.7261199581899123, 0.]], {-83., -95.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"first\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.0466183175181024],
         FontColor->RGBColor[
          0.6319174318193065, 0.38429816477207124`, 0.7077064204517338]], {-97., 90.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"is\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.07708855197913873],
         FontColor->RGBColor[0.647624, 0.37816, 0.614037]], {103., -16.}, 
        Center, Automatic], InsetBox[
        StyleBox["\<\"Sea\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04559123096323601],
         FontColor->RGBColor[
          0.9603267270590103, 0.5591336352950514, 0.10711783694067224`]], {101., -54.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"an\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.05072666373756798],
         FontColor->RGBColor[
          0.9874666782805795, 0.6948333914028977, 0.033839968642435214`]], {-96., -33.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"on\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.051753750292434376`],
         FontColor->RGBColor[
          0.8857244243136628, 0.3764133635295058, 0.1393110607841571]], {-100., 34.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"Its\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.05483500995703355],
         FontColor->RGBColor[
          0.8439466852489265, 0.3467106629502147, 0.3309221912517893]], {-102., 44.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"a\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.0832510713083371],
         FontColor->RGBColor[1, 0.75, 0]], {100., 63.}, Center, Automatic], 
       InsetBox[
        StyleBox["\<\"all\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.0466183175181024],
         FontColor->RGBColor[
          0.7896667828057927, 0.3575666434388414, 0.4213886953236787]], {-100., -84.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"at\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.05072666373756798],
         FontColor->RGBColor[
          0.7748409210981391, 0.358, 0.4444755060028629]], {103., 75.}, 
        Center, Automatic], InsetBox[
        StyleBox["\<\"be\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04524886877828055],
         FontColor->RGBColor[
          0.8064401951137368, 0.3542119609772526, 0.39343300814377197`]], {81., 102.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"or\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04901485281279065],
         FontColor->RGBColor[0.9810598048862722, 0.7553955338762525, 0.]], {-102., 56.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"%\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.05688918306676634],
         FontColor->RGBColor[
          0.5833680111493557, 0.4126186601628758, 0.8290799721266107]], {95., -94.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"It\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.05038430155261251],
         FontColor->RGBColor[
          0.6184987019729621, 0.39212575718243875`, 0.7412532450675947]], {-27., -2.},
         Center, Automatic]},
      DefaultBaseStyle->{"Graphics", FontFamily -> "Source Sans Pro"},
      DisplayFunction->Identity,
      ImagePadding->{{0., 0.}, {0., 0.}},
      Method->{
       "DefaultBoundaryStyle" -> Automatic, 
        "DefaultGraphicsInteraction" -> {
         "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
          "Effects" -> {
           "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
            "Droplines" -> {
             "freeformCursorMode" -> True, 
              "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
        "DefaultPlotStyle" -> Automatic},
      PlotRange->{{-110.5, 110.5}, {-110.5, 109.5}}], {195., -62.71875000000001},
      ImageScaled[{0.5, 0.5}], {120., 119.46428571428572},
     BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
    InsetBox[
     GraphicsBox[{InsetBox[
        StyleBox["\<\"the\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.3125],
         FontColor->RGBColor[0.368417, 0.506779, 0.709798]], {0, 0}, Center, 
        Automatic], InsetBox[
        StyleBox["\<\"and\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.17540776152980875`],
         FontColor->RGBColor[0.560181, 0.691569, 0.194885]], {20.5, 29.5}, 
        Center, Automatic], InsetBox[
        StyleBox["\<\"Japan\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.10791619797525309`],
         FontColor->RGBColor[0.528488, 0.470624, 0.701351]], {14.5, -33.5}, 
        Center, Automatic], InsetBox[
        StyleBox["\<\"Japanese\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.0796541057367829],
         FontColor->RGBColor[0.571589, 0.586483, 0.]], {-0.5, 46.5}, Center, 
        Automatic], InsetBox[
        StyleBox["\<\"of\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.18637514060742405`],
         FontColor->RGBColor[0.880722, 0.611041, 0.142051]], {-36.5, -44.5}, 
        Center, Automatic], InsetBox[
        StyleBox["\<\"government\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.0484392575928009],
         FontColor->RGBColor[0.9810598048862722, 0.7553955338762525, 0.]], {5.5, -52.5},
         Center, Automatic], InsetBox[
        StyleBox["\<\"population\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.05012654668166479],
         FontColor->RGBColor[
          0.9637822400302223, 0.5764112001511111, 0.0977879519184]], {-48.5, 28.5},
         Center, Automatic], InsetBox[
        StyleBox["\<\"country\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.0530793025871766],
         FontColor->RGBColor[
          0.8857244243136628, 0.3764133635295058, 0.1393110607841571]], {-0.5, 60.5},
         Center, Automatic], InsetBox[
        StyleBox["\<\"Japan's\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.05645388076490439],
         FontColor->RGBColor[
          0.9324333565611593, 0.5282889043741062, 0.0921900209050434]], {-65.5, -1.5},
         Center, Automatic], InsetBox[
        StyleBox["\<\"in\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.15684758155230594`],
         FontColor->RGBColor[0.922526, 0.385626, 0.209179]], {61.5, 0.5}, 
        Center, Automatic], InsetBox[
        StyleBox["\<\"country's\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04506467941507311],
         FontColor->RGBColor[
          0.7042770479220728, 0.358, 0.5530353108891188]], {-0.5, -64.5}, 
        Center, Automatic], InsetBox[
        StyleBox["\<\"international\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04633014623172103],
         FontColor->RGBColor[
          0.8781534541180211, 0.4921023027453475, 0.04333810870621905]], {11.5, 69.5},
         Center, Automatic], InsetBox[
        StyleBox["\<\"including\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04590832395950506],
         FontColor->RGBColor[
          0.5750747800184488, 0.4174563783225715, 0.8498130499538777]], {-64.5, -16.5},
         Center, Automatic], InsetBox[
        StyleBox["\<\"language\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04506467941507311],
         FontColor->RGBColor[
          0.8633598745697435, 0.40996018814538476`, 0.08339968642435877]], {67.5, -19.5},
         Center, Automatic], InsetBox[
        StyleBox["\<\"beginning\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.045486501687289085`],
         FontColor->RGBColor[
          0.6670481226429111, 0.3638052617916352, 0.6198796933927223]], {-60.5, 41.5},
         Center, Automatic], InsetBox[
        StyleBox["\<\"Constitution\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04506467941507311],
         FontColor->RGBColor[
          0.9603267270590103, 0.5591336352950514, 0.10711783694067224`]], {-67.5, -29.5},
         Center, Automatic], InsetBox[
        StyleBox["\<\"emperor\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.046751968503937],
         FontColor->RGBColor[
          0.9492067688690977, 0.5394711792460651, 0.10728609198218791`]], {-67.5, 13.5},
         Center, Automatic], InsetBox[
        StyleBox["\<\"military\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04759561304836896],
         FontColor->RGBColor[
          0.8342400905885153, 0.4628267270590103, 0.0038160815296638794`]], {69.5, 19.5},
         Center, Automatic], InsetBox[
        StyleBox["\<\"Security\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.045486501687289085`],
         FontColor->RGBColor[
          0.15725938678540247`, 0.715, 0.5857607804549424]], {64.5, -33.5}, 
        Center, Automatic], InsetBox[
        StyleBox["\<\"period\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.05139201349831271],
         FontColor->RGBColor[
          0.7748409210981391, 0.358, 0.4444755060028629]], {-37.5, 60.5}, 
        Center, Automatic], InsetBox[
        StyleBox["\<\"percent\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.045486501687289085`],
         FontColor->RGBColor[
          0.7658565873730018, 0.358, 0.4582975578876895]], {53.5, -47.5}, 
        Center, Automatic], InsetBox[
        StyleBox["\<\"highest\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04717379077615298],
         FontColor->RGBColor[
          0.8607200975568693, 0.34335598048862614`, 0.30296650407188447`]], {39.5, -64.5},
         Center, Automatic], InsetBox[
        StyleBox["\<\"popular\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04717379077615298],
         FontColor->RGBColor[
          0.3103557220216354, 0.5867154223826917, 0.7874268664259625]], {69.5, 32.5},
         Center, Automatic], InsetBox[
        StyleBox["\<\"century\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04886107986501687],
         FontColor->RGBColor[
          0.8564488486273256, 0.42032672705901153`, 0.06612212156831418]], {43.5, 56.5},
         Center, Automatic], InsetBox[
        StyleBox["\<\"National\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.05265748031496063],
         FontColor->RGBColor[
          0.9874666782805795, 0.6948333914028977, 0.033839968642435214`]], {-0.5, -77.5},
         Center, Automatic], InsetBox[
        StyleBox["\<\"traditional\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04506467941507311],
         FontColor->RGBColor[
          0.8949268664259606, 0.5032845776173072, 0.05843417978336459]], {-0.5, 80.5},
         Center, Automatic], InsetBox[
        StyleBox["\<\"among\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04928290213723284],
         FontColor->RGBColor[
          0.37977756485605163`, 0.715, 0.3025558265468435]], {-41.5, -66.5}, 
        Center, Automatic], InsetBox[
        StyleBox["\<\"power\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.0484392575928009],
         FontColor->RGBColor[
          0.23716678280579248`, 0.645266573755366, 0.699600139366951]], {-70.5, -39.5},
         Center, Automatic], InsetBox[
        StyleBox["\<\"people\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.045486501687289085`],
         FontColor->RGBColor[
          0.9840111653093676, 0.677555826546838, 0.04316985366470745]], {-43.5, 72.5},
         Center, Automatic], InsetBox[
        StyleBox["\<\"largest\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.048017435320584924`],
         FontColor->RGBColor[0.428777913273419, 0.5052332520359486, 0.85]], {38.5, -77.5},
         Center, Automatic], InsetBox[
        StyleBox["\<\"world\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.05982845894263217],
         FontColor->RGBColor[
          0.838355547812947, 0.44746667828057946`, 0.0208888695323676]], {-72.5, -53.5},
         Center, Automatic], InsetBox[
        StyleBox["\<\"Chinese\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04633014623172103],
         FontColor->RGBColor[
          0.7896667828057927, 0.3575666434388414, 0.4213886953236787]], {-42.5, -78.5},
         Center, Automatic], InsetBox[
        StyleBox["\<\"system\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04590832395950506],
         FontColor->RGBColor[
          0.922066817647527, 0.5213778784316846, 0.08286013588277422]], {77.5, 43.5},
         Center, Automatic], InsetBox[
        StyleBox["\<\"during\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04717379077615298],
         FontColor->RGBColor[0.8493197142977551, 0.7407577460330839, 0.]], {57.5, 67.5},
         Center, Automatic], InsetBox[
        StyleBox["\<\"Western\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.045486501687289085`],
         FontColor->RGBColor[
          0.8510135028964549, 0.47400900193096995`, 0.018912152606809424`]], {-0.5, -88.5},
         Center, Automatic], InsetBox[
        StyleBox["\<\"which\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.05645388076490439],
         FontColor->RGBColor[
          0.5407932311309059, 0.715, 0.09762679674248334]], {-71.5, 54.5}, 
        Center, Automatic], InsetBox[
        StyleBox["\<\"major\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.046751968503937],
         FontColor->RGBColor[
          0.6897400905885174, 0.358, 0.5753998606330502]], {42.5, 81.5}, 
        Center, Automatic], InsetBox[
        StyleBox["\<\"Tokyo\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04633014623172103],
         FontColor->RGBColor[
          0.38354466123747527`, 0.5323732032575149, 0.85]], {3.5, 91.5}, 
        Center, Automatic], InsetBox[
        StyleBox["\<\"with\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.06489032620922384],
         FontColor->RGBColor[
          0.9728288904374106, 0.621644452187053, 0.07336199581899142]], {-38.5, 85.5},
         Center, Automatic], InsetBox[
        StyleBox["\<\"world's\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.05054836895388076],
         FontColor->RGBColor[
          0.35558897405758294`, 0.5505288207539337, 0.8417067688690995]], {76.5, -58.5},
         Center, Automatic], InsetBox[
        StyleBox["\<\"include\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04633014623172103],
         FontColor->RGBColor[
          0.19193353076984873`, 0.681453175384121, 0.6453202369238185]], {-36.5, -90.5},
         Center, Automatic], InsetBox[
        StyleBox["\<\"islands\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04886107986501687],
         FontColor->RGBColor[
          0.5472001045252132, 0.43417993728487203`, 0.85]], {36.5, -90.5}, 
        Center, Automatic], InsetBox[
        StyleBox["\<\"by\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.07079583802024747],
         FontColor->RGBColor[0.915, 0.3325, 0.2125]], {82.5, 0.5}, Center, 
        Automatic], InsetBox[
        StyleBox["\<\"early\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04590832395950506],
         FontColor->RGBColor[
          0.31827505306025683`, 0.715, 0.3808317506505822]], {-72.5, -66.5}, 
        Center, Automatic], InsetBox[
        StyleBox["\<\"culture\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04506467941507311],
         FontColor->RGBColor[
          0.4177882075393331, 0.715, 0.25417864494993975`]], {35.5, 93.5}, 
        Center, Automatic], InsetBox[
        StyleBox["\<\"million\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04633014623172103],
         FontColor->RGBColor[0.7175796237092107, 0.7261199581899123, 0.]], {-76.5, 67.5},
         Center, Automatic], InsetBox[
        StyleBox["\<\"Climate\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.045486501687289085`],
         FontColor->RGBColor[
          0.5788038738141875, 0.715, 0.049249615145579635`]], {75.5, -71.5}, 
        Center, Automatic], InsetBox[
        StyleBox["\<\"from\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.05814116985376828],
         FontColor->RGBColor[0.8996399512215667, 0.7463488834690629, 0.]], {-67.5, 81.5},
         Center, Automatic], InsetBox[
        StyleBox["\<\"united\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.0484392575928009],
         FontColor->RGBColor[
          0.6536293927965667, 0.37163285420200276`, 0.6534265180085832]], {73.5, 78.5},
         Center, Automatic], InsetBox[
        StyleBox["\<\"states\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.048017435320584924`],
         FontColor->RGBColor[
          0.7513196300394465, 0.358, 0.48066210763162087`]], {70.5, -82.5}, 
        Center, Automatic], InsetBox[
        StyleBox["\<\"China\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.05054836895388076],
         FontColor->RGBColor[
          0.6184987019729621, 0.39212575718243875`, 0.7412532450675947]], {-76.5, -79.5},
         Center, Automatic], InsetBox[
        StyleBox["\<\"known\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04633014623172103],
         FontColor->RGBColor[
          0.6319174318193065, 0.38429816477207124`, 0.7077064204517338]], {-57.5, 93.5},
         Center, Automatic], InsetBox[
        StyleBox["\<\"has\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.06657761529808774],
         FontColor->RGBColor[
          0.40082222609352647`, 0.5220066643438841, 0.85]], {-88.5, 24.5}, 
        Center, Automatic], InsetBox[
        StyleBox["\<\"to\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.08724690663667041],
         FontColor->RGBColor[1, 0.75, 0]], {83.5, 58.5}, Center, Automatic], 
       InsetBox[
        StyleBox["\<\"Korea\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04590832395950506],
         FontColor->RGBColor[0.9307395679624266, 0.7498043964402695, 0.]], {65.5, 90.5},
         Center, Automatic], InsetBox[
        StyleBox["\<\"About\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04506467941507311],
         FontColor->RGBColor[
          0.8774935098648088, 0.34000129802703827`, 0.2750108168919853]], {-69.5, -91.5},
         Center, Automatic], InsetBox[
        StyleBox["\<\"have\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.05054836895388076],
         FontColor->RGBColor[0.7678998606330495, 0.7317110956258943, 0.]], {-2.5, -100.5},
         Center, Automatic], InsetBox[
        StyleBox["\<\"After\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.048017435320584924`],
         FontColor->RGBColor[0.6361597700445392, 0.7170733077827265, 0.]], {-97.5, 0.5},
         Center, Automatic], InsetBox[
        StyleBox["\<\"as\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.08387232845894262],
         FontColor->RGBColor[0.647624, 0.37816, 0.614037]], {-96.5, -13.5}, 
        Center, Automatic], InsetBox[
        StyleBox["\<\"been\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.048017435320584924`],
         FontColor->RGBColor[
          0.9038177251280404, 0.3492734123079395, 0.18454431282010084`]], {-23.5, 98.5},
         Center, Automatic], InsetBox[
        StyleBox["\<\"was\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.05645388076490439],
         FontColor->RGBColor[
          0.6753413537738198, 0.3589675436319385, 0.5991466155654507]], {99.5, 10.5},
         Center, Automatic], InsetBox[
        StyleBox["\<\"2022\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04590832395950506],
         FontColor->RGBColor[
          0.7277983389807635, 0.358, 0.5168487092603637]], {95.5, -30.5}, 
        Center, Automatic], InsetBox[
        StyleBox["\<\"Day\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04759561304836896],
         FontColor->RGBColor[
          0.2187618985811806, 0.715, 0.5074848563512248]], {98.5, -15.5}, 
        Center, Automatic], InsetBox[
        StyleBox["\<\"since\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.048017435320584924`],
         FontColor->RGBColor[
          0.9784200278733908, 0.649600139366954, 0.058265924741844846`]], {1.5, 102.5},
         Center, Automatic], InsetBox[
        StyleBox["\<\"south\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04590832395950506],
         FontColor->RGBColor[
          0.26512246998569167`, 0.6229020240114467, 0.73314696398283]], {-96.5, 38.5},
         Center, Automatic], InsetBox[
        StyleBox["\<\"over\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04633014623172103],
         FontColor->RGBColor[
          0.9046334610863751, 0.334573307782725, 0.22977756485604156`]], {91.5, -43.5},
         Center, Automatic], InsetBox[
        StyleBox["\<\"were\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.046751968503937],
         FontColor->RGBColor[
          0.5019668524892619, 0.46131988850644284`, 0.85]], {23.5, -101.5}, 
        Center, Automatic], InsetBox[
        StyleBox["\<\"other\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.046751968503937],
         FontColor->RGBColor[
          0.47929071933511125`, 0.715, 0.1759027208462221]], {-28.5, -103.5}, 
        Center, Automatic], InsetBox[
        StyleBox["\<\"2016\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04464285714285714],
         FontColor->RGBColor[
          0.9107287510704583, 0.33890687339431275`, 0.20182187767614543`]], {-97.5, -40.5},
         Center, Automatic], InsetBox[
        StyleBox["\<\"GDP\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04590832395950506],
         FontColor->RGBColor[
          0.845266573755366, 0.437100139366951, 0.03816643438841502]], {99.5, 20.5},
         Center, Automatic], InsetBox[
        StyleBox["\<\"that\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.05054836895388076],
         FontColor->RGBColor[
          0.8878600487784333, 0.33792799024431336`, 0.2577332520359445]], {44.5, 104.5},
         Center, Automatic], InsetBox[
        StyleBox["\<\"on\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.0640466816647919],
         FontColor->RGBColor[0.736782672705901, 0.358, 0.5030266573755369]], {101.5, 33.5},
         Center, Automatic], InsetBox[
        StyleBox["\<\"is\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.08851237345331833],
         FontColor->RGBColor[0.363898, 0.618501, 0.782349]], {100.5, 46.5}, 
        Center, Automatic], InsetBox[
        StyleBox["\<\"are\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.05814116985376828],
         FontColor->RGBColor[
          0.5833680111493557, 0.4126186601628758, 0.8290799721266107]], {-99.5, 50.5},
         Center, Automatic], InsetBox[
        StyleBox["\<\"state\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04506467941507311],
         FontColor->RGBColor[
          0.2198892179497479, 0.6590886256402017, 0.6788670615396974]], {47.5, -102.5},
         Center, Automatic], InsetBox[
        StyleBox["\<\"such\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.0484392575928009],
         FontColor->RGBColor[
          0.9052934053395919, 0.510195603559728, 0.06776406480563275]], {-48.5, 103.5},
         Center, Automatic], InsetBox[
        StyleBox["\<\"well\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04506467941507311],
         FontColor->RGBColor[0.6672593867853922, 0.7205288207539324, 0.]], {-100.5, -55.5},
         Center, Automatic], InsetBox[
        StyleBox["\<\"War\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.05097019122609673],
         FontColor->RGBColor[
          0.16397784358994957`, 0.7038177251280403, 0.6117734123079395]], {-53.5, -103.5},
         Center, Automatic], InsetBox[
        StyleBox["\<\"a\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.09483970753655793],
         FontColor->RGBColor[0.772079, 0.431554, 0.102387]], {66.5, -94.5}, 
        Center, Automatic], InsetBox[
        StyleBox["\<\"for\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.05982845894263217],
         FontColor->RGBColor[
          0.28026441037696703`, 0.715, 0.4292089322474965]], {-98.5, -69.5}, 
        Center, Automatic], InsetBox[
        StyleBox["\<\"most\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04590832395950506],
         FontColor->RGBColor[
          0.8335801463353031, 0.3487839707329394, 0.3481997561078282]], {68.5, 100.5},
         Center, Automatic], InsetBox[
        StyleBox["\<\"used\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04506467941507311],
         FontColor->RGBColor[
          0.6453361616656581, 0.37647057236169945`, 0.6741595958358548]], {-93.5, 77.5},
         Center, Automatic], InsetBox[
        StyleBox["\<\"This\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.046751968503937],
         FontColor->RGBColor[
          0.8745421494417032, 0.39318677583744527`, 0.11135537360425793`]], {99.5, 68.5},
         Center, Automatic], InsetBox[
        StyleBox["\<\"one\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.049704724409448814`],
         FontColor->RGBColor[
          0.7132613816472081, 0.358, 0.5392132590042952]], {83.5, -92.5}, 
        Center, Automatic], InsetBox[
        StyleBox["\<\"main\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04506467941507311],
         FontColor->RGBColor[
          0.8064401951137368, 0.3542119609772526, 0.39343300814377197`]], {-86.5, 92.5},
         Center, Automatic], InsetBox[
        StyleBox["\<\"total\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04633014623172103],
         FontColor->RGBColor[
          0.969373377466199, 0.6043668873309952, 0.08269188084126262]], {-72.5, 105.5},
         Center, Automatic], InsetBox[
        StyleBox["\<\"2019\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04633014623172103],
         FontColor->RGBColor[
          0.9930578157165594, 0.7227890785827968, 0.01874389756528967]], {92.5, 90.5},
         Center, Automatic], InsetBox[
        StyleBox["\<\"Asia\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04506467941507311],
         FontColor->RGBColor[
          0.3383114092015346, 0.5643508726387724, 0.8209736910418415]], {96.5, -82.5},
         Center, Automatic], InsetBox[
        StyleBox["\<\"first\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.045486501687289085`],
         FontColor->RGBColor[
          0.8926354502560807, 0.366046824615879, 0.15658862564020168`]], {-74.5, -102.5},
         Center, Automatic], InsetBox[
        StyleBox["\<\"local\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04506467941507311],
         FontColor->RGBColor[
          0.9986489531525362, 0.7507447657626809, 0.0036478264881522893`]], {-95.5, -92.5},
         Center, Automatic], InsetBox[
        StyleBox["\<\"2021\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04506467941507311],
         FontColor->RGBColor[0.7989994773739094, 0.735166608597101, 0.]], {84.5, -104.5},
         Center, Automatic], InsetBox[
        StyleBox["\<\"2018\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04506467941507311],
         FontColor->RGBColor[
          0.6102054708420535, 0.39696347534213544`, 0.7619863228948663]], {92.5, 102.5},
         Center, Automatic], InsetBox[
        StyleBox["\<\"law\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04506467941507311],
         FontColor->RGBColor[
          0.529922539669161, 0.44454647619850335`, 0.85]], {-102.5, 12.5}, 
        Center, Automatic], InsetBox[
        StyleBox["\<\"its\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.057719347581552304`],
         FontColor->RGBColor[
          0.8439466852489265, 0.3467106629502147, 0.3309221912517893]], {-101.5, 60.5},
         Center, Automatic], InsetBox[
        StyleBox["\<\"his\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.045486501687289085`],
         FontColor->RGBColor[0.4567336004533182, 0.4884598397280091, 0.85]], {100.5, -2.5},
         Center, Automatic], InsetBox[
        StyleBox["\<\"an\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.05054836895388076],
         FontColor->RGBColor[
          0.8613800418100862, 0.48092002787339083`, 0.02824203762907758]], {-102.5, -26.5},
         Center, Automatic], InsetBox[
        StyleBox["\<\"%\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.05645388076490439],
         FontColor->RGBColor[
          0.28240003484173815`, 0.6090799721266095, 0.7538800418100857]], {102.5, -56.5},
         Center, Automatic], InsetBox[
        StyleBox["\<\"or\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.0484392575928009],
         FontColor->RGBColor[
          0.8168067340273636, 0.3521386531945273, 0.3761554432877274]], {21.5, 103.5},
         Center, Automatic], InsetBox[
        StyleBox["\<\"at\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04717379077615298],
         FontColor->RGBColor[
          0.596786740995709, 0.404791067752503, 0.7955331475107271]], {99.5, -68.5},
         Center, Automatic], InsetBox[
        StyleBox["\<\"it\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.0530793025871766],
         FontColor->RGBColor[
          0.47401116530937026`, 0.47809330081437784`, 0.85]], {-26.5, -3.5}, 
        Center, Automatic]},
      DefaultBaseStyle->{"Graphics", FontFamily -> "Source Sans Pro"},
      DisplayFunction->Identity,
      ImagePadding->{{0., 0.}, {0., 0.}},
      Method->{
       "DefaultBoundaryStyle" -> Automatic, 
        "DefaultGraphicsInteraction" -> {
         "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
          "Effects" -> {
           "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
            "Droplines" -> {
             "freeformCursorMode" -> True, 
              "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
        "DefaultPlotStyle" -> Automatic},
      PlotRange->{{-112., 112.}, {-111., 112.}}], {325., -62.71875000000001}, 
     ImageScaled[{0.5, 0.5}], {120., 119.46428571428572},
     BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
    InsetBox[
     GraphicsBox[{InsetBox[
        StyleBox["\<\"The\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.3181818181818182],
         FontColor->RGBColor[0.368417, 0.506779, 0.709798]], {0, 0}, Center, 
        Automatic], InsetBox[
        StyleBox["\<\"and\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.1597864768683274],
         FontColor->RGBColor[0.560181, 0.691569, 0.194885]], {24.5, 27.5}, 
        Center, Automatic], InsetBox[
        StyleBox["\<\"of\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.1731802005823358],
         FontColor->RGBColor[0.880722, 0.611041, 0.142051]], {8.5, -42.5}, 
        Center, Automatic], InsetBox[
        StyleBox["\<\"Kingdom\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.06311873180200582],
         FontColor->RGBColor[0.736782672705901, 0.358, 0.5030266573755369]], {-2.5, 41.5},
         Center, Automatic], InsetBox[
        StyleBox["\<\"population\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04894856033646069],
         FontColor->RGBColor[
          0.23716678280579248`, 0.645266573755366, 0.699600139366951]], {-32.5, -32.5},
         Center, Automatic], InsetBox[
        StyleBox["\<\"Government\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.053413134907796825`],
         FontColor->RGBColor[
          0.7748409210981391, 0.358, 0.4444755060028629]], {-3.5, 54.5}, 
        Center, Automatic], InsetBox[
        StyleBox["\<\"England\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.05651892591394371],
         FontColor->RGBColor[
          0.28240003484173815`, 0.6090799721266095, 0.7538800418100857]], {-30.5, -48.5},
         Center, Automatic], InsetBox[
        StyleBox["\<\"international\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04778388870915561],
         FontColor->RGBColor[
          0.2187618985811806, 0.715, 0.5074848563512248]], {1.5, -63.5}, 
        Center, Automatic], InsetBox[
        StyleBox["\<\"language\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.046425105143966354`],
         FontColor->RGBColor[
          0.5750747800184488, 0.4174563783225715, 0.8498130499538777]], {47.5, -32.5},
         Center, Automatic], InsetBox[
        StyleBox["\<\"including\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.046425105143966354`],
         FontColor->RGBColor[
          0.845266573755366, 0.437100139366951, 0.03816643438841502]], {-50.5, 32.5},
         Center, Automatic], InsetBox[
        StyleBox["\<\"Scotland\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.055160142348754444`],
         FontColor->RGBColor[
          0.5407932311309059, 0.715, 0.09762679674248334]], {-0.5, 65.5}, 
        Center, Automatic], InsetBox[
        StyleBox["\<\"Parliament\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04700744095761889],
         FontColor->RGBColor[
          0.8781534541180211, 0.4921023027453475, 0.04333810870621905]], {-66.5, 0.5},
         Center, Automatic], InsetBox[
        StyleBox["\<\"Northern\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.05496603041087027],
         FontColor->RGBColor[
          0.47401116530937026`, 0.47809330081437784`, 0.85]], {-65.5, -12.5}, 
        Center, Automatic], InsetBox[
        StyleBox["\<\"country\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.046425105143966354`],
         FontColor->RGBColor[
          0.7277983389807635, 0.358, 0.5168487092603637]], {39.5, -46.5}, 
        Center, Automatic], InsetBox[
        StyleBox["\<\"British\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.06331284373989],
         FontColor->RGBColor[
          0.9728288904374106, 0.621644452187053, 0.07336199581899142]], {49.5, 49.5},
         Center, Automatic], InsetBox[
        StyleBox["\<\"in\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.1394047233904885],
         FontColor->RGBColor[0.922526, 0.385626, 0.209179]], {63.5, 18.5}, 
        Center, Automatic], InsetBox[
        StyleBox["\<\"United\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.06447751536719508],
         FontColor->RGBColor[0.915, 0.3325, 0.2125]], {-55.5, 44.5}, Center, 
        Automatic], InsetBox[
        StyleBox["\<\"powers\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04603688126819799],
         FontColor->RGBColor[
          0.15725938678540247`, 0.715, 0.5857607804549424]], {71.5, 0.5}, 
        Center, Automatic], InsetBox[
        StyleBox["\<\"Europe\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04681332901973471],
         FontColor->RGBColor[
          0.38354466123747527`, 0.5323732032575149, 0.85]], {70.5, -16.5}, 
        Center, Automatic], InsetBox[
        StyleBox["\<\"countries\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04623099320608217],
         FontColor->RGBColor[
          0.5788038738141875, 0.715, 0.049249615145579635`]], {-11.5, -74.5}, 
        Center, Automatic], InsetBox[
        StyleBox["\<\"largest\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04778388870915561],
         FontColor->RGBColor[
          0.8342400905885153, 0.4628267270590103, 0.0038160815296638794`]], {-71.5, 13.5},
         Center, Automatic], InsetBox[
        StyleBox["\<\"English\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04817211258492397],
         FontColor->RGBColor[0.6361597700445392, 0.7170733077827265, 0.]], {41.5, 64.5},
         Center, Automatic], InsetBox[
        StyleBox["\<\"system\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04623099320608217],
         FontColor->RGBColor[
          0.9840111653093676, 0.677555826546838, 0.04316985366470745]], {-44.5, -61.5},
         Center, Automatic], InsetBox[
        StyleBox["\<\"century\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04797800064703979],
         FontColor->RGBColor[0.428777913273419, 0.5052332520359486, 0.85]], {-0.5, 77.5},
         Center, Automatic], InsetBox[
        StyleBox["\<\"devolved\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.046425105143966354`],
         FontColor->RGBColor[
          0.31827505306025683`, 0.715, 0.3808317506505822]], {52.5, -60.5}, 
        Center, Automatic], InsetBox[
        StyleBox["\<\"Ireland\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.060207052733743126`],
         FontColor->RGBColor[
          0.838355547812947, 0.44746667828057946`, 0.0208888695323676]], {-45.5, 66.5},
         Center, Automatic], InsetBox[
        StyleBox["\<\"healthcare\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04564865739242963],
         FontColor->RGBColor[
          0.529922539669161, 0.44454647619850335`, 0.85]], {33.5, -76.5}, 
        Center, Automatic], InsetBox[
        StyleBox["\<\"between\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04623099320608217],
         FontColor->RGBColor[
          0.6670481226429111, 0.3638052617916352, 0.6198796933927223]], {-76.5, -22.5},
         Center, Automatic], InsetBox[
        StyleBox["\<\"national\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04817211258492397],
         FontColor->RGBColor[
          0.9038177251280404, 0.3492734123079395, 0.18454431282010084`]], {74.5, 36.5},
         Center, Automatic], InsetBox[
        StyleBox["\<\"Britain\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.05438369459721772],
         FontColor->RGBColor[
          0.9874666782805795, 0.6948333914028977, 0.033839968642435214`]], {-76.5, -35.5},
         Center, Automatic], InsetBox[
        StyleBox["\<\"power\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04564865739242963],
         FontColor->RGBColor[
          0.2198892179497479, 0.6590886256402017, 0.6788670615396974]], {-68.5, -46.5},
         Center, Automatic], InsetBox[
        StyleBox["\<\"people\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04720155289550307],
         FontColor->RGBColor[
          0.6897400905885174, 0.358, 0.5753998606330502]], {34.5, 79.5}, 
        Center, Automatic], InsetBox[
        StyleBox["\<\"became\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04623099320608217],
         FontColor->RGBColor[
          0.922066817647527, 0.5213778784316846, 0.08286013588277422]], {-0.5, -86.5},
         Center, Automatic], InsetBox[
        StyleBox["\<\"Scottish\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04739566483338725],
         FontColor->RGBColor[
          0.9492067688690977, 0.5394711792460651, 0.10728609198218791`]], {-37.5, 79.5},
         Center, Automatic], InsetBox[
        StyleBox["\<\"number\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.045842769330313816`],
         FontColor->RGBColor[
          0.3383114092015346, 0.5643508726387724, 0.8209736910418415]], {-0.5, 87.5},
         Center, Automatic], InsetBox[
        StyleBox["\<\"London\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.049336784212229055`],
         FontColor->RGBColor[0.9810598048862722, 0.7553955338762525, 0.]], {77.5, -47.5},
         Center, Automatic], InsetBox[
        StyleBox["\<\"Council\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04564865739242963],
         FontColor->RGBColor[
          0.8633598745697435, 0.40996018814538476`, 0.08339968642435877]], {-50.5, -73.5},
         Center, Automatic], InsetBox[
        StyleBox["\<\"world's\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.046425105143966354`],
         FontColor->RGBColor[
          0.26512246998569167`, 0.6229020240114467, 0.73314696398283]], {-36.5, -86.5},
         Center, Automatic], InsetBox[
        StyleBox["\<\"include\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04739566483338725],
         FontColor->RGBColor[
          0.3103557220216354, 0.5867154223826917, 0.7874268664259625]], {35.5, -87.5},
         Center, Automatic], InsetBox[
        StyleBox["\<\"Wales\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.05302491103202847],
         FontColor->RGBColor[
          0.8613800418100862, 0.48092002787339083`, 0.02824203762907758]], {74.5, 62.5},
         Center, Automatic], InsetBox[
        StyleBox["\<\"which\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.05321902296991265],
         FontColor->RGBColor[
          0.16397784358994957`, 0.7038177251280403, 0.6117734123079395]], {-34.5, 91.5},
         Center, Automatic], InsetBox[
        StyleBox["\<\"with\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.06622452280815269],
         FontColor->RGBColor[0.571589, 0.586483, 0.]], {84.5, -30.5}, Center, 
        Automatic], InsetBox[
        StyleBox["\<\"many\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04564865739242963],
         FontColor->RGBColor[
          0.8064401951137368, 0.3542119609772526, 0.39343300814377197`]], {-85.5, 24.5},
         Center, Automatic], InsetBox[
        StyleBox["\<\"UK\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.07612423164024587],
         FontColor->RGBColor[1, 0.75, 0]], {86.5, 12.5}, Center, Automatic], 
       InsetBox[
        StyleBox["\<\"million\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04875444839857651],
         FontColor->RGBColor[
          0.9052934053395919, 0.510195603559728, 0.06776406480563275]], {35.5, 91.5},
         Center, Automatic], InsetBox[
        StyleBox["\<\"Union\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04778388870915561],
         FontColor->RGBColor[
          0.596786740995709, 0.404791067752503, 0.7955331475107271]], {-75.5, -60.5},
         Center, Automatic], InsetBox[
        StyleBox["\<\"around\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04681332901973471],
         FontColor->RGBColor[
          0.9046334610863751, 0.334573307782725, 0.22977756485604156`]], {67.5, 75.5},
         Center, Automatic], InsetBox[
        StyleBox["\<\"World\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.050889679715302484`],
         FontColor->RGBColor[
          0.7132613816472081, 0.358, 0.5392132590042952]], {-80.5, 56.5}, 
        Center, Automatic], InsetBox[
        StyleBox["\<\"most\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.050889679715302484`],
         FontColor->RGBColor[
          0.9637822400302223, 0.5764112001511111, 0.0977879519184]], {83.5, 48.5},
         Center, Automatic], InsetBox[
        StyleBox["\<\"was\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.06078938854739566],
         FontColor->RGBColor[
          0.28026441037696703`, 0.715, 0.4292089322474965]], {70.5, -71.5}, 
        Center, Automatic], InsetBox[
        StyleBox["\<\"to\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.08893561954060175],
         FontColor->RGBColor[0.528488, 0.470624, 0.701351]], {-86.5, 37.5}, 
        Center, Automatic], InsetBox[
        StyleBox["\<\"other\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04700744095761889],
         FontColor->RGBColor[
          0.19193353076984873`, 0.681453175384121, 0.6453202369238185]], {-80.5, 69.5},
         Center, Automatic], InsetBox[
        StyleBox["\<\"from\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.05574247816240698],
         FontColor->RGBColor[
          0.6753413537738198, 0.3589675436319385, 0.5991466155654507]], {-70.5, 80.5},
         Center, Automatic], InsetBox[
        StyleBox["\<\"Great\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.05011323196376577],
         FontColor->RGBColor[
          0.37977756485605163`, 0.715, 0.3025558265468435]], {66.5, 87.5}, 
        Center, Automatic], InsetBox[
        StyleBox["\<\"were\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.05108379165318667],
         FontColor->RGBColor[
          0.35558897405758294`, 0.5505288207539337, 0.8417067688690995]], {86.5, -57.5},
         Center, Automatic], InsetBox[
        StyleBox["\<\"known\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.045842769330313816`],
         FontColor->RGBColor[
          0.8774935098648088, 0.34000129802703827`, 0.2750108168919853]], {-69.5, -84.5},
         Center, Automatic], InsetBox[
        StyleBox["\<\"Some\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04564865739242963],
         FontColor->RGBColor[
          0.8949268664259606, 0.5032845776173072, 0.05843417978336459]], {-83.5, -70.5},
         Center, Automatic], InsetBox[
        StyleBox["\<\"music\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.047589776771271436`],
         FontColor->RGBColor[0.8493197142977551, 0.7407577460330839, 0.]], {67.5, -86.5},
         Center, Automatic], InsetBox[
        StyleBox["\<\"by\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.06370106761565836],
         FontColor->RGBColor[
          0.40082222609352647`, 0.5220066643438841, 0.85]], {96.5, -12.5}, 
        Center, Automatic], InsetBox[
        StyleBox["\<\"miles\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04623099320608217],
         FontColor->RGBColor[
          0.8926354502560807, 0.366046824615879, 0.15658862564020168`]], {-0.5, -98.5},
         Center, Automatic], InsetBox[
        StyleBox["\<\"more\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04661921708185053],
         FontColor->RGBColor[
          0.969373377466199, 0.6043668873309952, 0.08269188084126262]], {-0.5, 99.5},
         Center, Automatic], InsetBox[
        StyleBox["\<\"there\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04720155289550307],
         FontColor->RGBColor[
          0.47929071933511125`, 0.715, 0.1759027208462221]], {25.5, -98.5}, 
        Center, Automatic], InsetBox[
        StyleBox["\<\"since\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.047589776771271436`],
         FontColor->RGBColor[
          0.8607200975568693, 0.34335598048862614`, 0.30296650407188447`]], {-26.5, -98.5},
         Center, Automatic], InsetBox[
        StyleBox["\<\"under\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04564865739242963],
         FontColor->RGBColor[
          0.6453361616656581, 0.37647057236169945`, 0.6741595958358548]], {26.5, 102.5},
         Center, Automatic], InsetBox[
        StyleBox["\<\"their\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04700744095761889],
         FontColor->RGBColor[
          0.6319174318193065, 0.38429816477207124`, 0.7077064204517338]], {-95.5, -47.5},
         Center, Automatic], InsetBox[
        StyleBox["\<\"been\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04700744095761889],
         FontColor->RGBColor[
          0.5019668524892619, 0.46131988850644284`, 0.85]], {-50.5, -96.5}, 
        Center, Automatic], InsetBox[
        StyleBox["\<\"have\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04972500808799741],
         FontColor->RGBColor[
          0.5472001045252132, 0.43417993728487203`, 0.85]], {-25.5, 102.5}, 
        Center, Automatic], InsetBox[
        StyleBox["\<\"2023\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04564865739242963],
         FontColor->RGBColor[
          0.7042770479220728, 0.358, 0.5530353108891188]], {-61.5, 91.5}, 
        Center, Automatic], InsetBox[
        StyleBox["\<\"such\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04623099320608217],
         FontColor->RGBColor[0.4567336004533182, 0.4884598397280091, 0.85]], {50.5, -97.5},
         Center, Automatic], InsetBox[
        StyleBox["\<\"than\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.046425105143966354`],
         FontColor->RGBColor[
          0.8335801463353031, 0.3487839707329394, 0.3481997561078282]], {-48.5, 102.5},
         Center, Automatic], InsetBox[
        StyleBox["\<\"that\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.05283079909414428],
         FontColor->RGBColor[
          0.6184987019729621, 0.39212575718243875`, 0.7412532450675947]], {53.5, 101.5},
         Center, Automatic], InsetBox[
        StyleBox["\<\"are\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.05613070203817534],
         FontColor->RGBColor[
          0.9324333565611593, 0.5282889043741062, 0.0921900209050434]], {-99.5, 13.5},
         Center, Automatic], InsetBox[
        StyleBox["\<\"first\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04797800064703979],
         FontColor->RGBColor[
          0.9784200278733908, 0.649600139366954, 0.058265924741844846`]], {92.5, -70.5},
         Center, Automatic], InsetBox[
        StyleBox["\<\"has\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.05884826916855387],
         FontColor->RGBColor[0.8996399512215667, 0.7463488834690629, 0.]], {95.5, 71.5},
         Center, Automatic], InsetBox[
        StyleBox["\<\"local\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04564865739242963],
         FontColor->RGBColor[
          0.9986489531525362, 0.7507447657626809, 0.0036478264881522893`]], {-74.5, -96.5},
         Center, Automatic], InsetBox[
        StyleBox["\<\"2022\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04564865739242963],
         FontColor->RGBColor[
          0.9603267270590103, 0.5591336352950514, 0.10711783694067224`]], {73.5, -98.5},
         Center, Automatic], InsetBox[
        StyleBox["\<\"over\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04797800064703979],
         FontColor->RGBColor[
          0.7513196300394465, 0.358, 0.48066210763162087`]], {-95.5, 78.5}, 
        Center, Automatic], InsetBox[
        StyleBox["\<\"for\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.05884826916855387],
         FontColor->RGBColor[
          0.5833680111493557, 0.4126186601628758, 0.8290799721266107]], {90.5, -83.5},
         Center, Automatic], InsetBox[
        StyleBox["\<\"one\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04700744095761889],
         FontColor->RGBColor[
          0.7896667828057927, 0.3575666434388414, 0.4213886953236787]], {74.5, 99.5},
         Center, Automatic], InsetBox[
        StyleBox["\<\"also\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04700744095761889],
         FontColor->RGBColor[
          0.8745421494417032, 0.39318677583744527`, 0.11135537360425793`]], {-70.5, 102.5},
         Center, Automatic], InsetBox[
        StyleBox["\<\"as\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.06661274668392106],
         FontColor->RGBColor[0.647624, 0.37816, 0.614037]], {-99.5, -5.5}, 
        Center, Automatic], InsetBox[
        StyleBox["\<\"is\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.0815593659010029],
         FontColor->RGBColor[0.363898, 0.618501, 0.782349]], {-21.5, 0.5}, 
        Center, Automatic], InsetBox[
        StyleBox["\<\"each\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.045842769330313816`],
         FontColor->RGBColor[0.7989994773739094, 0.735166608597101, 0.]], {-96.5, -83.5},
         Center, Automatic], InsetBox[
        StyleBox["\<\"a\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.0873827240375283],
         FontColor->RGBColor[0.772079, 0.431554, 0.102387]], {-19.5, -14.5}, 
        Center, Automatic], InsetBox[
        StyleBox["\<\"but\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.045842769330313816`],
         FontColor->RGBColor[
          0.6102054708420535, 0.39696347534213544`, 0.7619863228948663]], {93.5, 85.5},
         Center, Automatic], InsetBox[
        StyleBox["\<\"had\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04603688126819799],
         FontColor->RGBColor[
          0.7658565873730018, 0.358, 0.4582975578876895]], {-93.5, 88.5}, 
        Center, Automatic], InsetBox[
        StyleBox["\<\"War\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04700744095761889],
         FontColor->RGBColor[0.7175796237092107, 0.7261199581899123, 0.]], {94.5, 95.5},
         Center, Automatic], InsetBox[
        StyleBox["\<\"law\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.046425105143966354`],
         FontColor->RGBColor[0.9307395679624266, 0.7498043964402695, 0.]], {-95.5, -94.5},
         Center, Automatic], InsetBox[
        StyleBox["\<\"Act\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.045454545454545456`],
         FontColor->RGBColor[
          0.9107287510704583, 0.33890687339431275`, 0.20182187767614543`]], {99.5, 57.5},
         Center, Automatic], InsetBox[
        StyleBox["\<\"on\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.05147201552895503],
         FontColor->RGBColor[0.7678998606330495, 0.7317110956258943, 0.]], {101.5, 0.5},
         Center, Automatic], InsetBox[
        StyleBox["\<\"%\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.05826593335490133],
         FontColor->RGBColor[
          0.8439466852489265, 0.3467106629502147, 0.3309221912517893]], {102.5, 21.5},
         Center, Automatic], InsetBox[
        StyleBox["\<\"led\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04700744095761889],
         FontColor->RGBColor[
          0.9930578157165594, 0.7227890785827968, 0.01874389756528967]], {-88.5, 99.5},
         Center, Automatic], InsetBox[
        StyleBox["\<\"be\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.045842769330313816`],
         FontColor->RGBColor[
          0.8510135028964549, 0.47400900193096995`, 0.018912152606809424`]], {-102.5, -30.5},
         Center, Automatic], InsetBox[
        StyleBox["\<\"or\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04836622452280815],
         FontColor->RGBColor[
          0.6536293927965667, 0.37163285420200276`, 0.6534265180085832]], {100.5, 34.5},
         Center, Automatic], InsetBox[
        StyleBox["\<\"an\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04894856033646069],
         FontColor->RGBColor[
          0.8168067340273636, 0.3521386531945273, 0.3761554432877274]], {-97.5, -57.5},
         Center, Automatic], InsetBox[
        StyleBox["\<\"At\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04991912002588159],
         FontColor->RGBColor[
          0.8564488486273256, 0.42032672705901153`, 0.06612212156831418]], {92.5, -97.5},
         Center, Automatic], InsetBox[
        StyleBox["\<\"all\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04564865739242963],
         FontColor->RGBColor[
          0.4177882075393331, 0.715, 0.25417864494993975`]], {-102.5, 34.5}, 
        Center, Automatic], InsetBox[
        StyleBox["\<\"its\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.05108379165318667],
         FontColor->RGBColor[
          0.8878600487784333, 0.33792799024431336`, 0.2577332520359445]], {-102.5, 47.5},
         Center, Automatic], InsetBox[
        StyleBox["\<\"It\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.05496603041087027],
         FontColor->RGBColor[
          0.8857244243136628, 0.3764133635295058, 0.1393110607841571]], {103.5, -28.5},
         Center, Automatic], InsetBox[
        StyleBox["\<\"\[Sterling]\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04564865739242963],
         FontColor->RGBColor[0.6672593867853922, 0.7205288207539324, 0.]], {0.5, -5.5},
         Center, Automatic]},
      DefaultBaseStyle->{"Graphics", FontFamily -> "Source Sans Pro"},
      DisplayFunction->Identity,
      ImagePadding->{{0., 0.}, {0., 0.}},
      Method->{
       "DefaultBoundaryStyle" -> Automatic, 
        "DefaultGraphicsInteraction" -> {
         "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
          "Effects" -> {
           "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
            "Droplines" -> {
             "freeformCursorMode" -> True, 
              "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
        "DefaultPlotStyle" -> Automatic},
      PlotRange->{{-110., 110.}, {-106., 109.}}], {455., -62.71875000000001}, 
     ImageScaled[{0.5, 0.5}], {120., 119.46428571428572},
     BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
    InsetBox[
     GraphicsBox[{InsetBox[
        StyleBox["\<\"The\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.3111111111111111],
         FontColor->RGBColor[0.368417, 0.506779, 0.709798]], {0, 0}, Center, 
        Automatic], InsetBox[
        StyleBox["\<\"and\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.15623582766439909`],
         FontColor->RGBColor[0.880722, 0.611041, 0.142051]], {24., 28.}, 
        Center, Automatic], InsetBox[
        StyleBox["\<\"government\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04807256235827664],
         FontColor->RGBColor[
          0.9038177251280404, 0.3492734123079395, 0.18454431282010084`]], {-1., -30.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"States\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.08276643990929705],
         FontColor->RGBColor[0.772079, 0.431554, 0.102387]], {0., 44.}, 
        Center, Automatic], InsetBox[
        StyleBox["\<\"population\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.047619047619047616`],
         FontColor->RGBColor[
          0.596786740995709, 0.404791067752503, 0.7955331475107271]], {0., -42.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"American\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.06235827664399093],
         FontColor->RGBColor[
          0.9728288904374106, 0.621644452187053, 0.07336199581899142]], {-5., -57.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"of\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.1489795918367347],
         FontColor->RGBColor[0.560181, 0.691569, 0.194885]], {-41., 38.}, 
        Center, Automatic], InsetBox[
        StyleBox["\<\"developed\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04467120181405896],
         FontColor->RGBColor[
          0.4177882075393331, 0.715, 0.25417864494993975`]], {5., 58.}, 
        Center, Automatic], InsetBox[
        StyleBox["\<\"United\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.07551020408163264],
         FontColor->RGBColor[0.647624, 0.37816, 0.614037]], {-54., -35.}, 
        Center, Automatic], InsetBox[
        StyleBox["\<\"country\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.0510204081632653],
         FontColor->RGBColor[
          0.47401116530937026`, 0.47809330081437784`, 0.85]], {49., -31.}, 
        Center, Automatic], InsetBox[
        StyleBox["\<\"including\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.044897959183673466`],
         FontColor->RGBColor[
          0.6102054708420535, 0.39696347534213544`, 0.7619863228948663]], {46., -44.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"president\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.045351473922902494`],
         FontColor->RGBColor[
          0.8335801463353031, 0.3487839707329394, 0.3481997561078282]], {-64., 0.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"European\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04512471655328799],
         FontColor->RGBColor[
          0.5788038738141875, 0.715, 0.049249615145579635`]], {-64., -14.}, 
        Center, Automatic], InsetBox[
        StyleBox["\<\"international\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04467120181405896],
         FontColor->RGBColor[
          0.9986489531525362, 0.7507447657626809, 0.0036478264881522893`]], {0., 69.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"Americans\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04875283446712018],
         FontColor->RGBColor[
          0.5472001045252132, 0.43417993728487203`, 0.85]], {-2., -70.}, 
        Center, Automatic], InsetBox[
        StyleBox["\<\"country's\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04580498866213152],
         FontColor->RGBColor[
          0.969373377466199, 0.6043668873309952, 0.08269188084126262]], {50., 48.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"military\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04580498866213152],
         FontColor->RGBColor[
          0.845266573755366, 0.437100139366951, 0.03816643438841502]], {41., -56.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"through\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04467120181405896],
         FontColor->RGBColor[
          0.8949268664259606, 0.5032845776173072, 0.05843417978336459]], {69., 14.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"century\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04671201814058957],
         FontColor->RGBColor[
          0.5019668524892619, 0.46131988850644284`, 0.85]], {-51., -48.}, 
        Center, Automatic], InsetBox[
        StyleBox["\<\"countries\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04784580498866213],
         FontColor->RGBColor[
          0.9784200278733908, 0.649600139366954, 0.058265924741844846`]], {-42., 59.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"highest\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.044897959183673466`],
         FontColor->RGBColor[
          0.8510135028964549, 0.47400900193096995`, 0.018912152606809424`]], {71., 0.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"political\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04467120181405896],
         FontColor->RGBColor[
          0.2198892179497479, 0.6590886256402017, 0.6788670615396974]], {72., -15.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"in\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.13537414965986394`],
         FontColor->RGBColor[0.922526, 0.385626, 0.209179]], {-67., 17.}, 
        Center, Automatic], InsetBox[
        StyleBox["\<\"economic\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.044444444444444446`],
         FontColor->RGBColor[
          0.6453361616656581, 0.37647057236169945`, 0.6741595958358548]], {72., 26.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"system\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04625850340136054],
         FontColor->RGBColor[0.7175796237092107, 0.7261199581899123, 0.]], {46., 61.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"largest\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04716553287981859],
         FontColor->RGBColor[
          0.8607200975568693, 0.34335598048862614`, 0.30296650407188447`]], {40., -70.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"America\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04739229024943311],
         FontColor->RGBColor[0.8493197142977551, 0.7407577460330839, 0.]], {-55., -60.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"world's\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.05034013605442177],
         FontColor->RGBColor[
          0.8613800418100862, 0.48092002787339083`, 0.02824203762907758]], {0., 82.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"power\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04693877551020408],
         FontColor->RGBColor[
          0.47929071933511125`, 0.715, 0.1759027208462221]], {-72., 35.}, 
        Center, Automatic], InsetBox[
        StyleBox["\<\"national\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.049886621315192746`],
         FontColor->RGBColor[
          0.6184987019729621, 0.39212575718243875`, 0.7412532450675947]], {0., -84.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"global\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04580498866213152],
         FontColor->RGBColor[
          0.7277983389807635, 0.358, 0.5168487092603637]], {-44., 71.}, 
        Center, Automatic], InsetBox[
        StyleBox["\<\"U.S.\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.07596371882086168],
         FontColor->RGBColor[1, 0.75, 0]], {-40., -74.}, Center, Automatic], 
       InsetBox[
        StyleBox["\<\"federal\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.05170068027210884],
         FontColor->RGBColor[
          0.5407932311309059, 0.715, 0.09762679674248334]], {48., 72.}, 
        Center, Automatic], InsetBox[
        StyleBox["\<\"people\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.044444444444444446`],
         FontColor->RGBColor[0.6672593867853922, 0.7205288207539324, 0.]], {-76., 46.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"many\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.047619047619047616`],
         FontColor->RGBColor[
          0.2187618985811806, 0.715, 0.5074848563512248]], {84., -26.}, 
        Center, Automatic], InsetBox[
        StyleBox["\<\"World\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.0510204081632653],
         FontColor->RGBColor[
          0.7748409210981391, 0.358, 0.4444755060028629]], {-34., 83.}, 
        Center, Automatic], InsetBox[
        StyleBox["\<\"district\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04467120181405896],
         FontColor->RGBColor[
          0.8633598745697435, 0.40996018814538476`, 0.08339968642435877]], {38., -84.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"major\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04625850340136054],
         FontColor->RGBColor[
          0.8781534541180211, 0.4921023027453475, 0.04333810870621905]], {83., -40.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"with\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.061678004535147386`],
         FontColor->RGBColor[
          0.28026441037696703`, 0.715, 0.4292089322474965]], {34., 86.}, 
        Center, Automatic], InsetBox[
        StyleBox["\<\"great\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04512471655328799],
         FontColor->RGBColor[
          0.8926354502560807, 0.366046824615879, 0.15658862564020168`]], {82., 37.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"million\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.0489795918367347],
         FontColor->RGBColor[
          0.37977756485605163`, 0.715, 0.3025558265468435]], {78., -57.}, 
        Center, Automatic], InsetBox[
        StyleBox["\<\"Native\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.045351473922902494`],
         FontColor->RGBColor[0.9307395679624266, 0.7498043964402695, 0.]], {-36., -88.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"culture\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04467120181405896],
         FontColor->RGBColor[
          0.7042770479220728, 0.358, 0.5530353108891188]], {-81., 58.}, 
        Center, Automatic], InsetBox[
        StyleBox["\<\"music\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.044897959183673466`],
         FontColor->RGBColor[0.7989994773739094, 0.735166608597101, 0.]], {77., 60.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"from\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.05532879818594104],
         FontColor->RGBColor[0.8996399512215667, 0.7463488834690629, 0.]], {71., -70.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"to\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.08412698412698412],
         FontColor->RGBColor[0.528488, 0.470624, 0.701351]], {-88., 13.}, 
        Center, Automatic], InsetBox[
        StyleBox["\<\"by\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.06848072562358276],
         FontColor->RGBColor[0.915, 0.3325, 0.2125]], {-88., -24.}, Center, 
        Automatic], InsetBox[
        StyleBox["\<\"about\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04625850340136054],
         FontColor->RGBColor[
          0.7896667828057927, 0.3575666434388414, 0.4213886953236787]], {-69., -71.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"which\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04875283446712018],
         FontColor->RGBColor[0.9810598048862722, 0.7553955338762525, 0.]], {-73., 68.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"Early\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.046485260770975055`],
         FontColor->RGBColor[
          0.9930578157165594, 0.7227890785827968, 0.01874389756528967]], {-85., -48.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"they\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04512471655328799],
         FontColor->RGBColor[
          0.9840111653093676, 0.677555826546838, 0.04316985366470745]], {-63., 83.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"North\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04557823129251701],
         FontColor->RGBColor[
          0.5750747800184488, 0.4174563783225715, 0.8498130499538777]], {61., 85.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"most\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.05170068027210884],
         FontColor->RGBColor[
          0.8857244243136628, 0.3764133635295058, 0.1393110607841571]], {68., -82.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"south\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04512471655328799],
         FontColor->RGBColor[0.4567336004533182, 0.4884598397280091, 0.85]], 
        {-67., -83.}, Center, Automatic], InsetBox[
        StyleBox["\<\"Since\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04625850340136054],
         FontColor->RGBColor[
          0.6319174318193065, 0.38429816477207124`, 0.7077064204517338]], {82., 72.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"other\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04693877551020408],
         FontColor->RGBColor[
          0.9492067688690977, 0.5394711792460651, 0.10728609198218791`]], {-83., 92.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"were\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.0510204081632653],
         FontColor->RGBColor[
          0.9874666782805795, 0.6948333914028977, 0.033839968642435214`]], {0., 94.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"while\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04512471655328799],
         FontColor->RGBColor[
          0.7658565873730018, 0.358, 0.4582975578876895]], {0., -96.}, Center,
         Automatic], InsetBox[
        StyleBox["\<\"there\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.045351473922902494`],
         FontColor->RGBColor[
          0.26512246998569167`, 0.6229020240114467, 0.73314696398283]], {-27., 95.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"been\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04784580498866213],
         FontColor->RGBColor[0.428777913273419, 0.5052332520359486, 0.85]], {26., -97.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"after\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04807256235827664],
         FontColor->RGBColor[
          0.9052934053395919, 0.510195603559728, 0.06776406480563275]], {25., 100.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"Indian\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04467120181405896],
         FontColor->RGBColor[
          0.529922539669161, 0.44454647619850335`, 0.85]], {-28., -101.}, 
        Center, Automatic], InsetBox[
        StyleBox["\<\"any\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.044897959183673466`],
         FontColor->RGBColor[
          0.15725938678540247`, 0.715, 0.5857607804549424]], {-96., -1.}, 
        Center, Automatic], InsetBox[
        StyleBox["\<\"Court\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04467120181405896],
         FontColor->RGBColor[
          0.9603267270590103, 0.5591336352950514, 0.10711783694067224`]], {-53., 94.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"more\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04784580498866213],
         FontColor->RGBColor[
          0.7513196300394465, 0.358, 0.48066210763162087`]], {85., 47.}, 
        Center, Automatic], InsetBox[
        StyleBox["\<\"are\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.06190476190476191],
         FontColor->RGBColor[0.736782672705901, 0.358, 0.5030266573755369]], {98., 10.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"that\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.052607709750566896`],
         FontColor->RGBColor[
          0.9324333565611593, 0.5282889043741062, 0.0921900209050434]], {50., -97.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"has\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.05578231292517007],
         FontColor->RGBColor[
          0.5833680111493557, 0.4126186601628758, 0.8290799721266107]], {-93., -58.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"state\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.0489795918367347],
         FontColor->RGBColor[
          0.8564488486273256, 0.42032672705901153`, 0.06612212156831418]], {56., 96.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"their\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04693877551020408],
         FontColor->RGBColor[
          0.8745421494417032, 0.39318677583744527`, 0.11135537360425793`]], {-55., -99.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"than\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04716553287981859],
         FontColor->RGBColor[
          0.3103557220216354, 0.5867154223826917, 0.7874268664259625]], {-95., -70.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"was\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.052607709750566896`],
         FontColor->RGBColor[
          0.6753413537738198, 0.3589675436319385, 0.5991466155654507]], {96., -68.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"have\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04943310657596372],
         FontColor->RGBColor[
          0.9637822400302223, 0.5764112001511111, 0.0977879519184]], {87., 82.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"per\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.044444444444444446`],
         FontColor->RGBColor[
          0.9107287510704583, 0.33890687339431275`, 0.20182187767614543`]], {99., -2.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"over\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04693877551020408],
         FontColor->RGBColor[
          0.6897400905885174, 0.358, 0.5753998606330502]], {74., -92.}, 
        Center, Automatic], InsetBox[
        StyleBox["\<\"some\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.044897959183673466`],
         FontColor->RGBColor[
          0.8774935098648088, 0.34000129802703827`, 0.2750108168919853]], {-94., 77.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"York\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.045351473922902494`],
         FontColor->RGBColor[
          0.6670481226429111, 0.3638052617916352, 0.6198796933927223]], {-78., -96.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"such\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04852607709750567],
         FontColor->RGBColor[
          0.8168067340273636, 0.3521386531945273, 0.3761554432877274]], {-93., -83.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"New\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.049886621315192746`],
         FontColor->RGBColor[0.7678998606330495, 0.7317110956258943, 0.]], {83., 93.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"for\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.059637188208616784`],
         FontColor->RGBColor[
          0.838355547812947, 0.44746667828057946`, 0.0208888695323676]], {-97., 27.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"local\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04467120181405896],
         FontColor->RGBColor[
          0.8064401951137368, 0.3542119609772526, 0.39343300814377197`]], {97., -81.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"also\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04625850340136054],
         FontColor->RGBColor[
          0.19193353076984873`, 0.681453175384121, 0.6453202369238185]], {96., -93.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"One\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.047619047619047616`],
         FontColor->RGBColor[
          0.8342400905885153, 0.4628267270590103, 0.0038160815296638794`]], {-98., -101.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"War\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.05034013605442177],
         FontColor->RGBColor[
          0.16397784358994957`, 0.7038177251280403, 0.6117734123079395]], {-75., 102.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"had\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04580498866213152],
         FontColor->RGBColor[
          0.31827505306025683`, 0.715, 0.3808317506505822]], {-98., 102.}, 
        Center, Automatic], InsetBox[
        StyleBox["\<\"2022\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04467120181405896],
         FontColor->RGBColor[
          0.3383114092015346, 0.5643508726387724, 0.8209736910418415]], 
        {-3., 103.}, Center, Automatic], InsetBox[
        StyleBox["\<\"first\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04807256235827664],
         FontColor->RGBColor[0.6361597700445392, 0.7170733077827265, 0.]], {92., 102.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"as\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.06598639455782312],
         FontColor->RGBColor[
          0.40082222609352647`, 0.5220066643438841, 0.85]], {-100., 42.}, 
        Center, Automatic], InsetBox[
        StyleBox["\<\"this\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.045351473922902494`],
         FontColor->RGBColor[
          0.922066817647527, 0.5213778784316846, 0.08286013588277422]], {104., 20.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"Its\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04965986394557823],
         FontColor->RGBColor[
          0.8878600487784333, 0.33792799024431336`, 0.2577332520359445]], {-23., 0.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"is\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.073015873015873],
         FontColor->RGBColor[0.571589, 0.586483, 0.]], {-22., -16.}, Center, 
        Automatic], InsetBox[
        StyleBox["\<\"a\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.07913832199546486],
         FontColor->RGBColor[0.363898, 0.618501, 0.782349]], {-102., -13.}, 
        Center, Automatic], InsetBox[
        StyleBox["\<\"on\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04965986394557823],
         FontColor->RGBColor[
          0.35558897405758294`, 0.5505288207539337, 0.8417067688690995]], {98., -14.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"all\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04580498866213152],
         FontColor->RGBColor[
          0.9046334610863751, 0.334573307782725, 0.22977756485604156`]], {-104., 9.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"or\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.052607709750566896`],
         FontColor->RGBColor[
          0.28240003484173815`, 0.6090799721266095, 0.7538800418100857]], {-4., -106.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"an\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.0489795918367347],
         FontColor->RGBColor[
          0.7132613816472081, 0.358, 0.5392132590042952]], {-21., 104.}, 
        Center, Automatic], InsetBox[
        StyleBox["\<\"%\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.05487528344671201],
         FontColor->RGBColor[
          0.8439466852489265, 0.3467106629502147, 0.3309221912517893]], {-101., -33.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"be\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04580498866213152],
         FontColor->RGBColor[
          0.38354466123747527`, 0.5323732032575149, 0.85]], {102., 31.}, 
        Center, Automatic], InsetBox[
        StyleBox["\<\"at\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04807256235827664],
         FontColor->RGBColor[
          0.6536293927965667, 0.37163285420200276`, 0.6534265180085832]], {105., -24.},
         Center, Automatic], InsetBox[
        StyleBox["\<\"It\"\>",
         StripOnInput->False,
         FontSize->Scaled[0.04829931972789116],
         FontColor->RGBColor[
          0.23716678280579248`, 0.645266573755366, 0.699600139366951]], {102., -37.},
         Center, Automatic]},
      DefaultBaseStyle->{"Graphics", FontFamily -> "Source Sans Pro"},
      DisplayFunction->Identity,
      ImagePadding->{{0., 0.}, {0., 0.}},
      Method->{
       "DefaultBoundaryStyle" -> Automatic, 
        "DefaultGraphicsInteraction" -> {
         "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
          "Effects" -> {
           "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
            "Droplines" -> {
             "freeformCursorMode" -> True, 
              "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
        "DefaultPlotStyle" -> Automatic},
      PlotRange->{{-111.5, 113.5}, {-113.5, 108.5}}], {585., -62.71875000000001},
      ImageScaled[{0.5, 0.5}], {120., 119.46428571428572},
     BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}]}, {}},
  ImageSize->{650., 125.43750000000001`},
  Method->{"IgnoreImageSizeAutomaticLimit" -> True},
  PlotRange->{{0, 650.}, {-125.43750000000001`, 0}},
  PlotRangePadding->Automatic]], "Output",
 CellChangeTimes->{3.952506753786422*^9, 3.952506814349246*^9, 
  3.952508461876012*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"5d03349c-fefc-4dcd-95f4-7bc41fbd0336"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Section 38", "Subtitle",
 CellChangeTimes->{{3.9525067981745443`*^9, 
  3.952506799569281*^9}},ExpressionUUID->"810e3a29-12ca-4469-a982-\
c54318562e00"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "=", 
     RowBox[{"Range", "[", "10", "]"}]}], "}"}], ",", 
   RowBox[{
    RowBox[{"x", "^", "2"}], "+", "x"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.952506947281521*^9, 3.952506973309792*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"1fc14e90-6bbd-4aaf-8306-102044ccdc0c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2", ",", "6", ",", "12", ",", "20", ",", "30", ",", "42", ",", "56", ",", 
   "72", ",", "90", ",", "110"}], "}"}]], "Output",
 CellChangeTimes->{{3.952506960893846*^9, 3.9525069745648203`*^9}, 
   3.952508462329441*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"27d2f184-84f5-477a-ad2a-d187e3b35b8a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"list", "=", 
     RowBox[{"RandomInteger", "[", 
      RowBox[{"100", ",", "10"}], "]"}]}], "}"}], ",", 
   RowBox[{"Column", "[", 
    RowBox[{"{", 
     RowBox[{"list", ",", 
      RowBox[{"Sort", "[", "list", "]"}], ",", 
      RowBox[{"Max", "[", "list", "]"}], ",", 
      RowBox[{"Total", "[", "list", "]"}]}], "}"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9525069794106007`*^9, 3.9525070554901237`*^9}, {
  3.952507475736594*^9, 3.952507532327875*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"fa8a06a4-6ef0-4e51-aab4-83dd72a8dc36"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     RowBox[{"{", 
      RowBox[{
      "62", ",", "14", ",", "27", ",", "15", ",", "14", ",", "7", ",", "84", 
       ",", "86", ",", "7", ",", "15"}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{
      "7", ",", "7", ",", "14", ",", "14", ",", "15", ",", "15", ",", "27", 
       ",", "62", ",", "84", ",", "86"}], "}"}]},
    {"86"},
    {"331"}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{3.952507533864705*^9, 3.952508462376246*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"2bccc42f-1669-4737-aba1-998ff17d9746"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"giraffe", "=", 
     TemplateBox[<|"query" -> "picture of a giraffe", "boxes" -> RowBox[{
          TemplateBox[{"\"giraffe\"", 
            RowBox[{"Entity", "[", 
              
              RowBox[{"\"TaxonomicSpecies\"", ",", 
                "\"GiraffaCamelopardalis::y5488\""}], "]"}], 
            "\"Entity[\\\"TaxonomicSpecies\\\", \
\\\"GiraffaCamelopardalis::y5488\\\"]\"", "\"species specification\""}, 
           "Entity"], "[", 
          TemplateBox[{"\"image\"", 
            RowBox[{"EntityProperty", "[", 
              RowBox[{"\"TaxonomicSpecies\"", ",", "\"Image\""}], "]"}], 
            "\"EntityProperty[\\\"TaxonomicSpecies\\\", \\\"Image\\\"]\""}, 
           "EntityProperty"], "]"}], 
       "allassumptions" -> {{
         "word" -> "", "template" -> 
          "Assuming \"giraffe\" is a species specification${separator}Use the \
input as ${desc} instead", "count" -> "2", "pulldown" -> "false", "type" -> 
          "MultiClash", "default" -> 
          "{\"MC\", \"\"} -> {\"TaxonomicSpecies\", \"dflt\"}", 
          "Values" -> {{
            "name" -> "TaxonomicSpecies", "desc" -> "a species specification",
              "input" -> "{\"MC\", \"\"} -> {\"TaxonomicSpecies\"}", "word" -> 
             "giraffe"}, {
            "name" -> "WordData", "desc" -> " referring to English words", 
             "input" -> "{\"MC\", \"\"} -> {\"WordData\"}", "word" -> 
             "the input"}}}, {
         "type" -> "SubCategory", "word" -> "giraffe", "template" -> 
          "Assuming Giraffa camelopardalis (animal)${separator}Use ${desc} \
instead", "count" -> "2", "pulldown" -> "false", "default" -> 
          "{\"DPClash\", \"TaxonomicSpeciesE\", \"giraffe\"} -> \
{\"GiraffaCamelopardalis::y5488\", \"dflt\"}", 
          "Values" -> {{
            "name" -> "GiraffaCamelopardalis::y5488", "desc" -> 
             "Giraffa camelopardalis (animal)", "input" -> 
             "{\"DPClash\", \"TaxonomicSpeciesE\", \"giraffe\"} -> \
{\"GiraffaCamelopardalis::y5488\"}"}, {
            "name" -> "Giraffa::j97pd", "desc" -> "Giraffa (animal)", "input" -> 
             "{\"DPClash\", \"TaxonomicSpeciesE\", \"giraffe\"} -> \
{\"Giraffa::j97pd\"}"}}}}, "assumptions" -> {}, "open" -> {1, 2}, 
       "querystate" -> {
        "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
         0.913626`6.412313443740849, "Messages" -> {}}, "contextinfo" -> 
       Automatic, "version" -> 5|>,
      "LinguisticAssistantTemplate"]}], "}"}], ",", 
   RowBox[{"ImageCollage", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Blur", "[", "giraffe", "]"}], ",", 
      RowBox[{"EdgeDetect", "[", "giraffe", "]"}], ",", 
      RowBox[{"ColorNegate", "[", "giraffe", "]"}]}], "}"}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.952507551736228*^9, 3.9525075715323067`*^9}, {
  3.9525076229672213`*^9, 3.9525076949506598`*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"6038897f-f5e4-4d27-a0f5-a0c3cbb4cfb5"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzMvAdUW0m+/+ndPWfnzcybTu622zngRM45iCyCyEGAQKCcc85ZBCGRhZBA
JAmEyDmZjHHO2W27u925p6dneuKbmXfOW82bs3P8ByHT/Xb3bPlyz711f/X7
/aru91NV1+kUnJKL/t/37dvH+DfHKRfGiaPTYby8dxw3BWQGDkNGIVPJTBQG
RQ+D/x+OyleOH6//bd++f1zPL1+bmN409043myd6h9cWVx5sbD6eXbzRN7zU
Zpmqax+qbOrV6vtMvdP9I2sDY+u9g8tt3TNaw3C1frC2bbipY6StY8ho7G/R
d+v1PSbTYFfvRFffpHlgqmNg2mibaeqdVBvsNcYR6+jm4tqjresvb9z97Na9
L7bufL547cXk2uPhhQeDCw9nNl4uXf5ibv3V+NrL8a2Xcze/WLz11cL1r0ZW
Pu2beTG6/MXa3d/d+/iPj1796c7Hf7n/6q+fff/33/7lb3/423/+8e//+fu/
//37v/79mz/9/dX3f3v57d+ffvn3u5/89eYn//Hom7+++PXfbj/7y8yl385e
/uHGkz8/f/X7Z4+fL42MaKhEZGpcTqR/VoR3IcC3GOANAfgik0MEEBAfmgOO
DS5JCGFDQApccSURUk+HG/k4kxDfKaPqOWgWOCE7+GSE21shJ/4d6PEhJT2y
jYHuU3Ga2ShyTkRZzDl43HlEgkdu0DGQ14GCgKPERO86ZMaoimYToYfl2Lk6
TiMxD5nonel/tCj4JD7BWwtLa6WC9eT8HkaZnlhQVZ6ihCQzs2MI2YkiMqOn
Y254/OnA1Kf2mc8nl79Zu/nD9cd/uvrwTzOXvuscf2mwP/mv/7s43uY/z/8s
/6rceft6/d6L61Y7Y71efnLQH5XJtkDbRmC35tsy30tEF0123r6x473Di7bh
5Z7+hfa+Oev42vzq3bWtR/OrtycWrozNXx6cXu+2z/YNX5xZvLawfHty5mqf
fUnfMa7RD9S2DjS22Zpbu+sbDBptQ1VNfWV1g1Zn0Bt62swWQ6elub2zwWhu
MHZqDZ0N7ZbOvrHBscXJ+c3lS3eu3vro+t2Pt269WL3y0czak5GLD8eWn0ws
PbPPPDQNX9MPb5kmb3RO3+2autc+drd95J515un4xquVW9+u3/5u9dZvLj/+
4fGXf/70+//4/Ie/fvmHv33xx79/8rv/fPjF365/9Jcrj/98+dGfLz/+082P
/+PpN399+e3fbj77y/y1363e/uHOk9/cvPloqt9Wx2ORCkHo7EQOLE+ELGSX
ZkKTQrLDPCAJweTCFERmfC4gGJkRRy0EYrMAKFAUMTueU5SiRuebBATHISzP
KIi8EHHmPf8jvwCcebcc4KFCZJkE2GY2XIbIEEKB4nIgryShIt67MOQkIuaC
sjSlT0QYr+KYqCUGfLaVC23AZWKSfDIDToDD3KjpwVoEqF+A6BfALayyVlKB
tDiBnRWNB4ZWJAZjctNlDIm+abzTetMy/HR84dXq1d9cvf+7rXvfz219bZ/5
pHf0IxeveycIezFzIRvXitpLW9c2eyku+rLz2mnEndF3m0Bcu3Xqzalz1/1t
s870D68Oja0Pjq+Pzm3NrdycXbkxsXR1YfPOpetPNi8/XFy6sbZx9+r1p2sb
98amNrus0/VtfVUtZk1LR0NzR31di1pdLZHJRFIpXyQWSRWVtTpNQ31VXY1Y
JeJJuQKFQFItV9XV1DY3NhqNxl7LwMT09PLm/PqV2bWrM6s3J5buDC/eHb74
YGjhfs/Ezaa+DZ11RT+01TF23Tx2wzTsOG71TN4fWHwyuvJ8bOn56NLzma1P
V+9+c/nJ99ef//7Wp3+88+ovNz/568bDP89d/WH2yu/nr/5++dbvrzz584PP
/vrs67/d++Q/rj7+4/VH31268qDf3CUhYTA5wIq0aDI41SimDdbKGlhYBCim
MDYAk5vIgOYQizKoJZlieAE1PzEf4JXgezzG/SjQ7zQqLaKaWFpLqaAWJKX5
uwUefcfn4C9jzr5fEuPBAsfXkErqmbAmDsIowHaICQYeRobMJWVFEFMCdKi8
yRrJSDVPgwCJckOU4Ag5OAKT4A4Od8Mm+ajLEk1ksF2INFILaiqAOmSGDJJE
TA+DxweCo31yIv3K0pKZGJpS3qFpnDP0XOtzrImzHw06jqnnI9OfDE19vNub
3W0JcK3Afc7Uu1PDLkBzEX2bh58Ao1OatiG5m3PX1LhgZ1tDF0PhYlhcmNnG
1kanLo2Mrw+OrQxNrg1Nr1nGF/uml+c2bm1eebi0fGtycnNq5vLs4rWxqQ3L
wEyb2aZrMVTV11Zpq6qr1Gq5XCYWCkUcvoDN4jBZPK5EqVTVVkorRQw+CUdF
EukYBp/Kk/HFVfLKhtp6o95o7ekeGugZGewdHbWOz/VNrfXPXrMv3rXN3+ua
uNFs22y0rRlHL3ePX+8cudrav2kYuGyZvje6+mx87dng4v3+2Tv9c/cGFh8P
rzyf2Hw1c/XL+RvfXrz1/cyVXw+tfDm+8d3F63/YvPen64//4/bzvzz87C+P
P/vTg4++u3r1vs3cyyegIWkxhYlB0JQwfFZcExM7XKtolzCEiEIONEeJK61j
YFr4JJOEYuTj1VgwIisC4HPU88jbAacOFMT5M0pB+HxgaoiX1+H9p97+xbn3
fxnlfqgMGEgtSuSVZ/ArMmWoPB0ZamBjOoTENiGumlzEKgDIS9Nsck6/kqUo
TyEme2AAp7GAM/AYN1S8p7QozkjKH+DB+3kVKmgiNTVAmBddCU0lZUUVR/uC
o7wLozyLAH6ozCRcCYxEVPPlNkXdRbFuWaBZUjest3ffHRjavg5uU+BusnRB
wR65cN12ZyDXrn5axG1RXNu/PiCue7FbE9dj9bqNU587X8o/66dmL41PrffZ
59otE0brhLF/sq1/vHdsfnb52vzF64PDK+buqVbzmKF73GQZa+t27D9NVboa
eaVYJOGwmGQKEUenEFhMEoNBptBIVCZDJJOpalRSFZ/BJeDICBINy+TROWKB
SKVU1+m0+ua6thZtW7PjaOxoN/UN9AzPWic3+mdvWGdudo5dbRlYr+9babav
6wfWG3qXq02z2s6LPVO3Zi8/v3jj5fSWA717fXO324cvG2yb5uGrlqk7tvnH
toWn3dMPHBvXgcWXy9e/u/bwj9ce/mnjzu/W7/z60s1Pli5udbfoeRg4LCsJ
nBJRmBiYG+2dF+VDLUxv5dFMIkYDC19LRShQhWo0uJmFNolIjTREJa6EXJyS
FOLuceyDwHNHcuMDoBnRqZG+3qePHH//nWPv/sr96LuxfieKkgNhoMiy5NDC
GL/8SE9onD8+PZKVn6CEZ9cQiqWwTEFJqp6FrqOU0bMjyqNPFwcdLg46Vh5x
BgbwEOXHtJML+ngVRko+Oy8cDvAgJfirihP5xYnl8f4VsX6IeF9Eoi8mNaQc
GAkBZeHgbDK9FUXrLiVZsJxRpW7d1HNn73pzIZtteO6mSdfFKeP/Q59Onb9e
6brJHm32vZaw0/nKRQI7zXYz3ln/z+uJifmR0Zl+27i5d6i1c6C1295uHbGP
zs/Ork9MrNkGFjp7JluM9gZjX1OHpb7N5Pjmk1bLhQoRR8ghUPAwZDkcVY7G
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
Y9rbhL3HlH5Uhi4S3tbqjT3dZiyQMBlcCplBJNHxFAaWQkNSKDAKGUYmwykU
OJOFFopJciVTqeYoK3nVGrmuQWcwdvT1jfQPTBvMwzVNFlV9Z2WDqbKuRVpZ
LXEg2tyuaTFr9eb2vhHb2ILFNt3S1qfUGiS6Fo2x2zw4ObJwaW7z7tLVBwuX
7kyv3pxdu72weXdy5Ubf5EbH8HL70HLHyErP5GbvzOXe2SuWucuW2cu2uWuT
6/eWb360fu/lyp3n4yvXlbrW0KjYM2fP5RWAjd3WockFnkgREBji4+ODgEKp
8LI8QFBmhBcyP4kMLySU5fKw5V31tQ4Gp7q7HAx2a6tVDCwZkiHGlGo5VEpF
cXZ6OqQEIxDpmwxzpu6tHtu9kYmP5xe+WVj89ejk59ahl/axT2fnv15Z+X5p
9fvZpV9PL34zufiVdfzj+p57cv2WuG6BLTMXFMPCg30i/U6nR3pVZEQzyjLx
BcnAwHOA80fRwOAmWmmflNjOrmDnheOSvNRlCd1cqFUA7xfCG3EZNeWJTZiM
Zlx2VQVQXhLPzY9GxnlQ0/yVJbE6BFBVFsfOCqKk+aOSfCGxnuUJvjxwghiW
RS4EvVFsu83Suxm7nt53k/de0nDq3MXFvv9V0rvNA06Nf1RuTi1dzAlOa5wm
s5cpRerYHMpVArGCIxSyBAw6B0ekVmDwJXA0uBxVgCSWUNgorpgklFLlKk5t
nbKhpc5oMvb1Ddjt452WMX3nqL53vHNwxjI409bV39rV3zUwabaO9gyMzyxd
urh+wz660NrRr+8a6B2dnVy5vHHj0fX7H1+9+2L16v3J5cvDC5em1m4uXH0w
u3V3aHGre3zJODjfOjDTPnaxd+6SfeXG2KW7k1v3Zi8/XL/9/MbTz++++Orm
k1fLl++3mm0poJwzZ9wA0eEiEb+ru1elrIoIizp72i0hKjwDEBoX4J4VFyak
4rQKGYuAFdIJfSa9zdDSplYOGNrUHEpZVlxWXACuOFNKpzCoNCpbKa2x1rev
dw48sA4/tY08H536bObit7NL347OfmGb+NQ+9Wpi7qu5f9T8enblN0sb369c
+s3sytcDkx+bB5+09T9wtKVytampaTHBXsBwb8cGGAKMhKREJPiejvM4hgdF
1JNLOjgwE6tMUBJLSA1QliX1sMt7WWU9zFItMp2fH8HMCubnRnBzIojJAaVR
Huk+x/KCTmESPBVFMXXodElxDDM7BAv0rUjwImeG6NBZ1egsUla0C+29UVe7
Ccap0t64uOw2z+9G7ja4XOOz0/iN6e0Gr9Mkd1o6HQ2nCW/zsK2/rye8s4nj
rKxqrtIYamoNVbVNak2NTC3hCulEKgaOKavAlmJpGJaIJZTxBWKWRM7T6Cqb
9Q1Gk6G7p7vXauu0DvXYp4dnNxY3b69s3p6cXbWPzvWPzHf1j/ePzK5u3bp8
89Hk3HpX/+jw3PLWnUf3P/rswdNX124/nlu9ZBmbaO3raxsYsC8szF2+vHj1
6uTamn12rnd0vGto1Do1N7qytXjjweXHL2989NnNZ5/ffPLZtYcfb958tLh+
fXR6WW/qyQeXnDvr5utxOjctgYyGY6Dlfp7eRw4e9DpzKsTrbKivJyg5kUEk
0klkaEkJm0G19XYZ67UyJt1QoxVRiZlJEQmAYBgUIharpDWt6pZBbcdyXdcV
vfVO+8CD7uGnQ9OfTi59Ob70hX3+097Jl91jzy2jzwcmPh6cejU2/9XC8rer
G9+tX/puZfPXc6tfD81+qrfeYCt7QLmQID+vYM/TwRdOxPiczYjyjfU+DvQ+
QcyIkJSlqMtTdKgMNSJVBk2ux2a34LPVJfG6ilQjBVyLAtEyguGxHiVR5/OC
3TIDTiV5Hc3wO46Ida8si2+nFzUTc+txGaqKJD44WlEa30YBK6Ap6MTAbZpx
+q5ff+MuWHBa77Sha7j2Upwm6TqBfc6w2tnWKZ4/NqttHlw42RnORU+3JfzP
s1jRVFXb0dRiMbb3G0zdjS0GbV29XKmksZhUNpMvlao12ppanVKlqqqpbjUa
e3t7rRaLpdfxq8/SPzQ6tbCyecOB1Y07T9Y3b45NXuyyjDa2Wdt6hiYXL61t
3Z1duDQ0vrCydfPhi88ev/j86q2HjhbmPlu1oUXaoFHpdXqL0TrePzw7PDht
7xu1dPWbzX0dvcP9Q3Oz81tXtu4/uvHkxfVHLzdvPh2f3Whts0rlGhqDh0Ri
YwFxJ44ddTt2INDjVGSgR7C3+6ED7+9/51fuJw8DgnxS4xPAeUXQ0nKHWVBw
CBRabmozNWhr2SSSVl4p5bDLSgoqkAiRWqc1Duo6J5utS4aBy43WK/WWK839
182jD0YXPp1d/3pi9fOBhZfdk0/bhh609t812u53Dj2xjr90wDg2++nc0pdL
G98ubHwzNP9pS98tXrUtM7/Cy939zLEPTx181+PogRhft9CzB6PcDuQGupWE
n0XEnKel+MkhcXWYzDpUqqo0mgT04maGdlBLTIxSYVEcOtmvKOJsUcQ5eKJP
ebw3KtGHmxvu2Km2UAqU0ERVaUIDJrOFnN+EzzbRi0XF8Zh4P6cK2Q0Qpzpx
3dapGl3w6ILNH0XuNoJ2S8O18vcYy2nc3cLtNPivXWB/Y/R/PhIp9TV1Xa2G
gQ7zkN7QU1uv19Y3a3QNYkWlQKqSqWrU1TqlulqqUFRrdaaOrj5rX29Xp0Hf
0tzYZDJ2DA6NLF5c3di6funK7aXVq/bBmRaDtaq+Q9Pc1dk3MTS2NDA00zc4
Nb9y+crth0uXr/dNzDR29qgam7hVlQyllKUSizVyTYumqb2hyVzfYNLp9LXa
Fk290cFxd//U9OTapdnNm9Nrt0bmrxh7JgTSekgFMS4pwy8g5MSJU/vfe+/o
wf1njx84dWT/wffe+vef/9u7v/qlp9vRjNgoWFEpFkksKCj29vNzO3sBlJGr
qdJpqjQcGrNOXdtc11Ct1TaYesxD811jax2j653jWz1TN83jN9pGrphGr1qm
706uvli++uXFq1/NXPpiaOnjronHxqF7pqH73eNP+6ZfWCY/6ht/Njj1cmz+
1ejFT22zL9oGbsu0A/mFUG/3Cx/uf+fgO786ffC9UI8T3sf2e3zwq6DD78Sc
ei/D+yAs6oy4IFKHTJWBI5gZvvBoN3KSTxsRbBWg9GSw4h+/UxrAzgmrhgOr
UaBKWKoWlW5iFDRT81m54bhEb2FepJFSaOHDegXwGiRIWZz4o/T8YxW4jcR9
OwB07WonCD+q7bYLF6nuFnRnR96Yw24MujDe6dzpKDlF2FGUGrO20dKs72vW
d6s1dTypRCiXKaqrpZUaiUojUdbwJXI6h03nskVyWW1dXUtLU51O47Di87gq
pUrfqu+1WgdHJsanL45OLHf3jrUY+hoN/Y1ttvbukc6eUYPJ2uZY9kamRqbn
zQM2ZXM9UyVnyOVstZpTWclWKXlqpaxWo6zTyrVVEo1aWqN2XKgatFqj0Wgb
sk4t9c9s9k5sdo2uGayzMo0ZhufHpxS4ewd/ePj4u++8e+jAe6eOfHDk/bff
/eUvfvmzn73/ztt+nmeKMkEMAp1EYKaBsjx9fM5e8ASm5Qj5ck21TsgVNuka
hwbHxmaXx5eujC5dt89f6Zm+1DN9pX/uVv/sLcv0NevsdfvCnYm1xxevfrx8
7fPFK59PrH1sm3timXlim/9oePmT8ZVP7XPPrGOP+see2iaf2+deDC6+7Ju8
X9NgARcUel048/67bx3c//bZIx+EeZ70Pva+54fvhJ86mOF/qiLOnZ0bXocG
GSl5ytJYTPz5wsAjKMAFHSKjlwPr4yEM1CJ1eVITIauHW2agFanKk0WFURp4
ch02g54RVBp+Cp/gXodMtYmRPTyokV5s4cB3U+BuUnFdXvfjVEKuNelUonup
3M1mN3B+lJN9u4zAHlu9fvt629243s35bn2R17Qpqw3q6mZFZS1TyMcxyEQ2
gyuTSaq0ipomeXUjT6oiMJgEBp3J54tlMoVKwRfyCWQiCosl0Wh8iahSW9tk
bO/osXdaxlqNtia9A7oRY+dIR9eIqcPe0GxubDUbzL369g6VrpomZKLpBCKX
yVWpRDU6YY1WXFMn17bINI2iSg1fXSmoqpTV6ar0rbqOXn3fSPvwXPvwxVbb
4n8f81rTMEvWUFhBCo9NO3vB5/Chw0c/fP/UkfePfvD2/l/94u1f/NuxA/uj
Q3wQJSUSrpzJkKZk5geFAyJj04uhBLFEo6vTK1TqLot1aePq5o1Hq9efzl96
MLZ0wzJ9uWfyinXqunXiWu/EZcv0lb65G/bF2+OrD8dWHg0vPhicf2CffzSy
9NH0xqu5rc9nNj4ZWnjSN/nQNvXR8NzHY0ufTq29mpi739xohpWAA7zPHzm0
3+3kIcdXYVKIR6z3aVDwBXRamKgUqMVldbBK7RJ0DxuigADKo91APgcLg0/Q
0gPlRbHN2NwudoWZVeZY5hxnSWliRawHOPgkBehbCU1iZAZDwk/Co8+oy+I6
eaUNuIxmQu6ABOdaPD8BnJ0i+QnFddw3+nfN4F4w2bcDGdcNd3Pugtk3creT
Waeh6QIxmcOlcNgULttBH57FoPD5AnW1ut5Q09RRXW+SVdY7PgupHB6TL2AL
HMuIiM5mownECjQWRSQ6WglViqr6ep2+rU7fXtto0jV1NRsHGlqtDfrexpae
+qbOJkN3g6Gjqr5BqJJT+EwkFYemE2kiPlep5KmqBZU6cXWzpKZFpmtRNLSo
m/Vak7mp29biILp/2ji0YLAvNvfNN1rnmqyzdV0Tar2VqagvQdHigFkeHl6n
jx12O/r+iYPvfPjuvx98+xfuxw5mJ0RwSeT6qmaloqEIisnML0cRRbKqDmPX
ZFffREff0Nji6sXLt9evP9q6/Xz9xkezG/cG5q9apy876DMPr7cPrbaPrJqG
Vxzn7olL7SMbhoEV88gl++ydqdVni5c/Xdj6ZHL1mYNK28yDkYWPZlY/m1l7
Ne5Asn+xVl6Fh4KTY4ICfc5Gh3plxAUXAcMr0iKYxclyOEhZnqYsS2zEZtrF
SKsAVg1PRSZ5pXh/mOx5oCT8NA0UVANLbWeUNhLzquCpAjCgJMY98uz7Ycff
yfM9zs0O5xVEwQBn0bHnKisS2piFsrJYMTjaQCp0qpDdhPf/QXG9ymwzc/HU
qU/XPXVR6fp2W72LLrgYWKfwurD8lw2OSYGREeUkKIyCQNEJBC6TKZXKauu1
+s46fbemvk2m1jjQc3BHY7NobDZXKOZLFEyemMBg4el0Ko/DlYuFarlAJRUo
pZKqyqr65tqmDpXGIK/UqzVGXVNPs9Hm+LpzOKxqbHNsZ+liEZZJJXDodLGQ
o1CLqpsUOnN1c39D+6jBMmWyTZkHp82Dc6aBeYNtwTh4sX1ouW1gsckyresc
qzINVZrsVaYBca0RReQCAIkXTrudPnTg+AfvHH3/reMfvOV35khpRoJOphjo
HjW22ShMMY2tNJgnRmduLa4/Xb3yeO3a/fWbD1cc5+uPbjz45Pbjz68++HT1
1rOFq48m1+70TW91DK+02hcbrVONlslW22yjdaaue9JgW7TNXJtZf7x45fnM
5pPR5ftDi/eGFh+OXvzvf/Y4fc9gnpUK1cSyImQusDQzrggEgOYmQTJjC5PD
oMAwSg6AkBYKj/FEAs5LwFEWfkU7GyIqiS+L90r0OezAEBXvXgVLaWeWttEh
PHA0LPZcfvDx2HMHvA697X34nfhzH8JjPbmFUfhUH0qarxYDaiDnsfMjCEBf
RUm8Cy250JuLSdupw307ZvUf23wvOWx79LpWXfvZI/Wv2+/mx4X/17Pamf9u
9btF/9eZKmSjWchyWjGUWgxjOD62iEw5X6Kpqmpsrm5ollZWMgVsEoOAo2Cw
JAyRRhFIlFW1LZXaFrGqmi0RsiQcpphN5TPwDCKOQWCKuQpNjaq2QSCr4Uo0
skq9rsWqN4/oO0dbOseaO0fq2/sVdXq2XM2SynnKSmltk6a1t6lzzGCZ6xxY
sY5u9o1vWsfWesfWekbXu0bWu0fXLRMbPWNrhoF5Xfe42jSo7hjS9o5rTDYG
X5mQADx76uTh99798J23jux/5+TB94IunCzLBjaoqmZGLg7b51XqJq3ONLd4
7drtT+48/urRi68fPv/y3rPPbz365PajTx+9/PrFl7/95NsfXn79/dPPvrn9
9LOFrXuWiVV9/6Suy67t7GvstTdahhsto0b7jG120wHp1Mb9keXbAws3Bi/e
GV25P7r8YHThriNziayhOCcHGOqVFuZRDIzAF4PoiIKyzLjEoAtAP7eiCM+S
CI+yyPO4ZO9qGHBAhjELKnilCcWxnkC/Y7lBJ9hZIUY6pIuP0tMh4rLE8rjz
qV4HIk+/H3z6YLTn8TR/t+Iod0ZeBD0nlF8QUQlPFUES0Sl+kMgzpNSAH6s3
pyi51o9TTW7z5sLSNbku8neR1W69eCPXuwV9HY290+S0I06zcvoW/nlNETIR
jIoSUnYRJaOcVYAXw2gKAlNOZ8tZTAmdxMFhaHDHgaWhcHQ8U8BX1za1tvcb
zAN1re1yTRVXziHzSGgqGkFEYml4lligqKlVVtfxJGqOuEpeY6g3DrRZpox9
s8b+OYN1Rm+ZbOwc0hh6qhrbq5o66kx9BuuEeXCxZ2S1f+LS4NTVgYkrvUMb
3UNrlrFN68RW/+SlwdnLQ7OX+6Y3zKPLxsHFtsFFo31e29aHI7HDwyOOOz69
3vrV/rfeOvTee6cOHwjxuVCSDZJxRD2mgY42u0Sk0dW2zc9fuvPg48cvv3z8
8Zf/+DPKj7548uLr559+9+m3P3z1w5+/++Nfvv/Dn7797Q8vPv967frdrpGp
mvZOSUOjUFuraGqoMZkaenoNA0M9k3MDCxv9c1u9U5d6Jrds8zeGLt4eWroz
MH+jpWuEiCenRIeGXDgadPZgYuAFbEGalISgleflAYJyI71xoCgBBFiJytLT
SoaU1EkNxyLH6ahFrJJEVHowBhigggLbObBGSlEtNruJWiQqT6xI9MwIcou6
cCzW62RuhHt5oi8tP5JTBBCWxLHyo8pjPbICj6b7HsoPOeFCck41uVNCb1Td
j/K/9yZv5OUnZLXvTeC7pv51Dztd7YaSa8R2y/Bft0gmBowrAMESQEhAEQWI
5OVhuEUIGrgMnwfB5JSgc8rwYLRjfWRjSTwKVy6tqtcbu+xm60hLe7dKV8OS
MnEMNIxQgSShaTyWRF1VU9eqqTPKK+sFCp1SZ2rqHO6wz3cOXTQPXjTaFkwD
C+32+TbrpL5zyNA93GGb6hpe6B1d6Z/YHJy5MjJ7bWDsSnf/mrlvtXd40zp+
ybEs2qcujc5dGVu8NrpwfXT++sjcNcvISlWdubgU5e3l+/57+3/585//6hf/
/sG777mdOBIe7J+flU1AkYXcSgZdioCThXy1bWDy9oPnTz/98tHHn99++sm9
Z6+efvLNJ1/99svf/umbP/z52x/+8M33v/3sm6/vffRsYnmpvquDr6skybh4
EYOuEIi0anVrQ625rdHS22ofNg5NtY8udk2u9c9fGVi81r94zTK72WjqohFQ
JRmx8cFnQy4cTgr2JBTnKKhoKaGMDc3klaVX4QpbWQiLhDhey1vQV9pU7FoC
WFKeJoKmyZFZalSekQUzcmASaLKwKLaVUdbGgynQGeUpQYGnD3sd2R914UhW
2HlUeig+KwKdEoJJDS6L9cwNO5kZeCzZ68Ab3/JOeewmSKdrwf97xXWI/8nM
sLPGBZU7Q+zFzKnBtpy3gbybh2JKQQ42PQ0em4aIzicklFJSi3Ep2WXxqQXR
Kfkx6UUJefCMclIxnAJFUGAEDomnkGiaW5pMHbXNTeIqGU1AQ1NR5Vgomoxl
i4WOXWhdU2d9Y4+6ulWobFA3mB249Y4u946tdA8vm+0Xu4aWHcR12meNllFz
/7hlZK5vfKl/YtU+fWlk7uro7DXb6CWzZaW9Z7l3cLN/fMs2fmlgfGNwYmNo
enNk5sr4/PXxuWvWoWVFtSGvsPz8Bc+333rnZ//nz37+s1+8+9bbJ44dDgjw
jY2NT05KT0vNy8wCFxWVs1mSrh77rQfPnn/+zUefff3g5Wf3X37m2Hm++u6H
L3/7x0++/s3DF5/cfPho687N2fVlY3+PqE5NlLJgbByMgcXzqUwFX6RVyhpr
VK2NGnN7U19/x+hU//za0PKVkZVrw6s3hpYud1kHKgUcXEkmKNorJdyjPDOR
jYIy4GBsbjwlF8DMB7Dyo3mFAEUFsJVZ3l/JbeFgKXmxEIBXeYKfsDTVwEZY
ZKRGRhkpJxSX4l+NzOgSIo1cGDYr2vfkh8ff/dWZ/W+FnT6UH+lVGOOT6ueW
GXS2LMEXmRpQEusR7/m+azk5FeF//a+rzG463E1p/0+VH0XWHs1+csJOpyan
Q7dtDHeOp1NOXfCYhYkHoQApsIjk8nAQIjobBQCVRyWBQ+PzghMLwlIhgFxk
ajEhtwibB0blQQmlOBaOI+dJqhVCtYwrE9KFbAKLjCCiMRQ8SyRQ1zbWNXXp
6rpkymaBvEHTYukcmLdNrPWNLXcPzpv7Z3oGF63DS522aWPPULt12DI8Y5tY
tk+tD81cGp7dGprZ6htbN/cvma3L1uHNgfGtvuE1U/d4U1tfk6m/ud3e2T/d
P7rUbZ9Xa02Qcoy3t9/+d9/7+b85GPy3d99+69jRIx5enr4BwX4BYeGR8aDM
Amg5UiqtsfaPX7n95JFjL/ryq/vPX917/urJ59988uvfvfzqu+sPHo8vLveM
jJhslnpzK79ajhcykBxiOR1TQcfiOFS6hMtTS4UalaxBW2NqM9hs9vnFucvX
V2892Lr/7MrjF5fuPR6fmlHy2EUp0bF+JzOivKnlBWIyBpGflhp0PifEDRJ1
vjTmHDTOAw8KksFADQykCleMTAvNDDmTH36eW5Rk5KF7JMQ2HtqxNcWkBoiK
403MMrMAScyPDb1w4uzhD06993bg8YMZIeczwtyjzh8LO30wM/gsITuSkBOR
GXb8J8hyN63+/5PBN5K1jYs9Otxtedrnsu97BG23R05tonOCo3ICQzN8gkDe
MYVBKRURqfDwZGhoYmkIsDwiG5tQTMsqZxeW0gogpKIKKhRJh+M5OIqQThNy
GUIBQySk8rgEJoPCYfNliuo6Q5PeUtfQKVM1SCqbGtvtPUOL1tGLnbZxvdna
aOpu7bS1W0ZNPSOGriGTZbR3aN4+sTY0fck+tdk3vto9stg5stg1eLF7cKlv
dM0yuNzUZqeypOVIPIJAgeEoPEVNc7e9c3hO3zMiUNYC07NOnjj+ztu/fOet
X5w8dig4MCA5JT0tE5yVV1FcioejqWQaR1ffMTS+Mr9xa+3Gg81bjx3H5bvP
bj19df/lF9cfPR1fXm7u7VI01/E1CpKEA6XiS0joCiYRyaFgeXSyiMuSiwVV
KolWo2puquvoMA8OTa6sbt65f+vpyyeffPHyy2+effrq4vJFLg0HjPAMdf8Q
FOXDRJZK6cTynJQYr5NJPifAsd4VaUGY7ChqcaIInl1NgtZSYXxoBgYUgU0P
k8IyteQSLQHcIcDqeUgVNqcGm9MpQHbLSGxYVnp0UKSvu/+ZYwBvt7w4/7Qw
j8gLxwKO7489fxgBDGZDEpAgP6eK+mnFtcD+J26dZrgzYRcrzr5dWPsJGf40
uHZL5nXjf9W8fvu6pdMmjpfqHn7+fNgZ9+gzwSDPhLKgNGQYEB7quEiEhqQh
Y3IJKSWMfCi7BMGDY3gYJAuOYCKxXDKJyyRymDimYy9KQpIJRBaTI5Gralt0
jd219WZ5VaNSp2/uGjD1j7f2DNS0tIqqVFyFWFipUOjqqpsM9W3dhu6hroFZ
68iybXy9b2y13Tbb2DXc1DNi6p8222e77POtneN8iTYFlBeblJqYnhEdn1yO
Ide29XaOzDtobTYP4MiMoAD/Qwf3Hzn0frC/d152DhpFIVMVbF4dk1PLYCkr
q1qM7aMDYxsD0+tDCxsjF7fGlq5MrFyfXr81s3FrdGnNaLcqWmpZVRK8mFVG
xeUgobmoigoGESdkkaU8ukLEVStEmmpZva5S31LX3m7ssw5MT81e2li7dfP6
o0f3n7948NHztY0NEY+WEuMd7nEoK8afg4UpOAxEQUaM9ymA97HCxABsYSIN
mkmBpBLy47jQjDo6oomF1lFhGlKphlzKgSRRcyIbKZDhWn6XjFSLz2umQ9rF
JCGmBFmQCclIzI0PKU4MQefGQdMj8gA+cV5HI9z2ZwefoeRHM0oArtX1Rolu
U4gLQb4Rdqf1Oynb7XYvzXem7RooF213a+IaRqfOd46hiwR2uj3hfeKkz0m3
gFPnwk55xp4OyXCPKw4AgP1DMjyD0zxCQd7ReaEgREoxpRDBRRAkJILYoU8y
RcajS8VEHhdFJZVjEcUIaAUeTWAxWGK5WKWTVzdKKmvl2rraNqPG0Kaoq2PJ
JBgGqYKEQtBwRD6Ho1KrGvUNHRZ9z7DRMtFpm+3om21sH1Y3dKvrO+tbrU3G
/kbjQE1DN5HCj4yMDQmLDI+MDg6LqMCSG9ptvcOL/aPLnX2TIqk6JSnOy/10
kL9HdkYKFoVjMmVSuaGyuovDrabSRJU1emPnRN/Iev/4Wv/kWv/E+sDUhm16
o2vkYtvARJPFqjLUc2okFDkHzaOUkJC5yDIwDo5iUyhSLk3Op8n4DIWIXSkT
aivlTdoqfYOuXa+3dJiHrdapoeHFqdmN5a3bN6/euN6qrwPnxEf7nUiP8qEi
IVIWA1mUE+17OvjsAWDIufJMAAkCwuTHgeN9YCnBHEhKDaFYz0GbhKQ6egW1
EIBJD9Lgcsd0/MFaTjOjuFOEs9SI1AwCAwPHluSWZcSWpURgcuOKkwJBYedj
PA4HHn8n+szB3NDzRQAvp694L8jsJrCdXLgAYWfDnR5ch3Mad98exOw6mTca
b+vazuauJ6Jtrlx72Gn8+q2bn5vjOBd85lzIKbfAoxfCjwckuQcme3jHnPeK
Pu8L8AgBBiQXJRRg86C0cpyAxFBwWWoRSy1lKKREPg9No8Lw2BIkrAyDRJAJ
eBaLJZGL1DUClUpYpZDUqgSVUoaYj2FQS7AoMBpRTiHiBQJWZbWsoaWqtb1a
31GjN2sNPTpDX02TRVrdzhTUsnmVUkm1Sq6RS2pwKGJESKiPl0eQv29kRDAS
g9fpu9sd2FqnWtttfKEkOz0xMSYInJtGxKAYdJ5QrKut69Pqurl8FVekrGlo
N1mnrWNr/Y6ldtzxWbpun3TsezfaB2Zq2y2ypiZ2tcwBIEHIgDNwRbiKAnRZ
KQmB5ZGpMjZFysYL6GguBc2jEqUsZqVQoJHK69Xqlpqq1trqNm1dZ0v7YO/s
+tKNu7eHx4bw2NKkSPe0KE9saQ6PQoKDc6MDzvqf/QAQcAqcEoYsSCxJD04J
OQUMOJYXeRafGSpFZBh4BJOYIkFmknJCpNAEixQ/Ws838MoMXJhZxVGxSDhI
QRYgJN7/bHqIOzQlNC30bLT7obAzHwQefy/wyLthJ94PPv6e67f8Rk26JnS3
JtuaOwV5t0dOb10I/qdl5TQZp612y2Hn/OAUvdftdzNz+uhfxTfczyfCxzPM
3c3vxDH3D497Hj4XdNoz4oJXpKd/jE9wvH84MCQhLzYXkQ0hQhAMLF0q4Kqk
VCmfLOaR+Hw8k4Mh08qxOCgWU47HoGhUplQmrqrlKRQsiZAl5dGEDDybWk7E
FyCRJQQCXiTkabWS5mZpU7NIV8etrGErK3mVGom2WVnfLtWYyCw1DEEjoIgs
HJmGxJXn5Uf4+3iePRHhfz4rKQyLrJAqa2saO2qbO1U1jWQSMS89vjg7iYqD
8VksAU8pV7U160cMbYN19e21Dab69n5D30T38MW+sZX+0VXHYR9fc3yBdtln
dSaLSKt1bDjxQhqKTSrBw7IrwNkwMBgHraChMVwihkeuoGOLCPBCXEUJCQFn
4QlCGlPJ51dLHQe3SizUKquMDZYx+/KlS1PzCyIJNy8zOiMhsLwgnYxGICBF
//hLa55HogNP5yWHgtMj06I9o32ORbh/APA6kBV+GpcdWc/EdCrZKnw+uzhG
WBKjp4LHtNxOOaaJXaaX0rj4ipyE8LALR4NOH0j2d4OmhmZGuKcFuYFCzgD9
3QAXjgDcjwSd3v9j9fljn+40dj3hvxE6p8YuLvaYttOs3jhd7CUHp97eaL/b
o51IhsVFhsaFeod6nvQ4duj0wcNnDp3yOnku8JxHuIc/wDckMSA8JSQuJzoH
nlFOKcOwcI5FjSsTE/ksAo9N4gkIDC6KSC3H4qE4HASLglGIVLGYp6piiMVk
HovMZxI4VDSDDCXii7DYchqF7PgkbK6VtTUKGnV0tQovEKHYXAxXQJUp+dU6
gVqHJfNyCyvAhVA8HEuCISvyspMigsK8z6VGepVnRqMh+UQynSOtklQ18sQK
FLysJDuJBCuWsplijkgi0tTW9TY024ymEVPHSF2rVd3SVW20GKzjlpEl2/iq
bXxlYHzFPr5sGZxv7rCJq7U47j9WwDIKygFgQl56Yj4ovTQvB14ExkIhREQx
HpGPgeWioLnI0gJMeRkJjeXQaBIBUy5iKYTsSomksVpvMQ/PzA5Pz1fXaeHw
gqL85PKiHBgEXFaUn54cE+x7MtTneGq0X1KEd5Tv6Ri/EzG+hyM9DwCDTuJy
Yxu5hG41R8eo0FFLNIS8ekL2UCV1pJ5nVpBaVTw0JCc28HzQ2YNRnsdyYnzw
hUnoHAAxP55YGI/MjIQkBjq2plk79qJ7VOweH/0E491E7hQuF4/+VbPHzJ2K
fC9lt+guls7dou/bga0Lb/+yiUyMCo8N9Q50P3Hu6KHTh46ePebmfeas/zkH
hp7hF3xjvIIS/aOzIjIqUqBUCElIEqjEAqWEKuAyJCK2VEpksyvwhDIstgyH
LcYioWQcQcClS0V4Lh1Fx6OZBAyLiGGSUQxqBZVYRsFVsAg4KYtWI6VWybEi
IYzBhBBIxXgClEJBM1lYxy0ckZ6dl56ZX1QEwyLwcEhpXlpyVkJUbkJoFsAv
OSIgLSUVRaDx5TUsrrAckleeD3R8NFVLFLXqerlMV13bXlXbrmu01Lf2y3Tt
nMomodZQbx7sGb5om1yzTa3Zp9YGJ1esg3PNpj6RWoNmUB2sFWKhacW5UelJ
kWmJcTnpQHB2RllhPhJajEOVkvBQMqGMiCsjYCsoJCybRRYI6BIxRynh1cjE
DVV1nYae4RHb+FxLRzeNRS4Cg7LSYlMTw9OAMcmJ4eHB50L9TyZHe6dE+wAj
PDMBXilhbjHeh4HBpzC5gFoGqkfN71ay+2v47VKSjlzQKUKN1Au6VJQWBbui
AJgc5p4S5gFJj6aUZgmwxXQoiF6WyoCmkouSMNkARFY0vgj4Y5W2x3oXfly4
ev3pbhLduTHbDb03roku1t99zqh0zdTOJrs9dRrRhb3rOSEiITQMEOjtf/7k
2aMfnjx4+OzR095nzvicPeV1+rTPqbOBbp6R7iGpgYnFsYX4PIKQwK8ScRQC
Ip/Jkgv4SpFjmSvDIcoc9BHQjgNJJ5IETJKADqcii7GQIgwEgi+DU1EOEitI
qFwYOK00OwtZVMrAInk0KBWfj4CCSvJTwNlpxTkZJXlZxfmZBVmZWRnpKaCM
zIKSEngJuLQwPx+Sn5sNjAMEeQW4nwr198nPL2ByhHQGszg/vSgjDpKbyaay
6jStlZVNqmq9WtumbenS6HsktW1cVZNjf9vYPtg1OGcdu2idWLZNrQxMLnXb
J3WtnTxFJYZNh1KwECIKjIKCivITszMSsjOBBbkgCDgXBi3BoWFUMpbFJHI5
ZD6PLpEw5HKaWOLYb4uqK2X1GlljbY1R326z948tdNsnFNXVxZDcqHCvIN+T
EWGecbFBgGif2EjvtMTgLGBYeqx/Uui5SM/DIWcPxPkcgyQHSTEQo5RtljHt
tdLBOplJTGgXYftr2O1SYpOUgSsFlYKi0YVpXCxUxSLycWVQUERBnHc+wDM7
4h//12hBXCARkrHbm3UhNhfS3QnLTha2SXQ3jW2rdMrU6072mLCLzHejwGlx
kc/Oyt2u35jSTj/bRsxxDgH4BYR5XvA6fczt0IGTH3zoduiE+6nTHm4nL5w6
7Xn6jP8Z9zD3wOSA2PyoLCQIzoJRJTQCnwyjolAMDJaNgZKhDtAQVBxNwOHJ
JKJ//ME9D8fEFKMKcqAZoJL0zNKMIjQYRiovQhUC8xOjQFGAnPhMWF4JoTwf
Dk7OTYlOiQlLjnAcEcAox3ViWmxKfCQgNDg6KiYpKTUpEQgAxDmuA/39/b3d
w/zc48P88kHJBByaRMAUZiVmA6NSE2JRcHStpkVv6G0xWVo6rS1d1rqO3qqW
LnVDp6bZ2to50jkw1Tk0bR6a7h6Z6x2b67CNVLUYmHIZUcAhCjkkx8FloCkE
MKw8s7gIVFSUVVqSVwEFI+GlOAzCsfwx6UQehy6TMJUKukzGV1dVN7XWGdtr
DAaNsb3NOmgZmXccDUYzhoyLiQn09ToWGnwhIT40KSEiHRiTlxmfmRoJCDkf
eP5Dn+PvBJ7aDwx0Q2QB1BSklo1X4oqMQtJInWKwVtxXzbVpBJ1KZptayCPC
sMUgGgKiZjMaZEIxFVWUEhrnczTs7HvhbvuTfU6WpUYxkSW7aWw34e3bBZyd
ZO18tHd2dgZ6XZA7eXEBi+u+7Az3o5o7HYfdUnJhuds4uK75561n0Pmz3idP
nDty5Myhw2cPH7tw4pSn2ykPt1Pupx2roXuQu2+UdygwKDY3Ir08GUzIr2CU
w2gwCL60BFdURgGXUApKSBCSgKGqralvaqpr1InkXDgBklMKyoJkZBT/4+zg
sYIE+ce/6slPiAZFArJi0yAZ+YgCUHF6dGp0cGxIQExgYGxwaEJ4dHJ0YlIk
INgnMsAnIjwsKgoQEhzm7ePj5fjx9QsPC02MiUiPCwOnx5UXgMrBmRlJESlx
4enAZCwar61t6bOPj80tjC4sDMzMWCamekamuuyTPfbpgfGFkbmVofkl+9zi
0MLy+NLq4Mxcc0+XUFPJVUvFNSqBWs4QcUlsWgUenQ2BpOYXphYUZJaUZJVC
sstK8uClhWhoEQFeziCg+QzHZpujUFQ36hvbO+vbuxrMvfqewfb+cfPgpN4y
IFCrcsHZISGeYaFeCfFhSUnRwKSYjLTYdGB4hL+bx4n9XsfejfI4XAYME2Ag
VQysEFXIgaY3clAGAb6eXl7PKGvhodqkVL2cLyRhoNmJFTlADrpCI+BK6bji
9Khw90M+x38VfPpdUMgZXAFQQETuUXJ7V8tOm91k6VrwrhXoWs9Oy04DF0Fd
OHxjH3frl9P8XSTm4uL12wt+Z894n3LzPnXW74xjmnZAdyHgguOT8LSn23n/
C97h3kGx/pGpwbHZ4UlFgAxYSgEmt4wEKSdBoeRSBKccKahA8BAMBUdVW1VV
W61QS5hcQhkyL780AwwrACMKi5CFUDwESSkvxYKzSzPSwKmgkowCRGExuiSj
OAOQCghPjIxIioxOBcSBEpMzEoHx4YBAj4SwwKTY2OjIaF8fv/MXLnh4evr6
+UVGRiXFxSUDIpKjgxIi/OMjAgChvgkxoXlZIDIeX6drnJlfunrn5rX7tzbv
3Ni4fWP95o2VK9dWtq5dunH7+r0H1+7du3zvzpX7d6/dv7tx46p9ZrzB3Kpp
rdO1Nii0ahKPVkFCFsAhwPwcQHo6AJSekJ3lOOKzMxyfh+nQ/LSK/Bw0pJSK
RrBIOB6DKReLtTXK5iaNydzY3d/aN2gaHDHYBzXGNhydBEyPj40LTQLGAFMT
4uKj4uPDQWlRyXH+oT4nYoLcMuN8qOWZlWw8F5GPzoikgxM11DIFPp9TGi+C
JynwuVoupk7MYGHLIZnxSHAGBwtXsuk0VFF2gn+k95Gg8x9EeB9ODjoFy4ph
4SBO1eKivFG6O0W1TXguuPiXK6eq203be3m6zxm2rmuc0vRjWXOawLYLpzDu
e20othlsC+QT6uUb7hUY4xeaGBSWFBwSHxQQ7ecZ4ukR5OEb4ReaEBKdFhGf
HZVUAAAWxaWVAXMQmSU4cBkBAiGWwlgwpACBEqCoMhpPxqXzqEQWFkMpL0Pk
QmB5ZQ7FYkoh6BIoDlJBcFwUFVTk51cUOOiDkeBIMhJcUZiSk5IASkzMSkrJ
SwcVZGblpKYCQlIjAsFpSXlpqTER4Z6e7mfPnbngccHbzyfcAWtScmpKUkJs
ZIi/d7CfR4i/Z0x4YG4GkIRBNNbpllaX7z6+8/DFgwcvHj7+5Mmjj5/de/r4
7uNHD549efLi2ePnT+8/e3j36f07T+5evnNlfGmqa7i3e7i3d8Ta0NFMk7AK
MaUpRVmAjNSIlOTwfx7JSVGpwMS8jFRITnJJZho0pwhXVk5FllLgZTQURkjh
aOS6zo6e8XH7/NzA3IxlaqJ9cEBZp0HhUQXFeXng3NyivJSMlPjEmPS0uNzM
uLSkkOK8BAKiUMYiqLgkbGFyQZwPPC2EXQoUIkECRLKCkCnDZVcxYA0SJocA
h+WmUOAQIY3CJCDLC5KzkvzT433SYr2ygcGZsb6IAiCDUO5at3sXmOtHu0lo
p5Kdkvg/TMy1vdM09hJlJ1PbHDrt3TbMdzbf52wQXGAblhAUnhQcnRoKAIXH
pIdFpYSGJ4eExgeHxodGAiPjMmOT8uJSwQnpxYnpkGRQWWpmOSgXnp0Hz8lD
5BURiiEUSBmtFMFAIKmIUiykBFNUhi2EOBiE50EQYDAcXOhYDeGFRfDCwor8
PGhefkVhCRoC/28GIciS7KKs1LzUtPzUDHBmDjg7NzMZGOabERVckp4ETkuO
iwjz8/G+4HHey9czNCY8ITUpKy+3GFKUX5AbFwuICg+JiQiOjQxKT47BwiGN
ddUXl+eu3716+9HNu49v33ty5/aDW9fuXL929/r1+9ev3r2yeWNj+f/i7j3A
msq2/v+5U6zo2BtK770GAiG9kUoSSCOEkIQQQuih996L2BV7dyyjM2MXu2JB
kV6k994RdH7P/R3m/v/37yuIOHPv+773v571nGfnnL332Sesz/6ulaA8vXPn
6e3bT279du+XU7+ePnrp2Pnr56/cvnz04rGE/GRxiJQqcEE4EcA4jBUKaQ6D
WSLgEAIe60IluNKxbBJu5q+tODt7spxEgCYyecEeYdkxR34+XfTyyeOylzeL
718uunHu2i97jhZGxkbJ/eWeMqm7xJPOZiKxKAwW4cIg8ThUXyk/ISIkPyUx
JyHS153qhDRxguh6O9mn+TFzQ7l54bzMYE5+hGRXfEBqmI+/h4tCJgoL8PUW
cYRckphHlfBpAjZB5ErlUFFePIa3J+er4nZ2QH4u2Gb3XMjJ2YrwVYtZeOc5
hy9khs9hNc8CPsFzzkvzbEcft+ecCoyxtEGbgVAmILQJCGUMQpnaoC0AKiF4
MIzsgHSCoekAhnCsMxzrgsQxMTgmFs/C4NkYgqsjVUChCZ3+QJLuxKcROUQi
l+DkRqLzyQw+2QmoB9lkEotEYZOpXIqTK5XKpVJdqQx3BlvM4ko4AJtOXCqe
jsU6oQl0RycGgYaHYq30yXbmDJSdKwVHx2Md7EDWIAsIAsLgsyQBsqjEmLTs
tIioMAbDCQV3wKMdCCgInYj08XLPz0+//NvF249u3XtadOfhzV+u/3zm0ukT
F06cuXLmp6tnT105fvjcgX0ndu0+tmPH4by8wqyMfWnZBzL3n9p94tKRQz8d
yDuUG5cTJ4uQM0QcJI1kjUaaODiYwWFQCpHEc6GLOGQ+HccmYjlELJdI4JGd
vViSSO+M/VnXHt4oa6h+01T94E3xzad3f717vfBEYVR0SHBQgH9gsMwvmCcU
I3FoGzCISMR58NlyCV8hFyeGBhSkxCeGeAloEC7aLJLvuD9WejjJ53RO2Mmc
8F2xspwQ94wwrxCpW6BMqPCTyT15chEnWC4O8ZUE+gj9pEJPPlMm4gr51C9G
3dfa3+eyhY/9uPHJnj//hJ9TnHnsc4v/2oedc/Gfe6hv/iu2nyxmgU/3sZnY
6xnaaumB1PWs1fRB6kZgLVOIngXcyAZjAcZb2+KtwY4ge4KNvaMNhGAHJTlA
SVAHkr0D2Q7m5IBkIDAuKKwLGuOMQdLRMCocQYVhndFELp7ExeNdMGgnFIqC
BI44BpbIciSyCEA9SGQTSBwCmUsksQk4OgZGhDjgwAhHKJGEpKFsHK31mEiw
gIrx5jqLWM5kLBwBB+OIGFcvvn+UInd33tkLp4+dOOjn5wWzt7K3MkTbm/Oc
cYEBkpTMxN2Hdh8+c+jYuSOFx/dn78qKz4qPz45L3p6YtisppSAuNis8PCU4
IE4uDRN7hnp4RYp947zDUgPjciKStsck7wB6xkamh8givNlePBSdbIVCWKIR
KAaV5SXwCPBylQko7gw0m4hwweI4RI6PqyIt5NCFQ8Vviuva3la2Vr+oLXlW
8fz+8/uHTu4NDhL7+4gVwSGK0GipPABPIRubm4BsLRk0koDH8OCSAoUuO5Ki
92cmxsjYfs7IBCH1QIzkWLL8WmHGtUN5+VHSUA+CP58kYpMkHsxAX0+5BEgf
iD4iFz8vV4W/lyJA7icTyaV8qYi58HhboH1tCM3uNmdgf/LyY11YOKdz3nF2
568avpCT8zzXxw8yz6pmz/BP26q3aavexq16G7bqb1A12qRpvlXfRt0EomOJ
NLRAGRnD9E1gBmZwYwuEmTUKUEwQCG1thbKwQJlZoC2scda2BBswwRbsCLbB
2tpgre3wNnAqFDsDJhJFg8PJMCgRCiM5oGgIAEnAAUIx9JlLCCcYcB6MsbGA
mZk7mIJgVmgsmIa0pEFMRFRcgBvL381FymWwKTgCxgFPQDrzGSJfz9iUuANH
9x85fiAi3B8NtbA3VSM4mMiE9NAwH0WsIiI5Mj4jNikrPjY1JjAqUBbqIw/3
kUfI5JFSeYTESyHky13pHk44FgbNQhHcHRleThwfZ54vyz2QKwkV+EZLAuK8
A+J9JCESJwEbSiHZEfA4FwbXS+ThL3WVeVCBkoxDQjLxGI6ji4wZkqU4/uuh
p2X3SutfFFc/flh293HZ/aLnN/Yfz/OTc2WenJDgwJjoxKDQaCaPZwW21DfU
gkFsmAySgEuWchxTg70PZSdnhnnL6HC5k32ShLg30v36wbQbx/JzY2WeLCSH
BHZzxvlIXEMCvQPlAjHPUcwnSUXOgX4SRXCgn5/URyrwFvMXEmlfZX+Fwdmd
F64pf9Fmx/xCpp3/YeeXyE/o+9zOM0+3f9jKjUprtv64Xn31Ju11AIYapsr6
tupmMB0rjKE5Sl8foqUL1tS30zG01zeGGJs6mJpCTIzsDPRsdfXs9A0djIxg
xkZQIyOIkZG9oamDkSXSzA4oLakQOBUCI0OgRAcIwR5CtEM4OaAZcCQNBqc4
OBDt7B1tAVoBqE3sjPSsdQ2s9czBJkiktRPMlGit4+Rg4UFBy5hEHy7Dk82g
4WCOWCjFmcASML0DvONS4zJyUoIVMiLGGm2rxSSAfL2Z8iCxh6+HyE/kHSz1
DfWRBUk9ZB58Kd9d5u4mdXX1YgOFKlPkQuSQYGSYNcrKAmkO7B4oJoLkhifz
CSS+o5MHydnTyVXOEs18+SJkiHh4Ngvr7ExxdXWVSngyT4bY1ZFHw3BIGC4B
7Yan+dL8srx3Xsi8+ODo5UcnzxQdPnnr4NnbR07fOLjjSEpEhDQqxC8xNiYl
MS0iOkEk9UY5Ig2NtYyNNBAwK4YTkkd18HejZEf4JQYIxE72ErJlIMs21Zt4
Nif41qkduzIjPDh4F7KDkEcFKr4AuTBA7uHlQZdKWN5ePLlMIpfLPCXuPB7d
xdnxi2G2cJsnbr8KmXl08JtZGvEvAXDOyRfI4Pz2cc85G3NuMp+Dcc53Y7HS
4hXrldaprtqiu07dZIseSM0MrmuNM7IhmljiDAxhWjp2apo2appW6tqW2jpW
urpWuloWmhrm6pqWmtrW2lpWWpozLzU0zTV1rbWNIAbmKDMQzsoWDwLjbMBY
G1ssCEho7Yg29iRbOwLIBmtphTK3RllYoy0tYOZGNoY6Fjq65jom1gYIuCUJ
YoIw2gY3UWPALf241DBPN183posjjICxd6QgyUwC24Ml8ZP4h8ilcgGDgSDh
LF0YCIGYzhU7O7nNFJt0N7qLuzMgmjO1Jxd4SQPqUMBpfBqZS0HTsQ5EB2BJ
IIylraOVAxWMcoFjWUgsG41jYTEuWDwHTxPR2d48lsSDJRZzJV5CuZ93iEIc
6Mf2FlJFHJLYhSJlUH2dOFEu8nxR4smQ/J8Ttl9MyjmTkH0qoeBc6p6L6btO
JGVlR2UkxmYmJWamZCQmZvgFhdKYNEsbY20dZUMDFai9IQFhzCWCw6WseF+u
go8L46Mi3BGJnpgDMR43juXtz48XupHpZKgr21HgRpV6cuUyvsyLK/Pme3nx
xSI3dwGHySLi8WAHh4X+vugCbXbszb66wHm+2P9z95p/DV9l/8JbzCltHzc+
pu+LO8zHmH+/+Ifla5YBOqhqvEkXpGrioG2FMQATTcEkM5CjsSlSV9dOVdVC
eavx5q2GyiqGKqrGaqrGqirG21RNtqmZqqgYbwXObzPcpmqkom6mpm2tqQfW
NXYwNIOZmEEB3TQGGuYIU3PUH440MYMZmUGNLOCmFnBzcwczgEFdC21tM01D
Cx0IxAxvZwo31kBZ6LMwDgoPblKgT4jYXehCdiYh8SQohgojsRyd+XSuiM0V
s134VBoLR2c70lyJBCYWSYXDiDCoI/T/dQc4EY6mojFUNJ6Bp3CoFFcnEpcy
U4dycHgWEuMCRTMdsGw4joN05GIcuY4YFzyW6cgQOXsEir0UfvKZYi42Jik1
NjUtJD7WOyJYGObjHiERxHl4JLtJst2C94tjTsoTTwclHFfEFgYlHFTknI0p
/C396K9Z2/fERIVIwvyEcWGKlMSsiOgUnoeHPcJWR2+bpuZGK2tNBMzA2dHG
X0CN8nJJkDGyApk7wngH4z0vFUQ/vHDk8O4MNzYehzR3IttzmBh3HkngTptx
gTPfjcFhkxk0NB5rA7bVMTbe8hUR+TXxNr8oLGSGTxp/bhl/euw3s+R4IQ8y
Z/95FvP3WSI4m8F57B99vvvhu6WrlqzXWK1hoWxgr2EK07FA6gEYWuMMgaMx
VEvTSnmL8YaNeuvWa63boLVhs56ysuHWrUbK24yVVUyUtxptUTbYvM1wq5qJ
qrqpqrqZqoa5mo61pj4QbiBtHWstIGs1sDfQh+jr2+sa2ukagQHXM7E3NLYz
MgAZ6pjraBirqRlu0zJSs7I2QNqa2htqY2zMmViEpzMlVMz3ZtM4RIQTFozF
2sAJNmga1NEFQ5r5VIdEYBOwzlgMDYWkwoB01wZjbYWwBLg2AZuYgI2BoznE
HAQHQbD2aAqazKLQ3RhMEYvl6eIiptEFRLIblsBDE9zQZHccTUh2kbiwPV3d
vD1koX5hyVGRyfHRiYnpGdk5eQXpublxWWmRmUmhWTGBWcF+eT7yApF8pyC4
UBR1wjv2lF/M0YDI/X4Jh4J2XIw/XpRz8lZ+7t5wP2+GlEcMkrglxsTHJeVI
fPwwRIyxqba+sSqMYEGig+lkGybBxtUR5MuEpcio+6KEZ7MURUdzi6+cKNye
wHVBYJBGBEcLKhlEIdtQKHZOVCidjqLT0FQKEo+zh0HNLCw0DA03fW1YflX/
PzfknwO/lty/cvc/sWPM7jObuL/Pkr9v5qL7kz5fdfcfFn+/bM2SdZqr1Cy2
6IJVDe01ADewUze0VzcAq2labNlisHadzurVmqtXqvy4YuuPq9XWbdDeuFl/
01bjLapmW1VNt6oYKasYbVM3UdUwVdMwBY6qmuZqgKubblM13aZuoaYF0tS0
1gCyWYBNPSstXQtNHXMtLRNNVX21rdpbN2lu2qixQVlri4Gxlr2FgbWuGszS
CEgY2TiEP58lYzvxSAgeFcmgIBB4GygJjKA6zHykQ4UCdSXY0QaMt7HFWVtj
LADBnSlUrXU1TTXVjdQ1jNSBW+hb6llAzGGOUIIzAWCQJQKqQmeagEJxIxC4
OBwHjeNiyHwi05Mh8BXIQnxD4qKScrJy9+zJ2rErJSMnPTMnLSMzJjkhPCU2
IisuMi8mJDc4sMDHf5en706B3x734IPC8GPSiCM+EYXyxKPB2y/E7/0tbefF
lJTtwSH+rmHerhE+wqTo6OTUXL+gECdnii3Y1ApiQOIjuT4kFw4MAdaGGG8l
2Wr6u0BSZbScANap9KBbx3ILc8PFQhyVbkV0ssARTDA4YzTGDIe1IZHgVCc8
mYLD4qD2EFNzc3UjY+Uv/qw/+bl/LRR/hcFv/jKJc4792gkXInwfz/yxnH2O
wW/+q+rNP3D+Wy9TWvzjxuXrtVYpm6xXNd+sYa6sbrpFxXijismGrUbrNuqs
Wq2qtGKr0rLNSovXLV20ZunS9UorlVetUV+zUXc9kKDOMAikowZbVAApNFIB
FE3NaJua8bZthspb9DZu1t2wxXDzNqCP2TYV020agEqaqKrobd2itWmD2oY1
ymtXbVq9YuNKpQ0rgLa2vqqdpb6NvhrUzIACA4vppEipOFbuFeHlEeUj8uQB
6ZctGGtp5zjzRYkt1tISZWyBMbLCmlqiTczgxoZ2etqWmmrGasq6yps1N2/R
2rJVR1nVYJuBtZ4tEoSiIEksIlAwArkonomd+T7FBYVmorBsLIlHcvZg8L3d
pcE+iviolLyc7fsK83cVpmbmJ6SkRMZG+4UHyCJ9/RL8A1L85SnePhlieZ7I
J9/dK4cryWP77nULPiIOO+YddzIo9WxU2unYxIOREamyiCBBVkxwbkJMXmpG
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
w8WD5Qx4oAvUlwYRk+xZSBsBCaHgU0L5uHgZIzNcEiJ1CpDTQ0KY0VG8yBj3
+HhJTrIcgHp/smx3gk9+rBRgMDmMBxxz48S58Z7ZMy7JiJckJHjFJsuSk73z
EiS74j13xIrzYj2ATSMvgrc/WnAsyetImu+u9KDs9KCUTEVKTkRafnTG9pjM
7bEZ+XGZebEZuZGZqf75ceKDCaITKZ5n032u5ATf3BF+c3fU5YLw01mBJzP9
T2cHnsgMKEzx2RsnOhjvcSBJtDtJlKxwCRWgwgTIaDEpLYCfESGLDJFyPIkE
VxCWbe7AMAY7GcLoJmSmFYtqzsbo0yHbJAT9GDdwjhx3MNF9Z5o0K8kzO8Ej
J06QFeeeEi+MS5LGJHtHJXnFJEji4iVxMWJgw5kn4ZlTmBbSc3bgLSRWPxn7
zX8sev+0+XH73Pmvfd4XpZeelpx//PL801cXil9dePLyp4fPzt5/cubeo1N3
Hhy7df/QjbuF1+8cuH6n8GbRodv3Dhc9OH7/ycnHz88/K7n8rOTnx8/P3X96
qujh0Vt3D16/ve/Xa7uv/Lr7l1/3X7168Oq1A9ev77t5fe/tG4V37xy/ffPY
7RuHim4cKLpdeO/e0btFR69d3Xf6bPb2vDBfDyc2zoaHtfahQRRsRBATGshC
y5k4GRMfIWEm+nHTgt1TQoThvi5JSV7Z2wOy8v2Tc3zScgO2b1fsL1Dszw/e
m6vYmR2Uly7PS5PtzAoAXu7KDsrPCsrLVmRnBqamyZPTfTPS/XJTfHYke+9M
9tqZLN6R4L43XnAkyfNEuvxoTtDe3OC8nMCM3KD0/NDMHZE5u6IAz9oRBbQz
CyKzs0N2pPgBan4y2/9kpvynbP/rO8OL9ifc2Jd8sSD2dE7Y2ezgU+l+hUme
O6Nd90ax9ye47UoWZEawoyX4UHdkhNAxNdAtNdQzJkQi9aZ6e2G8vTEckQOJ
B6LwQFy+vQcLJCQZCbBaXgRdKUk/lGm5J5y5P01akCTeEee+M8Y9P5qfFuse
lyCOTpREJYiTYoVZ0YKMSLes8C/8/6LzUDZPz0+07Ivkzm5886cU4X+bzfMI
n9u4vjhwttU2365uvl3Tere2/X5d+/2a5rtVjUWVDUWVb+9U1N8sr7teVncN
cKBRUXe9vO7am7qrgFc23q5tfVDX+qC29V5tS1FV463ytzde1/72ovLyy4or
pVXXyqpvlFb+9rrySlnVr5W1N2rq71bWFpVXXS2vuFJW8UtZ5bXXr397UHTy
/Mms/ESg6MEJ8CAR0dbPBebvDPFxsgxiQaM9aSF8cqjQKVrqnBPplR/vvz1D
cfqn3J+v7754teD0z1knL2afuZj104Wsn85nnfsp+9SZzBOn006dyTj3U+65
c7mnT2UeO5F55GT2oWNp+w7G7y2M21eYsHdv7P49MYcPxBw/GH1yf/jZfeE/
7Y86Wxh3+nDS8SOJhYdj9xyK3nM4bt/RhP3HEvYejd95OKbgYHR+YUzBvpi9
u6IO7446ujvyYL7icE7w6e1hl/YmXi7MPL0v9fCOmON5YSeygwoz5btSPHen
CHdnSvKyvNLi+VHeRD+2vbezbZiIGOPLig8TxobzsmP5OYmC6DiOPJwmU1D8
A6k+YrSEbuZDNZSS9DwJOkHOZjtCnPdlyvLSvXKTRXmJ4qwEUWqiKCHFKy7V
OyFZkhknzIvmZ0RyMyL+0v9t+C+xv8+VcM4jFvPgvPAd47/N5pHCeZb6VY/Q
1P2oqfdJy8Cz1sHnbYMvWnqLGzofv+143ND5qKHrUVPPk+a+4hnvfQq0m7of
13c+qG6/V9f1qKG3uLF35lLbAHD1cUP3w9quuxVtN6va7zR2P27tKW7seFjb
dKe+6W5j072Gt/dqa4sqKq6+eXXx9fOfSp789PDq4UuFKfuTZCk+9GAm1BNv
IcSbS0jWUoqNmGgqIVn4MBy4SGMWwkBEtkry5+xJDTl/eufTkiultTdeVf36
vOxScenFp68B+f7p6avzj16ev/f83L0XZx+8PPe45MKj5+cfFJ+79+Rs0ZPT
tx4cv1Z0+NodwI9cvX3o+p3DN+8fvXP/yL27hx/ePfL4/vGHD04+eHjy7sPj
N+8dulp04B/+6+09l27s+Olq3plfck9czjn1c965S3kXLub+dC7r9Im0U0dS
zhxOvXgi5/KZgjMnc44eSTl9MPFsYcLJA7FH90Ud3Be2Z39I9q6A5FRhjC85
xB0WzIXESIjxAcz0eMmOPP/De0IP7Q/fsTc4Y5dfWoE8JUsWHs6ScoEtyDzQ
xSyab5vujT4Y51q43X97QUA+4NsDc/MDcrYHZG4PzADSgFy//AxZbopnepIw
NdHjrwTYX7E5I3AeAf3mS+owe6q/bp9b57/WPpn/a2/X0l/cMvi8dehF2/DL
9pGSlv5nDV0PAdCAY3Pvk/ahF52jrwDvGC7p/MNbB1809D6t7X5U3XW/oqOo
qutuXd/9ur67NT23y7uuv27/raqnqHmwuKX7aWX1tSePTj65d/zZ7cP3L+24
firzlyMpPx+I+6kg7Fxe2Mn0gD0R7hkyaqw7KoIDDaKDJQRzD5ypJxEkJJrz
8aZ8RwsiSANvudUZphMmpBQkBly5uL+i/n5Tz4vmnudNXc8aO5+97XxS1/Gw
rv1xbfuT6rYnNR1Pa2bOPK5re1Tb9rim9WF1y73KpqKyt3fK6+9UAOLeeLeq
6W5l893Kpru1Tffetjxs6njS2PG0of1JPdC/+QGQAFS8vVVef6O05teXVT8X
V5x/VHr2XsmpeyVnHr069/jFuYfFZx4+PvPw4en79089fAg0zty+exzg+vad
w3duH74NMH6z8NLVXad+ztl/Oil3Z2Cigh7liY4VY7IVnJwY8c6c4BOnUi5c
zrvwa/6py9nHLqUfvZhaeDoxc4dvsAzry7TwZ5jECeyyfdB7IxmHdwUUHok+
fDLx6Onkw6cSD55I2Hc0dtehyN2FEXv2hm3fGZyd75+RK/83xNT/Z/OH9+ye
s09+3Pi3gjCnzUZj4fAuZM55Tn787PNP2DzwrGngWSNwHHrePPi8qe9pfdeD
+s57jT0PATw7Rl51jL1uBxgESBx73TVWCpwBulV133vR8uujxosPGy8Wt19+
3nnlecel4rYLL9ouV/UV1XU9eP3m8pUzWfvTfQ6m+5zKlO+P4OT6kfP8aTsV
zJ3BzL1hrrsUnPwA5yQxNo6PjObCQl0gwSyojxPYx8lOQgaKI5CQbOuGs+Zg
zNhYs2APck6sz6VzOyvr77f2v24fetM+/KZt6E3zYEnDwPOmgZctg69bhspa
hitaRyrbRiragcZgWesQ0KcUOLYMlLYMvAbaHSNlnSNl7cDJwVcdQ6+7ht/0
jFf0TFb1TlT3T9T1jdV1DVd2DL5pGwD2ohdNfcVvex9VdxaVtd4sb71T2/Hw
befTho7ixvZnjW3F9S2P6wBvelT19n5F/d2Kt3cr//CyuqJnFVfvvTx37cHR
U+ezsuLcw0QohRssI4izM8n32IHkq7cP3nt+5kHJ2TvPTt54cvS3hwcv3Nl5
4ExcdCjdk2bKx2j60owj3WxzAgmnDoSev5xz+eae34r2A3751p6fftt+6ufM
E+fTj59NP3wyZe+RuB2FkQsNx6+0PyEfs4d8cua/n8E/bXM+y8eN2W/O7Jcf
TzIb8H82mmZSyqcNfU8b+4sBgWuYyTbvN3Q9AEQQSE07x950jL9pHS1pGXnR
OvIc8JbBZw39T9903HhQf+Zm9bEbNceKGk4/aDn3qPXc09afStqvlDVfe/rs
9OVT6XsSxDkB9B3BjF1BtBwpLkWEzPDCp4hQiQJ4ihiTJEKny0ipXo6xfESU
KzyU5RDKRYRwkUFspJRqKyTZiIjgQC4xTMTwBapCKSsx2P3g7uhnr3+p7ypu
6H9R119c0/ekovtBRe+D6v6ntf3Ftf3PavtL6gdLW0crO8dqO8dqOseqO2a8
Bjh2jld2T1b3vqvrn6zvnajpmajqmajsnqjonqzqnqrpnaofnG4eft8+ONXS
O1kP9OyaqOqaqGgfL20cfl7X9+QtkHIPl3aNVvWO1faN1faO1nQPV3YOVXQB
PljRPlDeOlDWPlDWOVDW0Vfa0PWsuvU+kDPfvHMoO0Hkx4PKXGzipOS8GMmF
49nFLy+WNwAF+L2Kpjsltdcfl1268fzI6d+yYmO4XJIxC6kupRgqONb5wZTL
x2Lv3C188OLs09cXn7+5/PjVhXtPT9x6ePDa3QNXb+2/cm3v+V92nL2U9++L
wH/52P8gBv9p84M2/6V53oePE4OmrqfNPc+a+541AzB2PWma8Uct3Y/beos7
Bkq6R8s6x9+0jb5sGnzS0P+woe9hY+8jQOZeNf32oPrknaqj9+tOF7dcLOn4
5VXH5RfNF59WnrldtO/sobiDydLtQS45MuJOX0qmGBHLtY3g2MYLEOEsUDDd
QuFiHcmDJnk6pkpIMXxUtDta4WLnR7P2dwYHc+DeVFAgGxXgggxgIv1YaBkb
7+tGlvNwKVH8W3eOVLc+qO15Ut5z/3XHnRet10s6br3uulvSeftlx62XHXff
dD1uHCrtnKjpnqzrelfTMVENeNdkTc+7mv6puqGphpHppqHphoHput6pmq53
VZ0zDnSoHZhqGfnQOfi+rWfqbcdkddtkVfu7yvZ3Fa3jb1pGXrWNlHZPVPVP
NQy9bxqcbuibrO0aq+wYregcq+oZr+0er+8cre0Zrekdre0brekaKe8YfNXU
Xnzv/qmkKL6IYSNn2SXJKfkxot/O5ldU32jped45VNo2UPq260VZ4+2nFeev
Ptibku7p6mQuJOpH8EAJIsiuENq143HFT0+UVFwpq75eWXfnTfX1V+WXX5Zd
eA5UwS9+elh89v7T0/eenPyrQfb5CJk/lubUu9kJ2MJj+H+n/QkGv0r3gT6d
va+6B8t7hsq7+kvbe1+29z5r63na2vWkrbu4q7+kZ/hN18jr9uHnTf0Affca
e++39M98SlPdXvS68crLhkulrb9W99yu779X1XXj6ZtT586lFCSLM4JccgMY
mVJyhoRQ4OuUJcHGcMARHLt4D3S0G0zBBMupFiEcaJwAFyfAR7ohY0V4BdNO
RjL1Y9iGuKJ86eAwATFW4iyjO/CwFmIa3M+NrBBSMqOF167sr6y/29D7vLav
uLz7XlnHnYru++XdD1533gX8TeeD6p7ilmFg36jpnqgB4GqfrGidqACY6pmq
G5huGH7fPPq+ZWSGo/rud1Ud7yo7pqo6p2u6pur6ppsG37f2vW/umqptm6xo
nixrnixvfVcBtDsmyzsmyrvfVfe/bxj8vXngfQPQ7hivaBktbRkrA/jtfdfU
N9k0MOON/eP1veNVPWMVHT2vH9w/kx7t7s9ziBait4dzDmX6Fv2yt6HxQe9Q
xcBEbe94XdtgeWXr/Ze1Vx69Or2vMMLXHebHNE+RwHYrKD+li4svZleVXapt
LHrb/Kixpbi+6WFd4726xqKahttV9bcra4sqa+9W1RX9hfiaOyRmJ2BzStts
Br+ZFX6zMfzPYvCrsFqgDv79vxpwZmCkcmisbnisbmC4smegtLv/RQfAYOfj
tq6nXX0ve4dKu4dedQ69aO1/0tr3qK3vcffw8x6gSBx43tL7qLH7blPvvdaB
Ry39jyobf71yOTM1kuvHgvjQwQkix3h3TIwrLE2My/ejZXjiEwWoaK5DGAvs
72QhI5kruOgoD0KEwDFWTE70pkfwMb50G4UrKpiL8SSBPKkQhYAuYcBdHa09
GXAxzSFIgM+Jk1w4mfP8+ZXmntdtI+XNQyXNgy9ahl81DpbU978AvKG/pGXo
DaBN3eM1PeM1XZPV7RMVLeNlbROVXe8AUuoGACGbbhiaqu8DAJx40zbxBlC6
zqkZKewYn/HOyeqOd1XtU5Vt//B3gJe3vStrmShtnyzvff924PfmvvcNQLfO
icr2ibL2icreqYbB9+1D04C3DU419797C+S63WOV7d2l9+6cyo3xiJVgEiTo
glDmiRy/h1cPtrW8GB1vGptqHX7X1DlcVd5yv6Tut1cVv5w4lentjhJRjKPd
7QoCyeczvEp+2dFYfbOt40VXT1lvb1VvX2VvP+BV3X0VXb3l3b3VPX21Pb01
/5po+yg85gykLwbYbHjnrH3+Qxn83Jk5t5c5H/aTN+RjGxqrHB6vGRqrHhgu
6x141dP/orvvWWdPcWfvsy6gPVjSPTTjnYMvOgaedQ486xl+0Tf6qn/kVf9w
SfdAcWf/466Bp+29D9+U/3Rkd1CoCOeGNXXDmAex4CFsaCjLLt4dlefvku6J
j+U5hDOtIzl2CgZIijf1c0FGCCkRntRwIUXBIwRzcb4u8GA3vJyJ5hPALJSl
mIGVuGD5FHsPJ4gzQt+NaBwhJR0piLh781hjewlQ4gElW8+M4lR1jlS2D1e0
DZW3DZR3DlXO5IRjtf3jdX1AOjpR1TZW3j5e0TFe2TEGFIDVfRM1fZPAwPKO
sdK28dL2ifIZTkfe1Pc9r+0tbh4uAVSva6oaUMbOd7UdQEY6WdH+rrxlBtiK
3un6wQ9NfdNvAbp73gE+U2P2TzUNT3cAAA5MNfW9q+9/Vz8w9bZvoq6l8/W1
Xw9nhLslSXEJYkS2P/lwmue9X/a1t5WOT3a/e983NtXeNVJd0Xb/1dtrZbU3
z13Y6emG5WD1/BhmSWL4wWjOk/PZLTVFfX0VIyMNE+MtkxOtkxNtExPto2PN
QyONI6MtY6Nto8Ot/5Jg+2JEzS+O84finPP/R9ifY3CeM3PawMjr/uHXPYMv
uwD0+p53D7wA2j2DJT1/oNc9/ApQvb7R0t6RV12DLwAGu4af94686Bsp6Qcu
9T/r7n/SM/i0o/thybMTubECT7odC2PGx1uLCVYSsmUQ0z5e7JgppycKkFGu
djGu4BiefSQb4kM083ayl9LtvZwhnk72ArytNwPtw8LKWBg21pqFt3MjwUR0
DI9g7wQz5TraUhx0aQitIA/cke0xd64er28q7hiu6B2v6Qf0bqSycwiovyo6
Zj4bqegcrOwequoZru4frR2YANLC6g6gOhsGvKxt+E37yJuu0bJuIIEcK+0Y
LQWqvNbRN60jpY39L6s7H1d3PWoaetE5WdH9rrbnHZCs1gNFZS/QBvQUAHms
AigDB6ff9k8BV6v7pqp7Jiq6RssB5Ptm8s9aQPu6xyr6J2tGphqBW9c1PT96
LDvEm5zghcvxI+0JZx5N97zz866GphcDY+0T0wPjU93tA5WvG28WV118XXP9
518O+EvIAjKQkFukesILo1gPTqe1Vd8dHqyfnGybmuqYnu6cetc1Odk5Ot46
PNo0Mto0BmA40vxnYuszNqe0zZNPztlhzhx1zvn/99t/D4M9gwB6T9p6HrZ0
3W/tedIx+Lx7pKRntPT/8fHSvj+8e/hFW/+TFiAdBYgbKu4aet499KKr/1lH
/+POgcctHXef3DsU48ugQA1wYG0mypQJ1WEjdKVUULQQnyDGR/IcIl0hiR6o
OD40xm1GH+UMCBdtysGauxFteTgbN0dbJtqSibVBWupg7c08XAhSNpEON8Za
abJwts4ocyeEvg8fvysj8peLhRW1RS19zzuHSzuH37QNvGrpe9nc87Klr7S1
v6x9sKJrqLpnpKZ/tG5wvL5/rHbmA8zB8q7Bso7B0o7h14B3jpR2j74BvGN0
hsq2odetgyXN/S9bB151AaC9q+ufAkBrGJhuHJxuAoAafFc/I7VD5b1jNf1A
HTdRPfNp6mRV13h510hZ13AFsAl0zhTOb3pGywcna8enmgfH3lZUPcjOCRVy
IAo3aIYPYWcI40iy6MbZvDeVd+q7XnePNA2Nd3b017xpLHpUdu7pm0unLxR4
euDYeCMJxTRRBDsYzbp1KKb5zc3Rocap6a6p93/4dM/UdO+7qZ7Jd10Tk+2T
k63vJv9dOvjxmQWen4fH/7/mot/M+2gLfNhOoNDrftjUebex625z76PWgWcd
IyVd46WAUnSOvQa8e+x1z+irjsHixp57dV13GvoeNA88aR18CsDYNvCkpf9h
S/+Dt223im7tC5KQMWBdBEiTibNgIvXccMYyhl0IDxni6iCnmPrRLGLcUcli
fLInPl6I83OGMWCmTnALVzLcjehAg5ngwHqODhYgQy07c30+kyTnO9Hg+niQ
Op8MEdHhPLKdr4iWHuN/7EhWcfnl6u57bwefNA09b+x/1tDztL7rSUPP88a+
V80DbzpGqrpHa/uACnf87cBYXe9QVWdfWXd/WddgaddwKUANQEr/WGXfWFXv
WHUP4ONVgFwCkjowXjc02TA81Tzj0y2jH9rGPrROvG8Zm24anABwrhuceDs4
+bZ/sh6AtG8KSDtrAST7Z76qqO4brRocrx6erBufapqcbhsea3hTXpSe5i9g
2vmy7WJEyAw58WCc+y/H0h4+O3+/4vKLt7daeit6h5rae6uqmx48L//t0MlM
vivcBaPHxej6O1vm+hHOZXpV3D091FM9+a59crp9cqp9arr7/YeB9x+G3r8f
AMCcnm7/8L7jTwXX3DZ/iffFzrNfzvnJzH8Qhl+F1ec+gfniXTr6ngHy19z9
oLH7fmPPo6a+py2Dz1qHXrQMPG/qf9Y8+Kx9+GXnSElrPxDnRdWdN+t7HzQP
FgMYAjA29t9v7L/X0FtU23r15vWdciEeaauDtNHhksF8srWYZiMiWXlRbQPY
cCnJzItoEuhiG+uBSZUSE0TYABbcGWFJgJi5EOEsRweKgyHWVgcLsbA10wdb
6HPpOF++kzPCkGSv7emC8mbhPJmOchEzWMbZvTf2TumZlx3XSntvVQ88eDv4
tGGg+G1fcePAi8bBkqah0raZ7wdruifq+t81DL572ztc09VX3jNQ0TNY3j1c
BuSufaM1Q+P1Q+NvB8cb+sfrBybfDk81jE03j021jE+1jk8BiWLn5PvuyQ+d
737vmPrQMfW+/d10+8RU2/hUy9hU8+hU89h069j7tvH37RPvO8enu8angGPb
5HTru6m2qfedUx96hsYaX5fdzM0K8vPABLnBokSo7ACnQ0mepw5Enr2af/Bq
+pGbGfdLL9S1vWjuLq9senj7+dnth+JYLHsyXJMCUWUjNcM4oEPR7JLf9ve3
vxkbaxodbxoZb5yYbJue7gUAnH7fNzXdCWSnv3/o/dq4msc+STLnj6I5M9JP
rn5OLv+Fa/632uewmueRFzLDJ9be+6qtD0jkipt6HtZ3PJj5ze2O+/Xt92ta
71a13K1pv9/QC4hdcVPv4/ruuzVdtxv6HrYOFTcPPq7vvfu2/25Df1F9z63q
ll9v3Njh6+mIsNVB2RkI6EgvJlzkZMNB6rthjeUsuJ8LVE63l1OsQznQFC9S
ohin4CJdHe0pSGsS2paCsnXB2jEwIBoegkPYomDWPIajhIl3gug5grXZjjbO
QJqKs+M748RuuO37wq+VHn3SduVZ19XXPTer+u7XDz5pHHrWPPKyaehl41BJ
y0hZO1AGTtT0TNX3Tb0FKrWeoeq+4Zq+USBHrewZre4fqxmaqB+eeAtgOPON
3kTt8HTD+HuAvuaxyabxd63vprunP/RNfeie/r3r/e89Hz70fnjfMz3dMfGu
CfB3063T77umf+97/38GP/yfkfe/j73/ffT974A89QI937/vnXzf0ztS/7zs
2s6dkbGBzHhvUrIPaXsY+0CK187tPpmHAyL2CiP3eey6FHvp0f7br8/8+vzI
8Rv5qfsVLq4QLFSDYK/ijNAIdLE4FMMp/XV/T9OLvv7q7v6Kju7S/oHqiYnW
6anuqamu6amuD9N9/+fDyDzxM89ncZ8b8s0swZqHwS8WR18F9f82++I6P3mH
5xTNhelgaWtfSVPv07cz/2iiqPLtrfK66+U118qqr5bVXCuvv1HRfLum417D
jEQ+aux70NT/qHXoafPgo8aB+00D9xoHAAZvVrf+euvOnkAZFWarD7Ux4JCh
QgbMnQJyxZh4EK3lHLQ/FxvAxcpo9oEseIyHYzQfFeKKdndCMAhQIsoWD7N2
IcDoeBsSytIRbYvDOrixqAI6mgo1JDoYUpHmJKgxHQMCGJRJnArPJt2uOvm8
7dcXHVdLuq6WAXfvv1s//Lh57EXzSEnzcEnr2Ju28Yrm0bKWsTKg0T5W2Q1w
BySTE3VAo3u0qncUSEQr+8er+saqu0Yqumc+bKkemqofmQLArBmdbACSyakP
gJx1Tv/e/Q8G37/vfjfdMjH1dmKqcep9B4AbAN2H34c+zNA3DmA4/WHw3fvu
8XcdgAJ2DVdVdzy5VnwmMz8sMUKUG+mxJ9qjMNHzQIZsxw55yiG5bx5LnEYK
3MFOOulTcCVy+5XI1JNBATl8Cs8Gi9QmwrWAqjCQbXsgkv3sfH79m2tlNbeA
9PvZmwu1jXd7+8vGxxomJ5rf/aGJH97PzeCfk545y7evyr7mkb+vXcz/uP31
tPNjPOfZD9t6S5q6n9e3PaxrvlvbcOf/Uvfe321cWb6v/4a31rvvvTV37kzP
dPdMB7fbbmdLVqJEJWaCETlnVAEoVEIloDIKGSCYgyiJkiiJyjnnLEuWbdmS
ZcmWcw7dnr6/zDvsfmuWRgyi3Z637j3rLKzDwql9dhX253z3BgES0HfxlYkL
l8YvX9l6/dVdr76x99W39r9259DbH5y8/9n5D7+88OHXl97/+uJ7X4F8FWSt
p+5+cRJkpLfuHzxxYhgFSecLjz/z5C9qq57uqHnJqlvialvm71jha1/i1s33
ty7xNS/0tyyCOxYj+iWkvc5vaOxoXF5TPW/FkhdWVD1XNe83i1/816UL/7Bo
0QuN9dWdjctql/xh4bP/8tKTv6ie/6ShYVnI1anIkd0nhy7c2/XqR4evg/7x
gRtAhT87fOvLk/e+vXj/u6vvfXPl3a+v3v3qylufnb356elbn59758vLH3xz
47M/vQWqv/e/vHb/i6v3v7j03ufnP/jy0odfv3L/yyugf/DN1U++e/WzP974
8o+vf/tvt/7457dB/9P/vPv9/5zMMEH/9t/ufPX9G199//o3/wYqvjvffg/k
8u4f/wyqxfe/+/MH3/z5/U+/e/u9z6+9+f7Ji2/tOnRt3abTXdlNjANu9tjq
VNzam/D0JuwV2VnsCopDwVChwyHXOuWaSKWTHXWTI3a43GnhVtWYnl1W/dva
Zb8z1j2HWZb0EG1H1iYvnBjef7x3/S5581717NX1t+4e/PiTi599evnzz69+
881b3//p/tyDYWqb6cQHI2emOHxsivA9FHLTxt7/+gA+Ut1+xMHZ97Tb7595
890TN+8cu33n2K3bh165vv3k6XUnT669eGHzq9d33bix58Zr+27eOnTnvZMf
fHrhs6+ufvb1tY++uvrBV1fe/+Lie5+efe/zs+99dvad94+fO7ueRAwvP//b
p574+fKq5/RN1ZbWFa6OlUFjnb+tKtS5NNi6xFU/z7DqGUv985B+GeNtC5pb
2htWLq96cfGCZ1545tfP/O6fnv39P7/4/G+ff+H3y6sXtjSsqFrw1NO/+9nj
P//vzz3xL7rVS2JB27p1hXOv73rjk2O3vzh1+4uTtz4//tcOxve+ufj+d1fe
+/rSvS8uvvP5+Tc/PjH5nY5PTr371aUPv73+0TfX3/v88p2Pztz56NSdyeL3
2Lufnfngq4v3v5jsH3x1+aNvr33y3fUv/njj23+7+Q3o37/x3Z/f+u7Pb3/z
/e2vvn/r0z+++vG3lz+d7Fc/+kt1fO/Tsx99BX689sHXV29/du7s7d27rwyv
P56u7KbVcYhb64mUTPXWl2trn4WddQqqV9EWmW4Xcw663x0odjrURouw0pOp
h7s6AqUWV6q2E1+8rO33Tz//jy8880/1VU9ETIszSMN4F7x3pzqxVxnZSm3c
kTh+vu/CjXWvvDXxys2t19/Y+u79459/eW0ukTDL8WnnPBK9aRVzltj7QW78
V7dpd6FZdGou29d/zHxshvszy5zX7hx+/c6RW3eO37t3+vatg5cvjR8/PvJX
Bq9d2/Hajb1v3Tz89u1jd+4df/+jc599dvWTT658+PGlDz659N6H5+7dP3Xv
/ZP3Pjj19t2j585tYnD7wpcef+YPv6xa+qK+rdasW+5sWYrYmgm7jnLqCEsd
1L60ffnTzVW/s9W/GLE2mFtW19csq66ev2jR8888/esnfvvz3z/xL0/94TdP
/uHxZcsWtrXULFn49JOP/9Pjv/gfz/72F3VLXwg4mzeMF67c2nf7s9N3vz53
96uzoL/z5Zl3vjh954vTd788d++r83c/P/vOZ2fA4+1PT70FWPvsLNC4D74G
+fbFux+fu/3ByZvvHrn57qFb7x+599np+19cePfTc/c/u/Dx11c//+MNAOBX
f7rxzfevf/2n17/+/o1vJxm89fX3Nz//HuSrlz78BqQBZ++DpT898dr9fa/e
23Prw6OTHxD64MCxm2PDR9XUZiSx1kMP22M9+kC+2SHV1VpfWFr9W33zixH7
csS5LBZeHZVaoWKnM9NkkWtN4kqbuspfbA6WW12pGj2xeGn773/11N/98l//
24Ln/8nbPo8LrCjyxr7BcPe6yMA4vnY7u/2wtuWouumIuvGAtPNw5uqN8bvv
HZ32JZ4lQmYPzqkzp429qYj978LgTBvIXFTssTnsTlOnTQv7g9Mu3dhx4+a+
m28euvXm4VevbT9zavTQob5Dh/uPn1xz/uKma9d3vnnz4Bs3D7z+5r7bd4++
996Zd989fe/u6Xfunbx95+idu0fvvHP4rdsHXn1994mT67i4q2rRU/NefLxq
6byO1gZ7W03QUMP49FLYno46ZcjCuHXOpvmdK562NbzkN9bq6quqq19evOT5
eS//4Xe//8Uv/+V//PKX//iLX/zsV7/+5csLnq2vXbTk5aeef+pfgQhWPf/7
5lXzw/6Wbbu6r729H/B1F2TCkwyee+eLs+8A7j4/d+/L8+98fub2Jyduf3zs
9sfHb30E+om7ALHPL9/75OLt+2ff/uDcrfunXnvn8KtvH7j57uE7H5288+Gp
W+8dv/fxuU+/vvbVHwF6N7/+4xtfg9rwu9e++A5g+NY337/11R9f+/yP1z/6
9vL7X52/B4zfP/jW+wevvbPr7M3NF96cuHx7+8FXBkePiOpGiB5wsgOu5KAn
3msLZFtsQm2rb3F9wzPW9pcx12rcV4vGmnyJRrfWZE/XW9Uam7ranlrlzTdC
5TaPVqenqpZbn3583j/80y//j+d+/99tjc/RnmUpsk3M2KicQR1wlzdGByaI
ymY0tz7SvQnbuIs/fWH4+msTs7zcP7RNRWwqWXOE639NBmdycnZd+0H2Z0kM
Zrobx06Nnr+w6cL5TWdOrz96dGDf3vL2HbltO3O79pUPHxs+d3780pVtF69s
vXRt4vobu9946+DrNw9MInlz/4039rzx1r7X3th14cr4ibPr9u7vTVCu5Uue
WTj/SZBJ6tt1fksH4mwnXDra1ypHbAlfRzLYgdlqQvrqgKHaY17V1LBgefXz
y5Y+u3jJMy/Of+LFl56YN++pp5781b/+6mfPPvf4qhXzVi5+turFJxe/+Pu6
ZfMaV86PhU17Dq959Z3Dtz4+defzM/e+Onf3y/P3Jr/+D+o7kFJeuPvZWcDd
m+8feeO9Q6+/e+jN+0duv3/89v0TN+8ee/3O0Zt3j7/29uGrN/deubnn2q39
r79z+I13Dr9599i7H1/49KtXv/h28t2Y7/5056vvbn761bWPQdb9zY3Pv73x
yVdXPwaZ6teXPwCi+fHJtz848vZHx268d+DwtbU7z/XuON87tF9QxgJEtylW
MMTLdqbLES/Z4HSHi2+whVc77SvjUGuOdhR4HyNY3Vy9Vayxp+pcmQZvtsmT
bvSmm4LZNo/aYOKqawMvPrfql7998v9Z8tIvg/pFcrg+nzBxmgVWdGi+XRpy
dm9GB7axlXFmaFtiYp966tzA5Vc2zbKxzxHJqWTNLqZztDnHg/8/t4e4m8vl
zP1OPjbdPZx2Z3vQ4MEDfUcODezdU5rYnt64WV67PjE0Qo2sS2zcou7c3XXo
8PChI8OHjg8dPTkCQDt1fsPp8xsvXNl6+ZVtlwCYV7acOb/hwNGBPYf6t+/q
ElhfzbLnFs57ctmy+TpdjcPYDNvbYo4mzNnI+DvinhbG3ybCejFqUll3Sg6y
nAPHTWjMHEUs0ZidZoOijAZCxkVLnn1h/tPNTasMzSvqljxX9eLjq6uer1vx
EkG4Dp4au3H36M33T93++Ny7X1x+98vL735+8d1PL9378PzdD4HSnX7r/sk3
75947e6h67f33Xh7/+tv73/trX3Xb+595Y29r7y+99KrO8++MnH+1e0XX9tx
5fXd10AC8M6xex9d/PDz6x9/+drnX78F+sdfXH//M4DbufufXLj/yfk7gOL3
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
IE/kN24vr99SHN6Qy1e4AGCwZtHK5fNXLH5y+aInF730+JKFT7t8beWBJJi2
aXtpA5CMbfmNE7mxzfmxzYWtO3sndg+Mb+8Zn+jevK17fKI8skHtG+H6R9i+
EWZgDTe0ThhYkxwYnVRzsIf0r+d61zEDY4kN27K7DvTvPzy89+DgXjA4MLB3
/8DO3b07dnZv21Ea36ytHxPWr0+uW88D9RnbpI2NZzZtK2zZWdq2p7Lv8ODJ
U5sunN959szEUSCvh0FyvvHEyW2nTu44fnTzgX0j27dVhrvZbsGfJUxpwtSV
gkZH+c1b0jt3VY4dXnf2+OYzRzYe379m346enRPFXRPFPdu6928f2L9jaMd4
d3cW7RF8Y1poWxnZPMxuWp8aH8+Nb8ps2ZjZOJaq9JFi2tPTR+7e3nv8yObZ
4+EHtWl5mSmEZgm5OU578Km5Qz37ubNPnnriI+fMxYcfeuKDuwoYcJormXUn
sm4mY2fSVkqxULKVUZ1xxY7JZjxlozRXIh1SijGlDMtdULYfLQ+RlSGiMkyU
R/DyCNE9Eu8GR/pxgfeY21fWrXi5oXZpU/0yXc3S1rpl5tZVXkMtHbakaK8q
eKV0gM8GErlAshASSpBUCqfKsfIg17tGKvXz6RKTkKP+kKG2dlHNqgWrqp6u
XvTk8iVP19UuDEZNhT5uaKM2tFHtWy/0rksCUe5dk+hbK/aPKX3rle610mQf
FbpGuMJgPN2L5vqxbB+a6kbUrmimgpb6ydIgmR8AB5F0P1IYIoCRNZtT67dm
1o2r6zcqADQwWLtRWQ8kD6j8Om5kHQse167jN41rQFU3bE6v36Kt36qNbcts
2Vncs6/v0F/+fvjevYO79gzs2zd66NDGo0c2Hdi/ZseOypbx3Eg5XmacGtKu
xNoUzlbuwQbXApyze3f1Hz247sTh9UcPjO7e3jOxpbB1S27bltKuie6dE72b
1ufLmVg54R4RPeOZwGglOtBPDq1JjozKIyNSV3ecEZ3ReBsnWnu6yQ3rtLkH
xtwjZ2p8PpKCx6Yjd44W5ujVf8Xk2UmcehMeecosZ01d8a9jQASnuZmUk804
E1kXl3ZympNLe6iUMyaZEcmEyVZa9QlZWCqG5HIIRHWxHy/1Y4X+WLo3rPWG
CwNYsQ/LlcIUaTG2VDesXKSrX9muq+1sXN24YqG5dSVka2YjdoX1y5KPEd1x
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
GSSy4NfjNszC7qqRG11zd7KGFuvnHrhK06hx5ckNF6wF8VR1VURpN0qhiW8c
zm2/EJMiP3p4g5PVb0j3nZ6Of0Jdttgc/+HE39/rH/jc8cyPdF+9YPihU5/4
b06gNwDuaYNBudCxYCrCzd7syOFDm8zPHIK6mQNsjJxNj9MDfIKxMKvTRwxO
7LKzPuYMMKYQwNwQr9AAoD8G7B+AotLCwhkcZlgQn0+lh+ExGE8c2ssLDEAj
vHB+PnA4AO0NxPoAIR52zs7m7o7m5kZ6+//+c+vun/fs3nhw329mhn95Ox3z
tD/iar8PCjgQjnWMIkDYCGs2yoKFsuKgzWlIYxRIH26148yRH4yPfutk8pPF
ke+2frvh188/+/PrL37/+ttfPtuw5esNOm/qHjc/+r2p3vdGB7479teGv779
9tvvNxgf+TwYtMPe6Oetm7756YvPzNxsGTkF3bM3a1v7w2Wp6rJeslSdUN9x
cf3+0OKdYHl6w+CF51ptckkTNT6nfHAir3VAXlav8ya/sNU1hO8YGBamLCjt
nT135cHSA+342rvWK88ZGY22eE5gTHZi80R0Ybek8Cwvu7Nv+WnXtacZw8tB
qgIAVWyEDiamVUY2XjjqzwIx04pHl6aW11um19MbxhK7JvWQdFOS1ChU6sNP
LxhYEtV3Jzf3NM6sZ7TMs5Pkbs5bYM7b4KC/zxj9fnDvv7Zs3bDrt2+tD/2K
Bu/zgXzy4H97JKEoT5CZjf1xVydjFxvD0yf3WxgdgTiYO5w+smvbr5u2/GRy
Ru/vPX989e0GvWO7AM5GKKQzN9hPREaxicgAHBRPRkvEgmS5XBQhSFKqVDEx
TCqVEULn0LkJsemJcRnyyAQxU86l8JiUcA41nEul+UHc7M4cdzQzAlia2Joe
s7U46GF/FGStB7Q96uNyih1gIyK4kaFn/NxO+LqdwrgfxwCPYMHHA9wM4c4H
4cCDCI+jTqd3nN7/y+kDPxrs+fLk5q/1t/zr6JYN1se/hDv+7nL6Ky+H32C2
f1mf+Pnwtn9t/0EXml/ZGn13fMc3O7773NnTNa17tP78xYazo5W900ecYD8Y
mgIZEUs3383ff6PMrckobpyYW9E09yAj5FUTS/Mr7y6uvZm79ezaC23d+A2M
KAnGEtMSNFXjq2Prj+Yfvu5dulvYf0m36PH5/hwlkBDhFMBwwXMdibSo9JKq
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
W+tK3r7Xjs0s3Hv+5t671xUd52dWn42uP1V3TNZM3cntX8qevMnT9LrTpTh1
Mz6pq23qbt3C49PkSBdabO7glZqR5dYLKz1X1mPLh3qmb1VNrio6ZuDSkqDo
/PzhZX7NkDFV5kaQpPQt2DNis9qn2y/f/dgK+sSHkhjNYtGw+ACIB9gGgwJx
WGQs1sfbByoWMsUCNocZGkT2J1MIUVFRtOAgoJOVnYsDAAwOIJLIVAo2EOfs
6mJobKB//LD+4QOGJw95wt0YDGKilJUi55OwXh7u5mCgQwAGbm5yfNe23y1O
HcWCADQ0kkUJTBaJcuLiUmUJKolazIulBXFD/XlUHIdJ5XPpIk6IIBRHRrqB
3C0sgNanwfYGUDtjCh5akK9oayi5t7ry7H+ifftm+dadi0urt9aevn7z/rX2
H53jrqw8LmjrLaorp7LwsXHSu9dvat+9nJs5f/T0YSaD1dnd5QizJIWFS7nR
MAcjZ/MDPk5n0CATuKMx1O4I2kkvCGJKhJhh3Q0dzHcdP/KTtcFGy+M/u5zZ
jHU/RPLSD/U1xEOOwOy2ESAHUW6HkMA9YMctAPNtCMC+EJSeboeS8pqpy4tv
tNp7T548/uef8qbhq/ee33j1duXN+4VX2vF1bd/qP9LGCVxCRcPy++CMLk3f
tdqlJ86R8UCKhFPQ4c1SF42tJTZPohKaUZFZJFUJXJTpGKyGhihyu2b7Fx+l
DS2bU8QIefZpH0ZK3QV27eDHVtAnPhQOzRePccUFANEYCJMWnKJQyUVSKjmU
T6fqPBglZMfJo3PT8lJVaeIIIZsRhsMFEQg0eWxienYOm89DINFwOBzmCQK6
2DnZGOgOQqFgcD7OdBICgwL7Il3YYcFsGgnqZm9lcgoD9oylsbKiZMkSUSyL
I6aFxvEEqXKFkEHlhFBkLH4Mh89j0iMYLAknIjI8LMgP7mFvAnE4hYKeRrtb
QR0NwskQTba0vSF/6fLEk8f33717t37r/sWFlRsPnjx89fSd9s3r14+vLd7P
q63VNUx5NHek/9zFi8s6Y14cO0/jhMChkKQCpUiVYG1lYW2i52R8FGJr5G53
GmtviXY9DTY/DLQ6CrUzBFkd97DXB5geMtffa3z0txP7v7M13IxwPYxwOgC3
2+NhscP65K/utvtQPgYw8D4/Tz0s+LiPwx6AyWaSj23X0Ozs8g3dteD+vccP
Xv9T0Tp6/eHzh1rtnffayVv3WqaelfRf5mq6bamJqMiMiqm1zuWXVVO3QYKk
UzjmLgTFV5jVNPeSrG4yD5LYBUsxitKk1hliShMsKiO+Y7p17lHl1F1m8YC+
N81DmBUYrbEOk3xsBX3iQwklQKgh8FAqikIOTFWk1RU2atIKEuTRUi5bwCSH
BaPlAk5dQUm+Oj0hViEWS5lMhlQsK8jOL9cUZKemJiuSo4WS8GByAMYTBjQL
pSDpYXiw2xlfH2fdUAeD2vP4zHBqEA4JwwfgOOzIjMT86qIaVbQqPCggnOTH
Dw7kBuOJGHddFkeLeLHiiESRSBrOZhGIVBSCgoRi3B0DII5hWHeSt30A2NYP
YCFikzqbNDPne1evLjx48nj93qPFxdWVu88eP3/1/p321tOHg+eXauua/UP8
mOHYpfHxpWvzsxPdTaW5OXlqM1vTyYlFBND3l1++OLR/k8Wxnfbmh12tDTEg
Iz/gaS/nY+6uegiAsa+TsYflIS9rPVujPU5me91tDoMd9LycjkBt99ka/GF+
cuOZU3/CrA7prOftvsvTaYe3wz5bw1/27/nC09u1sKL1zsOnukq8enVt/vqa
pnlo/Y129vYzeVGnFyfNlqg4CAvQR1IR8pL4jsWOy8/P3XimGb7G0/RnnVuj
FzVB+AonquSgD9WMECmr6qsaXz1365+kvmUnqiK//2rz7HrDzD1u5dhpL3pG
/wpGXWGFZnxsBX3iQ9HZLSspWR2niJdIk2OilWJRklwqYTLDAlE0AopGQlGD
EHFSllIuknA5CrFAKopMS0otK9RUaQry0tTq2DgRk0sNJBCxyAA/GFPXJhkY
HNKZQcEGB6LwWFgYLQCHgoUGEsTsSHV0Uk5iVlV+VU5ijpzNE7NY0RE8MZse
LQiPF/IjqWFSBj+aFcHAEwPgYALCJRDmgAZYEyH2dIwzDWmP97AK9nXGeljz
iNiGkszh/pabN9dv3H0wvXDvyur92w8eP3mtvfH0iaZ5JDJBReOTEb5OAx2N
I92deZnyaBHB1uxvZiiJF4Qz19vrYnbK3vSEweEdRkd3AG1OkpGAQJgNBmxK
xboGIR3RQHO8py0F6QRzPB7sac0nQHCQM2DHI642+8xO/Wlnst3dap+32ykM
5DjQeq/hyW8Nj35jZbjJ9vRWPzpJoi4YHr349MnLkYnlvLqO9Mqu5IoOFDfJ
PjAGJlWF57VGVIw5MRMsKWJoVGpc2ejA1Wdzt170Lz6pmbihOb9uHSL1k+ay
MluC0ipqBlau39cuP37Veee1X2I5UZbfvfiq/OIdnWGtA2TJ9Zc051ch0syP
raBPfCi5iem67KsvbC1JL85UJiTKJHFREToH+SOBQXgIhYQIIQdIIoVSSaQo
gh8fEysWCvgsWrSEl5mUkKNOSZTLJFyeIIwTxY6UR0QLwwV0XVfFQiPYeImQ
IhGSQ8i+OF8gGQ/XHZMRhKFg/RSRUZX5JZrUYqUoThkliY9kidkB/DAvItra
B3jK29XGy8XGF2hHRDqH+bsRvOz9IdaBcNtgDCgEC2aTvARkhJ+TaSDcnh+O
6+1tW16/Pr2k0+rT5Zv3r916uvLoZUH9qAcWaW5/zNvLqqW8oaxAZW2+yezk
JluzX4z1tx3evdXixCEvJ2ugvenRA1v09v955tguZ+NDjoZHoDYGJG/HIF3g
gszZOE9OINwfYhuGAkRRfalYN5iLge3pvSZ6W+yM90PtDDxsD0Ed/p2MTtYH
EC56gb4mAhE3t21Enlcem1FVWteTmFOemFNZUNOTUNqKj83OaL/Qdf3J2G1t
6YUHhigmWVmV2Hohvqp3bHZ1YOlxWu+Kv6LMJEAI5Ci6558Pr2mrJh52XV5/
rtU+efNu8aW2eGIdzkwp7L7ccu2dY2icE1ma3X6pZvoWOaP+YyvoEx9KFCs8
OSolXazJjy8qTi7IjE2J4YuFDDoR5xmIgbDolERFUmaqJjOtsCC3tLKsMT5a
EhKEpgVjo7hslTQ+WiCX8sS627zUrKrCanVMGoNMDSMTdbmpihZIBNTgQM9A
tDslABzg64CD22A87bnBAWmKaJVYrBAJJSxaqD8M62njD7dCeZp5uhh4up6E
u5lCHY3hzkYokAkWYgFzPg11PRMCd4kkIZVhuERGYATaEw+ywXgDzo0Mrazd
fvDq5b0Xz3WBuPboyfTKrdruS6hQ0k+bN2zf8WeiKlIUxfjpx28O7f31lN62
n7/+YtvmH3dt+fnYvm0n9XYd2bdl99Zffvl6w6Yfvtr++6/bN35/Wn8X3PUM
3tM+0NOZCPdAujkFQOwpCCDRGwC2M7YzOmR/+qC7hT7c0Rhmqe9goDPjUXub
E0h3AwoR0DM+d2n9fdvEDXVlPV+VGxqp7hu9cuvpyyuP/mlffnD51T/nbr9o
v/Qmtf/aMWSYFz2tcWxt/v6bq3dfty/ck7VedqRF/c+foIqN1nR1L7weWX99
Vfv+/OKt0vrRprHpS6+0IaqajK6ppPbLcGEGTV0qyW/pv/5CUNj1sRX0iQ8l
ksVNi8nPj2vIk9VkRpXEh2eIQ+PiuAoRQypiRCfLczQZFRnKvExVXl5KjlIm
oQaj4J4OKG9XAsaLFRImZsckylJz1dmazOKiDE2CXKGbDbnh9LQkVVKcmBuG
DcaC0VC7AG9nHMyeiHQl+QJISCAFBQ0lekeEEeiBCD+QLcLdAgm0hAPMQI6n
PVyOoeHWOLgd3PW0p8MpTydjV8sTztYGcHtjLNCKCLPHQ+ww7la+HrZxceJL
Sysrq3cfPX999/H967fWbj9+emllLb+iJTFXDYA6njDamZ4jpzIp+w7uPKH/
9+7NW/bt3mx8dM/h/Vv/2vbT9r9++uuX737/8oufvvzq66+//vbrb77/+ouj
+3dgoAAeCS+gUGJ5AgGdGYxEBnp6oj3cIdbmLib6nnYGWJBZkLe1p4O+u+1R
sJWey5ldIIvD5ZVlt15rF+48XLn/9sqd10Xtg14hVJY87dbL95fvv8huPcdO
aQ2JrwhOrD/mG2JB4Zv6cawQ4ZzEyrK+a21zt+RNc+b+DG5qTXzTxZPwkIjk
tt7ld0U9s73TVzpnVkTZrcqSfnlJvyi/B8xMSGwcv/BAO3L99bnVl+Uj1z62
gj7xoaTGKmrzqkYaLwxVzdaoB1IEVQnCovSYktLMlvLsjrKs5gJ1WTRPERMR
FyeQh5NIwQQ4xM3cw9XUDw6gkygxAmVqXJYmszBLnS0XiHmMkFAymoRHcBgh
0SIWj44NRkOQ7tZokC1K5yBv50AvRz93S5SHHRELxiEBPu5WKLAN1tPO2/0M
xMnAxUYf7G6IQVoSMPbeQCOEuzkGaucNsgQ6GTman7K30LO1OGJ95qCT1VFy
AKS5oXxlZeX5y2dv3mpfvHp69+GDK8vrPf3nswtyohNEYE8rsZi8cOWSKkmE
Qrtv+/2Hg9u2Hdu3w87wmMGRv//etXHvrj+2/PTdr59/9u3nn3/1zdc/ffPd
zj83OZtbcglkOZWbJU4sVGYmCGJl4UJWIDUcGxTqiyF4ehCgroFQe5yHOcT6
FNjeEONsCTc9RPLx6Rq7kZjTWNc5feuR9t7b98qCMj8aG0piBUkSCeIsl0Dm
MRh8vztsr6vPZlNrb64ktmaYmV2LkWVYoxkp9d0AptwCx0isGs0+v2JGYACw
zLDEZlFq/QvtP7fevu6Zu1/VNx9d1BJX0F4+eiVUWVR4dvbcda2me1o3SH5s
BX3iQ9EoNDWpNV1Fve15w5r49hRxZX5KY0NF31DX5NmWoa76nqbS9gxFflps
Vl5SkVqeoZJEB/n7IT2BIXiimCNJiU3PScqv1TRlqlOFTFYoERccBEejXIKI
PkoZT8Qg+wJtfACWviArX5B5IMIeBbbU9Uw02J6EgSMhLh6OFt4AW50TwQ5G
IEcjgO1JqPtpUoAjheiAgBrrqqkfxBLmbuJsd9zd6pSj5WFHGz1HG31Xe30W
1a+5vmx5aeG99pX2vfb1myePnj9cW3vQ3TFQXVXa0tpwYbJnfuZisaYwuyA+
PIz5/Rcbtv/+219//LF/69Zju3bq796x+cdvf/pyw6Zfvvv7rz+O7Nl15O99
Jw8c8ffyi2aJkvmKssSiosQ8tUSlEiqEoVwBhS0KZvIJlHAsjgTz9HWxQ9mZ
YkF2eA8rhPVxf5S3J51K4ko6h67WD1xKLa+j8PmKzKKm8+s0dRkrpy6+7kJq
51xq1wo7r8sGFQgJYhT1zA1eezx49Z6yZgRCl5/xD2Mn13RNvaieuRmSXONG
jzHwpSZUnn2m1b74R3v/3et17duUlqGi5vPLb96fvXyHq66MLurL77wwvf7u
YyvoEx9KWVxfaWxvaVxXdVJ3VXJnbVZvV+XYUOuF/vrpntrzvfXn2kv6y9Pq
GzWt3fU9tYWNeUklMRExfDpXxpfGCKNjI6OTohPK8ypK88tS4pI5tFBdWQ2h
ImRSWpY6ikmGe7mb68zl4WSiu4P1cfR0N9WFGhbhSsFhgzAoJMQd6moDA1hB
XEzd7Q2cLI/DXM4Eoh2IWAc4+AzQ8aSz7VFXh1NAV0tfiCPC09LZ7oSHq7mH
izGPTWhrb3z26uXDp0/evNa58M2rd29fvHr56O7jpw9uaf/R6h6qqSmsqqxj
84NJQQHb/vxu829fbNv6/d7tm/T37tq/aeNvX/zr9x++OrxvJ9oLTMWi8AhM
IBIbJ5BmxCRnRqvL04rK0gszlOr4qGgZJzKGK5IyuGwimeiN9LC1tTp50kL/
8KnD+wz2bDu5fZvpieNBIk7nzMLSA23/pdshUXFYKqu0vvvGS237lcetiy/O
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
S9l2Q883+KQjnJZQq2d6urGu/fZz7fjVuyu3nw1cfcaLL6o8OxGqyOUklqfX
DFQNX4pILD87uvKxFfSJD6W3tauvo+/S9OLNq7fXrq7duHJ1emTyyuTlxdGF
yd6LE2cvjrSc767sq8tuTRFnKQTxTBorlEpPVcRFR/AimQx1jLwiL6c4LTUt
JrosPassJUstEksYrIzYxDxVpkoYqxTFJsvjkqVSXXHNkCkKFempvFgpia2k
haVHClKieLnxUk2yokCl2ydKymXmZuddODc62FzX21HB4lHkcYrOocn2kdmc
ur6Gcysza/fn5qekbDoND+dxKM2tA5qmCRKLC0KCPH3B+YUpSC9bMZ8RKSaS
sEAFPzhbGpEji6Rj4WAHIy+XM16OZ8BOFh7OFmCgVQDWI4IToknPrs+rLFZl
9zS0r0zPT/eP9NW1dFc1tZXW1uQUFSal5MXHZ8UpCtXqmrzC2oKC3ISEZKkk
LpIvZUfJGJFymoCCCIQDQRAXUxjANj+nrKV5JKeweGhssaOjv7KqfmJyfXn9
VVl9/9nziz1TC+LkqvTS4dHFR2cnV6NSa/wjlO7kcB+W6CgQ4RcSWTp0B5dQ
qmcLoSe1GTs6nhtbGlt6OLv2SplVk1zagGJE0cVpjLicYFFGiDg9SJKscyIr
+tN3tv/bM9J5vqOpd2J89trS6v0b924trF4cmZ6dmFu7srp6aW11bn1xdGmi
9cLZ0oH6nBYFLz4ERRIyeUUJqXT/IKSXX0yEvDxXU5CdUZVd0lXVWpdbkSSO
lYYLc1S5VdnlurgsVmtSY5IlLEFKtKqmoKK3tr2zpLZIoU7kRuUpkqpzi5vL
6ltLG5qL6+pLahqqajqru3LSUwrqNS3VJQnREUWVuXnJaUhKQHx6ds/5i7ef
vnul1fb19fkjPYT8sOHxhYyyzqELFxNSFVb2+olJisS4CJmAFhTgTURCJGyK
Opor4gTiUW5QN3OoiwXE0cTdxsDFysgTYBtKREVxGOkxyuoMTW1mQVF6fkdt
47mus33NrV3Vdc0l5bX5RfmJ6vTomDihUMxhS7gcATWUF0xRy8Rpimg5Tyig
caMZEaJgJhrm6elu4WJxPAiL6+o8v3rv9fzyq8nplZ7O810dU+OTK0MjS+l5
9bkVLc3D86PLD2fW7o0u3e6auZvTPgjAB4JCufb4oDMe3hEZtXHlQ87Y8Mji
fjcMoe/czdyOc9LEvKSyFi9/kjQjferqu7aJleqeSy06e64/ufpcG5tZ+rEV
9IkPpa/pXG/X2IXphavLa89uPXt649HK7NVLM1dWr60szy8vTi6uTC1Pd00O
VA4157XkxObwQznxorjWgpoMRaoyOklntLaSpixVRqxIIuULWSE0fhg7ITql
LK+pTtPRXd8z0DBYV9iYGpteml091D4x1Tc/1T3VlFeTJEkuTC/qaR8Y6Rkd
6x6fPDt1oXdyemRmsLY3q7JDl3czM1NdZzvbOtqnxs8PD/U+f/zg8ZNnfUNT
ZW0jw5euxokjw0nkrgtLquyqWw8e9J7t80G4enm5ccLwQRgvkh9aSCFKwkhR
LH8e0yeE4IlHQog+nrpAJKOA/l7ugT7QKAYtU6FIl6sSBZLECCE/nC9iR1QW
FNaVFFfm5ZVkZpdl51bk5hcmp+pKdbxUHCMUsCm6oZUULxRIOKxAX4gvxCMi
hBwTzkB7QtwcjEBOhmBnu4yE5Jtr//6gcOjcdFVlY0//SGFVtTItt66ua2zq
5vTyg6V72tm1R0NzN/umn4KDQ6B4QsvMK0FO7W5Hp732LlYQjIGHV6i6xNwJ
oFJlpFf303lckC8AgqfwBInt48vnV55OXH+z8EQ7de95Vk2XKD7jYyvoEx/K
xbHLN5fuPLz56O7Kvbu6Orq4unTx8uLclWtzV+fGZufOX5zom+ytH+yqGq7J
bCmMK8uNzslR6MRZ0VF5ti7zbE1yV1dJd0JUlD8K4QF1dfUAhoRwK/Oa++sH
6gpr22raO2u7y7KqU2NyijNq+5tHxs9OjnWe66ntKkkpbi3rHD87NjMycXn8
8uy52fH+0Qtd58pLq0av3xqenb00NnG2o/Xc5LmryzeuX1tZmJtpbKiuae5u
6p+MSMhL1jSx5cq+c5dbe8YnxkdUyhgiBYXwdHYyswLa2vu5A/1hECTYGesD
JKAhKJgbzNkW7eFOgnn5g4BQB1uQvW0YBpcVrUiMktOIZA41TCGJ4rN4cdKY
6sL85rLC1urK0pzsiuyMysLiat2EmFepWxpVenZUXG6cSizg+SLc4RA3nI8n
GuaG9XEL8AX7QpyR7tahGP/qyppbd14Oj87Vt3R1tA319Y/kF9ZUVnddvf/m
9rMX66/fTtx8qm48x1Em2vsgxEmlHRfWAUQmQZQuLKoPS6oJSSxG0mSoCCGG
6j80sza+dE93OqmRESAsNrOoaf7205U7b688fp3WMkOXpzNE3I+toE98KFem
l24srK0v3VqZXVm4sHDx/IzOejcur6wt3lycXpg9NzM1ODPcPjHYPN5bNdJW
0N2Q15yrKkyWJ+cm5CnCE6ODEzQKTTwnKjAAT6eFhtFZkqiE+vKzbXU9eSm5
+er80qzyzPjcWGFChjKvrqipuby1qaSxIrM0Nym7paJttPf8uZ7B4Y7Bnsbu
nqaOtrKGoqrGhbtvJq7cqqmp6ehsvDg3tbS0MD4+Oj460dbWUttUc256fmzu
+tDk4tjc1Z5zk/3DkwXFJTHKpCgp3/DY3u1/7ji4+5DpkWOG+48aHzlqYXDS
0tjghN7BvTu36e3Zq1uHdu7as3PX7u07rI3M2GSGMDyCHEjhhnFLsgryk/Jy
E7O66houDPSNdp5tK69pq6oa6+rprGhoyC47W9TQmlNRGJ+aE5OUr0hRRIn4
wVQ2kcgLwvGCMHySfyjCJxTmhYeC1XHKK/PXpyavdXeea6hrnpmaW15eS0uv
KqnsW7n/tr3/4vxVbULZ4BkHm8TSnr6br2LKOo67eysKWhqm7qY2LMQU9gZH
xAbSxOr8qrbB2ZSs8ozGfkdvZ7kir2f61tzai7kbz2YuP52/ry3pmYtLLvvY
CvrEh3JxfFbXAIc7z3fX9elWf8vgaO/Y4vTStbllnRmHO4b7m4c7qvtay3q6
Kvo7Srtrcxqz4/PT4jIqs0pSReoEZmK2JFdOF9Oo7PTEjKyE3OTYnJKilsL8
anV8Sl5SdmFacZ66MD0+pyBVU5ZbXpxRVKDOTZGrJRGS4pyy7pburoaOFt0g
WVzdXF6dq85uHpsfmV0WqRLURdm9gwPrqw91g+r0zPiNlbXpyZna+pKSkrLu
7qEHT55Oz129cvXG5MyVrMKytIKKcB7nyIG9e7Yf2rll34Fte7f9tn3zT3/u
2rpj/997dI774/c/N/72x5ZNW/du3bNjyy6dT10tnIje/gigt7udWyAiICsu
ta+qc7Cuq7+lY6C1tbeusb+h+dzZnvHe3vbq+sq0wt6ylu6y1uyEzHiholiZ
W51akitLTeLKOQQCBuzm6egItXfxcQZ629vRcKSMlNTGutbG/8HeWT+1sb5t
vC3u7u5aoKXQlrrLqZ66U28p7u5JsCDBkwABEgIJREiCJYEAwQnu7tbSlrrz
PnzfP6E/dM5Mrz6zs9mspMz92eu6dxdSQscgkfQSRiO3hVHBTkIUDIy/SUPS
0FnkoLhkJ7dAautU08QrWBYdhufEZjFySkcuOURH51MyqS37zp7Jz8XyZl+H
ItD2T6/FwNMqGqd7J77Rqvqq2xcQSfm8sbUMMtvb/+/fk/nPq76isYbOLSew
qNiKckJ1NbUekFhXxuVW1QNvKissZ+AryHllRDStJJtWjCJRcqgF6YSSbCoD
V4pLzi1E4HEJBWkRaUmxqcWY4sL0oozYHAy6BI0szErFFKKw+KzC/x/E3OKS
/GJCdmEuYDAmLTYyFpORTyFSy4oZpXhGSR6BlI9HIvN4S2tljY1hCYnZJObU
4mpXV/PU2PjczNvBjt6+jp7RwYFaFgePK6hiMmrruI0tXR29w7yeITypwsU3
xMTYYoeptY2ZrbGBlZKiupKCqqGOgaG2voGmgZm+uaWx1T7bffu377cy3LbL
Yvf1k1funb21x3L3Vj3z0/tOhLoGULOKGkvZwAHb2Kw2VmV/Q0NPEzBoemUJ
lYIh1JLZ1SQmNgObnZhThqVX4yoqs+iYqOwbpy4bqetqK2gcsN537uSZk3a7
b5y+GBQUFBsdkwZHZCYmE/Pw7U1cRhkzA51FJFTFIpDX7p45fPbYgxfuOEZn
TXVX/+L3xsmPT8LS7vomB8eW5LIWH/hDLzgFPHHyIteP+cFiQsK8qdQWckVT
QnIONCaNwRkICAtr6l2OTEnOSM/60xX0V7+r6tLGhor2FmZPU2VPK6u/rbqn
oaJ1w/vIbJAVy4uqyvBV5YVsgGd5IbMMx6gsLgN9XBWRQ8ujF2UUkrLIpJzS
YgyJhitll1RV4MspeTQKrqwkjwbIYhTR6AQGGUcBoySfRMVTygj0ktwSPKoo
Pz0/Ly0Pl11QUVwFgiutmFaST8ynVrXPvi/mNA3OfcwllWcV4To6e7vaOjva
edG+4ZG+gY/uPLa/9SAsJHx6erqiqhIWk5yDJ9Q0dqExRc9euFuaW9tZ7rQx
22FpYXvq+Fn7W/ef2j+9evry2UPnb5+3d7jj7PbY4/ltJ4cHbs4PPX2eBfg6
BFy/cO/w3pMXjl16dOnhs9vPovxhZQUUHpvT39Q41tE2wOXWkWkV2JISFJ5V
XNlAq60jVNURmWwisyAtH5eYD/GE7tlmpywhZ6igdc7u2PVTF47tOX7rwuWs
PJxvYFA6Ij45CYKIhXQ39s3Pz+flYaGQWAQKG5+aE4fCXLhz2cUnjtPxsm/x
i2Mc7uANl+dR6IuOIfsuvXAKivPLbTh89X5QbHxSfGZwZCiqkBoAgXl4O/lG
hETAELEpyURGTUBkWBmj709X0F/9rlrZ3T3c0eG2mZH22aHW6b7G8a76wZ6G
wVZ2Z0NZS2tlewMdnMSbW1gdjRUt3LKGWjq7ntFYT23ikOtqSBwAZgWRVVFc
wSaW11FrwQpscjUVUwoiK5NUw6ZV15fX19BqWZRqGp5BL6SDNcEMo7ASOCwl
j0oppNXRGxqq2uqY9WQcKYteN/T6eyGHS6sdDYHHB8aF13AHGxt4lRVlyIjU
pHDIvev2Wup6MpJKEEjSt/V1Xt/EwOQcjlqbmIz2cnR7dPMBWOHymRt3r98O
9w5Pj06Dh8SHeUT6Pg8OcIqMCkRA/eMRoWl5yQRcMjELismIzIKHpYd4RPs+
D3Wx97l75ZnbY7/4oERMPJpFoQ80N480tLKIVFQMIso3IjEyHsRvkEjb6FwW
iZmVgI71i75++pq2ppa0uJieooa1noWZjqmWmuql49fJZV1xaekBfo6xcZHQ
sKByEu3nr6+TgzPwFHgGGs/rWCU1jZ+4emnPyUNJRZ3RONqjhAybi09CUBzb
q4/FDLUQ2KqMspHweGxVcwubPRwWFpKSTihvW4hJykcTymEQBCw6Kj45MyUt
Py2L/Kcr6K9+V/NDKwvDL5dGV8GYH3o12bMw2DI10DzZzhrgMXtHmif6uYMd
NT0dnO4WZmtDObeF3dLG6uSxOjvZPF4Vj0tr3ICUXttS2djCbG+sbKum1NDz
GeU4JofKrWFw6ui1DeWNbDKHXlBeVgiMtaKCwAQvq8l1gNnG6pZuTk8nt7+v
tYdD52RVtbN7Vh1D/G65vkgn0qPT80pZzeXVzTXV9SVoEhFTGAeNuXnl1v5d
hx0cPEdnX/dMvu2dX/MIz3R18k2HxiVEwCMDYeH+0RHB4ci4TIBJQlhiejQS
FZebDEVmxGGyEPk0DL2GVFtXXF+GZpSkkinZZYx8Jg1dlpNQlArLTghDBjlF
hblGEFB5TeUVXexaVikVlZCMgMGRCenE7MIyLIVZxAChtCyXnuCTcHrXOVUl
XWUFTQvtbdb6O/W1LUETeu3otcbuRXJlX2pSjqevQ0jgi+y0lNH+2V9f1+t5
nbHwmChobHH9TEBChtWRA2duPaB2zVQNznunVLimkDS3HbS76RYYgy1lttd2
r1Rw+wLDYP7BYWHBMByjg1DagiM0QaJTg/w9EEmZ8Yk5EfC//eB/Xp9Xv6wt
vns59XppHJD4am7wJfDE3oYJLr2zrbJ3umNuijc90DDYXd/XXd/TWdsBKqO7
rn+yfXKiZaif091f0zfAGRys6+1pGOhpGG6v6eWWNbFINTWUJtBasqlMwGBT
ZWslgU3HVbBKOIC+DeMrawGJt43dPtw9Nt01M9Q2NsTrr2fUZTJay3qn2wbn
Y7Jz8tg9JDbXLcS1sqmnuq6hBEcpyiXlILND/cKe3Hvi6+s/MLFW3/cWSW9z
C8yIC48lZeFRiZjk6JTYEHhMdFJORk52ejYqCZmfiS3KIhYii4pQheX40gYm
d7R7ZLZ/BnxmNoFdiCouzqJUF7IZBezSHAYuiRAfikRA0ik5OBahkFvGqKFS
8tMziUhMVR6ZS2FWkyrLcTQehVuNZWcFY+6fcN5neeGfvbfuH3vhcMb55skH
5/ffdTjnnV/MDITFhgaHePl7xEBhybFR5cTy2YU3y6++V7M7EVHJhZU8XF3X
mfuPAmGoodmvSEZXYfUsjNhw6mm0jJb5rRtPWjony5uHfPxDMjMICUhMWFgs
mdkdC0lOT8tOQKUnxkLSU5FZGDy5uPxPV9Bf/a5+fv+xtvLu5cSbpdE3E93z
Q22Tbcz+ZnpXPYnXXj4wWDc90jgz3jgFSBxuGRjhDfa39E/0TEz1TA+3jQw0
D4LpeOfYVM/kVN/USPtoT01Pe3lrE72pkdEEcunGtZ3yFkAcyK71lEZuaXMr
swPg3F7NaynnAQb7eP2TveNDHYNjgxNUMiu/qrnz5fr40rfexfWgjPzwxMwE
DKFj5F1D10AlsYpRUlGcW4RCpCfAEeHBcXR6O3dorZTESo/PwWUQKoms0gLQ
dRIJmKICZEEZoYxRxChA46kFdFoRvRBdCDrWdlZTD7e7u2HjjNFVO9BW2VlH
rgeJuqqoEjBSS6/mlnKqcGXUrMKyggICOpOEweDRGfHh4ejElJJsHLOAXJ1f
WoYiMXMqSmAUlGd+5B2E53mI73WY312Yvz1kY9wOdn+Q4OUX+O/9Mzfv33z4
wt7fyyUhDkbAk3paRlaWVpdXP7HqeqhVw3V9S4mokqehaTm0tohsJhxbT6p/
ndOypnrg4p2HHmX0FlwRIzOjsLyqJSkNHRubCk/KioIlpKZmoTLRWekofC6Z
zexu4/397rP/vNbXf75/9R444EzvCoigHZzhxrJuVlFTA6mtgcprLevprx2f
5i0sD72cH16c7J8CuM30Tc8NzM/0zU92z4CZpZHlhaH5uaGFjV93ahsfbR7t
qx9or+7squvtbxrorO3ZeAaG1dXJ6ulg9XTV9oH6b2N38FgdLczmtvqOofaR
wfYR0CsxyxuK2M2cgVlO5wCptvlZQNiFh08DE+PD4hJTsNjKkto6RhOtoJyE
JeMxhXjkxvXJnIxCXA6xMKukvKiqllYHes8mdmMjC7Bf11jVCJIwncCoLa+r
BvEzr5iKJZUV0YhociGKXJJTVo6vZRG4THwdmFYV1lViGa0V3N76LiaBjYpC
p0ETE2NiQkMCArzdPR0dYEHByNjE/Pj0/KjMdN90pE9OqktexM2UkCupEbdT
w+/GRb9Igrtl+t6CPToRdGzbg/u3vFB4Wgqqwh8Gf+p4JsDzUV4eto3TNT62
svrh29jQck/vYkVzv4NHuENo7JPw9Ad+GfcCks87xjyPzJHearbDeldr+/TI
9FpxSS0SQwHApafmobMJWWgsGoXBFtLwoBOv7mrvnJme/PinK+ivfleAwfWv
68sjq311Y901w+2sQTBay/ubGd31tI6Wyr7xtvnF/tWlgVcvx1+vTLya7Z2a
6pyc651f6F+a7ZlfHHq5MrYKbHGsYxxMp3pmNx4x5U311A8MtY6OdUwONg70
1vUM1A+MNI32NQz1NQ33N4/wON0g1vY2dg3yhsA6U71zs8NzPa39qGL6+No7
GrsmEZNDqOS4Q+KI1VwSs57RONDFm2go72AW1zIITEZReVkBlZFbXIWlVFE2
nogDcbeD3QmMtbO+s79toKexr6e5u6uxEyAJwmcFqZxSQCZji3NS0FnxubkI
fEE6iZRdQUKXlWQySpBlRFQZHoHDI/OJefhMeGakRwTMPwIeHfXo+cObt646
PHno6+gc8MI54Kl7lAsk9lli4mMU0r0AdhfpfyEx8BI85FZ0jCMC4pD69EzI
MZOHNipnHvzrU8ubr2iczaE2uHi7uDy6kBofxaFWTEysvF77hEdQmdRWWt1g
Pr25sm06HEl3hZPvBCTvuv1MaedhMXXD63cdRibftXTPUUqbiJTGiqre6qre
8op2Skkdvby1vIpXx+2tre/s6pkYGFz+0xX0V7+rH79+rn9Zfz32bqBuopcz
1lkz3FM3NtQ8010/3lE3MtI+vzyytjrydql3YW3yzdfFj6vjS4uDc4DBSd7s
UOPYeNv0/wxxaqh1eKRjbLRjcrxreoQ3MdI+PtU9N90zP8EbH2oYGmsZm+qc
GWoZ620eGmgb7W0eGOQNzAxOzozOAnsFHvpyemW4c4Re27qyvs6uaWvoG5z7
sh4Sh8gkVI2t/qxqGUNiS1prurjUpmpyHbOkmk2p5Va29NT2Au5amO0tFa1g
vrdhoL9lEKTi6f7pmaHZib7J0e6xjsZuJpUFGAQZNSsJRUATybmlJTkUBraM
TaiuKebQ8hi4tKK0mAxYcARwPYcH927/e8Hp0T1YeLCri5Ojm1M0BBobGBHi
7Ov9yD3KNSbuWUrc/cw057w0J3zMXVTQ5fjIu0lJrqjAh/B7p70en/R+cdrH
wz40Bl0QnozMpzfGpuQ73DuVmppOxJG7hmdmplZzwwgRT+HJCYSJha8LH78N
r6ynl/U8hWTBCa2Po/PVbE/d80yqqR0hl3ZXlA80tMxx6mfYNUPUqhZ6ZTuD
ziohFhNxeHZ57eiGn87/6Qr6q9/Vh4+fV2bevBxeW+55M9OxPNI2NdY5O923
NNW1Mt39cnn03dvpD++m37+ffftz9cv6u++fV96vzb59Pb66OLAMABxuHgWJ
dHn0FQilEz1TY92Twx1jw+3jAMzF4RUQcRf7libaJmc6Z+f7FgGh4F1Ax+L4
0vz40tuF12sv33xceffj3bdva59WppaLaOzO+becps7YrFxIJjYwLtonJt43
NuHo1evQ9BzQT7WWt3FK62uodbWMFl79aAdzuIHW1snuBZ0dSLnAUsHZYH54
fnlyaW5kfn50YWVydbRroonVCjAk4yiEbAIxq5hFYoNRXcLmkKqri1kMXCkl
j4xOzUqKgkf6+js+uH/5wrHbt055ez4L9vWPjIzMSkYhozKSg5OiveNSg5EI
TyT8aVrMw4wMtwKMDzXxAQZ6JS3hQVbYrTjPK8F+V0ND7gSjYYUJ+aTTN+wd
fEIeezx59OBsqL9/SXFpVV1DX/MEJZGRG07MSykZmf/K65vrX1yPQNGehiEr
21eiCjjGV5/svfQ41R+PiqBhIJTy/MaKouZmJq+jnUenULMQcVhMFofLGxx7
29Y229P5tx/8z+vL15+Lk6/me5cXe18tD64Cml5Nvn03/+nd2Pu1iXefF758
Xf3+/c3XXx9+rH/79evHz5+fv395/enD0odPS5/fz3wArI13TgHcZvpmJ3qn
l6ZWV6ZegvZweWhpeXTlzeza6tibhd7Fpf7lxYElAOnM4PzbhbVvb79+e/dz
/ePPr+8/g+n6p+9f3nwAubSEUdc1/2n67erq+jqGwrnw6PEtd8fI5DR7L/90
PH18ZHXjQgq7o4XFA7F2omm2m9bfROvs4Qz1cgc3nLdnerZ/ZnX65dvFVwtj
i4B0wOAQb5RX19XIbGFRqplkNkCYy2hmk2qrilhVeCY9l16SQyLlkUryCCWo
ooIkbHI4ItDb18fHKcjfIyokMiYyCoPIyY3PQ0Ny0kORebF4bGxRdig20w+D
CS2iwVkFvmXw65jIM6lBp6Kjb8bHPI4PexQKcYsrqRl86Ob/751rN5499gny
8Ha4nY/KpNFozYy2oqSi/CQiNqO4qnU2Nauub/5zBrWJUDU6t/oLx+l/CMNv
3X+sOq+5IqeRjmRzqTxqflUNraa3txuHzcHiSZPzHwcmPtY1T1Rz+rs7//rg
f17rv9Y/rn5ZGn4FfGpp5OXrmbdr8+8/r3z/vPDpx+vvP959B90ioO/Ht++/
foHY+mvj39efX9a+ADC/rHxeGXs53TszP7gEpoCvteUP39e+fVoGvvn6/fy7
z6tfPs1/fDv5ZnXsFVgBhFWwDgDzy6svYM8/33379PL9p4X3gOg386DZXKGU
cWt7Zuo62vtmF1Kw9IbB+dDUDFp9T8vEe8+o5NCIlOH2qQne1CToOnvnx+vH
hmtHu1iDPfVDgO5XUysrE0uvJpe+vv4EoP788uPLyWWQS/tb+jceO2e2NFQ2
8Wo7QV5tLG9lldSxCHXsIi4Tz6kiVlcQWUxiRVVhRWV+FQnJyEFgkYkZyITU
3GQMAJCSR6vCs0tRjKJkAiWDQkdVFCWS8HBCQSyBmlZJhJWjXYnx9tmRNxLi
n6Une6fC/VLgAbEoQtNT/7AAaCiR3p2JJfgGOifEx2VmYUqxDGomGZeaR0jF
trVMZpHZ6QXMqPwyWv08b3TjSyXs/XNsjl9vpDTxmN2t1I4WRncZlsXIr2TT
GyiFjPq2KV7vclP7VFPrKIvd3dA08acr6K9+V9+/f/+y9vXd3PtP85/XZt+t
za+9W/wIfPD96w/rP9d/fv+1/vN/AH77Duj7+fPn958/gBsCDH9++Prl1ad3
c2tvZ9bA5sAu3y29Bzivv//56/WXX6++/Fr7/v39r09LH0GOXR1fGesYB83a
ZN/cyvjrtdkPX1Y/fn/5EWz+enTt1fi794sff7751d41VtE6MDg4W1BajcAV
d4+9haHyApKyB17+co1LcA+J6m8em2mfXRx6CU4XS4Mrwz0zQ9zxUd7E0sTi
59fvv6y+f7e4+vnVuw2zXv34cmpptGOou74LjHZOR09j30DrUH9TXz2DW0Np
aKDxGkt5DdTW5soODq2hllLPJm/cvqzEs6nZdAqqmIGhVuZXMLB0AGkTo62O
XM/CVlViyipzmcWppYVwSi6MADIn3Csd7p6cEYJOj0QmRabh4oqIKAbYFoFh
Pg1MuvPMEUdtorA7vMO9M1LjkZjsMgK9idRBxzOZ2OpW9ujAwk8Moy8kuTgM
RYcVcS/7xp90iNDf8w81l7kwvDrRssSrHGss7Wgid5YXNrEI3DJiS3PDVEPb
bEffK3pZA4tZ/6cr6K9+Vx+/fvn09tvXtfUv7799ffft56sf72fegRQH+r71
jWumGwyCAaBbB9x9//Xz8/qv19/X136AlT+svP84/xas+fP7xt+1/vn1268v
P368+/lx6ev7hS/A7H69/wpY+Lby8fXSu9nB2aHmXpAVP8y8+7T09cPsx5+L
P9bG3kz1zM4MLn5683l8YpZI4/RPvZt7+wNDpqMIeGwh9eqdx1eeP80uZR+/
d5tYNdzV0L/UPvOy/9Xq5OuVmbXpwbcDTROzPfMfVj4Cs/754eP7lZfvQZJ9
//Hr6w/zQzOz3dNjbaOd9d1djd3j3eNDrcNNtRsP+QywBvuqetsreS3sttbq
dpBvWyvba0i1jbQWXnkHt6SJXVRXQ+TWkpvqS+qqiTXt5a0d5W21RTXluRWU
TFpxMiU/noyHl2b45UGfJsZ6pOfEFRLR5GIUkY2taq/qAQkZjaaHZxSEIDDx
OWQGZyAoMhCHo2blFDMIFa1lPV3MsUHOGI89yBmY43QuxGKYiKLmZ+Goi27Q
sy8iTP55kpuG/zq/BgLGTMtiH3cC2D2X2MYsaKBiaFXMTk7zeEPrOInCYtFr
/nQF/dXvav3Xl/Vf3wFlP3+sf//04/OrD8AKX89+WH/39QcIoYCtDf34/v3r
hhWCUPru27vFNyBD/nj7DXgcyJnA1NY/A17XwQq/3n/+ufr59cTLl5MvP7/9
vP4dbLi+/n7959r66/FVYEOzUy+/vPzxdvrD9PDSyuDLV8Ov5gYWJ3vm1hbf
AoobuD11I3NlnFpEDg6OLW4YW2me+IgqKX/s5ZmUx0qn1ZSW1b0a+/pyZBXs
7eXE4mL//HDHZG/j4MrMKtj8+7vP4IP9+vDz19uf71feLIzMTffPjnaO9zX3
DLb3TfVNDPOGgSEONA9P8mZ7ucNNrPY2TkcXt6unthssb6ho6aztmeyane1e
7K8fBlEQTAfqRtvKu1ppnS2UDg6OW5HFomWUk1NoxGRafnRxZlB+hj8GHYYl
IihsHBsA21I12Nc80cZoxyPpZXVjTf1vPaPR4Sl5fhH+MXBEPCK1IKeAlsts
KO0arB2a6loprugoZncT2f1tY9/ITdPRheyC5lkvTF16Avbb0pf5oZW3wx+H
WqcH68e6yvs5xc1N5JZqSgunbrSMPcysHW3i/e0H//PauDbybf3Lp+9f3v4E
bSAAEGTLt+PvQc788vXXjw201n+A+Pnt5/ePXz+9+fTp1efPix8+zQEv+wzi
63LvykjT+Pzw6o+PoEn8+v71x2/vv39c/gjG+qd10EtuXPNc+fBt9fOb8eXB
1t65oRmwLWgPJ3pnpwcW/3ftdHWkbWp5eOHn+x/VHF5z3xyBymR3j9X3jUUh
seyxtYbB1WBIql9Uwr7LZ2JSkl9Of13oXQAN7MTIy+me5Z66MW5p6xBv/N3K
RgO4MrX84c2nt8trcwOzE13Tox0zw63jQ02DwIJH2ocHWkb+/y7JwuDric4F
XnVvY0VLN6drqnMSvDvSPjrdNQM6zbnu+em2qemW6eXu5dm+DR5bGF1N9C4u
pZ2JryvLY9Jyy8nIysJkeh6clBtXkgMryo0qrMyr7mUNtNeNDLWNt1Y007CV
zNbpjokvCHzFfVcfj8AAeBIiKTk+JwVdlVvbWMLj0ToGaqeqOf0ZhXWgeRxa
/tky86mwdorc/Xm/a1JQUOrXlz/mhpdnu5en+xZmu+YGOSNtld11tObu+r6e
7sn2wVUmZ4LT+pfB/7wa2WNt9SPNrC5QZu0VfW3sgfaa3u7qvp76kZGOmdGO
ycmOqeH2qbn+V+Mdsw0sXm390FTHEijOAd4Ur2GshznUWtLWXNY13TG30L+0
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
tyjKCuioyOySk7ISF9aztDl2/lmgRwreL50WW9Jc0becU96JojcnkOpzaAPA
EKOwFO7Eenn7ckX/+xehOQ98IYeOndOS366vssdM76SF8Tkrw1M7TC7bWFyw
MDq10/zcEZvre80v7TG/tN34n93bL++y+Xf3jn/32lw9vOf26SOPThy8d3Tf
7fPHHx87ePegzbWDtteBs9sduL1r97UDe2/s2XVlr+3N4/sf/nPk2bF9D4Ch
nznuePUfr1vn/K5dcH98zf/eRa/r/3pfuuh947r/k8eRj19EPPeMuv806J+b
To/sA/ycE++5RF93hDxzib3nEvXMKdnhUUzE08Rwn5yIbGZYRgWC2hWVx07I
q/P0T3z+NP7y86h7jyGuz+BeTxJ8X6S5OEGiglA1nWsRWZxU6sAjaLFbDM3u
Rew9+5BIj3QPpyRfl/ggz2QPl0RvpzhwLA+nhCf+qV7BOcHBmMCgv9+79J+X
lsIuZXErDSlrwJqMgImazA5D9QPGmkd0VQ/oqOxXltwmJ2IuK2ymIrVdWWa7
vISFsqSVnvIuY9U9+op2ZhqHjFT2KYvv0Jbfqy13QF/28H7D65bKx9XErMBq
wgL6JsYnDQz2me66ZHvOYc/F5+ce+1xygXllUl0ycfaR2dCSVqckYmbZQERe
7dPYfEbPu8q+tQQCFUvroTctInLrFr6vd09/rxn6HJqWG5iMu3HLQZpPR1Vq
q5rCNiU5c00VS2Upcy2FnepyVtqK2wyUd2jLWOnJ22jL79JU2q0lvVVTzkZD
Ya++6gHg0fqadsCd1RR2aqns0VPYZaS8W0vFRkXBSlbEUFHCXEl2+8ZpR8lW
T32PDkgCGgdM9E5Y6p/Zpn9+m8mFvVbX7cz+tTW/CCL3oT139uy8vsPm0pGD
dwC5tnZXzhx7dP7Y070H7h45/ODY0UfHj9hfPvXc/mrAizthwQ4JMXnc8Ixa
TwT9jGOEJyQnOBJ55bT7pTPO10863bno9fCS/7XTvtcuuLleC0nJa0phDEHz
214kVt0NIzpk1t+6B3G6D7l9KwgY/aPbEffvhD+1D3d/GOPwKOrRU6i/Y6KX
c6K/x99+8D8vTWlrXVlbQ3k7XWlbDYnt2mBe9aCxymFdpQMacht4qklYgYUq
YpYKouZS/IaK4pbyIiYGcnvsdC8f0Lt8wujGLqVztgpn7JQvH9C9fdzM3kDM
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
Jy6WNpBA7AkuaIXmtTjEIkmjP9BkDpLckVPShaJ1dq5+jMshuYVHeyfldU3+
ik5My69qzywqSymgj739GpGUzelfau78Hotn2Zy9ceScvZykrpaomZSYusgW
HXlJYyUZMyUpIyUpQ3V5M2U5UxUwlTVXkDEWF9RWEDXWltumLrVVVWormNGR
26EoZqIssXXjaoy4pY6staaUBQAQNGi7jE7Z6p/Wk7MDPaCSsJGSyMaVHBBr
gW/KCxmAthG0llKCekKbNQB9KsLmopu05IXNtRVslKWN5MS0AdpqEhZaMjsU
hEyFBdXkhA35N8vfvfSopnXpaXTxzWDMZa+U55HkE9e9pTfJivGLbxYQ3rJJ
TFXCaJ/59aM7H0uJ6BlpGGMYPbFYHqKk7QG8IhjTaH0tQFTaUE5KW1BIHYwt
fMrCYAtxTdBpKstvVZAzkZLWlVM0+tMV9Fe/KwXpXcryu7WUD+mpH9dStlOR
2q4ovk0RdDSSlkoSVnJCZlICplJC5srSNjoq+zVk7ZTFt6tJ2ylL75STtFBV
slVX2K8otUtNbpeEzM7MCt706s+unuWs0gb6wBtu/1pZx9IzSHpoFtMvgwHJ
qbofiUypXIjM48YV9/onYGpG3hRyhnJItcV1w1GY4o6JL0l59IGFT+OzbwIh
8YFJaU2DX0fXfqXkF5A5XYMT3wronfcdPM5fvqmuul1Bcqe0rJma7FYNORst
RRsdZRtVGXM1GVMw/sejkay0gYSItpyEEYB0A0kps/+/3aAlt1NDxgb8HxXE
LACGWjLb9RV3ayvs3LiZKLsdMCsroAfSLBgy/NrA8kSENET4NAxVbIw1d4Nd
yUuaqkpZqolaqIqZakhZg12B3WoqbNdS2KUpawt2IidqIiCoJiWmv2mTZHYq
YXjoWziG9TyRfDcw+0VM2bF7jmYq1lYa+/g2C27axK+hYnzE/LrvjSwrg/Pm
+nt7upaae+fTKG0u8axLXshTLsmbJDQE+SQ3bZIRFlAW2KIgJCQjwC8vIqQg
yC8rKqL2/2z+6Qr6q9+VosxuHbVDBpondVWOainYgRJVE7eW5zeWFzFTEDJT
BsUmuUNJYruipLW+0mFLrXP68nv05PfpKOwDMILl2goHdBUOqkvZqWoeKqzq
ahuc7Rt9HZteUtn1lsKdDEorDkgmJxZ0FrWuosrHvOMLnsExEdj6B8HJsYSa
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
ru5sayUUlmXkM/6Pvff+dts8s4Uz47g32ZZkW5Il2eq99271Xk/vh4e9dxAg
QIJoJAj23jt5em+SjiTLKm6yE8uKHTuJJ5NJmSQzSebLzNzvTr4Z3/fkfv+B
ftDKWtoLiwskD4j3kM9+9t7ASyLROXnns3/43X/8JV0cRJ1hdyTpDJRXv75/
6xsnlszasX7egQ2zj6+de3zlzMPLXz0w77n1s55cAXrFnOfWzn1++bq3Dq+a
vW/5aztXvrlr/itrnv7e6zOemZ7ABsLg3Fc2v/367rmvbJ353Or5r21aMHPr
/Bmb33hx3WvPrp754tqn/v4tkOlefGY5WHn6+7OefXbRU9+f89z354NnX3l6
9bNPLPj+E7OeAJL3vTee+N7sp56YXv7uey8DtgKbOuPZVcvnH9y2+EL9DgVv
l/IffvDb/qk7R+vUl1QUz5pvg6P1LRb5aUtA3h2BRsrM+1R7UnTCStTFfIpy
0XxlJPlhsfdmunwtUBxHgyPy0OUVpySLlh6/dFzrUZd08uz+dQ1LFh57+uWl
T7268vmX1j31xPynnn18buJvHu+8uR0QcMu6k0uWHJi/YO+K5SdOH5ecPCXd
tqt64dv7Vq85uX1H1cqVRxbN3/vmrK3Pv7Dy2aeWgHJ98/m1rz6/euGbu2Y+
s/bNFze8+eqmJ5/ZEE1f//nv/uXXv/mXvoHrnnShs3cskh1ifImpB/+JuJOh
vjvFGw+u3v1FuvcjKlKq07J0KF7sH/zswS+uX7/781/+8Yuf/fbrf/rjjffu
f/PVLz64+0kokXjw1a9/8OA33/7m1//6p//VO3bF6vZs3LJz2ezt7zy/Y8HL
u+e/uGPRjD2LXt276NV9y2e9O+e5da88sRQMBnDqnZlbVs89vOmdUyvfPPjW
S1tee3bVy08uWzh7x+p3ji6cvWveK7tWLTwJpBz0E9Bb5szY9NZr28F/9Nar
m197Yc2T31v40tMrZr60+cWnVz3z5DuzX1kG0uKsZ9csmLlv1otbX352zVuv
7lz2+hHgzF9/efvsl7aAl5395Iqdbx8/tZ7X/C5qrgoHZcPOjoriEPnDqX/4
5ud/wB3ZRjWpJgf0zIBB4tWdJWLqskMU6nPcjWjGHKJUL3Y9qhvNmKeudN7/
/b/+7x98/vPJO1/isRFd8NqxDueGzS0b1jYY2uJNraE33ti7dRUPjH/RnMPr
VjXNn3/o2Wcen5v4m8eyeXvXLz2+ZNGu519cPOuNXVt3NB47Lty44fyyVUfW
rjm9ctXxhUv3zp6zaeG8PTNnbHjquUUz39g0b97WF59dPGfO1kXvHACPz3tz
O1h58u/e4QLlf/zdn+//+J/vXf2EpBzlkdujH/2aDMSJXC8T6HIN3SBSk5fv
3rv34PdDd75V2pMjU3cGB4eHBq8PDY7d/uCHn3zx5dS1m2N9k7/++b9cvjou
Uylv3/rRT3/y229++etvfvuH0Ssffvz1n86eaFvwwo63X9v2xjPr5r+8fcHL
W998btOc57cumbn3nVd3zH956/xXty9+Yy8QrLkvbFo17+CiWTte/PvFM55a
vmTungWzdr7z+j5Aw9VvH18y5xBw1DOeWvX6i+vnvLZl1osbX3py8cvPrHzp
mdUvPbNyxvOrnv/+kmf+fvFz31/64lNLZnx/5aLX9s96dtvLz218Y+aOV59c
v3XBxR0rLy6ctee5v18174UdG2cfN11w+kWdSe1ESNQV04wUre+5Ojonc5/8
7Ns/j01+5UpNFIa/iJY/cikL7o5yyTjRaR0tImMV600Pv8LUxeLGy1FkbCT3
yb/94T/+9Lv/94sf/YuRrrCx20ZnL6+GUdYEjuyT8i5at25qrTuIX9qmlp/n
YEX27QVHZs/Y+qgr6DEeFptXnp7/xu6339418811898+tGtv2+EjHQff7di/
r3nj2vPr1519dfa6RYv3b9tQ9c68/XPf2jpv4a65C7bPX7Br+ZJD89/aN3f+
vrfe2rd25ekXnl5GBPK//PkfJ8Y+vv/pg0QqXp68mxm512ai6sUKsS9VJ1S1
E+G+q19e+eRnuckft2vRifGpK0Oj48PvXR6/9vX9X/z+n//tt7/8/R/+9fdf
f/35tasfReMjH3z69Q/uf/35j39+/Ysv/bGuwes/Wb/syNJZ7y56fdeCF7e9
NWPX/Je2vP3qjhVz970zc/u8FzdPn7B448A7s/YvnLV/6et735m9e94rm155
ZsmcV1euXbpn7mur5ryyeuXCdzcuP7lk7v7ZL2wAErZp9Znlb7/73JNLnn9y
2YsgGL6y8bmnlr383PKZLy1/4en5zz45/7lnV8x4Zs2c5zfPfWELoPDmNdVL
3zq2ZfnFnctr17xzaO7MrQc3ihr2Ykh9ACiaqTHYfs6qqrIXsYm8eiRJ9H16
/9ddw5/jweHC5FdmppC3jfikxaiir4zeiKr6c+abEdkIXh+IGMeL+NV+7+1v
Pv3HP/7+v/71j99Fhu/gsQ8MsTEtjxkK3uM3+zqOovw6J9ocCyADqpaAqNm7
dsX5dWsuPOoKeoyHxdnj0nXrz27admnnrrpjx2TvHhYdOiS4cEZ94ZTqyP72
jevOACO6a1vtxtXnlr9zZN6bW1csPrRs2cFlSw/v3Fw9b/bOBQsObtpQffqg
aNXi0wYq+ctf/mns+geTl69HIwFbKAATnLt8vTB6/yxP1nX76xalhS3d8udG
E2Of9Y7d/cU//ts//tMfv/rZb7/60c9//6s//+6f//y7f/33f//v7/7rL999
9uGD4eF7n/30N5O37ty887nNFfjiZ7/Odk0umL1q+Zw9i17fs2jG3jee37b4
1d1A6WY/v+qt17a8/uL03PIVcw6sWnB01fwTaxccWTrn3YVv7Fk0b++6JUfX
Ljn09hvbFr+1d+uaU+uWHt604uSyt/atXHRo3fLjs15aM+OFZTNfWf3MU3P/
/olZzz2zcM7MrUAcX3p6KZD7N2dveRGw8qklc2ZsfGfeu+tXVM2dsWvWs+va
jqBtJ6Cdiy8oLrKUsOJS9rj0JSPfZRAE1M1OtM0XUnbHmL5S75SJytRruItS
o1REdNHvFcxXE5pRv3jAI84n9INp8yQpiLplnRFlXx/x/keDP/7zn7679+Nf
k8E+LHT9rJKmhYEu+m4cm6SFeW19uuUM4tDGWk/DJw8a9u6T7tze9Kgr6DEe
FkD1Nm6rOnJcdv6U7uxJRVWVUakM8Jrw6nOGC+dVe/bUnDwmPLin7cCult3b
67ZtvLB/Z+PG1WeWLnp3y4YLa9ec3bDmXP0lQ+N57aY1R6UG+1f/+Lv37/34
5o1PJ3omnPEcYrNHuj8kQ0MWNmlN9MY6bzTrnEZPAqGTMrnTaAh7gsOh1GAq
PVwsDDFsbPeukzIF9Ztf/eVXP/uJz+OH7aGBm598+6v/CEYL3/zyD4Xi+OLZ
O5e9uXv1/H0r5m55cwbwgRtAiJvx9OLZr6555YXVc1/ZvGze7kVvbF+14PDG
pSdWLz6+ZMHhFYuOr1l2cs2SE2DZsq5q/5aabavPbFx+AsjfqsWHl8zfM2fm
+lkvrwDLc8/MfuLvXn7lxeVvzNg2f/ae/ztJb+mbh5bOPzpzxqaXXlz9wjMr
Xnxy9aznVr/y5FtH1jUZ6l2122SK02aHIBk3ToRMIy4oF0dGk9RI3jNVYm8W
YlNsuCiFfXVabtf5Rk6f6WNvp6DeoCod03V6FBWnKO9S5sJIZ568Mhy41++8
dbPw1Zc//F2m/6aGTDYg+WZzmlJEWU3epx2gZH2bV9UuX3Z097JjrYdVNWdt
C985CZrMo66gx3hYHDouOHZW2i7gFMKATu7R64JGfVLQSrY14GfOiffsq26o
Npw6JD5zWn78mLD2gu7iBd3RAzygjLv2N+8/zAOWtbFKd3Bf/c611XwV/eU/
/On2tR+Mjo8Nlvsnrn01dOvzdo0m1X0NCWccvjJgosgWgBO9B7fUrVl0+MDW
5rXLzs95beP8mVtnzpqeMb7opS0r523t6x779be/9bN2nPNPfPiLax99/d7d
B9dufU2Y3S99b/HCWZvWvPXuO7M2zXhu8evPrpz36pYVS/avXn1o/fpTa5Yf
WbVo1+wXlqxYuG/jimNL3z6wfPHhjRvOrV11ZOfWszu2nd688ejR7S2bl5/Z
vbHm0J6Wg3taAA3nvbZ23szVS+fsn//ahuULdq9Zegxwefk7e5ct2r1o4S5w
d9uGmoN7eBtWnpz53JrFb+zfv7Vu3uz1c2ZtuXBIpKuzmRtoRhAK6Xri6IRL
3ZOyXulyXnOrc15FN40V5Fb3oVp1mzlWo8Xi2EDFNfVe6Yc5+2AU6+OgHkIe
AO60z3U9ZhlgjEVlE5Ejr1wbftB/+WuRNXlQ4jzUSplkUULoNTe6ybZES736
4P6mHWvP7N1Yf3C3aO3yU2sXHnrUFfQYDwt+G9nWZEMNUQIucdZhVJczKGMq
qVPII1vqkNoGs5CH8eqw9npcWA8112KnT/BPHObVXtSeOy05d05y/rz06CHe
3q0NB3fWXWrQX37v/p3b97P5XN/o1NWBO13jd6PF0c6RL3JD1/3p7mjlrq98
s6HNtGXJ8WOH68+c4E2Td/O53VuqdwF52nx2/cYDe3bWFAtjn99/EAzECgMf
XL75oNx349MHP/3Rz/65sVn69oLVG9YcWbny0KKlW5Yu2v7OG+u3bToFGsXB
E01VjcrDxxo2rDu8bPmeXbvPHzrGO/xuy/FD7WfPirdsOb1988kd287uebd2
777z+7ZePH5YUHVac+RAy1vzN656Z9vyhVtA0tyy7MTWHbWb1p3bvvTU7rUX
tq4+e2BP8+nDklMHpK0XseYz2rP7m07srb5wlL9z/cUDWy9tW3/+3GGeRZe2
qCKEMmvVxaUNNmOjA1d5SVXIrSuQ1txZHX2JZ9X7ui7xYMKUCDADY5k7LqzC
a7CK2mlVm1XEw2sv6Q8eEGzZeHrLpuNSOSlSEY7weIM1fkDCHuU55S1WmyYT
RTvVIgYzZls78H0H6jW16M69dWs3HNq25vH3B//moZWFxG0sbowxSIFFu1BN
EtPnIVVIKfbI2jiFKAzJo7I2p0rkkbWg7bVwSxXcVod1NBKAoSIewWuB/39K
nlLXNsAjNz65evuLa7e+uHL5o77KyEff/nHqzsfuZCVcmXDEx0OFaygZPHmS
X39OC3hdf15Re1Z2/qj4wjHpuROCU0ebDx+oP3awPhrs+erLb1OpTP/VzyZu
PPjq23/7z//57uZHX546w9u77+Lho63Hzwr3HW7Yf6jp6LHGc9Wy7fsurN1y
dO/R2t2Hq8GyedeZE2d5tY3GS1Xqujp9fYNx166qU8d4DZe0p4+JTp/k1ZwD
aVdTdVZ/9pR07fqjG9ceBrxevQzcHtu9t2bPnqoTBxqPHmg6dpDX3mZtbcFF
HQ7AF42U04jJ04ebTh5uO7SneefmM0uX7V66aOuGtadBND69X7Z/d1XVmdb9
B6r2H6lu7oDPnhDpNGytnlGiccTXub9a8e6RtnqeraER2bG7acXGg5v2X9x6
qHnPwaajZ6QnLmp2HWvYcaTm6CX+ml1HqEAf35w8yMdaiZ76JuxCnayuStbe
Tja3kXXN2NkzCr+1e++B1iWrd69fu+tRV9BjPCxwQ9YoCyt4lFUddZorgIk0
UsZ0MdJU4JBOmzaNaxKQ3CloN+kEDrPCrxe42qoxSbtT1Mo0XzLVnFYCAvJa
LTVnsZYW/P0f/XRk6k6xq29s/MOugRulkeupSpcrUTQ74mioz5sZVfBwfr1N
JSRRWdSqjusEbEedCajJ2SO8hgvK2nOixgvykC//6b3PJ8dvfvLVHysDUzc+
uP/FN7/wELHqY+JLx4UN5xQt1frq07Lqs+rGGoWgHTm8p+rY3prqUx1V5wTn
TvFOHm4RNsIygb2lARMJHe3NeNV5jUTAKERcaxVoI0h7LSptZMTN9MXTykP7
mg4caDp5pOPkCfGBw6379lSdOy84cYp35EhrbR3U1GS5UAU1NKAnT0kuXlRW
X1RUn1eePyWpOqc6fli0a1/tshVbl6zatX3Puf176tdvPLpyxa6Va7et3bB/
1aYjGzYelUgtbYgfcfdbAr0gFV46rdi9u3X79gurNxxdvXH/5n0Xdx5vPnFG
WFVnOHZafr5OcbJa9O7JxtUb91osMYklWaVmtjThpy/qD55q2Huw+thp6eHz
4i27LladUQbswyKBc/P+c+s3vfuoK+gxHhY0nDbJQ6gyQOnzZlnCbi460JLF
ECKhpM9SodVRizxAmX1SIWSSRazKhIZHiltsIDACKZS1sPJmRtLCKKVuwEd+
O5ofvPrB3QedXX2d3Zdv3HsQiycjme6pT36uhdl6OaKAgzo+R8F5J9ip2G1R
RA1Ct15ib6lWV5+WKDossHr6MitWxPfJJz/K57oK/e8Pjt/t6b9x5cadsD1f
c1zeeF7dUWuWNhLielzW4pTwqLZao7TZrGgxq9stkiaTuNms7KBF9ahZ4lXy
HPI2RtVK4dowpA20N1tkHQ6j0K0RuE0dHkjs5debm86qQA9prTYBvatuMDVf
MjbXmcBKXS3c3Ig31VprapB2nu3kKdGp0+Lz55SAtjXnNHVn1edPyo8c5e/e
XX34ePvJc4Kzp/lHTzTt2Xtu956zxw411VVrgT1oEdvkrqKEyOu5Xm9yvO2s
nldrFfLg/Ufr3z1aDyi8btup0xdEJ04KT56SHj7RevB4y+6D1UeO1UA6j5bL
862Jk4aoUOpVSz2N1VDdJenZS8KGJl3U2ZVL3Aw4R1sE1jMXxY+6gh7jYWGU
cRZtjDAmMGVcLwqa5AFME9WI7YjcS+uSdnWKM1VoJIFoXOBZTB4TNCASHilo
J8Rtdm2HB5EEBfVWIDpKkQ81xi7fvTd+43ah0t1V7GHCgR/86FeJdB8V6UMZ
n4kOd3TYCYMf1jtJRQhTuxRtiFXrS/hGWKqgkttgA+VmYg4qjFuCX/3kN4VC
342Pf/qr3//vsclPrt74xM1EeC2q5npxU416WuZaTPIOQtRmFTZi8nYSLLDE
rWjCEbHHJPEh6jCtCek77KpGSxQreIwRnZAQNEEqPqHpsMOqAK4MgZylEzCQ
0NFUrTdIXfwWvLnZqu9wixpoPg+wm5MJuPYai6iNbapBLp1X1VfpG6qMwEJL
msmOaritytTagFw8Jb90SXX2lLjqrLiuRtZQKz5ySnD8jFQmc1dfMDYqXUpP
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
5dURxX0z6AF3xX9L1PJp
    "], {{0, 226.}, {300., 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{300., 226.},
  PlotRange->{{0, 300.}, {0, 226.}}]], "Output",
 CellChangeTimes->{{3.95250767403916*^9, 3.9525076962558193`*^9}, 
   3.952508462521802*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"1d4222a7-4985-44a9-bd0d-d591201c9335"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"r", "=", 
     RowBox[{"Range", "[", "10", "]"}]}], "}"}], ",", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{"Join", "[", 
     RowBox[{"r", ",", 
      RowBox[{"Reverse", "[", "r", "]"}], ",", "r", ",", 
      RowBox[{"Reverse", "[", "r", "]"}]}], "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.952507705672388*^9, 3.952507797635845*^9}, {
  3.952507832671447*^9, 3.9525078512744713`*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"b074babd-0f50-4b90-b8a3-c0d56faeaeb7"],

Cell[BoxData[
 GraphicsBox[{{}, 
   InterpretationBox[{
     TagBox[{{}, {}, 
       TagBox[
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[2], 
         LineBox[CompressedData["
1:eJxd0DkKAkEQheHGyNDAwMBAB5FBRNx37XE5gUcQjL1CH3mOoOJ7Qf8Dw8eD
orqq+s/349UIIZTf/+f/q2NuqHKbsAXbsAO7sAcLOIBD5BL1I/Qb470J5pli
3pn0PnPpfRfS91hK32uFvEb9Bv22eG+HefaY9yC9z1F635Ms5Fn6XhG5yuuT
s/td8veSs+e55vMmZ+9zk9o3Ofsed1nHDw2DJvk=
          "]]},
        Annotation[#, "Charting`Private`Tag#1"]& ]},
      {"WolframDynamicHighlight", <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
     StyleBox[
      DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
        Slot["HighlightElements"], 
        Slot["LayoutOptions"], 
        Slot["Meta"], 
        Charting`HighlightActionFunction["DynamicHighlight", {{{}, {}, 
           Annotation[{
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[
               Rational[7, 360]], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]], 
             Line[CompressedData["
1:eJxd0DkKAkEQheHGyNDAwMBAB5FBRNx37XE5gUcQjL1CH3mOoOJ7Qf8Dw8eD
orqq+s/349UIIZTf/+f/q2NuqHKbsAXbsAO7sAcLOIBD5BL1I/Qb470J5pli
3pn0PnPpfRfS91hK32uFvEb9Bv22eG+HefaY9yC9z1F635Ms5Fn6XhG5yuuT
s/td8veSs+e55vMmZ+9zk9o3Ofsed1nHDw2DJvk=
              "]]}, "Charting`Private`Tag#1"]}}, <|
         "HighlightElements" -> <|
           "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
          "LayoutOptions" -> <|
           "PanelPlotLayout" -> <||>, "PlotRange" -> {{0., 40.}, {0, 10.}}, 
            "Frame" -> {{False, False}, {False, False}}, 
            "AxesOrigin" -> {0., 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
            "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
            GoldenRatio^(-1), "DefaultStyle" -> {
              Directive[
               PointSize[
                Rational[7, 360]], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[2]]}, 
            "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                Identity[
                 Part[#, 1]], 
                Identity[
                 Part[#, 2]]}& ), 
              "ScalingFunctions" -> {{Identity, Identity}, {
                Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
            False|>, 
          "Meta" -> <|
           "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
            ListLinePlot, "GroupHighlight" -> False|>|>]]& )[<|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
         "LayoutOptions" -> <|
          "PanelPlotLayout" -> <||>, "PlotRange" -> {{0., 40.}, {0, 10.}}, 
           "Frame" -> {{False, False}, {False, False}}, 
           "AxesOrigin" -> {0., 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
           "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
           GoldenRatio^(-1), "DefaultStyle" -> {
             Directive[
              PointSize[
               Rational[7, 360]], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           ListLinePlot, "GroupHighlight" -> False|>|>],
       ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
        4.503599627370496*^15, -4.503599627370496*^15}}],
      Selectable->False]},
    Annotation[{{{}, {}, 
       Annotation[{
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           Rational[7, 360]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]], 
         Line[CompressedData["
1:eJxd0DkKAkEQheHGyNDAwMBAB5FBRNx37XE5gUcQjL1CH3mOoOJ7Qf8Dw8eD
orqq+s/349UIIZTf/+f/q2NuqHKbsAXbsAO7sAcLOIBD5BL1I/Qb470J5pli
3pn0PnPpfRfS91hK32uFvEb9Bv22eG+HefaY9yC9z1F635Ms5Fn6XhG5yuuT
s/td8veSs+e55vMmZ+9zk9o3Ofsed1nHDw2DJvk=
          "]]}, "Charting`Private`Tag#1"]}}, <|
     "HighlightElements" -> <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
      "LayoutOptions" -> <|
       "PanelPlotLayout" -> <||>, "PlotRange" -> {{0., 40.}, {0, 10.}}, 
        "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0., 0}, 
        "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
        "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
          Directive[
           PointSize[
            Rational[7, 360]], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[2]]}, 
        "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), 
          "ScalingFunctions" -> {{Identity, Identity}, {
            Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
      "Meta" -> <|
       "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
        ListLinePlot, "GroupHighlight" -> False|>|>, 
     "DynamicHighlight"]], {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05], "OptimizePlotMarkers" -> True, 
    "IncludeHighlighting" -> "CurrentSet", "HighlightStyle" -> Automatic, 
    "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 40.}, {0, 10.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.952507786443288*^9, 3.9525077979958353`*^9}, 
   3.952507851990147*^9, 3.952508462839637*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"1f2e368e-c7a6-427d-b432-3a0695daefd5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"r", "=", 
     RowBox[{"Range", "[", "10", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"r", "+", "1"}], ",", 
     RowBox[{"r", "-", "1"}], ",", 
     RowBox[{"Reverse", "[", "r", "]"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.952507906893404*^9, 3.9525079429119663`*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"79647569-dfab-4785-8267-c1bb01dde66e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", ",", "9",
      ",", "10", ",", "11"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7",
      ",", "8", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "10", ",", "9", ",", "8", ",", "7", ",", "6", ",", "5", ",", "4", ",", 
     "3", ",", "2", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.952507943534768*^9, 3.952508462861072*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"8cf51cb6-eb65-4acc-a525-82a150dd6d74"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NestList", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Mod", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"17", "#"}], "+", "2"}], ",", "11"}], "]"}], "&"}], ",", "10", 
   ",", "20"}], "]"}]], "Input",
 CellChangeTimes->{{3.9525080425814123`*^9, 3.9525080679215803`*^9}, {
  3.9525081231927433`*^9, 3.952508140013389*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"b3152bcb-d96d-4e67-92be-629aaff80532"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "10", ",", "7", ",", "0", ",", "2", ",", "3", ",", "9", ",", "1", ",", "8", 
   ",", "6", ",", "5", ",", "10", ",", "7", ",", "0", ",", "2", ",", "3", ",",
    "9", ",", "1", ",", "8", ",", "6", ",", "5", ",", "10"}], "}"}]], "Output",\

 CellChangeTimes->{3.952508069645577*^9, 3.9525081402689466`*^9, 
  3.952508462897813*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"68b88c7c-0a85-43fd-b4c9-c5142401fcb1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"StringJoin", "[", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"v", "=", 
         RowBox[{"Characters", "[", "\"\<aeiou\>\"", "]"}]}], ",", "c"}], 
       "}"}], ",", 
      RowBox[{
       RowBox[{"c", "=", 
        RowBox[{"Complement", "[", 
         RowBox[{
          RowBox[{"Alphabet", "[", "]"}], ",", "v"}], "]"}]}], ";", 
       RowBox[{"RandomChoice", "/@", 
        RowBox[{"{", 
         RowBox[{"c", ",", "v", ",", "c", ",", "v", ",", "c"}], "}"}]}]}]}], 
     "]"}], "]"}], ",", "10"}], "]"}]], "Input",
 CellChangeTimes->{{3.952508364931909*^9, 3.952508364937035*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"96456130-ac5d-4257-9886-499d2a248d15"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"sexik\"\>", ",", "\<\"lutix\"\>", ",", "\<\"dexay\"\>", 
   ",", "\<\"jewoc\"\>", ",", "\<\"zelox\"\>", ",", "\<\"faney\"\>", 
   ",", "\<\"bejar\"\>", ",", "\<\"sawor\"\>", ",", "\<\"yirih\"\>", 
   ",", "\<\"qujas\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.952508378824567*^9, 3.952508462912187*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"d9d66075-e7bc-47ce-9cc2-67d9305b8974"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{579, 747},
WindowMargins->{{4, Automatic}, {Automatic, 4}},
TaggingRules-><|"TryRealOnly" -> False|>,
FrontEndVersion->"14.1 for Mac OS X x86 (64-bit) (July 16, 2024)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"b633cf48-d14d-470b-8215-1513fde3adaf"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[576, 22, 154, 3, 96, "Title",ExpressionUUID->"62d12662-a2ee-4720-be1c-61902d7dfe38"],
Cell[733, 27, 156, 3, 52, "Subtitle",ExpressionUUID->"c0a97a6c-1208-4ec9-8824-b9b4a11a4989"],
Cell[CellGroupData[{
Cell[914, 34, 514, 13, 49, "Input",ExpressionUUID->"ba751345-b019-47ac-9e9a-7f9f9807ba0f"],
Cell[1431, 49, 8592, 306, 155, "Output",ExpressionUUID->"56d52830-d001-4184-828d-cd22bebcf366"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10060, 360, 434, 10, 29, "Input",ExpressionUUID->"b0db4bb8-da0b-4c06-a437-72bf8e3e8820"],
Cell[10497, 372, 2371, 65, 240, "Output",ExpressionUUID->"11455ddb-c72f-4911-a35a-f7c1d5b2457f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12905, 442, 646, 17, 49, "Input",ExpressionUUID->"375a5b62-987e-4f8a-a7b0-fde107b583fb"],
Cell[13554, 461, 22204, 545, 441, "Output",ExpressionUUID->"fee2b75c-49d6-4103-90c1-f57d7c588857"]
}, Open  ]],
Cell[CellGroupData[{
Cell[35795, 1011, 499, 12, 49, "Input",ExpressionUUID->"4bd83737-40ee-4324-bfb7-f79a2313a327"],
Cell[36297, 1025, 7215, 162, 311, "Output",ExpressionUUID->"630f9c60-9191-44c3-ba1c-5ef563c32a8d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[43549, 1192, 1716, 36, 64, "Input",ExpressionUUID->"0622e4fa-1017-46af-abb0-e4bdad5f4b72"],
Cell[45268, 1230, 16291, 353, 377, "Output",ExpressionUUID->"a937b063-cecf-4d0a-bd32-98eef1151e09"]
}, Open  ]],
Cell[CellGroupData[{
Cell[61596, 1588, 1722, 36, 64, "Input",ExpressionUUID->"2d64ac55-2192-4203-b71e-0a13c92adac2"],
Cell[63321, 1626, 30285, 683, 377, "Output",ExpressionUUID->"8ed27848-efa9-408c-ae64-389c6c80b2a7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[93643, 2314, 633, 16, 90, "Input",ExpressionUUID->"162f1761-54da-4a6f-863f-8ad82b14ae20"],
Cell[94279, 2332, 274860, 6034, 617, "Output",ExpressionUUID->"affd533f-585a-4971-93ef-38268a6dafa3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[369176, 8371, 1677, 34, 64, "Input",ExpressionUUID->"3a5121e5-4976-4ef8-a9c0-f061ff4f7c2b"],
Cell[370856, 8407, 133199, 2982, 142, "Output",ExpressionUUID->"5d03349c-fefc-4dcd-95f4-7bc41fbd0336"]
}, Open  ]],
Cell[CellGroupData[{
Cell[504092, 11394, 158, 3, 52, "Subtitle",ExpressionUUID->"810e3a29-12ca-4469-a982-c54318562e00"],
Cell[CellGroupData[{
Cell[504275, 11401, 360, 9, 29, "Input",ExpressionUUID->"1fc14e90-6bbd-4aaf-8306-102044ccdc0c"],
Cell[504638, 11412, 341, 7, 33, "Output",ExpressionUUID->"27d2f184-84f5-477a-ad2a-d187e3b35b8a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[505016, 11424, 627, 15, 49, "Input",ExpressionUUID->"fa8a06a4-6ef0-4e51-aab4-83dd72a8dc36"],
Cell[505646, 11441, 715, 20, 80, "Output",ExpressionUUID->"2bccc42f-1669-4737-aba1-998ff17d9746"]
}, Open  ]],
Cell[CellGroupData[{
Cell[506398, 11466, 3025, 59, 92, "Input",ExpressionUUID->"6038897f-f5e4-4d27-a0f5-a0c3cbb4cfb5"],
Cell[509426, 11527, 139072, 2284, 243, "Output",ExpressionUUID->"1d4222a7-4985-44a9-bd0d-d591201c9335"]
}, Open  ]],
Cell[CellGroupData[{
Cell[648535, 13816, 558, 13, 49, "Input",ExpressionUUID->"b074babd-0f50-4b90-b8a3-c0d56faeaeb7"],
Cell[649096, 13831, 8837, 212, 245, "Output",ExpressionUUID->"1f2e368e-c7a6-427d-b432-3a0695daefd5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[657970, 14048, 462, 12, 29, "Input",ExpressionUUID->"79647569-dfab-4785-8267-c1bb01dde66e"],
Cell[658435, 14062, 649, 16, 53, "Output",ExpressionUUID->"8cf51cb6-eb65-4acc-a525-82a150dd6d74"]
}, Open  ]],
Cell[CellGroupData[{
Cell[659121, 14083, 429, 11, 29, "Input",ExpressionUUID->"b3152bcb-d96d-4e67-92be-629aaff80532"],
Cell[659553, 14096, 449, 9, 53, "Output",ExpressionUUID->"68b88c7c-0a85-43fd-b4c9-c5142401fcb1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[660039, 14110, 775, 21, 90, "Input",ExpressionUUID->"96456130-ac5d-4257-9886-499d2a248d15"],
Cell[660817, 14133, 428, 7, 72, "Output",ExpressionUUID->"d9d66075-e7bc-47ce-9cc2-67d9305b8974"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

