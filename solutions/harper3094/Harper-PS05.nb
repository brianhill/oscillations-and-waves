(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Wolfram 14.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       154,          7]
NotebookDataLength[    784682,      18755]
NotebookOptionsPosition[    776336,      18603]
NotebookOutlinePosition[    776776,      18620]
CellTagsIndexPosition[    776733,      18617]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Harper \[LongDash] PS 5 \[LongDash] 2025-02-04", "Chapter",
 CellChangeTimes->{{3.94603239329452*^9, 3.946032405235992*^9}, {
  3.9460325144086237`*^9, 3.9460325192545357`*^9}, {3.946032578714118*^9, 
  3.946032582897043*^9}, {3.9461182742980757`*^9, 3.9461182790035133`*^9}, {
  3.946120625958103*^9, 3.946120626965159*^9}, {3.946121000882886*^9, 
  3.946121003848235*^9}, {3.946467948549028*^9, 3.94646794865044*^9}, {
  3.947155113615439*^9, 3.947155117919608*^9}, {3.947673545035244*^9, 
  3.9476735475927267`*^9}, {3.9476796455348377`*^9, 3.947679645626706*^9}, {
  3.9483692662287283`*^9, 3.948369272034383*^9}, {3.948369322375505*^9, 
  3.948369323228047*^9}},ExpressionUUID->"7c6914ce-f26c-40f3-ab51-\
c6be96319572"],

Cell[TextData[{
 StyleBox["EIWL3",
  FontSlant->"Italic"],
 " Sections 14 and 17"
}], "Subtitle",
 CellChangeTimes->{{3.947726528318758*^9, 3.947726533595436*^9}, 
   3.947726589951635*^9},ExpressionUUID->"cc26ccbc-35cf-487a-b4ec-\
eec16aae75a3"],

Cell["Section 14", "Subtitle",
 CellChangeTimes->{{3.947498195464534*^9, 
  3.947498197416916*^9}},ExpressionUUID->"304598fe-4c66-4bf8-b7da-\
9a9a480f12fe"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Circle", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}], ",", "r"}], "]"}], ",", "5", ",", 
    RowBox[{"{", 
     RowBox[{"r", ",", "1", ",", "5", ",", "1"}], "}"}]}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.947498421538218*^9, 3.947498470011035*^9}},
 CellLabel->
  "In[105]:=",ExpressionUUID->"9d9ee833-cf35-44c1-9c4e-b450a15a20ec"],

Cell[BoxData[
 GraphicsBox[{{CircleBox[{0, 0}, 1], CircleBox[{0, 0}, 2], 
    CircleBox[{0, 0}, 3], CircleBox[{0, 0}, 4], CircleBox[{0, 0}, 5]}, {
    CircleBox[{0, 0}, 1], CircleBox[{0, 0}, 2], CircleBox[{0, 0}, 3], 
    CircleBox[{0, 0}, 4], CircleBox[{0, 0}, 5]}, {CircleBox[{0, 0}, 1], 
    CircleBox[{0, 0}, 2], CircleBox[{0, 0}, 3], CircleBox[{0, 0}, 4], 
    CircleBox[{0, 0}, 5]}, {CircleBox[{0, 0}, 1], CircleBox[{0, 0}, 2], 
    CircleBox[{0, 0}, 3], CircleBox[{0, 0}, 4], CircleBox[{0, 0}, 5]}, {
    CircleBox[{0, 0}, 1], CircleBox[{0, 0}, 2], CircleBox[{0, 0}, 3], 
    CircleBox[{0, 0}, 4], CircleBox[{0, 0}, 5]}}]], "Output",
 CellChangeTimes->{3.947498470467099*^9, 3.948370701845106*^9},
 CellLabel->
  "Out[105]=",ExpressionUUID->"5779bad5-dd73-4e62-8253-b7a6a7e2e916"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Style", "[", 
     RowBox[{
      RowBox[{"Circle", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", "r"}], "]"}], ",", 
      RowBox[{"RandomColor", "[", "]"}]}], "]"}], ",", "5", ",", 
    RowBox[{"{", 
     RowBox[{"r", ",", "1", ",", "5", ",", "1"}], "}"}]}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.947498483452917*^9, 3.947498624882477*^9}, {
  3.9475296569994698`*^9, 3.947529898689636*^9}},
 CellLabel->
  "In[106]:=",ExpressionUUID->"e2f747f6-b7e8-4ebc-8c84-91fae8e80c5c"],

Cell[BoxData[
 GraphicsBox[{{
    {RGBColor[0.783622198309029, 0.23659983296807785`, 0.0886464503388853], 
     CircleBox[{0, 0}, 1]}, 
    {RGBColor[0.8671604040993719, 0.5219863194810885, 0.9759392660994015], 
     CircleBox[{0, 0}, 2]}, 
    {RGBColor[0.31035141950783673`, 0.48813533883409144`, 0.6613499151136324],
      CircleBox[{0, 0}, 3]}, 
    {RGBColor[0.18287546391786136`, 0.7283181018197176, 0.7088797214530651], 
     CircleBox[{0, 0}, 4]}, 
    {RGBColor[0.9794207526897647, 0.9109896397387547, 0.13254424273988552`], 
     CircleBox[{0, 0}, 5]}}, {
    {RGBColor[0.7905392018728232, 0.2212512489718017, 0.4029627774428599], 
     CircleBox[{0, 0}, 1]}, 
    {RGBColor[0.25357277704146775`, 0.9040340209334798, 0.6302632212113419], 
     CircleBox[{0, 0}, 2]}, 
    {RGBColor[0.5148325460133241, 0.8676199354260177, 0.38823506110474404`], 
     CircleBox[{0, 0}, 3]}, 
    {RGBColor[0.8539866416053148, 0.5037525235060418, 0.006358848310619836], 
     CircleBox[{0, 0}, 4]}, 
    {RGBColor[0.6228421438817784, 0.790384927759231, 0.8959452554143366], 
     CircleBox[{0, 0}, 5]}}, {
    {RGBColor[0.43521996646810646`, 0.7184235966110586, 0.802737377174769], 
     CircleBox[{0, 0}, 1]}, 
    {RGBColor[0.3355314628720514, 0.18036564139325506`, 0.2943735706317352], 
     CircleBox[{0, 0}, 2]}, 
    {RGBColor[0.28315715834319954`, 0.2982026551199992, 0.13771660962290344`],
      CircleBox[{0, 0}, 3]}, 
    {RGBColor[0.22012305670068533`, 0.39551019492098605`, 0.7834234464128156],
      CircleBox[{0, 0}, 4]}, 
    {RGBColor[0.40874898008119565`, 0.9147448838231631, 0.7013176215544945], 
     CircleBox[{0, 0}, 5]}}, {
    {RGBColor[
     0.0036987200866898107`, 0.25205148648072884`, 0.6104636216436337], 
     CircleBox[{0, 0}, 1]}, 
    {RGBColor[0.41925320462635485`, 0.9129331818655593, 0.7371109280589256], 
     CircleBox[{0, 0}, 2]}, 
    {RGBColor[0.2603412849866531, 0.09399461202992776, 0.17592091468867244`], 
     CircleBox[{0, 0}, 3]}, 
    {RGBColor[0.9545847127552167, 0.8016256035365619, 0.33888778084025706`], 
     CircleBox[{0, 0}, 4]}, 
    {RGBColor[0.9239781698564398, 0.9274287973360511, 0.9202303584839155], 
     CircleBox[{0, 0}, 5]}}, {
    {RGBColor[0.9409418710163271, 0.8790986066577295, 0.3211977840212086], 
     CircleBox[{0, 0}, 1]}, 
    {RGBColor[0.9546072930875753, 0.6533496138858297, 0.20707446963034193`], 
     CircleBox[{0, 0}, 2]}, 
    {RGBColor[0.8499089149284493, 0.7643545030476979, 0.2990330409383213], 
     CircleBox[{0, 0}, 3]}, 
    {RGBColor[0.14188848642119867`, 0.9574733630815215, 0.49346839721353675`],
      CircleBox[{0, 0}, 4]}, 
    {RGBColor[0.64969310632393, 0.4712416240840689, 0.1729374114864648], 
     CircleBox[{0, 0}, 5]}}}]], "Output",
 CellChangeTimes->{
  3.947498543385291*^9, {3.947498613239106*^9, 3.947498625139193*^9}, {
   3.947529705383984*^9, 3.9475297506368113`*^9}, {3.947529804026767*^9, 
   3.9475298446510963`*^9}, {3.94752988998575*^9, 3.947529900591216*^9}, 
   3.94837070186097*^9},
 CellLabel->
  "Out[106]=",ExpressionUUID->"6d0ac2d7-c765-4f05-8f9e-9d91c68626fb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Circle", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "y"}], "}"}], ",", "1"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "1", ",", "10", ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", "1", ",", "10", ",", "1"}], "}"}]}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.9475299679804363`*^9, 3.947530012830833*^9}},
 CellLabel->
  "In[107]:=",ExpressionUUID->"9474d18c-f378-4c91-bb7a-54817aa779ba"],

Cell[BoxData[
 GraphicsBox[{{CircleBox[{1, 1}, 1], CircleBox[{1, 2}, 1], 
    CircleBox[{1, 3}, 1], CircleBox[{1, 4}, 1], CircleBox[{1, 5}, 1], 
    CircleBox[{1, 6}, 1], CircleBox[{1, 7}, 1], CircleBox[{1, 8}, 1], 
    CircleBox[{1, 9}, 1], CircleBox[{1, 10}, 1]}, {CircleBox[{2, 1}, 1], 
    CircleBox[{2, 2}, 1], CircleBox[{2, 3}, 1], CircleBox[{2, 4}, 1], 
    CircleBox[{2, 5}, 1], CircleBox[{2, 6}, 1], CircleBox[{2, 7}, 1], 
    CircleBox[{2, 8}, 1], CircleBox[{2, 9}, 1], CircleBox[{2, 10}, 1]}, {
    CircleBox[{3, 1}, 1], CircleBox[{3, 2}, 1], CircleBox[{3, 3}, 1], 
    CircleBox[{3, 4}, 1], CircleBox[{3, 5}, 1], CircleBox[{3, 6}, 1], 
    CircleBox[{3, 7}, 1], CircleBox[{3, 8}, 1], CircleBox[{3, 9}, 1], 
    CircleBox[{3, 10}, 1]}, {CircleBox[{4, 1}, 1], CircleBox[{4, 2}, 1], 
    CircleBox[{4, 3}, 1], CircleBox[{4, 4}, 1], CircleBox[{4, 5}, 1], 
    CircleBox[{4, 6}, 1], CircleBox[{4, 7}, 1], CircleBox[{4, 8}, 1], 
    CircleBox[{4, 9}, 1], CircleBox[{4, 10}, 1]}, {CircleBox[{5, 1}, 1], 
    CircleBox[{5, 2}, 1], CircleBox[{5, 3}, 1], CircleBox[{5, 4}, 1], 
    CircleBox[{5, 5}, 1], CircleBox[{5, 6}, 1], CircleBox[{5, 7}, 1], 
    CircleBox[{5, 8}, 1], CircleBox[{5, 9}, 1], CircleBox[{5, 10}, 1]}, {
    CircleBox[{6, 1}, 1], CircleBox[{6, 2}, 1], CircleBox[{6, 3}, 1], 
    CircleBox[{6, 4}, 1], CircleBox[{6, 5}, 1], CircleBox[{6, 6}, 1], 
    CircleBox[{6, 7}, 1], CircleBox[{6, 8}, 1], CircleBox[{6, 9}, 1], 
    CircleBox[{6, 10}, 1]}, {CircleBox[{7, 1}, 1], CircleBox[{7, 2}, 1], 
    CircleBox[{7, 3}, 1], CircleBox[{7, 4}, 1], CircleBox[{7, 5}, 1], 
    CircleBox[{7, 6}, 1], CircleBox[{7, 7}, 1], CircleBox[{7, 8}, 1], 
    CircleBox[{7, 9}, 1], CircleBox[{7, 10}, 1]}, {CircleBox[{8, 1}, 1], 
    CircleBox[{8, 2}, 1], CircleBox[{8, 3}, 1], CircleBox[{8, 4}, 1], 
    CircleBox[{8, 5}, 1], CircleBox[{8, 6}, 1], CircleBox[{8, 7}, 1], 
    CircleBox[{8, 8}, 1], CircleBox[{8, 9}, 1], CircleBox[{8, 10}, 1]}, {
    CircleBox[{9, 1}, 1], CircleBox[{9, 2}, 1], CircleBox[{9, 3}, 1], 
    CircleBox[{9, 4}, 1], CircleBox[{9, 5}, 1], CircleBox[{9, 6}, 1], 
    CircleBox[{9, 7}, 1], CircleBox[{9, 8}, 1], CircleBox[{9, 9}, 1], 
    CircleBox[{9, 10}, 1]}, {CircleBox[{10, 1}, 1], CircleBox[{10, 2}, 1], 
    CircleBox[{10, 3}, 1], CircleBox[{10, 4}, 1], CircleBox[{10, 5}, 1], 
    CircleBox[{10, 6}, 1], CircleBox[{10, 7}, 1], CircleBox[{10, 8}, 1], 
    CircleBox[{10, 9}, 1], CircleBox[{10, 10}, 1]}}]], "Output",
 CellChangeTimes->{3.947530014064597*^9, 3.948370701865498*^9},
 CellLabel->
  "Out[107]=",ExpressionUUID->"3702254c-7355-4697-99da-a4575fc4e752"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Point", "[", 
     RowBox[{"{", 
      RowBox[{"x", ",", "y"}], "}"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "1", ",", "10", ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", "1", ",", "10", ",", "1"}], "}"}]}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.9475300457398148`*^9, 3.947530077189557*^9}},
 CellLabel->
  "In[108]:=",ExpressionUUID->"14601e26-ae36-405c-aad3-dfba22c7a382"],

Cell[BoxData[
 GraphicsBox[{{PointBox[{1, 1}], PointBox[{1, 2}], PointBox[{1, 3}], 
    PointBox[{1, 4}], PointBox[{1, 5}], PointBox[{1, 6}], PointBox[{1, 7}], 
    PointBox[{1, 8}], PointBox[{1, 9}], PointBox[{1, 10}]}, {PointBox[{2, 1}],
     PointBox[{2, 2}], PointBox[{2, 3}], PointBox[{2, 4}], PointBox[{2, 5}], 
    PointBox[{2, 6}], PointBox[{2, 7}], PointBox[{2, 8}], PointBox[{2, 9}], 
    PointBox[{2, 10}]}, {PointBox[{3, 1}], PointBox[{3, 2}], PointBox[{3, 3}],
     PointBox[{3, 4}], PointBox[{3, 5}], PointBox[{3, 6}], PointBox[{3, 7}], 
    PointBox[{3, 8}], PointBox[{3, 9}], PointBox[{3, 10}]}, {PointBox[{4, 1}],
     PointBox[{4, 2}], PointBox[{4, 3}], PointBox[{4, 4}], PointBox[{4, 5}], 
    PointBox[{4, 6}], PointBox[{4, 7}], PointBox[{4, 8}], PointBox[{4, 9}], 
    PointBox[{4, 10}]}, {PointBox[{5, 1}], PointBox[{5, 2}], PointBox[{5, 3}],
     PointBox[{5, 4}], PointBox[{5, 5}], PointBox[{5, 6}], PointBox[{5, 7}], 
    PointBox[{5, 8}], PointBox[{5, 9}], PointBox[{5, 10}]}, {PointBox[{6, 1}],
     PointBox[{6, 2}], PointBox[{6, 3}], PointBox[{6, 4}], PointBox[{6, 5}], 
    PointBox[{6, 6}], PointBox[{6, 7}], PointBox[{6, 8}], PointBox[{6, 9}], 
    PointBox[{6, 10}]}, {PointBox[{7, 1}], PointBox[{7, 2}], PointBox[{7, 3}],
     PointBox[{7, 4}], PointBox[{7, 5}], PointBox[{7, 6}], PointBox[{7, 7}], 
    PointBox[{7, 8}], PointBox[{7, 9}], PointBox[{7, 10}]}, {PointBox[{8, 1}],
     PointBox[{8, 2}], PointBox[{8, 3}], PointBox[{8, 4}], PointBox[{8, 5}], 
    PointBox[{8, 6}], PointBox[{8, 7}], PointBox[{8, 8}], PointBox[{8, 9}], 
    PointBox[{8, 10}]}, {PointBox[{9, 1}], PointBox[{9, 2}], PointBox[{9, 3}],
     PointBox[{9, 4}], PointBox[{9, 5}], PointBox[{9, 6}], PointBox[{9, 7}], 
    PointBox[{9, 8}], PointBox[{9, 9}], PointBox[{9, 10}]}, {
    PointBox[{10, 1}], PointBox[{10, 2}], PointBox[{10, 3}], 
    PointBox[{10, 4}], PointBox[{10, 5}], PointBox[{10, 6}], 
    PointBox[{10, 7}], PointBox[{10, 8}], PointBox[{10, 9}], 
    PointBox[{10, 10}]}}]], "Output",
 CellChangeTimes->{{3.947530065600779*^9, 3.947530077419898*^9}, 
   3.948370701870984*^9},
 CellLabel->
  "Out[108]=",ExpressionUUID->"733a1cba-c9d8-4f76-91e0-3c6cfbba783b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Graphics", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Circle", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", "x"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "n"}], "}"}]}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "1", ",", "20", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9475301166378307`*^9, 3.9475302196123753`*^9}, {
  3.9475302764849043`*^9, 3.947530314610487*^9}, {3.947530756418901*^9, 
  3.947530803749419*^9}},
 CellLabel->
  "In[109]:=",ExpressionUUID->"417bbf2d-1f32-4a86-a00b-e603392666bb"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`n$$ = 1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`n$$], 1, 20, 1, ControlType -> Manipulator}}, 
    Typeset`size$$ = {450., {221.0583415039062, 228.2232584960937}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = True, 
    Typeset`keyframeActionsQ$$ = False, Typeset`keyframeList$$ = {}}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`n$$ = 1}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$, Typeset`keyframeActionsQ$$, 
        Typeset`keyframeList$$}, "Body" :> Graphics[
        Table[
         Circle[{0, 0}, $CellContext`x], {$CellContext`x, $CellContext`n$$}]],
       "Specifications" :> {{$CellContext`n$$, 1, 20, 1}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{509.375, {279.64637327270503`, 286.81129026489253`}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.947530208358349*^9, 3.947530220838687*^9}, {
   3.947530299727787*^9, 3.947530315334426*^9}, 3.947530804133093*^9, 
   3.9483707018774633`*^9},
 CellLabel->
  "Out[109]=",ExpressionUUID->"ede866b4-9eb3-4672-81cb-05251a966da8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics3D", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Style", "[", 
     RowBox[{
      RowBox[{"Sphere", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"RandomInteger", "[", "10", "]"}], ",", 
         RowBox[{"RandomInteger", "[", "10", "]"}], ",", 
         RowBox[{"RandomInteger", "[", "10", "]"}]}], "}"}], "]"}], ",", 
      RowBox[{"RandomColor", "[", "]"}]}], "]"}], ",", "50"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.947530945214753*^9, 3.947531064177376*^9}},
 CellLabel->
  "In[110]:=",ExpressionUUID->"07aea1a1-59f8-4e31-b6f4-6dedae05c5e1"],

Cell[BoxData[
 Graphics3DBox[{
   {RGBColor[0.42776347189963815`, 0.5356660599266285, 0.018460835588138158`],
     SphereBox[{7, 6, 9}]}, 
   {RGBColor[0.7714935930539781, 0.543472592388633, 0.568914186436813], 
    SphereBox[{2, 8, 6}]}, 
   {RGBColor[0.5390855211708949, 0.976179282008681, 0.7548523691720321], 
    SphereBox[{2, 1, 5}]}, 
   {RGBColor[0.8192763931433955, 0.6609146533165073, 0.49022830359845915`], 
    SphereBox[{3, 5, 9}]}, 
   {RGBColor[0.07387224536735171, 0.023913693766093314`, 0.811987007468693], 
    SphereBox[{4, 8, 0}]}, 
   {RGBColor[0.16276846892806618`, 0.43064488287022096`, 0.407810462466176], 
    SphereBox[{10, 9, 6}]}, 
   {RGBColor[0.5419222700910238, 0.47347943242805535`, 0.8858014252945439], 
    SphereBox[{10, 2, 5}]}, 
   {RGBColor[0.6554997444729944, 0.10366408554559992`, 0.11409914867229709`], 
    SphereBox[{10, 2, 5}]}, 
   {RGBColor[0.12802793821975733`, 0.6590244105571856, 0.9441933630752224], 
    SphereBox[{0, 0, 8}]}, 
   {RGBColor[0.14615136988102861`, 0.8341147068647343, 0.25674054713475436`], 
    SphereBox[{4, 7, 0}]}, 
   {RGBColor[0.5136952456223067, 0.10004008880477988`, 0.42554794240248794`], 
    SphereBox[{0, 8, 9}]}, 
   {RGBColor[0.3562418461911059, 0.2878222830534991, 0.10667200897139684`], 
    SphereBox[{6, 7, 9}]}, 
   {RGBColor[0.03910491567059893, 0.004745703879293073, 0.6879585525230345], 
    SphereBox[{10, 8, 7}]}, 
   {RGBColor[0.6365862414458805, 0.4227723637046852, 0.4551777577097935], 
    SphereBox[{1, 4, 6}]}, 
   {RGBColor[0.759983107196528, 0.8835403869497656, 0.019926187470969747`], 
    SphereBox[{2, 3, 3}]}, 
   {RGBColor[0.9696887124393028, 0.12462888098833669`, 0.5643640882151004], 
    SphereBox[{8, 1, 1}]}, 
   {RGBColor[0.7012416247438444, 0.774911853494568, 0.36265027233218605`], 
    SphereBox[{3, 2, 3}]}, 
   {RGBColor[0.07469210181118213, 0.7941919855914414, 0.9057246461944961], 
    SphereBox[{8, 4, 4}]}, 
   {RGBColor[0.1803385464958387, 0.7000098424144381, 0.8355018582304543], 
    SphereBox[{10, 6, 7}]}, 
   {RGBColor[
    0.10129266450323327`, 0.31153057691705066`, 0.15218688399065994`], 
    SphereBox[{10, 10, 5}]}, 
   {RGBColor[0.6125310829044373, 0.15690031663604698`, 0.6758289825947161], 
    SphereBox[{6, 5, 8}]}, 
   {RGBColor[0.1924107086405753, 0.1664623495080677, 0.37540924690339983`], 
    SphereBox[{8, 0, 3}]}, 
   {RGBColor[0.9579662965228619, 0.9150663689788032, 0.738552501536005], 
    SphereBox[{3, 1, 9}]}, 
   {RGBColor[0.9917983433446274, 0.9924065036921024, 0.009415749179538357], 
    SphereBox[{2, 7, 10}]}, 
   {RGBColor[0.8345062607512657, 0.9907473857079034, 0.6676193806061352], 
    SphereBox[{4, 6, 7}]}, 
   {RGBColor[0.798514681729912, 0.14062158770377664`, 0.1266110084839529], 
    SphereBox[{7, 3, 2}]}, 
   {RGBColor[0.1718481713068425, 0.9469260925744745, 0.6461351279452625], 
    SphereBox[{9, 1, 5}]}, 
   {RGBColor[0.4634577934844706, 0.9504949590225305, 0.488430791230849], 
    SphereBox[{4, 3, 9}]}, 
   {RGBColor[0.7700118203937747, 0.9444608271510762, 0.8065224870638195], 
    SphereBox[{2, 4, 0}]}, 
   {RGBColor[0.11998876928177049`, 0.3220012975489188, 0.9347134161827444], 
    SphereBox[{1, 8, 4}]}, 
   {RGBColor[0.5136204258646213, 0.9148942354192551, 0.8836297723944149], 
    SphereBox[{5, 1, 10}]}, 
   {RGBColor[0.5715431385626091, 0.5686707246301745, 0.4648167669477292], 
    SphereBox[{0, 7, 8}]}, 
   {RGBColor[0.9756923224785663, 0.9518775160587232, 0.7138830361373625], 
    SphereBox[{7, 7, 0}]}, 
   {RGBColor[0.39157916431809725`, 0.3792016972999832, 0.3096667167054614], 
    SphereBox[{9, 5, 3}]}, 
   {RGBColor[0.6517374345892077, 0.38881740965831924`, 0.8758841258369467], 
    SphereBox[{2, 6, 7}]}, 
   {RGBColor[0.21970584248707836`, 0.8910234678300817, 0.15673231863275805`], 
    SphereBox[{5, 8, 4}]}, 
   {RGBColor[0.12007016425155759`, 0.7269381691019909, 0.7098424576619793], 
    SphereBox[{7, 4, 2}]}, 
   {RGBColor[0.49362305263624995`, 0.8556579055564348, 0.022876097331419043`],
     SphereBox[{6, 6, 7}]}, 
   {RGBColor[0.8896440778704982, 0.4941824815346796, 0.9436275459474888], 
    SphereBox[{9, 9, 2}]}, 
   {RGBColor[0.7637016245046073, 0.4858318575547993, 0.36866180114220337`], 
    SphereBox[{7, 8, 8}]}, 
   {RGBColor[0.8736349386162334, 0.6106402098972776, 0.2621172172032489], 
    SphereBox[{0, 8, 5}]}, 
   {RGBColor[0.6331169589263883, 0.867760625420311, 0.8236999865244439], 
    SphereBox[{9, 5, 7}]}, 
   {RGBColor[0.2968703268123547, 0.29579551562307427`, 0.14305736850030315`], 
    SphereBox[{3, 9, 2}]}, 
   {RGBColor[0.8073968025736411, 0.26471139966604507`, 0.49594563588642204`], 
    SphereBox[{4, 2, 8}]}, 
   {RGBColor[0.9937075033932663, 0.49560620083161666`, 0.8583619993670681], 
    SphereBox[{3, 5, 5}]}, 
   {RGBColor[0.17159588664980352`, 0.9971808466932479, 0.7947578719162247], 
    SphereBox[{2, 5, 9}]}, 
   {RGBColor[0.6428168750760508, 0.0011858856869704226`, 0.6087202456531233], 
    SphereBox[{8, 4, 2}]}, 
   {RGBColor[0.7010962605477749, 0.8341092243644739, 0.6561342140175073], 
    SphereBox[{9, 1, 9}]}, 
   {RGBColor[0.6639255868730505, 0.042301373415318144`, 0.15316889710727488`],
     SphereBox[{0, 6, 4}]}, 
   {RGBColor[0.4004693312215528, 0.8553287352206929, 0.6671457560215812], 
    SphereBox[{3, 9, 3}]}}]], "Output",
 CellChangeTimes->{3.947531007156941*^9, 3.9475310652213707`*^9, 
  3.948370701951941*^9},
 CellLabel->
  "Out[110]=",ExpressionUUID->"65f07d01-8c06-4924-8929-80c94bf5fc8b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Graphics3D", "[", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Style", "[", 
      RowBox[{
       RowBox[{"Sphere", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"x", ",", "y", ",", "z"}], "}"}], ",", "0.5"}], "]"}], ",", 
       
       RowBox[{"RGBColor", "[", 
        RowBox[{"r", ",", "g", ",", "b"}], "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "1", ",", "11", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "1", ",", "11", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"z", ",", "1", ",", "11", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", "0", ",", "1", ",", "0.1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"g", ",", "0", ",", "1", ",", "0.1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"b", ",", "0", ",", "1", ",", "0.1"}], "}"}]}], "]"}], "]"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.947531153011846*^9, 3.9475311642936296`*^9}, {
   3.9475312213591223`*^9, 3.947531316490156*^9}, {3.947531362374578*^9, 
   3.9475313945848494`*^9}, 
   3.948370739039343*^9},ExpressionUUID->"f1cf1704-8b7b-447d-989f-\
123eb6b73da3"],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.948370731664309*^9},
 CellLabel->
  "Out[111]=",ExpressionUUID->"0dce373c-d11c-4691-adff-1b9cc5816b2b"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "I", " ", "cannot", " ", "figure", " ", "out", " ", "how", " ", "to", " ", 
   "do", " ", "this", " ", "one"}], "*)"}]], "Input",
 CellChangeTimes->{{3.947531546760056*^9, 
  3.9475315696082687`*^9}},ExpressionUUID->"ea4b94b7-f35a-4f2f-9d75-\
1cf8287c4368"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"Here", " ", "is", " ", "my", " ", "14.7"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.947531546760056*^9, 3.9475315696082687`*^9}, {
  3.948370775989381*^9, 
  3.948370780158185*^9}},ExpressionUUID->"691f90a7-d401-471d-81f2-\
9e48889c1494"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "14.7", " ", "*)"}], " ", 
  RowBox[{"Graphics3D", "[", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Style", "[", 
      RowBox[{
       RowBox[{"Sphere", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"x", ",", "y", ",", "z"}], "}"}], ",", 
         RowBox[{"1", "/", "2"}]}], "]"}], ",", 
       RowBox[{"RGBColor", "[", 
        RowBox[{
         RowBox[{"x", "/", "10"}], ",", 
         RowBox[{"y", "/", "10"}], ",", 
         RowBox[{"z", "/", "10"}]}], "]"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "10"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "0", ",", "10"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"z", ",", "0", ",", "10"}], "}"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.947675090896965*^9, 3.947675108186764*^9}, {
  3.947675165481762*^9, 3.94767523301003*^9}, {3.947675276602693*^9, 
  3.947675426997992*^9}, {3.947675458581073*^9, 3.947675600842928*^9}},
 CellLabel->
  "In[112]:=",ExpressionUUID->"42c71d04-de1e-4117-a008-186989f90536"],

Cell[BoxData[
 Graphics3DBox[{{{
     {RGBColor[0, 0, 0], SphereBox[{0, 0, 0}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[0, 0, 
       NCache[
        Rational[1, 10], 0.1]], 
      SphereBox[{0, 0, 1}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[0, 0, 
       NCache[
        Rational[1, 5], 0.2]], 
      SphereBox[{0, 0, 2}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[0, 0, 
       NCache[
        Rational[3, 10], 0.3]], 
      SphereBox[{0, 0, 3}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[0, 0, 
       NCache[
        Rational[2, 5], 0.4]], 
      SphereBox[{0, 0, 4}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[0, 0, 
       NCache[
        Rational[1, 2], 0.5]], 
      SphereBox[{0, 0, 5}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[0, 0, 
       NCache[
        Rational[3, 5], 0.6]], 
      SphereBox[{0, 0, 6}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[0, 0, 
       NCache[
        Rational[7, 10], 0.7]], 
      SphereBox[{0, 0, 7}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[0, 0, 
       NCache[
        Rational[4, 5], 0.8]], 
      SphereBox[{0, 0, 8}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[0, 0, 
       NCache[
        Rational[9, 10], 0.9]], 
      SphereBox[{0, 0, 9}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[0, 0, 1], 
      SphereBox[{0, 0, 10}, NCache[Rational[1, 2], 0.5]]}}, {
     {RGBColor[0, 
       NCache[
        Rational[1, 10], 0.1], 0], 
      SphereBox[{0, 1, 0}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[0, 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[1, 10], 0.1]], 
      SphereBox[{0, 1, 1}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[0, 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[1, 5], 0.2]], 
      SphereBox[{0, 1, 2}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[0, 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[3, 10], 0.3]], 
      SphereBox[{0, 1, 3}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[0, 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[2, 5], 0.4]], 
      SphereBox[{0, 1, 4}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[0, 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[1, 2], 0.5]], 
      SphereBox[{0, 1, 5}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[0, 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[3, 5], 0.6]], 
      SphereBox[{0, 1, 6}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[0, 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[7, 10], 0.7]], 
      SphereBox[{0, 1, 7}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[0, 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[4, 5], 0.8]], 
      SphereBox[{0, 1, 8}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[0, 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[9, 10], 0.9]], 
      SphereBox[{0, 1, 9}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[0, 
       NCache[
        Rational[1, 10], 0.1], 1], 
      SphereBox[{0, 1, 10}, NCache[Rational[1, 2], 0.5]]}}, {
     {RGBColor[0, 
       NCache[
        Rational[1, 5], 0.2], 0], 
      SphereBox[{0, 2, 0}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[0, 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[1, 10], 0.1]], 
      SphereBox[{0, 2, 1}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[0, 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[1, 5], 0.2]], 
      SphereBox[{0, 2, 2}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[0, 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[3, 10], 0.3]], 
      SphereBox[{0, 2, 3}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[0, 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[2, 5], 0.4]], 
      SphereBox[{0, 2, 4}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[0, 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[1, 2], 0.5]], 
      SphereBox[{0, 2, 5}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[0, 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[3, 5], 0.6]], 
      SphereBox[{0, 2, 6}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[0, 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[7, 10], 0.7]], 
      SphereBox[{0, 2, 7}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[0, 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[4, 5], 0.8]], 
      SphereBox[{0, 2, 8}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[0, 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[9, 10], 0.9]], 
      SphereBox[{0, 2, 9}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[0, 
       NCache[
        Rational[1, 5], 0.2], 1], 
      SphereBox[{0, 2, 10}, NCache[Rational[1, 2], 0.5]]}}, {
     {RGBColor[0, 
       NCache[
        Rational[3, 10], 0.3], 0], 
      SphereBox[{0, 3, 0}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[0, 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[1, 10], 0.1]], 
      SphereBox[{0, 3, 1}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[0, 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[1, 5], 0.2]], 
      SphereBox[{0, 3, 2}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[0, 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[3, 10], 0.3]], 
      SphereBox[{0, 3, 3}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[0, 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[2, 5], 0.4]], 
      SphereBox[{0, 3, 4}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[0, 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[1, 2], 0.5]], 
      SphereBox[{0, 3, 5}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[0, 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[3, 5], 0.6]], 
      SphereBox[{0, 3, 6}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[0, 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[7, 10], 0.7]], 
      SphereBox[{0, 3, 7}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[0, 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[4, 5], 0.8]], 
      SphereBox[{0, 3, 8}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[0, 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[9, 10], 0.9]], 
      SphereBox[{0, 3, 9}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[0, 
       NCache[
        Rational[3, 10], 0.3], 1], 
      SphereBox[{0, 3, 10}, NCache[Rational[1, 2], 0.5]]}}, {
     {RGBColor[0, 
       NCache[
        Rational[2, 5], 0.4], 0], 
      SphereBox[{0, 4, 0}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[0, 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[1, 10], 0.1]], 
      SphereBox[{0, 4, 1}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[0, 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[1, 5], 0.2]], 
      SphereBox[{0, 4, 2}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[0, 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[3, 10], 0.3]], 
      SphereBox[{0, 4, 3}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[0, 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[2, 5], 0.4]], 
      SphereBox[{0, 4, 4}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[0, 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[1, 2], 0.5]], 
      SphereBox[{0, 4, 5}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[0, 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[3, 5], 0.6]], 
      SphereBox[{0, 4, 6}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[0, 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[7, 10], 0.7]], 
      SphereBox[{0, 4, 7}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[0, 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[4, 5], 0.8]], 
      SphereBox[{0, 4, 8}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[0, 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[9, 10], 0.9]], 
      SphereBox[{0, 4, 9}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[0, 
       NCache[
        Rational[2, 5], 0.4], 1], 
      SphereBox[{0, 4, 10}, NCache[Rational[1, 2], 0.5]]}}, {
     {RGBColor[0, 
       NCache[
        Rational[1, 2], 0.5], 0], 
      SphereBox[{0, 5, 0}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[0, 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[1, 10], 0.1]], 
      SphereBox[{0, 5, 1}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[0, 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[1, 5], 0.2]], 
      SphereBox[{0, 5, 2}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[0, 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[3, 10], 0.3]], 
      SphereBox[{0, 5, 3}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[0, 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[2, 5], 0.4]], 
      SphereBox[{0, 5, 4}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[0, 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[1, 2], 0.5]], 
      SphereBox[{0, 5, 5}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[0, 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[3, 5], 0.6]], 
      SphereBox[{0, 5, 6}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[0, 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[7, 10], 0.7]], 
      SphereBox[{0, 5, 7}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[0, 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[4, 5], 0.8]], 
      SphereBox[{0, 5, 8}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[0, 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[9, 10], 0.9]], 
      SphereBox[{0, 5, 9}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[0, 
       NCache[
        Rational[1, 2], 0.5], 1], 
      SphereBox[{0, 5, 10}, NCache[Rational[1, 2], 0.5]]}}, {
     {RGBColor[0, 
       NCache[
        Rational[3, 5], 0.6], 0], 
      SphereBox[{0, 6, 0}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[0, 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[1, 10], 0.1]], 
      SphereBox[{0, 6, 1}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[0, 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[1, 5], 0.2]], 
      SphereBox[{0, 6, 2}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[0, 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[3, 10], 0.3]], 
      SphereBox[{0, 6, 3}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[0, 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[2, 5], 0.4]], 
      SphereBox[{0, 6, 4}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[0, 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[1, 2], 0.5]], 
      SphereBox[{0, 6, 5}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[0, 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[3, 5], 0.6]], 
      SphereBox[{0, 6, 6}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[0, 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[7, 10], 0.7]], 
      SphereBox[{0, 6, 7}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[0, 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[4, 5], 0.8]], 
      SphereBox[{0, 6, 8}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[0, 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[9, 10], 0.9]], 
      SphereBox[{0, 6, 9}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[0, 
       NCache[
        Rational[3, 5], 0.6], 1], 
      SphereBox[{0, 6, 10}, NCache[Rational[1, 2], 0.5]]}}, {
     {RGBColor[0, 
       NCache[
        Rational[7, 10], 0.7], 0], 
      SphereBox[{0, 7, 0}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[0, 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[1, 10], 0.1]], 
      SphereBox[{0, 7, 1}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[0, 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[1, 5], 0.2]], 
      SphereBox[{0, 7, 2}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[0, 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[3, 10], 0.3]], 
      SphereBox[{0, 7, 3}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[0, 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[2, 5], 0.4]], 
      SphereBox[{0, 7, 4}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[0, 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[1, 2], 0.5]], 
      SphereBox[{0, 7, 5}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[0, 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[3, 5], 0.6]], 
      SphereBox[{0, 7, 6}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[0, 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[7, 10], 0.7]], 
      SphereBox[{0, 7, 7}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[0, 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[4, 5], 0.8]], 
      SphereBox[{0, 7, 8}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[0, 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[9, 10], 0.9]], 
      SphereBox[{0, 7, 9}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[0, 
       NCache[
        Rational[7, 10], 0.7], 1], 
      SphereBox[{0, 7, 10}, NCache[Rational[1, 2], 0.5]]}}, {
     {RGBColor[0, 
       NCache[
        Rational[4, 5], 0.8], 0], 
      SphereBox[{0, 8, 0}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[0, 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[1, 10], 0.1]], 
      SphereBox[{0, 8, 1}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[0, 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[1, 5], 0.2]], 
      SphereBox[{0, 8, 2}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[0, 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[3, 10], 0.3]], 
      SphereBox[{0, 8, 3}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[0, 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[2, 5], 0.4]], 
      SphereBox[{0, 8, 4}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[0, 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[1, 2], 0.5]], 
      SphereBox[{0, 8, 5}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[0, 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[3, 5], 0.6]], 
      SphereBox[{0, 8, 6}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[0, 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[7, 10], 0.7]], 
      SphereBox[{0, 8, 7}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[0, 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[4, 5], 0.8]], 
      SphereBox[{0, 8, 8}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[0, 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[9, 10], 0.9]], 
      SphereBox[{0, 8, 9}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[0, 
       NCache[
        Rational[4, 5], 0.8], 1], 
      SphereBox[{0, 8, 10}, NCache[Rational[1, 2], 0.5]]}}, {
     {RGBColor[0, 
       NCache[
        Rational[9, 10], 0.9], 0], 
      SphereBox[{0, 9, 0}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[0, 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[1, 10], 0.1]], 
      SphereBox[{0, 9, 1}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[0, 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[1, 5], 0.2]], 
      SphereBox[{0, 9, 2}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[0, 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[3, 10], 0.3]], 
      SphereBox[{0, 9, 3}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[0, 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[2, 5], 0.4]], 
      SphereBox[{0, 9, 4}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[0, 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[1, 2], 0.5]], 
      SphereBox[{0, 9, 5}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[0, 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[3, 5], 0.6]], 
      SphereBox[{0, 9, 6}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[0, 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[7, 10], 0.7]], 
      SphereBox[{0, 9, 7}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[0, 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[4, 5], 0.8]], 
      SphereBox[{0, 9, 8}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[0, 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[9, 10], 0.9]], 
      SphereBox[{0, 9, 9}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[0, 
       NCache[
        Rational[9, 10], 0.9], 1], 
      SphereBox[{0, 9, 10}, NCache[Rational[1, 2], 0.5]]}}, {
     {RGBColor[0, 1, 0], 
      SphereBox[{0, 10, 0}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[0, 1, 
       NCache[
        Rational[1, 10], 0.1]], 
      SphereBox[{0, 10, 1}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[0, 1, 
       NCache[
        Rational[1, 5], 0.2]], 
      SphereBox[{0, 10, 2}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[0, 1, 
       NCache[
        Rational[3, 10], 0.3]], 
      SphereBox[{0, 10, 3}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[0, 1, 
       NCache[
        Rational[2, 5], 0.4]], 
      SphereBox[{0, 10, 4}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[0, 1, 
       NCache[
        Rational[1, 2], 0.5]], 
      SphereBox[{0, 10, 5}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[0, 1, 
       NCache[
        Rational[3, 5], 0.6]], 
      SphereBox[{0, 10, 6}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[0, 1, 
       NCache[
        Rational[7, 10], 0.7]], 
      SphereBox[{0, 10, 7}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[0, 1, 
       NCache[
        Rational[4, 5], 0.8]], 
      SphereBox[{0, 10, 8}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[0, 1, 
       NCache[
        Rational[9, 10], 0.9]], 
      SphereBox[{0, 10, 9}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[0, 1, 1], 
      SphereBox[{0, 10, 10}, NCache[Rational[1, 2], 0.5]]}}}, {{
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 0, 0], 
      SphereBox[{1, 0, 0}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 0, 
       NCache[
        Rational[1, 10], 0.1]], 
      SphereBox[{1, 0, 1}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 0, 
       NCache[
        Rational[1, 5], 0.2]], 
      SphereBox[{1, 0, 2}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 0, 
       NCache[
        Rational[3, 10], 0.3]], 
      SphereBox[{1, 0, 3}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 0, 
       NCache[
        Rational[2, 5], 0.4]], 
      SphereBox[{1, 0, 4}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 0, 
       NCache[
        Rational[1, 2], 0.5]], 
      SphereBox[{1, 0, 5}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 0, 
       NCache[
        Rational[3, 5], 0.6]], 
      SphereBox[{1, 0, 6}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 0, 
       NCache[
        Rational[7, 10], 0.7]], 
      SphereBox[{1, 0, 7}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 0, 
       NCache[
        Rational[4, 5], 0.8]], 
      SphereBox[{1, 0, 8}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 0, 
       NCache[
        Rational[9, 10], 0.9]], 
      SphereBox[{1, 0, 9}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 0, 1], 
      SphereBox[{1, 0, 10}, NCache[Rational[1, 2], 0.5]]}}, {
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[1, 10], 0.1], 0], 
      SphereBox[{1, 1, 0}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[1, 10], 0.1]], 
      SphereBox[{1, 1, 1}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[1, 5], 0.2]], 
      SphereBox[{1, 1, 2}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[3, 10], 0.3]], 
      SphereBox[{1, 1, 3}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[2, 5], 0.4]], 
      SphereBox[{1, 1, 4}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[1, 2], 0.5]], 
      SphereBox[{1, 1, 5}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[3, 5], 0.6]], 
      SphereBox[{1, 1, 6}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[7, 10], 0.7]], 
      SphereBox[{1, 1, 7}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[4, 5], 0.8]], 
      SphereBox[{1, 1, 8}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[9, 10], 0.9]], 
      SphereBox[{1, 1, 9}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[1, 10], 0.1], 1], 
      SphereBox[{1, 1, 10}, NCache[Rational[1, 2], 0.5]]}}, {
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[1, 5], 0.2], 0], 
      SphereBox[{1, 2, 0}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[1, 10], 0.1]], 
      SphereBox[{1, 2, 1}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[1, 5], 0.2]], 
      SphereBox[{1, 2, 2}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[3, 10], 0.3]], 
      SphereBox[{1, 2, 3}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[2, 5], 0.4]], 
      SphereBox[{1, 2, 4}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[1, 2], 0.5]], 
      SphereBox[{1, 2, 5}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[3, 5], 0.6]], 
      SphereBox[{1, 2, 6}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[7, 10], 0.7]], 
      SphereBox[{1, 2, 7}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[4, 5], 0.8]], 
      SphereBox[{1, 2, 8}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[9, 10], 0.9]], 
      SphereBox[{1, 2, 9}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[1, 5], 0.2], 1], 
      SphereBox[{1, 2, 10}, NCache[Rational[1, 2], 0.5]]}}, {
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[3, 10], 0.3], 0], 
      SphereBox[{1, 3, 0}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[1, 10], 0.1]], 
      SphereBox[{1, 3, 1}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[1, 5], 0.2]], 
      SphereBox[{1, 3, 2}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[3, 10], 0.3]], 
      SphereBox[{1, 3, 3}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[2, 5], 0.4]], 
      SphereBox[{1, 3, 4}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[1, 2], 0.5]], 
      SphereBox[{1, 3, 5}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[3, 5], 0.6]], 
      SphereBox[{1, 3, 6}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[7, 10], 0.7]], 
      SphereBox[{1, 3, 7}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[4, 5], 0.8]], 
      SphereBox[{1, 3, 8}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[9, 10], 0.9]], 
      SphereBox[{1, 3, 9}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[3, 10], 0.3], 1], 
      SphereBox[{1, 3, 10}, NCache[Rational[1, 2], 0.5]]}}, {
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[2, 5], 0.4], 0], 
      SphereBox[{1, 4, 0}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[1, 10], 0.1]], 
      SphereBox[{1, 4, 1}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[1, 5], 0.2]], 
      SphereBox[{1, 4, 2}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[3, 10], 0.3]], 
      SphereBox[{1, 4, 3}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[2, 5], 0.4]], 
      SphereBox[{1, 4, 4}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[1, 2], 0.5]], 
      SphereBox[{1, 4, 5}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[3, 5], 0.6]], 
      SphereBox[{1, 4, 6}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[7, 10], 0.7]], 
      SphereBox[{1, 4, 7}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[4, 5], 0.8]], 
      SphereBox[{1, 4, 8}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[9, 10], 0.9]], 
      SphereBox[{1, 4, 9}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[2, 5], 0.4], 1], 
      SphereBox[{1, 4, 10}, NCache[Rational[1, 2], 0.5]]}}, {
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[1, 2], 0.5], 0], 
      SphereBox[{1, 5, 0}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[1, 10], 0.1]], 
      SphereBox[{1, 5, 1}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[1, 5], 0.2]], 
      SphereBox[{1, 5, 2}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[3, 10], 0.3]], 
      SphereBox[{1, 5, 3}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[2, 5], 0.4]], 
      SphereBox[{1, 5, 4}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[1, 2], 0.5]], 
      SphereBox[{1, 5, 5}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[3, 5], 0.6]], 
      SphereBox[{1, 5, 6}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[7, 10], 0.7]], 
      SphereBox[{1, 5, 7}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[4, 5], 0.8]], 
      SphereBox[{1, 5, 8}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[9, 10], 0.9]], 
      SphereBox[{1, 5, 9}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[1, 2], 0.5], 1], 
      SphereBox[{1, 5, 10}, NCache[Rational[1, 2], 0.5]]}}, {
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[3, 5], 0.6], 0], 
      SphereBox[{1, 6, 0}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[1, 10], 0.1]], 
      SphereBox[{1, 6, 1}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[1, 5], 0.2]], 
      SphereBox[{1, 6, 2}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[3, 10], 0.3]], 
      SphereBox[{1, 6, 3}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[2, 5], 0.4]], 
      SphereBox[{1, 6, 4}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[1, 2], 0.5]], 
      SphereBox[{1, 6, 5}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[3, 5], 0.6]], 
      SphereBox[{1, 6, 6}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[7, 10], 0.7]], 
      SphereBox[{1, 6, 7}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[4, 5], 0.8]], 
      SphereBox[{1, 6, 8}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[9, 10], 0.9]], 
      SphereBox[{1, 6, 9}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[3, 5], 0.6], 1], 
      SphereBox[{1, 6, 10}, NCache[Rational[1, 2], 0.5]]}}, {
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[7, 10], 0.7], 0], 
      SphereBox[{1, 7, 0}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[1, 10], 0.1]], 
      SphereBox[{1, 7, 1}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[1, 5], 0.2]], 
      SphereBox[{1, 7, 2}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[3, 10], 0.3]], 
      SphereBox[{1, 7, 3}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[2, 5], 0.4]], 
      SphereBox[{1, 7, 4}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[1, 2], 0.5]], 
      SphereBox[{1, 7, 5}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[3, 5], 0.6]], 
      SphereBox[{1, 7, 6}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[7, 10], 0.7]], 
      SphereBox[{1, 7, 7}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[4, 5], 0.8]], 
      SphereBox[{1, 7, 8}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[9, 10], 0.9]], 
      SphereBox[{1, 7, 9}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[7, 10], 0.7], 1], 
      SphereBox[{1, 7, 10}, NCache[Rational[1, 2], 0.5]]}}, {
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[4, 5], 0.8], 0], 
      SphereBox[{1, 8, 0}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[1, 10], 0.1]], 
      SphereBox[{1, 8, 1}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[1, 5], 0.2]], 
      SphereBox[{1, 8, 2}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[3, 10], 0.3]], 
      SphereBox[{1, 8, 3}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[2, 5], 0.4]], 
      SphereBox[{1, 8, 4}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[1, 2], 0.5]], 
      SphereBox[{1, 8, 5}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[3, 5], 0.6]], 
      SphereBox[{1, 8, 6}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[7, 10], 0.7]], 
      SphereBox[{1, 8, 7}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[4, 5], 0.8]], 
      SphereBox[{1, 8, 8}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[9, 10], 0.9]], 
      SphereBox[{1, 8, 9}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[4, 5], 0.8], 1], 
      SphereBox[{1, 8, 10}, NCache[Rational[1, 2], 0.5]]}}, {
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[9, 10], 0.9], 0], 
      SphereBox[{1, 9, 0}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[1, 10], 0.1]], 
      SphereBox[{1, 9, 1}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[1, 5], 0.2]], 
      SphereBox[{1, 9, 2}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[3, 10], 0.3]], 
      SphereBox[{1, 9, 3}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[2, 5], 0.4]], 
      SphereBox[{1, 9, 4}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[1, 2], 0.5]], 
      SphereBox[{1, 9, 5}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[3, 5], 0.6]], 
      SphereBox[{1, 9, 6}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[7, 10], 0.7]], 
      SphereBox[{1, 9, 7}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[4, 5], 0.8]], 
      SphereBox[{1, 9, 8}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[9, 10], 0.9]], 
      SphereBox[{1, 9, 9}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[9, 10], 0.9], 1], 
      SphereBox[{1, 9, 10}, NCache[Rational[1, 2], 0.5]]}}, {
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 1, 0], 
      SphereBox[{1, 10, 0}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 1, 
       NCache[
        Rational[1, 10], 0.1]], 
      SphereBox[{1, 10, 1}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 1, 
       NCache[
        Rational[1, 5], 0.2]], 
      SphereBox[{1, 10, 2}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 1, 
       NCache[
        Rational[3, 10], 0.3]], 
      SphereBox[{1, 10, 3}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 1, 
       NCache[
        Rational[2, 5], 0.4]], 
      SphereBox[{1, 10, 4}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 1, 
       NCache[
        Rational[1, 2], 0.5]], 
      SphereBox[{1, 10, 5}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 1, 
       NCache[
        Rational[3, 5], 0.6]], 
      SphereBox[{1, 10, 6}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 1, 
       NCache[
        Rational[7, 10], 0.7]], 
      SphereBox[{1, 10, 7}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 1, 
       NCache[
        Rational[4, 5], 0.8]], 
      SphereBox[{1, 10, 8}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 1, 
       NCache[
        Rational[9, 10], 0.9]], 
      SphereBox[{1, 10, 9}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 1, 1], 
      SphereBox[{1, 10, 10}, NCache[Rational[1, 2], 0.5]]}}}, {{
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 0, 0], 
      SphereBox[{2, 0, 0}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 0, 
       NCache[
        Rational[1, 10], 0.1]], 
      SphereBox[{2, 0, 1}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 0, 
       NCache[
        Rational[1, 5], 0.2]], 
      SphereBox[{2, 0, 2}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 0, 
       NCache[
        Rational[3, 10], 0.3]], 
      SphereBox[{2, 0, 3}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 0, 
       NCache[
        Rational[2, 5], 0.4]], 
      SphereBox[{2, 0, 4}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 0, 
       NCache[
        Rational[1, 2], 0.5]], 
      SphereBox[{2, 0, 5}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 0, 
       NCache[
        Rational[3, 5], 0.6]], 
      SphereBox[{2, 0, 6}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 0, 
       NCache[
        Rational[7, 10], 0.7]], 
      SphereBox[{2, 0, 7}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 0, 
       NCache[
        Rational[4, 5], 0.8]], 
      SphereBox[{2, 0, 8}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 0, 
       NCache[
        Rational[9, 10], 0.9]], 
      SphereBox[{2, 0, 9}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 0, 1], 
      SphereBox[{2, 0, 10}, NCache[Rational[1, 2], 0.5]]}}, {
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[1, 10], 0.1], 0], 
      SphereBox[{2, 1, 0}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[1, 10], 0.1]], 
      SphereBox[{2, 1, 1}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[1, 5], 0.2]], 
      SphereBox[{2, 1, 2}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[3, 10], 0.3]], 
      SphereBox[{2, 1, 3}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[2, 5], 0.4]], 
      SphereBox[{2, 1, 4}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[1, 2], 0.5]], 
      SphereBox[{2, 1, 5}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[3, 5], 0.6]], 
      SphereBox[{2, 1, 6}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[7, 10], 0.7]], 
      SphereBox[{2, 1, 7}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[4, 5], 0.8]], 
      SphereBox[{2, 1, 8}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[9, 10], 0.9]], 
      SphereBox[{2, 1, 9}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[1, 10], 0.1], 1], 
      SphereBox[{2, 1, 10}, NCache[Rational[1, 2], 0.5]]}}, {
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[1, 5], 0.2], 0], 
      SphereBox[{2, 2, 0}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[1, 10], 0.1]], 
      SphereBox[{2, 2, 1}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[1, 5], 0.2]], 
      SphereBox[{2, 2, 2}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[3, 10], 0.3]], 
      SphereBox[{2, 2, 3}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[2, 5], 0.4]], 
      SphereBox[{2, 2, 4}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[1, 2], 0.5]], 
      SphereBox[{2, 2, 5}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[3, 5], 0.6]], 
      SphereBox[{2, 2, 6}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[7, 10], 0.7]], 
      SphereBox[{2, 2, 7}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[4, 5], 0.8]], 
      SphereBox[{2, 2, 8}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[9, 10], 0.9]], 
      SphereBox[{2, 2, 9}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[1, 5], 0.2], 1], 
      SphereBox[{2, 2, 10}, NCache[Rational[1, 2], 0.5]]}}, {
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[3, 10], 0.3], 0], 
      SphereBox[{2, 3, 0}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[1, 10], 0.1]], 
      SphereBox[{2, 3, 1}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[1, 5], 0.2]], 
      SphereBox[{2, 3, 2}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[3, 10], 0.3]], 
      SphereBox[{2, 3, 3}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[2, 5], 0.4]], 
      SphereBox[{2, 3, 4}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[1, 2], 0.5]], 
      SphereBox[{2, 3, 5}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[3, 5], 0.6]], 
      SphereBox[{2, 3, 6}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[7, 10], 0.7]], 
      SphereBox[{2, 3, 7}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[4, 5], 0.8]], 
      SphereBox[{2, 3, 8}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[9, 10], 0.9]], 
      SphereBox[{2, 3, 9}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[3, 10], 0.3], 1], 
      SphereBox[{2, 3, 10}, NCache[Rational[1, 2], 0.5]]}}, {
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[2, 5], 0.4], 0], 
      SphereBox[{2, 4, 0}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[1, 10], 0.1]], 
      SphereBox[{2, 4, 1}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[1, 5], 0.2]], 
      SphereBox[{2, 4, 2}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[3, 10], 0.3]], 
      SphereBox[{2, 4, 3}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[2, 5], 0.4]], 
      SphereBox[{2, 4, 4}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[1, 2], 0.5]], 
      SphereBox[{2, 4, 5}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[3, 5], 0.6]], 
      SphereBox[{2, 4, 6}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[7, 10], 0.7]], 
      SphereBox[{2, 4, 7}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[4, 5], 0.8]], 
      SphereBox[{2, 4, 8}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[9, 10], 0.9]], 
      SphereBox[{2, 4, 9}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[2, 5], 0.4], 1], 
      SphereBox[{2, 4, 10}, NCache[Rational[1, 2], 0.5]]}}, {
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[1, 2], 0.5], 0], 
      SphereBox[{2, 5, 0}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[1, 10], 0.1]], 
      SphereBox[{2, 5, 1}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[1, 5], 0.2]], 
      SphereBox[{2, 5, 2}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[3, 10], 0.3]], 
      SphereBox[{2, 5, 3}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[2, 5], 0.4]], 
      SphereBox[{2, 5, 4}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[1, 2], 0.5]], 
      SphereBox[{2, 5, 5}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[3, 5], 0.6]], 
      SphereBox[{2, 5, 6}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[7, 10], 0.7]], 
      SphereBox[{2, 5, 7}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[4, 5], 0.8]], 
      SphereBox[{2, 5, 8}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[9, 10], 0.9]], 
      SphereBox[{2, 5, 9}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[1, 2], 0.5], 1], 
      SphereBox[{2, 5, 10}, NCache[Rational[1, 2], 0.5]]}}, {
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[3, 5], 0.6], 0], 
      SphereBox[{2, 6, 0}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[1, 10], 0.1]], 
      SphereBox[{2, 6, 1}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[1, 5], 0.2]], 
      SphereBox[{2, 6, 2}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[3, 10], 0.3]], 
      SphereBox[{2, 6, 3}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[2, 5], 0.4]], 
      SphereBox[{2, 6, 4}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[1, 2], 0.5]], 
      SphereBox[{2, 6, 5}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[3, 5], 0.6]], 
      SphereBox[{2, 6, 6}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[7, 10], 0.7]], 
      SphereBox[{2, 6, 7}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[4, 5], 0.8]], 
      SphereBox[{2, 6, 8}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[9, 10], 0.9]], 
      SphereBox[{2, 6, 9}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[3, 5], 0.6], 1], 
      SphereBox[{2, 6, 10}, NCache[Rational[1, 2], 0.5]]}}, {
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[7, 10], 0.7], 0], 
      SphereBox[{2, 7, 0}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[1, 10], 0.1]], 
      SphereBox[{2, 7, 1}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[1, 5], 0.2]], 
      SphereBox[{2, 7, 2}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[3, 10], 0.3]], 
      SphereBox[{2, 7, 3}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[2, 5], 0.4]], 
      SphereBox[{2, 7, 4}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[1, 2], 0.5]], 
      SphereBox[{2, 7, 5}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[3, 5], 0.6]], 
      SphereBox[{2, 7, 6}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[7, 10], 0.7]], 
      SphereBox[{2, 7, 7}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[4, 5], 0.8]], 
      SphereBox[{2, 7, 8}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[9, 10], 0.9]], 
      SphereBox[{2, 7, 9}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[7, 10], 0.7], 1], 
      SphereBox[{2, 7, 10}, NCache[Rational[1, 2], 0.5]]}}, {
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[4, 5], 0.8], 0], 
      SphereBox[{2, 8, 0}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[1, 10], 0.1]], 
      SphereBox[{2, 8, 1}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[1, 5], 0.2]], 
      SphereBox[{2, 8, 2}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[3, 10], 0.3]], 
      SphereBox[{2, 8, 3}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[2, 5], 0.4]], 
      SphereBox[{2, 8, 4}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[1, 2], 0.5]], 
      SphereBox[{2, 8, 5}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[3, 5], 0.6]], 
      SphereBox[{2, 8, 6}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[7, 10], 0.7]], 
      SphereBox[{2, 8, 7}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[4, 5], 0.8]], 
      SphereBox[{2, 8, 8}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[9, 10], 0.9]], 
      SphereBox[{2, 8, 9}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[4, 5], 0.8], 1], 
      SphereBox[{2, 8, 10}, NCache[Rational[1, 2], 0.5]]}}, {
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[9, 10], 0.9], 0], 
      SphereBox[{2, 9, 0}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[1, 10], 0.1]], 
      SphereBox[{2, 9, 1}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[1, 5], 0.2]], 
      SphereBox[{2, 9, 2}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[3, 10], 0.3]], 
      SphereBox[{2, 9, 3}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[2, 5], 0.4]], 
      SphereBox[{2, 9, 4}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[1, 2], 0.5]], 
      SphereBox[{2, 9, 5}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[3, 5], 0.6]], 
      SphereBox[{2, 9, 6}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[7, 10], 0.7]], 
      SphereBox[{2, 9, 7}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[4, 5], 0.8]], 
      SphereBox[{2, 9, 8}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[9, 10], 0.9]], 
      SphereBox[{2, 9, 9}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[9, 10], 0.9], 1], 
      SphereBox[{2, 9, 10}, NCache[Rational[1, 2], 0.5]]}}, {
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 1, 0], 
      SphereBox[{2, 10, 0}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 1, 
       NCache[
        Rational[1, 10], 0.1]], 
      SphereBox[{2, 10, 1}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 1, 
       NCache[
        Rational[1, 5], 0.2]], 
      SphereBox[{2, 10, 2}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 1, 
       NCache[
        Rational[3, 10], 0.3]], 
      SphereBox[{2, 10, 3}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 1, 
       NCache[
        Rational[2, 5], 0.4]], 
      SphereBox[{2, 10, 4}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 1, 
       NCache[
        Rational[1, 2], 0.5]], 
      SphereBox[{2, 10, 5}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 1, 
       NCache[
        Rational[3, 5], 0.6]], 
      SphereBox[{2, 10, 6}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 1, 
       NCache[
        Rational[7, 10], 0.7]], 
      SphereBox[{2, 10, 7}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 1, 
       NCache[
        Rational[4, 5], 0.8]], 
      SphereBox[{2, 10, 8}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 1, 
       NCache[
        Rational[9, 10], 0.9]], 
      SphereBox[{2, 10, 9}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 1, 1], 
      SphereBox[{2, 10, 10}, NCache[Rational[1, 2], 0.5]]}}}, {{
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 0, 0], 
      SphereBox[{3, 0, 0}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 0, 
       NCache[
        Rational[1, 10], 0.1]], 
      SphereBox[{3, 0, 1}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 0, 
       NCache[
        Rational[1, 5], 0.2]], 
      SphereBox[{3, 0, 2}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 0, 
       NCache[
        Rational[3, 10], 0.3]], 
      SphereBox[{3, 0, 3}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 0, 
       NCache[
        Rational[2, 5], 0.4]], 
      SphereBox[{3, 0, 4}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 0, 
       NCache[
        Rational[1, 2], 0.5]], 
      SphereBox[{3, 0, 5}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 0, 
       NCache[
        Rational[3, 5], 0.6]], 
      SphereBox[{3, 0, 6}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 0, 
       NCache[
        Rational[7, 10], 0.7]], 
      SphereBox[{3, 0, 7}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 0, 
       NCache[
        Rational[4, 5], 0.8]], 
      SphereBox[{3, 0, 8}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 0, 
       NCache[
        Rational[9, 10], 0.9]], 
      SphereBox[{3, 0, 9}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 0, 1], 
      SphereBox[{3, 0, 10}, NCache[Rational[1, 2], 0.5]]}}, {
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[1, 10], 0.1], 0], 
      SphereBox[{3, 1, 0}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[1, 10], 0.1]], 
      SphereBox[{3, 1, 1}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[1, 5], 0.2]], 
      SphereBox[{3, 1, 2}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[3, 10], 0.3]], 
      SphereBox[{3, 1, 3}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[2, 5], 0.4]], 
      SphereBox[{3, 1, 4}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[1, 2], 0.5]], 
      SphereBox[{3, 1, 5}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[3, 5], 0.6]], 
      SphereBox[{3, 1, 6}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[7, 10], 0.7]], 
      SphereBox[{3, 1, 7}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[4, 5], 0.8]], 
      SphereBox[{3, 1, 8}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[9, 10], 0.9]], 
      SphereBox[{3, 1, 9}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[1, 10], 0.1], 1], 
      SphereBox[{3, 1, 10}, NCache[Rational[1, 2], 0.5]]}}, {
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[1, 5], 0.2], 0], 
      SphereBox[{3, 2, 0}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[1, 10], 0.1]], 
      SphereBox[{3, 2, 1}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[1, 5], 0.2]], 
      SphereBox[{3, 2, 2}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[3, 10], 0.3]], 
      SphereBox[{3, 2, 3}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[2, 5], 0.4]], 
      SphereBox[{3, 2, 4}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[1, 2], 0.5]], 
      SphereBox[{3, 2, 5}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[3, 5], 0.6]], 
      SphereBox[{3, 2, 6}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[7, 10], 0.7]], 
      SphereBox[{3, 2, 7}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[4, 5], 0.8]], 
      SphereBox[{3, 2, 8}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[9, 10], 0.9]], 
      SphereBox[{3, 2, 9}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[1, 5], 0.2], 1], 
      SphereBox[{3, 2, 10}, NCache[Rational[1, 2], 0.5]]}}, {
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[3, 10], 0.3], 0], 
      SphereBox[{3, 3, 0}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[1, 10], 0.1]], 
      SphereBox[{3, 3, 1}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[1, 5], 0.2]], 
      SphereBox[{3, 3, 2}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[3, 10], 0.3]], 
      SphereBox[{3, 3, 3}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[2, 5], 0.4]], 
      SphereBox[{3, 3, 4}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[1, 2], 0.5]], 
      SphereBox[{3, 3, 5}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[3, 5], 0.6]], 
      SphereBox[{3, 3, 6}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[7, 10], 0.7]], 
      SphereBox[{3, 3, 7}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[4, 5], 0.8]], 
      SphereBox[{3, 3, 8}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[9, 10], 0.9]], 
      SphereBox[{3, 3, 9}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[3, 10], 0.3], 1], 
      SphereBox[{3, 3, 10}, NCache[Rational[1, 2], 0.5]]}}, {
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[2, 5], 0.4], 0], 
      SphereBox[{3, 4, 0}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[1, 10], 0.1]], 
      SphereBox[{3, 4, 1}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[1, 5], 0.2]], 
      SphereBox[{3, 4, 2}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[3, 10], 0.3]], 
      SphereBox[{3, 4, 3}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[2, 5], 0.4]], 
      SphereBox[{3, 4, 4}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[1, 2], 0.5]], 
      SphereBox[{3, 4, 5}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[3, 5], 0.6]], 
      SphereBox[{3, 4, 6}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[7, 10], 0.7]], 
      SphereBox[{3, 4, 7}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[4, 5], 0.8]], 
      SphereBox[{3, 4, 8}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[9, 10], 0.9]], 
      SphereBox[{3, 4, 9}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[2, 5], 0.4], 1], 
      SphereBox[{3, 4, 10}, NCache[Rational[1, 2], 0.5]]}}, {
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[1, 2], 0.5], 0], 
      SphereBox[{3, 5, 0}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[1, 10], 0.1]], 
      SphereBox[{3, 5, 1}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[1, 5], 0.2]], 
      SphereBox[{3, 5, 2}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[3, 10], 0.3]], 
      SphereBox[{3, 5, 3}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[2, 5], 0.4]], 
      SphereBox[{3, 5, 4}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[1, 2], 0.5]], 
      SphereBox[{3, 5, 5}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[3, 5], 0.6]], 
      SphereBox[{3, 5, 6}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[7, 10], 0.7]], 
      SphereBox[{3, 5, 7}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[4, 5], 0.8]], 
      SphereBox[{3, 5, 8}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[9, 10], 0.9]], 
      SphereBox[{3, 5, 9}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[1, 2], 0.5], 1], 
      SphereBox[{3, 5, 10}, NCache[Rational[1, 2], 0.5]]}}, {
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[3, 5], 0.6], 0], 
      SphereBox[{3, 6, 0}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[1, 10], 0.1]], 
      SphereBox[{3, 6, 1}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[1, 5], 0.2]], 
      SphereBox[{3, 6, 2}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[3, 10], 0.3]], 
      SphereBox[{3, 6, 3}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[2, 5], 0.4]], 
      SphereBox[{3, 6, 4}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[1, 2], 0.5]], 
      SphereBox[{3, 6, 5}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[3, 5], 0.6]], 
      SphereBox[{3, 6, 6}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[7, 10], 0.7]], 
      SphereBox[{3, 6, 7}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[4, 5], 0.8]], 
      SphereBox[{3, 6, 8}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[9, 10], 0.9]], 
      SphereBox[{3, 6, 9}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[3, 5], 0.6], 1], 
      SphereBox[{3, 6, 10}, NCache[Rational[1, 2], 0.5]]}}, {
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[7, 10], 0.7], 0], 
      SphereBox[{3, 7, 0}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[1, 10], 0.1]], 
      SphereBox[{3, 7, 1}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[1, 5], 0.2]], 
      SphereBox[{3, 7, 2}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[3, 10], 0.3]], 
      SphereBox[{3, 7, 3}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[2, 5], 0.4]], 
      SphereBox[{3, 7, 4}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[1, 2], 0.5]], 
      SphereBox[{3, 7, 5}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[3, 5], 0.6]], 
      SphereBox[{3, 7, 6}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[7, 10], 0.7]], 
      SphereBox[{3, 7, 7}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[4, 5], 0.8]], 
      SphereBox[{3, 7, 8}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[9, 10], 0.9]], 
      SphereBox[{3, 7, 9}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[7, 10], 0.7], 1], 
      SphereBox[{3, 7, 10}, NCache[Rational[1, 2], 0.5]]}}, {
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[4, 5], 0.8], 0], 
      SphereBox[{3, 8, 0}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[1, 10], 0.1]], 
      SphereBox[{3, 8, 1}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[1, 5], 0.2]], 
      SphereBox[{3, 8, 2}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[3, 10], 0.3]], 
      SphereBox[{3, 8, 3}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[2, 5], 0.4]], 
      SphereBox[{3, 8, 4}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[1, 2], 0.5]], 
      SphereBox[{3, 8, 5}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[3, 5], 0.6]], 
      SphereBox[{3, 8, 6}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[7, 10], 0.7]], 
      SphereBox[{3, 8, 7}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[4, 5], 0.8]], 
      SphereBox[{3, 8, 8}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[9, 10], 0.9]], 
      SphereBox[{3, 8, 9}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[4, 5], 0.8], 1], 
      SphereBox[{3, 8, 10}, NCache[Rational[1, 2], 0.5]]}}, {
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[9, 10], 0.9], 0], 
      SphereBox[{3, 9, 0}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[1, 10], 0.1]], 
      SphereBox[{3, 9, 1}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[1, 5], 0.2]], 
      SphereBox[{3, 9, 2}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[3, 10], 0.3]], 
      SphereBox[{3, 9, 3}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[2, 5], 0.4]], 
      SphereBox[{3, 9, 4}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[1, 2], 0.5]], 
      SphereBox[{3, 9, 5}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[3, 5], 0.6]], 
      SphereBox[{3, 9, 6}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[7, 10], 0.7]], 
      SphereBox[{3, 9, 7}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[4, 5], 0.8]], 
      SphereBox[{3, 9, 8}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[9, 10], 0.9]], 
      SphereBox[{3, 9, 9}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[9, 10], 0.9], 1], 
      SphereBox[{3, 9, 10}, NCache[Rational[1, 2], 0.5]]}}, {
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 1, 0], 
      SphereBox[{3, 10, 0}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 1, 
       NCache[
        Rational[1, 10], 0.1]], 
      SphereBox[{3, 10, 1}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 1, 
       NCache[
        Rational[1, 5], 0.2]], 
      SphereBox[{3, 10, 2}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 1, 
       NCache[
        Rational[3, 10], 0.3]], 
      SphereBox[{3, 10, 3}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 1, 
       NCache[
        Rational[2, 5], 0.4]], 
      SphereBox[{3, 10, 4}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 1, 
       NCache[
        Rational[1, 2], 0.5]], 
      SphereBox[{3, 10, 5}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 1, 
       NCache[
        Rational[3, 5], 0.6]], 
      SphereBox[{3, 10, 6}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 1, 
       NCache[
        Rational[7, 10], 0.7]], 
      SphereBox[{3, 10, 7}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 1, 
       NCache[
        Rational[4, 5], 0.8]], 
      SphereBox[{3, 10, 8}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 1, 
       NCache[
        Rational[9, 10], 0.9]], 
      SphereBox[{3, 10, 9}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 1, 1], 
      SphereBox[{3, 10, 10}, NCache[Rational[1, 2], 0.5]]}}}, {{
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 0, 0], 
      SphereBox[{4, 0, 0}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 0, 
       NCache[
        Rational[1, 10], 0.1]], 
      SphereBox[{4, 0, 1}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 0, 
       NCache[
        Rational[1, 5], 0.2]], 
      SphereBox[{4, 0, 2}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 0, 
       NCache[
        Rational[3, 10], 0.3]], 
      SphereBox[{4, 0, 3}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 0, 
       NCache[
        Rational[2, 5], 0.4]], 
      SphereBox[{4, 0, 4}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 0, 
       NCache[
        Rational[1, 2], 0.5]], 
      SphereBox[{4, 0, 5}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 0, 
       NCache[
        Rational[3, 5], 0.6]], 
      SphereBox[{4, 0, 6}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 0, 
       NCache[
        Rational[7, 10], 0.7]], 
      SphereBox[{4, 0, 7}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 0, 
       NCache[
        Rational[4, 5], 0.8]], 
      SphereBox[{4, 0, 8}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 0, 
       NCache[
        Rational[9, 10], 0.9]], 
      SphereBox[{4, 0, 9}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 0, 1], 
      SphereBox[{4, 0, 10}, NCache[Rational[1, 2], 0.5]]}}, {
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[1, 10], 0.1], 0], 
      SphereBox[{4, 1, 0}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[1, 10], 0.1]], 
      SphereBox[{4, 1, 1}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[1, 5], 0.2]], 
      SphereBox[{4, 1, 2}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[3, 10], 0.3]], 
      SphereBox[{4, 1, 3}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[2, 5], 0.4]], 
      SphereBox[{4, 1, 4}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[1, 2], 0.5]], 
      SphereBox[{4, 1, 5}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[3, 5], 0.6]], 
      SphereBox[{4, 1, 6}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[7, 10], 0.7]], 
      SphereBox[{4, 1, 7}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[4, 5], 0.8]], 
      SphereBox[{4, 1, 8}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[9, 10], 0.9]], 
      SphereBox[{4, 1, 9}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[1, 10], 0.1], 1], 
      SphereBox[{4, 1, 10}, NCache[Rational[1, 2], 0.5]]}}, {
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[1, 5], 0.2], 0], 
      SphereBox[{4, 2, 0}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[1, 10], 0.1]], 
      SphereBox[{4, 2, 1}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[1, 5], 0.2]], 
      SphereBox[{4, 2, 2}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[3, 10], 0.3]], 
      SphereBox[{4, 2, 3}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[2, 5], 0.4]], 
      SphereBox[{4, 2, 4}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[1, 2], 0.5]], 
      SphereBox[{4, 2, 5}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[3, 5], 0.6]], 
      SphereBox[{4, 2, 6}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[7, 10], 0.7]], 
      SphereBox[{4, 2, 7}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[4, 5], 0.8]], 
      SphereBox[{4, 2, 8}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[9, 10], 0.9]], 
      SphereBox[{4, 2, 9}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[1, 5], 0.2], 1], 
      SphereBox[{4, 2, 10}, NCache[Rational[1, 2], 0.5]]}}, {
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[3, 10], 0.3], 0], 
      SphereBox[{4, 3, 0}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[1, 10], 0.1]], 
      SphereBox[{4, 3, 1}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[1, 5], 0.2]], 
      SphereBox[{4, 3, 2}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[3, 10], 0.3]], 
      SphereBox[{4, 3, 3}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[2, 5], 0.4]], 
      SphereBox[{4, 3, 4}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[1, 2], 0.5]], 
      SphereBox[{4, 3, 5}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[3, 5], 0.6]], 
      SphereBox[{4, 3, 6}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[7, 10], 0.7]], 
      SphereBox[{4, 3, 7}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[4, 5], 0.8]], 
      SphereBox[{4, 3, 8}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[9, 10], 0.9]], 
      SphereBox[{4, 3, 9}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[3, 10], 0.3], 1], 
      SphereBox[{4, 3, 10}, NCache[Rational[1, 2], 0.5]]}}, {
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[2, 5], 0.4], 0], 
      SphereBox[{4, 4, 0}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[1, 10], 0.1]], 
      SphereBox[{4, 4, 1}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[1, 5], 0.2]], 
      SphereBox[{4, 4, 2}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[3, 10], 0.3]], 
      SphereBox[{4, 4, 3}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[2, 5], 0.4]], 
      SphereBox[{4, 4, 4}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[1, 2], 0.5]], 
      SphereBox[{4, 4, 5}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[3, 5], 0.6]], 
      SphereBox[{4, 4, 6}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[7, 10], 0.7]], 
      SphereBox[{4, 4, 7}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[4, 5], 0.8]], 
      SphereBox[{4, 4, 8}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[9, 10], 0.9]], 
      SphereBox[{4, 4, 9}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[2, 5], 0.4], 1], 
      SphereBox[{4, 4, 10}, NCache[Rational[1, 2], 0.5]]}}, {
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[1, 2], 0.5], 0], 
      SphereBox[{4, 5, 0}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[1, 10], 0.1]], 
      SphereBox[{4, 5, 1}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[1, 5], 0.2]], 
      SphereBox[{4, 5, 2}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[3, 10], 0.3]], 
      SphereBox[{4, 5, 3}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[2, 5], 0.4]], 
      SphereBox[{4, 5, 4}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[1, 2], 0.5]], 
      SphereBox[{4, 5, 5}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[3, 5], 0.6]], 
      SphereBox[{4, 5, 6}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[7, 10], 0.7]], 
      SphereBox[{4, 5, 7}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[4, 5], 0.8]], 
      SphereBox[{4, 5, 8}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[9, 10], 0.9]], 
      SphereBox[{4, 5, 9}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[1, 2], 0.5], 1], 
      SphereBox[{4, 5, 10}, NCache[Rational[1, 2], 0.5]]}}, {
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[3, 5], 0.6], 0], 
      SphereBox[{4, 6, 0}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[1, 10], 0.1]], 
      SphereBox[{4, 6, 1}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[1, 5], 0.2]], 
      SphereBox[{4, 6, 2}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[3, 10], 0.3]], 
      SphereBox[{4, 6, 3}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[2, 5], 0.4]], 
      SphereBox[{4, 6, 4}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[1, 2], 0.5]], 
      SphereBox[{4, 6, 5}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[3, 5], 0.6]], 
      SphereBox[{4, 6, 6}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[7, 10], 0.7]], 
      SphereBox[{4, 6, 7}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[4, 5], 0.8]], 
      SphereBox[{4, 6, 8}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[9, 10], 0.9]], 
      SphereBox[{4, 6, 9}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[3, 5], 0.6], 1], 
      SphereBox[{4, 6, 10}, NCache[Rational[1, 2], 0.5]]}}, {
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[7, 10], 0.7], 0], 
      SphereBox[{4, 7, 0}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[1, 10], 0.1]], 
      SphereBox[{4, 7, 1}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[1, 5], 0.2]], 
      SphereBox[{4, 7, 2}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[3, 10], 0.3]], 
      SphereBox[{4, 7, 3}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[2, 5], 0.4]], 
      SphereBox[{4, 7, 4}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[1, 2], 0.5]], 
      SphereBox[{4, 7, 5}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[3, 5], 0.6]], 
      SphereBox[{4, 7, 6}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[7, 10], 0.7]], 
      SphereBox[{4, 7, 7}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[4, 5], 0.8]], 
      SphereBox[{4, 7, 8}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[9, 10], 0.9]], 
      SphereBox[{4, 7, 9}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[7, 10], 0.7], 1], 
      SphereBox[{4, 7, 10}, NCache[Rational[1, 2], 0.5]]}}, {
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[4, 5], 0.8], 0], 
      SphereBox[{4, 8, 0}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[1, 10], 0.1]], 
      SphereBox[{4, 8, 1}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[1, 5], 0.2]], 
      SphereBox[{4, 8, 2}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[3, 10], 0.3]], 
      SphereBox[{4, 8, 3}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[2, 5], 0.4]], 
      SphereBox[{4, 8, 4}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[1, 2], 0.5]], 
      SphereBox[{4, 8, 5}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[3, 5], 0.6]], 
      SphereBox[{4, 8, 6}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[7, 10], 0.7]], 
      SphereBox[{4, 8, 7}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[4, 5], 0.8]], 
      SphereBox[{4, 8, 8}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[9, 10], 0.9]], 
      SphereBox[{4, 8, 9}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[4, 5], 0.8], 1], 
      SphereBox[{4, 8, 10}, NCache[Rational[1, 2], 0.5]]}}, {
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[9, 10], 0.9], 0], 
      SphereBox[{4, 9, 0}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[1, 10], 0.1]], 
      SphereBox[{4, 9, 1}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[1, 5], 0.2]], 
      SphereBox[{4, 9, 2}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[3, 10], 0.3]], 
      SphereBox[{4, 9, 3}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[2, 5], 0.4]], 
      SphereBox[{4, 9, 4}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[1, 2], 0.5]], 
      SphereBox[{4, 9, 5}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[3, 5], 0.6]], 
      SphereBox[{4, 9, 6}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[7, 10], 0.7]], 
      SphereBox[{4, 9, 7}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[4, 5], 0.8]], 
      SphereBox[{4, 9, 8}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[9, 10], 0.9]], 
      SphereBox[{4, 9, 9}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[9, 10], 0.9], 1], 
      SphereBox[{4, 9, 10}, NCache[Rational[1, 2], 0.5]]}}, {
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 1, 0], 
      SphereBox[{4, 10, 0}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 1, 
       NCache[
        Rational[1, 10], 0.1]], 
      SphereBox[{4, 10, 1}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 1, 
       NCache[
        Rational[1, 5], 0.2]], 
      SphereBox[{4, 10, 2}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 1, 
       NCache[
        Rational[3, 10], 0.3]], 
      SphereBox[{4, 10, 3}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 1, 
       NCache[
        Rational[2, 5], 0.4]], 
      SphereBox[{4, 10, 4}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 1, 
       NCache[
        Rational[1, 2], 0.5]], 
      SphereBox[{4, 10, 5}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 1, 
       NCache[
        Rational[3, 5], 0.6]], 
      SphereBox[{4, 10, 6}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 1, 
       NCache[
        Rational[7, 10], 0.7]], 
      SphereBox[{4, 10, 7}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 1, 
       NCache[
        Rational[4, 5], 0.8]], 
      SphereBox[{4, 10, 8}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 1, 
       NCache[
        Rational[9, 10], 0.9]], 
      SphereBox[{4, 10, 9}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 1, 1], 
      SphereBox[{4, 10, 10}, NCache[Rational[1, 2], 0.5]]}}}, {{
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 0, 0], 
      SphereBox[{5, 0, 0}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 0, 
       NCache[
        Rational[1, 10], 0.1]], 
      SphereBox[{5, 0, 1}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 0, 
       NCache[
        Rational[1, 5], 0.2]], 
      SphereBox[{5, 0, 2}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 0, 
       NCache[
        Rational[3, 10], 0.3]], 
      SphereBox[{5, 0, 3}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 0, 
       NCache[
        Rational[2, 5], 0.4]], 
      SphereBox[{5, 0, 4}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 0, 
       NCache[
        Rational[1, 2], 0.5]], 
      SphereBox[{5, 0, 5}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 0, 
       NCache[
        Rational[3, 5], 0.6]], 
      SphereBox[{5, 0, 6}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 0, 
       NCache[
        Rational[7, 10], 0.7]], 
      SphereBox[{5, 0, 7}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 0, 
       NCache[
        Rational[4, 5], 0.8]], 
      SphereBox[{5, 0, 8}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 0, 
       NCache[
        Rational[9, 10], 0.9]], 
      SphereBox[{5, 0, 9}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 0, 1], 
      SphereBox[{5, 0, 10}, NCache[Rational[1, 2], 0.5]]}}, {
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[1, 10], 0.1], 0], 
      SphereBox[{5, 1, 0}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[1, 10], 0.1]], 
      SphereBox[{5, 1, 1}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[1, 5], 0.2]], 
      SphereBox[{5, 1, 2}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[3, 10], 0.3]], 
      SphereBox[{5, 1, 3}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[2, 5], 0.4]], 
      SphereBox[{5, 1, 4}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[1, 2], 0.5]], 
      SphereBox[{5, 1, 5}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[3, 5], 0.6]], 
      SphereBox[{5, 1, 6}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[7, 10], 0.7]], 
      SphereBox[{5, 1, 7}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[4, 5], 0.8]], 
      SphereBox[{5, 1, 8}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[9, 10], 0.9]], 
      SphereBox[{5, 1, 9}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[1, 10], 0.1], 1], 
      SphereBox[{5, 1, 10}, NCache[Rational[1, 2], 0.5]]}}, {
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[1, 5], 0.2], 0], 
      SphereBox[{5, 2, 0}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[1, 10], 0.1]], 
      SphereBox[{5, 2, 1}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[1, 5], 0.2]], 
      SphereBox[{5, 2, 2}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[3, 10], 0.3]], 
      SphereBox[{5, 2, 3}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[2, 5], 0.4]], 
      SphereBox[{5, 2, 4}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[1, 2], 0.5]], 
      SphereBox[{5, 2, 5}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[3, 5], 0.6]], 
      SphereBox[{5, 2, 6}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[7, 10], 0.7]], 
      SphereBox[{5, 2, 7}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[4, 5], 0.8]], 
      SphereBox[{5, 2, 8}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[9, 10], 0.9]], 
      SphereBox[{5, 2, 9}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[1, 5], 0.2], 1], 
      SphereBox[{5, 2, 10}, NCache[Rational[1, 2], 0.5]]}}, {
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[3, 10], 0.3], 0], 
      SphereBox[{5, 3, 0}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[1, 10], 0.1]], 
      SphereBox[{5, 3, 1}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[1, 5], 0.2]], 
      SphereBox[{5, 3, 2}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[3, 10], 0.3]], 
      SphereBox[{5, 3, 3}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[2, 5], 0.4]], 
      SphereBox[{5, 3, 4}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[1, 2], 0.5]], 
      SphereBox[{5, 3, 5}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[3, 5], 0.6]], 
      SphereBox[{5, 3, 6}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[7, 10], 0.7]], 
      SphereBox[{5, 3, 7}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[4, 5], 0.8]], 
      SphereBox[{5, 3, 8}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[9, 10], 0.9]], 
      SphereBox[{5, 3, 9}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[3, 10], 0.3], 1], 
      SphereBox[{5, 3, 10}, NCache[Rational[1, 2], 0.5]]}}, {
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[2, 5], 0.4], 0], 
      SphereBox[{5, 4, 0}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[1, 10], 0.1]], 
      SphereBox[{5, 4, 1}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[1, 5], 0.2]], 
      SphereBox[{5, 4, 2}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[3, 10], 0.3]], 
      SphereBox[{5, 4, 3}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[2, 5], 0.4]], 
      SphereBox[{5, 4, 4}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[1, 2], 0.5]], 
      SphereBox[{5, 4, 5}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[3, 5], 0.6]], 
      SphereBox[{5, 4, 6}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[7, 10], 0.7]], 
      SphereBox[{5, 4, 7}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[4, 5], 0.8]], 
      SphereBox[{5, 4, 8}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[9, 10], 0.9]], 
      SphereBox[{5, 4, 9}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[2, 5], 0.4], 1], 
      SphereBox[{5, 4, 10}, NCache[Rational[1, 2], 0.5]]}}, {
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[1, 2], 0.5], 0], 
      SphereBox[{5, 5, 0}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[1, 10], 0.1]], 
      SphereBox[{5, 5, 1}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[1, 5], 0.2]], 
      SphereBox[{5, 5, 2}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[3, 10], 0.3]], 
      SphereBox[{5, 5, 3}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[2, 5], 0.4]], 
      SphereBox[{5, 5, 4}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[1, 2], 0.5]], 
      SphereBox[{5, 5, 5}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[3, 5], 0.6]], 
      SphereBox[{5, 5, 6}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[7, 10], 0.7]], 
      SphereBox[{5, 5, 7}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[4, 5], 0.8]], 
      SphereBox[{5, 5, 8}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[9, 10], 0.9]], 
      SphereBox[{5, 5, 9}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[1, 2], 0.5], 1], 
      SphereBox[{5, 5, 10}, NCache[Rational[1, 2], 0.5]]}}, {
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[3, 5], 0.6], 0], 
      SphereBox[{5, 6, 0}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[1, 10], 0.1]], 
      SphereBox[{5, 6, 1}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[1, 5], 0.2]], 
      SphereBox[{5, 6, 2}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[3, 10], 0.3]], 
      SphereBox[{5, 6, 3}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[2, 5], 0.4]], 
      SphereBox[{5, 6, 4}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[1, 2], 0.5]], 
      SphereBox[{5, 6, 5}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[3, 5], 0.6]], 
      SphereBox[{5, 6, 6}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[7, 10], 0.7]], 
      SphereBox[{5, 6, 7}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[4, 5], 0.8]], 
      SphereBox[{5, 6, 8}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[9, 10], 0.9]], 
      SphereBox[{5, 6, 9}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[3, 5], 0.6], 1], 
      SphereBox[{5, 6, 10}, NCache[Rational[1, 2], 0.5]]}}, {
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[7, 10], 0.7], 0], 
      SphereBox[{5, 7, 0}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[1, 10], 0.1]], 
      SphereBox[{5, 7, 1}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[1, 5], 0.2]], 
      SphereBox[{5, 7, 2}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[3, 10], 0.3]], 
      SphereBox[{5, 7, 3}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[2, 5], 0.4]], 
      SphereBox[{5, 7, 4}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[1, 2], 0.5]], 
      SphereBox[{5, 7, 5}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[3, 5], 0.6]], 
      SphereBox[{5, 7, 6}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[7, 10], 0.7]], 
      SphereBox[{5, 7, 7}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[4, 5], 0.8]], 
      SphereBox[{5, 7, 8}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[9, 10], 0.9]], 
      SphereBox[{5, 7, 9}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[7, 10], 0.7], 1], 
      SphereBox[{5, 7, 10}, NCache[Rational[1, 2], 0.5]]}}, {
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[4, 5], 0.8], 0], 
      SphereBox[{5, 8, 0}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[1, 10], 0.1]], 
      SphereBox[{5, 8, 1}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[1, 5], 0.2]], 
      SphereBox[{5, 8, 2}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[3, 10], 0.3]], 
      SphereBox[{5, 8, 3}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[2, 5], 0.4]], 
      SphereBox[{5, 8, 4}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[1, 2], 0.5]], 
      SphereBox[{5, 8, 5}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[3, 5], 0.6]], 
      SphereBox[{5, 8, 6}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[7, 10], 0.7]], 
      SphereBox[{5, 8, 7}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[4, 5], 0.8]], 
      SphereBox[{5, 8, 8}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[9, 10], 0.9]], 
      SphereBox[{5, 8, 9}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[4, 5], 0.8], 1], 
      SphereBox[{5, 8, 10}, NCache[Rational[1, 2], 0.5]]}}, {
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[9, 10], 0.9], 0], 
      SphereBox[{5, 9, 0}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[1, 10], 0.1]], 
      SphereBox[{5, 9, 1}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[1, 5], 0.2]], 
      SphereBox[{5, 9, 2}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[3, 10], 0.3]], 
      SphereBox[{5, 9, 3}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[2, 5], 0.4]], 
      SphereBox[{5, 9, 4}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[1, 2], 0.5]], 
      SphereBox[{5, 9, 5}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[3, 5], 0.6]], 
      SphereBox[{5, 9, 6}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[7, 10], 0.7]], 
      SphereBox[{5, 9, 7}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[4, 5], 0.8]], 
      SphereBox[{5, 9, 8}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[9, 10], 0.9]], 
      SphereBox[{5, 9, 9}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[9, 10], 0.9], 1], 
      SphereBox[{5, 9, 10}, NCache[Rational[1, 2], 0.5]]}}, {
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 1, 0], 
      SphereBox[{5, 10, 0}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 1, 
       NCache[
        Rational[1, 10], 0.1]], 
      SphereBox[{5, 10, 1}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 1, 
       NCache[
        Rational[1, 5], 0.2]], 
      SphereBox[{5, 10, 2}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 1, 
       NCache[
        Rational[3, 10], 0.3]], 
      SphereBox[{5, 10, 3}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 1, 
       NCache[
        Rational[2, 5], 0.4]], 
      SphereBox[{5, 10, 4}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 1, 
       NCache[
        Rational[1, 2], 0.5]], 
      SphereBox[{5, 10, 5}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 1, 
       NCache[
        Rational[3, 5], 0.6]], 
      SphereBox[{5, 10, 6}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 1, 
       NCache[
        Rational[7, 10], 0.7]], 
      SphereBox[{5, 10, 7}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 1, 
       NCache[
        Rational[4, 5], 0.8]], 
      SphereBox[{5, 10, 8}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 1, 
       NCache[
        Rational[9, 10], 0.9]], 
      SphereBox[{5, 10, 9}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 1, 1], 
      SphereBox[{5, 10, 10}, NCache[Rational[1, 2], 0.5]]}}}, {{
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 0, 0], 
      SphereBox[{6, 0, 0}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 0, 
       NCache[
        Rational[1, 10], 0.1]], 
      SphereBox[{6, 0, 1}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 0, 
       NCache[
        Rational[1, 5], 0.2]], 
      SphereBox[{6, 0, 2}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 0, 
       NCache[
        Rational[3, 10], 0.3]], 
      SphereBox[{6, 0, 3}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 0, 
       NCache[
        Rational[2, 5], 0.4]], 
      SphereBox[{6, 0, 4}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 0, 
       NCache[
        Rational[1, 2], 0.5]], 
      SphereBox[{6, 0, 5}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 0, 
       NCache[
        Rational[3, 5], 0.6]], 
      SphereBox[{6, 0, 6}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 0, 
       NCache[
        Rational[7, 10], 0.7]], 
      SphereBox[{6, 0, 7}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 0, 
       NCache[
        Rational[4, 5], 0.8]], 
      SphereBox[{6, 0, 8}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 0, 
       NCache[
        Rational[9, 10], 0.9]], 
      SphereBox[{6, 0, 9}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 0, 1], 
      SphereBox[{6, 0, 10}, NCache[Rational[1, 2], 0.5]]}}, {
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[1, 10], 0.1], 0], 
      SphereBox[{6, 1, 0}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[1, 10], 0.1]], 
      SphereBox[{6, 1, 1}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[1, 5], 0.2]], 
      SphereBox[{6, 1, 2}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[3, 10], 0.3]], 
      SphereBox[{6, 1, 3}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[2, 5], 0.4]], 
      SphereBox[{6, 1, 4}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[1, 2], 0.5]], 
      SphereBox[{6, 1, 5}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[3, 5], 0.6]], 
      SphereBox[{6, 1, 6}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[7, 10], 0.7]], 
      SphereBox[{6, 1, 7}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[4, 5], 0.8]], 
      SphereBox[{6, 1, 8}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[9, 10], 0.9]], 
      SphereBox[{6, 1, 9}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[1, 10], 0.1], 1], 
      SphereBox[{6, 1, 10}, NCache[Rational[1, 2], 0.5]]}}, {
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[1, 5], 0.2], 0], 
      SphereBox[{6, 2, 0}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[1, 10], 0.1]], 
      SphereBox[{6, 2, 1}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[1, 5], 0.2]], 
      SphereBox[{6, 2, 2}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[3, 10], 0.3]], 
      SphereBox[{6, 2, 3}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[2, 5], 0.4]], 
      SphereBox[{6, 2, 4}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[1, 2], 0.5]], 
      SphereBox[{6, 2, 5}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[3, 5], 0.6]], 
      SphereBox[{6, 2, 6}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[7, 10], 0.7]], 
      SphereBox[{6, 2, 7}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[4, 5], 0.8]], 
      SphereBox[{6, 2, 8}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[9, 10], 0.9]], 
      SphereBox[{6, 2, 9}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[1, 5], 0.2], 1], 
      SphereBox[{6, 2, 10}, NCache[Rational[1, 2], 0.5]]}}, {
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[3, 10], 0.3], 0], 
      SphereBox[{6, 3, 0}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[1, 10], 0.1]], 
      SphereBox[{6, 3, 1}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[1, 5], 0.2]], 
      SphereBox[{6, 3, 2}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[3, 10], 0.3]], 
      SphereBox[{6, 3, 3}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[2, 5], 0.4]], 
      SphereBox[{6, 3, 4}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[1, 2], 0.5]], 
      SphereBox[{6, 3, 5}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[3, 5], 0.6]], 
      SphereBox[{6, 3, 6}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[7, 10], 0.7]], 
      SphereBox[{6, 3, 7}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[4, 5], 0.8]], 
      SphereBox[{6, 3, 8}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[9, 10], 0.9]], 
      SphereBox[{6, 3, 9}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[3, 10], 0.3], 1], 
      SphereBox[{6, 3, 10}, NCache[Rational[1, 2], 0.5]]}}, {
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[2, 5], 0.4], 0], 
      SphereBox[{6, 4, 0}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[1, 10], 0.1]], 
      SphereBox[{6, 4, 1}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[1, 5], 0.2]], 
      SphereBox[{6, 4, 2}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[3, 10], 0.3]], 
      SphereBox[{6, 4, 3}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[2, 5], 0.4]], 
      SphereBox[{6, 4, 4}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[1, 2], 0.5]], 
      SphereBox[{6, 4, 5}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[3, 5], 0.6]], 
      SphereBox[{6, 4, 6}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[7, 10], 0.7]], 
      SphereBox[{6, 4, 7}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[4, 5], 0.8]], 
      SphereBox[{6, 4, 8}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[9, 10], 0.9]], 
      SphereBox[{6, 4, 9}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[2, 5], 0.4], 1], 
      SphereBox[{6, 4, 10}, NCache[Rational[1, 2], 0.5]]}}, {
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[1, 2], 0.5], 0], 
      SphereBox[{6, 5, 0}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[1, 10], 0.1]], 
      SphereBox[{6, 5, 1}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[1, 5], 0.2]], 
      SphereBox[{6, 5, 2}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[3, 10], 0.3]], 
      SphereBox[{6, 5, 3}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[2, 5], 0.4]], 
      SphereBox[{6, 5, 4}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[1, 2], 0.5]], 
      SphereBox[{6, 5, 5}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[3, 5], 0.6]], 
      SphereBox[{6, 5, 6}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[7, 10], 0.7]], 
      SphereBox[{6, 5, 7}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[4, 5], 0.8]], 
      SphereBox[{6, 5, 8}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[9, 10], 0.9]], 
      SphereBox[{6, 5, 9}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[1, 2], 0.5], 1], 
      SphereBox[{6, 5, 10}, NCache[Rational[1, 2], 0.5]]}}, {
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[3, 5], 0.6], 0], 
      SphereBox[{6, 6, 0}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[1, 10], 0.1]], 
      SphereBox[{6, 6, 1}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[1, 5], 0.2]], 
      SphereBox[{6, 6, 2}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[3, 10], 0.3]], 
      SphereBox[{6, 6, 3}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[2, 5], 0.4]], 
      SphereBox[{6, 6, 4}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[1, 2], 0.5]], 
      SphereBox[{6, 6, 5}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[3, 5], 0.6]], 
      SphereBox[{6, 6, 6}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[7, 10], 0.7]], 
      SphereBox[{6, 6, 7}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[4, 5], 0.8]], 
      SphereBox[{6, 6, 8}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[9, 10], 0.9]], 
      SphereBox[{6, 6, 9}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[3, 5], 0.6], 1], 
      SphereBox[{6, 6, 10}, NCache[Rational[1, 2], 0.5]]}}, {
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[7, 10], 0.7], 0], 
      SphereBox[{6, 7, 0}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[1, 10], 0.1]], 
      SphereBox[{6, 7, 1}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[1, 5], 0.2]], 
      SphereBox[{6, 7, 2}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[3, 10], 0.3]], 
      SphereBox[{6, 7, 3}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[2, 5], 0.4]], 
      SphereBox[{6, 7, 4}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[1, 2], 0.5]], 
      SphereBox[{6, 7, 5}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[3, 5], 0.6]], 
      SphereBox[{6, 7, 6}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[7, 10], 0.7]], 
      SphereBox[{6, 7, 7}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[4, 5], 0.8]], 
      SphereBox[{6, 7, 8}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[9, 10], 0.9]], 
      SphereBox[{6, 7, 9}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[7, 10], 0.7], 1], 
      SphereBox[{6, 7, 10}, NCache[Rational[1, 2], 0.5]]}}, {
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[4, 5], 0.8], 0], 
      SphereBox[{6, 8, 0}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[1, 10], 0.1]], 
      SphereBox[{6, 8, 1}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[1, 5], 0.2]], 
      SphereBox[{6, 8, 2}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[3, 10], 0.3]], 
      SphereBox[{6, 8, 3}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[2, 5], 0.4]], 
      SphereBox[{6, 8, 4}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[1, 2], 0.5]], 
      SphereBox[{6, 8, 5}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[3, 5], 0.6]], 
      SphereBox[{6, 8, 6}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[7, 10], 0.7]], 
      SphereBox[{6, 8, 7}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[4, 5], 0.8]], 
      SphereBox[{6, 8, 8}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[9, 10], 0.9]], 
      SphereBox[{6, 8, 9}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[4, 5], 0.8], 1], 
      SphereBox[{6, 8, 10}, NCache[Rational[1, 2], 0.5]]}}, {
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[9, 10], 0.9], 0], 
      SphereBox[{6, 9, 0}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[1, 10], 0.1]], 
      SphereBox[{6, 9, 1}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[1, 5], 0.2]], 
      SphereBox[{6, 9, 2}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[3, 10], 0.3]], 
      SphereBox[{6, 9, 3}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[2, 5], 0.4]], 
      SphereBox[{6, 9, 4}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[1, 2], 0.5]], 
      SphereBox[{6, 9, 5}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[3, 5], 0.6]], 
      SphereBox[{6, 9, 6}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[7, 10], 0.7]], 
      SphereBox[{6, 9, 7}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[4, 5], 0.8]], 
      SphereBox[{6, 9, 8}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[9, 10], 0.9]], 
      SphereBox[{6, 9, 9}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[9, 10], 0.9], 1], 
      SphereBox[{6, 9, 10}, NCache[Rational[1, 2], 0.5]]}}, {
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 1, 0], 
      SphereBox[{6, 10, 0}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 1, 
       NCache[
        Rational[1, 10], 0.1]], 
      SphereBox[{6, 10, 1}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 1, 
       NCache[
        Rational[1, 5], 0.2]], 
      SphereBox[{6, 10, 2}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 1, 
       NCache[
        Rational[3, 10], 0.3]], 
      SphereBox[{6, 10, 3}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 1, 
       NCache[
        Rational[2, 5], 0.4]], 
      SphereBox[{6, 10, 4}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 1, 
       NCache[
        Rational[1, 2], 0.5]], 
      SphereBox[{6, 10, 5}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 1, 
       NCache[
        Rational[3, 5], 0.6]], 
      SphereBox[{6, 10, 6}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 1, 
       NCache[
        Rational[7, 10], 0.7]], 
      SphereBox[{6, 10, 7}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 1, 
       NCache[
        Rational[4, 5], 0.8]], 
      SphereBox[{6, 10, 8}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 1, 
       NCache[
        Rational[9, 10], 0.9]], 
      SphereBox[{6, 10, 9}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 1, 1], 
      SphereBox[{6, 10, 10}, NCache[Rational[1, 2], 0.5]]}}}, {{
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 0, 0], 
      SphereBox[{7, 0, 0}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 0, 
       NCache[
        Rational[1, 10], 0.1]], 
      SphereBox[{7, 0, 1}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 0, 
       NCache[
        Rational[1, 5], 0.2]], 
      SphereBox[{7, 0, 2}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 0, 
       NCache[
        Rational[3, 10], 0.3]], 
      SphereBox[{7, 0, 3}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 0, 
       NCache[
        Rational[2, 5], 0.4]], 
      SphereBox[{7, 0, 4}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 0, 
       NCache[
        Rational[1, 2], 0.5]], 
      SphereBox[{7, 0, 5}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 0, 
       NCache[
        Rational[3, 5], 0.6]], 
      SphereBox[{7, 0, 6}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 0, 
       NCache[
        Rational[7, 10], 0.7]], 
      SphereBox[{7, 0, 7}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 0, 
       NCache[
        Rational[4, 5], 0.8]], 
      SphereBox[{7, 0, 8}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 0, 
       NCache[
        Rational[9, 10], 0.9]], 
      SphereBox[{7, 0, 9}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 0, 1], 
      SphereBox[{7, 0, 10}, NCache[Rational[1, 2], 0.5]]}}, {
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[1, 10], 0.1], 0], 
      SphereBox[{7, 1, 0}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[1, 10], 0.1]], 
      SphereBox[{7, 1, 1}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[1, 5], 0.2]], 
      SphereBox[{7, 1, 2}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[3, 10], 0.3]], 
      SphereBox[{7, 1, 3}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[2, 5], 0.4]], 
      SphereBox[{7, 1, 4}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[1, 2], 0.5]], 
      SphereBox[{7, 1, 5}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[3, 5], 0.6]], 
      SphereBox[{7, 1, 6}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[7, 10], 0.7]], 
      SphereBox[{7, 1, 7}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[4, 5], 0.8]], 
      SphereBox[{7, 1, 8}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[9, 10], 0.9]], 
      SphereBox[{7, 1, 9}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[1, 10], 0.1], 1], 
      SphereBox[{7, 1, 10}, NCache[Rational[1, 2], 0.5]]}}, {
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[1, 5], 0.2], 0], 
      SphereBox[{7, 2, 0}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[1, 10], 0.1]], 
      SphereBox[{7, 2, 1}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[1, 5], 0.2]], 
      SphereBox[{7, 2, 2}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[3, 10], 0.3]], 
      SphereBox[{7, 2, 3}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[2, 5], 0.4]], 
      SphereBox[{7, 2, 4}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[1, 2], 0.5]], 
      SphereBox[{7, 2, 5}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[3, 5], 0.6]], 
      SphereBox[{7, 2, 6}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[7, 10], 0.7]], 
      SphereBox[{7, 2, 7}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[4, 5], 0.8]], 
      SphereBox[{7, 2, 8}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[9, 10], 0.9]], 
      SphereBox[{7, 2, 9}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[1, 5], 0.2], 1], 
      SphereBox[{7, 2, 10}, NCache[Rational[1, 2], 0.5]]}}, {
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[3, 10], 0.3], 0], 
      SphereBox[{7, 3, 0}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[1, 10], 0.1]], 
      SphereBox[{7, 3, 1}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[1, 5], 0.2]], 
      SphereBox[{7, 3, 2}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[3, 10], 0.3]], 
      SphereBox[{7, 3, 3}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[2, 5], 0.4]], 
      SphereBox[{7, 3, 4}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[1, 2], 0.5]], 
      SphereBox[{7, 3, 5}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[3, 5], 0.6]], 
      SphereBox[{7, 3, 6}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[7, 10], 0.7]], 
      SphereBox[{7, 3, 7}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[4, 5], 0.8]], 
      SphereBox[{7, 3, 8}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[9, 10], 0.9]], 
      SphereBox[{7, 3, 9}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[3, 10], 0.3], 1], 
      SphereBox[{7, 3, 10}, NCache[Rational[1, 2], 0.5]]}}, {
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[2, 5], 0.4], 0], 
      SphereBox[{7, 4, 0}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[1, 10], 0.1]], 
      SphereBox[{7, 4, 1}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[1, 5], 0.2]], 
      SphereBox[{7, 4, 2}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[3, 10], 0.3]], 
      SphereBox[{7, 4, 3}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[2, 5], 0.4]], 
      SphereBox[{7, 4, 4}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[1, 2], 0.5]], 
      SphereBox[{7, 4, 5}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[3, 5], 0.6]], 
      SphereBox[{7, 4, 6}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[7, 10], 0.7]], 
      SphereBox[{7, 4, 7}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[4, 5], 0.8]], 
      SphereBox[{7, 4, 8}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[9, 10], 0.9]], 
      SphereBox[{7, 4, 9}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[2, 5], 0.4], 1], 
      SphereBox[{7, 4, 10}, NCache[Rational[1, 2], 0.5]]}}, {
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[1, 2], 0.5], 0], 
      SphereBox[{7, 5, 0}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[1, 10], 0.1]], 
      SphereBox[{7, 5, 1}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[1, 5], 0.2]], 
      SphereBox[{7, 5, 2}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[3, 10], 0.3]], 
      SphereBox[{7, 5, 3}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[2, 5], 0.4]], 
      SphereBox[{7, 5, 4}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[1, 2], 0.5]], 
      SphereBox[{7, 5, 5}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[3, 5], 0.6]], 
      SphereBox[{7, 5, 6}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[7, 10], 0.7]], 
      SphereBox[{7, 5, 7}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[4, 5], 0.8]], 
      SphereBox[{7, 5, 8}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[9, 10], 0.9]], 
      SphereBox[{7, 5, 9}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[1, 2], 0.5], 1], 
      SphereBox[{7, 5, 10}, NCache[Rational[1, 2], 0.5]]}}, {
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[3, 5], 0.6], 0], 
      SphereBox[{7, 6, 0}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[1, 10], 0.1]], 
      SphereBox[{7, 6, 1}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[1, 5], 0.2]], 
      SphereBox[{7, 6, 2}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[3, 10], 0.3]], 
      SphereBox[{7, 6, 3}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[2, 5], 0.4]], 
      SphereBox[{7, 6, 4}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[1, 2], 0.5]], 
      SphereBox[{7, 6, 5}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[3, 5], 0.6]], 
      SphereBox[{7, 6, 6}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[7, 10], 0.7]], 
      SphereBox[{7, 6, 7}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[4, 5], 0.8]], 
      SphereBox[{7, 6, 8}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[9, 10], 0.9]], 
      SphereBox[{7, 6, 9}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[3, 5], 0.6], 1], 
      SphereBox[{7, 6, 10}, NCache[Rational[1, 2], 0.5]]}}, {
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[7, 10], 0.7], 0], 
      SphereBox[{7, 7, 0}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[1, 10], 0.1]], 
      SphereBox[{7, 7, 1}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[1, 5], 0.2]], 
      SphereBox[{7, 7, 2}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[3, 10], 0.3]], 
      SphereBox[{7, 7, 3}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[2, 5], 0.4]], 
      SphereBox[{7, 7, 4}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[1, 2], 0.5]], 
      SphereBox[{7, 7, 5}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[3, 5], 0.6]], 
      SphereBox[{7, 7, 6}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[7, 10], 0.7]], 
      SphereBox[{7, 7, 7}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[4, 5], 0.8]], 
      SphereBox[{7, 7, 8}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[9, 10], 0.9]], 
      SphereBox[{7, 7, 9}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[7, 10], 0.7], 1], 
      SphereBox[{7, 7, 10}, NCache[Rational[1, 2], 0.5]]}}, {
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[4, 5], 0.8], 0], 
      SphereBox[{7, 8, 0}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[1, 10], 0.1]], 
      SphereBox[{7, 8, 1}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[1, 5], 0.2]], 
      SphereBox[{7, 8, 2}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[3, 10], 0.3]], 
      SphereBox[{7, 8, 3}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[2, 5], 0.4]], 
      SphereBox[{7, 8, 4}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[1, 2], 0.5]], 
      SphereBox[{7, 8, 5}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[3, 5], 0.6]], 
      SphereBox[{7, 8, 6}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[7, 10], 0.7]], 
      SphereBox[{7, 8, 7}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[4, 5], 0.8]], 
      SphereBox[{7, 8, 8}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[9, 10], 0.9]], 
      SphereBox[{7, 8, 9}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[4, 5], 0.8], 1], 
      SphereBox[{7, 8, 10}, NCache[Rational[1, 2], 0.5]]}}, {
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[9, 10], 0.9], 0], 
      SphereBox[{7, 9, 0}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[1, 10], 0.1]], 
      SphereBox[{7, 9, 1}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[1, 5], 0.2]], 
      SphereBox[{7, 9, 2}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[3, 10], 0.3]], 
      SphereBox[{7, 9, 3}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[2, 5], 0.4]], 
      SphereBox[{7, 9, 4}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[1, 2], 0.5]], 
      SphereBox[{7, 9, 5}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[3, 5], 0.6]], 
      SphereBox[{7, 9, 6}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[7, 10], 0.7]], 
      SphereBox[{7, 9, 7}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[4, 5], 0.8]], 
      SphereBox[{7, 9, 8}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[9, 10], 0.9]], 
      SphereBox[{7, 9, 9}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[9, 10], 0.9], 1], 
      SphereBox[{7, 9, 10}, NCache[Rational[1, 2], 0.5]]}}, {
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 1, 0], 
      SphereBox[{7, 10, 0}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 1, 
       NCache[
        Rational[1, 10], 0.1]], 
      SphereBox[{7, 10, 1}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 1, 
       NCache[
        Rational[1, 5], 0.2]], 
      SphereBox[{7, 10, 2}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 1, 
       NCache[
        Rational[3, 10], 0.3]], 
      SphereBox[{7, 10, 3}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 1, 
       NCache[
        Rational[2, 5], 0.4]], 
      SphereBox[{7, 10, 4}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 1, 
       NCache[
        Rational[1, 2], 0.5]], 
      SphereBox[{7, 10, 5}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 1, 
       NCache[
        Rational[3, 5], 0.6]], 
      SphereBox[{7, 10, 6}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 1, 
       NCache[
        Rational[7, 10], 0.7]], 
      SphereBox[{7, 10, 7}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 1, 
       NCache[
        Rational[4, 5], 0.8]], 
      SphereBox[{7, 10, 8}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 1, 
       NCache[
        Rational[9, 10], 0.9]], 
      SphereBox[{7, 10, 9}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 1, 1], 
      SphereBox[{7, 10, 10}, NCache[Rational[1, 2], 0.5]]}}}, {{
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 0, 0], 
      SphereBox[{8, 0, 0}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 0, 
       NCache[
        Rational[1, 10], 0.1]], 
      SphereBox[{8, 0, 1}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 0, 
       NCache[
        Rational[1, 5], 0.2]], 
      SphereBox[{8, 0, 2}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 0, 
       NCache[
        Rational[3, 10], 0.3]], 
      SphereBox[{8, 0, 3}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 0, 
       NCache[
        Rational[2, 5], 0.4]], 
      SphereBox[{8, 0, 4}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 0, 
       NCache[
        Rational[1, 2], 0.5]], 
      SphereBox[{8, 0, 5}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 0, 
       NCache[
        Rational[3, 5], 0.6]], 
      SphereBox[{8, 0, 6}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 0, 
       NCache[
        Rational[7, 10], 0.7]], 
      SphereBox[{8, 0, 7}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 0, 
       NCache[
        Rational[4, 5], 0.8]], 
      SphereBox[{8, 0, 8}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 0, 
       NCache[
        Rational[9, 10], 0.9]], 
      SphereBox[{8, 0, 9}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 0, 1], 
      SphereBox[{8, 0, 10}, NCache[Rational[1, 2], 0.5]]}}, {
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[1, 10], 0.1], 0], 
      SphereBox[{8, 1, 0}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[1, 10], 0.1]], 
      SphereBox[{8, 1, 1}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[1, 5], 0.2]], 
      SphereBox[{8, 1, 2}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[3, 10], 0.3]], 
      SphereBox[{8, 1, 3}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[2, 5], 0.4]], 
      SphereBox[{8, 1, 4}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[1, 2], 0.5]], 
      SphereBox[{8, 1, 5}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[3, 5], 0.6]], 
      SphereBox[{8, 1, 6}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[7, 10], 0.7]], 
      SphereBox[{8, 1, 7}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[4, 5], 0.8]], 
      SphereBox[{8, 1, 8}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[9, 10], 0.9]], 
      SphereBox[{8, 1, 9}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[1, 10], 0.1], 1], 
      SphereBox[{8, 1, 10}, NCache[Rational[1, 2], 0.5]]}}, {
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[1, 5], 0.2], 0], 
      SphereBox[{8, 2, 0}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[1, 10], 0.1]], 
      SphereBox[{8, 2, 1}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[1, 5], 0.2]], 
      SphereBox[{8, 2, 2}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[3, 10], 0.3]], 
      SphereBox[{8, 2, 3}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[2, 5], 0.4]], 
      SphereBox[{8, 2, 4}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[1, 2], 0.5]], 
      SphereBox[{8, 2, 5}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[3, 5], 0.6]], 
      SphereBox[{8, 2, 6}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[7, 10], 0.7]], 
      SphereBox[{8, 2, 7}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[4, 5], 0.8]], 
      SphereBox[{8, 2, 8}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[9, 10], 0.9]], 
      SphereBox[{8, 2, 9}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[1, 5], 0.2], 1], 
      SphereBox[{8, 2, 10}, NCache[Rational[1, 2], 0.5]]}}, {
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[3, 10], 0.3], 0], 
      SphereBox[{8, 3, 0}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[1, 10], 0.1]], 
      SphereBox[{8, 3, 1}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[1, 5], 0.2]], 
      SphereBox[{8, 3, 2}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[3, 10], 0.3]], 
      SphereBox[{8, 3, 3}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[2, 5], 0.4]], 
      SphereBox[{8, 3, 4}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[1, 2], 0.5]], 
      SphereBox[{8, 3, 5}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[3, 5], 0.6]], 
      SphereBox[{8, 3, 6}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[7, 10], 0.7]], 
      SphereBox[{8, 3, 7}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[4, 5], 0.8]], 
      SphereBox[{8, 3, 8}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[9, 10], 0.9]], 
      SphereBox[{8, 3, 9}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[3, 10], 0.3], 1], 
      SphereBox[{8, 3, 10}, NCache[Rational[1, 2], 0.5]]}}, {
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[2, 5], 0.4], 0], 
      SphereBox[{8, 4, 0}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[1, 10], 0.1]], 
      SphereBox[{8, 4, 1}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[1, 5], 0.2]], 
      SphereBox[{8, 4, 2}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[3, 10], 0.3]], 
      SphereBox[{8, 4, 3}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[2, 5], 0.4]], 
      SphereBox[{8, 4, 4}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[1, 2], 0.5]], 
      SphereBox[{8, 4, 5}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[3, 5], 0.6]], 
      SphereBox[{8, 4, 6}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[7, 10], 0.7]], 
      SphereBox[{8, 4, 7}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[4, 5], 0.8]], 
      SphereBox[{8, 4, 8}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[9, 10], 0.9]], 
      SphereBox[{8, 4, 9}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[2, 5], 0.4], 1], 
      SphereBox[{8, 4, 10}, NCache[Rational[1, 2], 0.5]]}}, {
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[1, 2], 0.5], 0], 
      SphereBox[{8, 5, 0}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[1, 10], 0.1]], 
      SphereBox[{8, 5, 1}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[1, 5], 0.2]], 
      SphereBox[{8, 5, 2}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[3, 10], 0.3]], 
      SphereBox[{8, 5, 3}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[2, 5], 0.4]], 
      SphereBox[{8, 5, 4}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[1, 2], 0.5]], 
      SphereBox[{8, 5, 5}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[3, 5], 0.6]], 
      SphereBox[{8, 5, 6}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[7, 10], 0.7]], 
      SphereBox[{8, 5, 7}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[4, 5], 0.8]], 
      SphereBox[{8, 5, 8}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[9, 10], 0.9]], 
      SphereBox[{8, 5, 9}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[1, 2], 0.5], 1], 
      SphereBox[{8, 5, 10}, NCache[Rational[1, 2], 0.5]]}}, {
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[3, 5], 0.6], 0], 
      SphereBox[{8, 6, 0}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[1, 10], 0.1]], 
      SphereBox[{8, 6, 1}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[1, 5], 0.2]], 
      SphereBox[{8, 6, 2}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[3, 10], 0.3]], 
      SphereBox[{8, 6, 3}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[2, 5], 0.4]], 
      SphereBox[{8, 6, 4}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[1, 2], 0.5]], 
      SphereBox[{8, 6, 5}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[3, 5], 0.6]], 
      SphereBox[{8, 6, 6}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[7, 10], 0.7]], 
      SphereBox[{8, 6, 7}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[4, 5], 0.8]], 
      SphereBox[{8, 6, 8}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[9, 10], 0.9]], 
      SphereBox[{8, 6, 9}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[3, 5], 0.6], 1], 
      SphereBox[{8, 6, 10}, NCache[Rational[1, 2], 0.5]]}}, {
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[7, 10], 0.7], 0], 
      SphereBox[{8, 7, 0}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[1, 10], 0.1]], 
      SphereBox[{8, 7, 1}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[1, 5], 0.2]], 
      SphereBox[{8, 7, 2}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[3, 10], 0.3]], 
      SphereBox[{8, 7, 3}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[2, 5], 0.4]], 
      SphereBox[{8, 7, 4}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[1, 2], 0.5]], 
      SphereBox[{8, 7, 5}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[3, 5], 0.6]], 
      SphereBox[{8, 7, 6}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[7, 10], 0.7]], 
      SphereBox[{8, 7, 7}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[4, 5], 0.8]], 
      SphereBox[{8, 7, 8}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[9, 10], 0.9]], 
      SphereBox[{8, 7, 9}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[7, 10], 0.7], 1], 
      SphereBox[{8, 7, 10}, NCache[Rational[1, 2], 0.5]]}}, {
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[4, 5], 0.8], 0], 
      SphereBox[{8, 8, 0}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[1, 10], 0.1]], 
      SphereBox[{8, 8, 1}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[1, 5], 0.2]], 
      SphereBox[{8, 8, 2}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[3, 10], 0.3]], 
      SphereBox[{8, 8, 3}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[2, 5], 0.4]], 
      SphereBox[{8, 8, 4}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[1, 2], 0.5]], 
      SphereBox[{8, 8, 5}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[3, 5], 0.6]], 
      SphereBox[{8, 8, 6}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[7, 10], 0.7]], 
      SphereBox[{8, 8, 7}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[4, 5], 0.8]], 
      SphereBox[{8, 8, 8}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[9, 10], 0.9]], 
      SphereBox[{8, 8, 9}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[4, 5], 0.8], 1], 
      SphereBox[{8, 8, 10}, NCache[Rational[1, 2], 0.5]]}}, {
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[9, 10], 0.9], 0], 
      SphereBox[{8, 9, 0}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[1, 10], 0.1]], 
      SphereBox[{8, 9, 1}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[1, 5], 0.2]], 
      SphereBox[{8, 9, 2}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[3, 10], 0.3]], 
      SphereBox[{8, 9, 3}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[2, 5], 0.4]], 
      SphereBox[{8, 9, 4}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[1, 2], 0.5]], 
      SphereBox[{8, 9, 5}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[3, 5], 0.6]], 
      SphereBox[{8, 9, 6}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[7, 10], 0.7]], 
      SphereBox[{8, 9, 7}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[4, 5], 0.8]], 
      SphereBox[{8, 9, 8}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[9, 10], 0.9]], 
      SphereBox[{8, 9, 9}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[9, 10], 0.9], 1], 
      SphereBox[{8, 9, 10}, NCache[Rational[1, 2], 0.5]]}}, {
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 1, 0], 
      SphereBox[{8, 10, 0}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 1, 
       NCache[
        Rational[1, 10], 0.1]], 
      SphereBox[{8, 10, 1}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 1, 
       NCache[
        Rational[1, 5], 0.2]], 
      SphereBox[{8, 10, 2}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 1, 
       NCache[
        Rational[3, 10], 0.3]], 
      SphereBox[{8, 10, 3}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 1, 
       NCache[
        Rational[2, 5], 0.4]], 
      SphereBox[{8, 10, 4}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 1, 
       NCache[
        Rational[1, 2], 0.5]], 
      SphereBox[{8, 10, 5}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 1, 
       NCache[
        Rational[3, 5], 0.6]], 
      SphereBox[{8, 10, 6}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 1, 
       NCache[
        Rational[7, 10], 0.7]], 
      SphereBox[{8, 10, 7}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 1, 
       NCache[
        Rational[4, 5], 0.8]], 
      SphereBox[{8, 10, 8}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 1, 
       NCache[
        Rational[9, 10], 0.9]], 
      SphereBox[{8, 10, 9}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 1, 1], 
      SphereBox[{8, 10, 10}, NCache[Rational[1, 2], 0.5]]}}}, {{
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 0, 0], 
      SphereBox[{9, 0, 0}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 0, 
       NCache[
        Rational[1, 10], 0.1]], 
      SphereBox[{9, 0, 1}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 0, 
       NCache[
        Rational[1, 5], 0.2]], 
      SphereBox[{9, 0, 2}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 0, 
       NCache[
        Rational[3, 10], 0.3]], 
      SphereBox[{9, 0, 3}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 0, 
       NCache[
        Rational[2, 5], 0.4]], 
      SphereBox[{9, 0, 4}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 0, 
       NCache[
        Rational[1, 2], 0.5]], 
      SphereBox[{9, 0, 5}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 0, 
       NCache[
        Rational[3, 5], 0.6]], 
      SphereBox[{9, 0, 6}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 0, 
       NCache[
        Rational[7, 10], 0.7]], 
      SphereBox[{9, 0, 7}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 0, 
       NCache[
        Rational[4, 5], 0.8]], 
      SphereBox[{9, 0, 8}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 0, 
       NCache[
        Rational[9, 10], 0.9]], 
      SphereBox[{9, 0, 9}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 0, 1], 
      SphereBox[{9, 0, 10}, NCache[Rational[1, 2], 0.5]]}}, {
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[1, 10], 0.1], 0], 
      SphereBox[{9, 1, 0}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[1, 10], 0.1]], 
      SphereBox[{9, 1, 1}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[1, 5], 0.2]], 
      SphereBox[{9, 1, 2}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[3, 10], 0.3]], 
      SphereBox[{9, 1, 3}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[2, 5], 0.4]], 
      SphereBox[{9, 1, 4}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[1, 2], 0.5]], 
      SphereBox[{9, 1, 5}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[3, 5], 0.6]], 
      SphereBox[{9, 1, 6}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[7, 10], 0.7]], 
      SphereBox[{9, 1, 7}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[4, 5], 0.8]], 
      SphereBox[{9, 1, 8}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[9, 10], 0.9]], 
      SphereBox[{9, 1, 9}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[1, 10], 0.1], 1], 
      SphereBox[{9, 1, 10}, NCache[Rational[1, 2], 0.5]]}}, {
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[1, 5], 0.2], 0], 
      SphereBox[{9, 2, 0}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[1, 10], 0.1]], 
      SphereBox[{9, 2, 1}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[1, 5], 0.2]], 
      SphereBox[{9, 2, 2}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[3, 10], 0.3]], 
      SphereBox[{9, 2, 3}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[2, 5], 0.4]], 
      SphereBox[{9, 2, 4}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[1, 2], 0.5]], 
      SphereBox[{9, 2, 5}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[3, 5], 0.6]], 
      SphereBox[{9, 2, 6}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[7, 10], 0.7]], 
      SphereBox[{9, 2, 7}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[4, 5], 0.8]], 
      SphereBox[{9, 2, 8}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[9, 10], 0.9]], 
      SphereBox[{9, 2, 9}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[1, 5], 0.2], 1], 
      SphereBox[{9, 2, 10}, NCache[Rational[1, 2], 0.5]]}}, {
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[3, 10], 0.3], 0], 
      SphereBox[{9, 3, 0}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[1, 10], 0.1]], 
      SphereBox[{9, 3, 1}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[1, 5], 0.2]], 
      SphereBox[{9, 3, 2}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[3, 10], 0.3]], 
      SphereBox[{9, 3, 3}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[2, 5], 0.4]], 
      SphereBox[{9, 3, 4}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[1, 2], 0.5]], 
      SphereBox[{9, 3, 5}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[3, 5], 0.6]], 
      SphereBox[{9, 3, 6}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[7, 10], 0.7]], 
      SphereBox[{9, 3, 7}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[4, 5], 0.8]], 
      SphereBox[{9, 3, 8}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[9, 10], 0.9]], 
      SphereBox[{9, 3, 9}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[3, 10], 0.3], 1], 
      SphereBox[{9, 3, 10}, NCache[Rational[1, 2], 0.5]]}}, {
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[2, 5], 0.4], 0], 
      SphereBox[{9, 4, 0}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[1, 10], 0.1]], 
      SphereBox[{9, 4, 1}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[1, 5], 0.2]], 
      SphereBox[{9, 4, 2}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[3, 10], 0.3]], 
      SphereBox[{9, 4, 3}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[2, 5], 0.4]], 
      SphereBox[{9, 4, 4}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[1, 2], 0.5]], 
      SphereBox[{9, 4, 5}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[3, 5], 0.6]], 
      SphereBox[{9, 4, 6}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[7, 10], 0.7]], 
      SphereBox[{9, 4, 7}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[4, 5], 0.8]], 
      SphereBox[{9, 4, 8}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[9, 10], 0.9]], 
      SphereBox[{9, 4, 9}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[2, 5], 0.4], 1], 
      SphereBox[{9, 4, 10}, NCache[Rational[1, 2], 0.5]]}}, {
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[1, 2], 0.5], 0], 
      SphereBox[{9, 5, 0}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[1, 10], 0.1]], 
      SphereBox[{9, 5, 1}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[1, 5], 0.2]], 
      SphereBox[{9, 5, 2}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[3, 10], 0.3]], 
      SphereBox[{9, 5, 3}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[2, 5], 0.4]], 
      SphereBox[{9, 5, 4}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[1, 2], 0.5]], 
      SphereBox[{9, 5, 5}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[3, 5], 0.6]], 
      SphereBox[{9, 5, 6}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[7, 10], 0.7]], 
      SphereBox[{9, 5, 7}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[4, 5], 0.8]], 
      SphereBox[{9, 5, 8}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[9, 10], 0.9]], 
      SphereBox[{9, 5, 9}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[1, 2], 0.5], 1], 
      SphereBox[{9, 5, 10}, NCache[Rational[1, 2], 0.5]]}}, {
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[3, 5], 0.6], 0], 
      SphereBox[{9, 6, 0}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[1, 10], 0.1]], 
      SphereBox[{9, 6, 1}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[1, 5], 0.2]], 
      SphereBox[{9, 6, 2}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[3, 10], 0.3]], 
      SphereBox[{9, 6, 3}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[2, 5], 0.4]], 
      SphereBox[{9, 6, 4}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[1, 2], 0.5]], 
      SphereBox[{9, 6, 5}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[3, 5], 0.6]], 
      SphereBox[{9, 6, 6}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[7, 10], 0.7]], 
      SphereBox[{9, 6, 7}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[4, 5], 0.8]], 
      SphereBox[{9, 6, 8}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[9, 10], 0.9]], 
      SphereBox[{9, 6, 9}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[3, 5], 0.6], 1], 
      SphereBox[{9, 6, 10}, NCache[Rational[1, 2], 0.5]]}}, {
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[7, 10], 0.7], 0], 
      SphereBox[{9, 7, 0}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[1, 10], 0.1]], 
      SphereBox[{9, 7, 1}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[1, 5], 0.2]], 
      SphereBox[{9, 7, 2}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[3, 10], 0.3]], 
      SphereBox[{9, 7, 3}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[2, 5], 0.4]], 
      SphereBox[{9, 7, 4}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[1, 2], 0.5]], 
      SphereBox[{9, 7, 5}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[3, 5], 0.6]], 
      SphereBox[{9, 7, 6}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[7, 10], 0.7]], 
      SphereBox[{9, 7, 7}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[4, 5], 0.8]], 
      SphereBox[{9, 7, 8}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[9, 10], 0.9]], 
      SphereBox[{9, 7, 9}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[7, 10], 0.7], 1], 
      SphereBox[{9, 7, 10}, NCache[Rational[1, 2], 0.5]]}}, {
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[4, 5], 0.8], 0], 
      SphereBox[{9, 8, 0}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[1, 10], 0.1]], 
      SphereBox[{9, 8, 1}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[1, 5], 0.2]], 
      SphereBox[{9, 8, 2}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[3, 10], 0.3]], 
      SphereBox[{9, 8, 3}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[2, 5], 0.4]], 
      SphereBox[{9, 8, 4}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[1, 2], 0.5]], 
      SphereBox[{9, 8, 5}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[3, 5], 0.6]], 
      SphereBox[{9, 8, 6}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[7, 10], 0.7]], 
      SphereBox[{9, 8, 7}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[4, 5], 0.8]], 
      SphereBox[{9, 8, 8}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[9, 10], 0.9]], 
      SphereBox[{9, 8, 9}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[4, 5], 0.8], 1], 
      SphereBox[{9, 8, 10}, NCache[Rational[1, 2], 0.5]]}}, {
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[9, 10], 0.9], 0], 
      SphereBox[{9, 9, 0}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[1, 10], 0.1]], 
      SphereBox[{9, 9, 1}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[1, 5], 0.2]], 
      SphereBox[{9, 9, 2}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[3, 10], 0.3]], 
      SphereBox[{9, 9, 3}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[2, 5], 0.4]], 
      SphereBox[{9, 9, 4}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[1, 2], 0.5]], 
      SphereBox[{9, 9, 5}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[3, 5], 0.6]], 
      SphereBox[{9, 9, 6}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[7, 10], 0.7]], 
      SphereBox[{9, 9, 7}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[4, 5], 0.8]], 
      SphereBox[{9, 9, 8}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[9, 10], 0.9]], 
      SphereBox[{9, 9, 9}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[9, 10], 0.9], 1], 
      SphereBox[{9, 9, 10}, NCache[Rational[1, 2], 0.5]]}}, {
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 1, 0], 
      SphereBox[{9, 10, 0}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 1, 
       NCache[
        Rational[1, 10], 0.1]], 
      SphereBox[{9, 10, 1}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 1, 
       NCache[
        Rational[1, 5], 0.2]], 
      SphereBox[{9, 10, 2}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 1, 
       NCache[
        Rational[3, 10], 0.3]], 
      SphereBox[{9, 10, 3}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 1, 
       NCache[
        Rational[2, 5], 0.4]], 
      SphereBox[{9, 10, 4}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 1, 
       NCache[
        Rational[1, 2], 0.5]], 
      SphereBox[{9, 10, 5}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 1, 
       NCache[
        Rational[3, 5], 0.6]], 
      SphereBox[{9, 10, 6}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 1, 
       NCache[
        Rational[7, 10], 0.7]], 
      SphereBox[{9, 10, 7}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 1, 
       NCache[
        Rational[4, 5], 0.8]], 
      SphereBox[{9, 10, 8}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 1, 
       NCache[
        Rational[9, 10], 0.9]], 
      SphereBox[{9, 10, 9}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 1, 1], 
      SphereBox[{9, 10, 10}, NCache[Rational[1, 2], 0.5]]}}}, {{
     {RGBColor[1, 0, 0], 
      SphereBox[{10, 0, 0}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[1, 0, 
       NCache[
        Rational[1, 10], 0.1]], 
      SphereBox[{10, 0, 1}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[1, 0, 
       NCache[
        Rational[1, 5], 0.2]], 
      SphereBox[{10, 0, 2}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[1, 0, 
       NCache[
        Rational[3, 10], 0.3]], 
      SphereBox[{10, 0, 3}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[1, 0, 
       NCache[
        Rational[2, 5], 0.4]], 
      SphereBox[{10, 0, 4}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[1, 0, 
       NCache[
        Rational[1, 2], 0.5]], 
      SphereBox[{10, 0, 5}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[1, 0, 
       NCache[
        Rational[3, 5], 0.6]], 
      SphereBox[{10, 0, 6}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[1, 0, 
       NCache[
        Rational[7, 10], 0.7]], 
      SphereBox[{10, 0, 7}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[1, 0, 
       NCache[
        Rational[4, 5], 0.8]], 
      SphereBox[{10, 0, 8}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[1, 0, 
       NCache[
        Rational[9, 10], 0.9]], 
      SphereBox[{10, 0, 9}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[1, 0, 1], 
      SphereBox[{10, 0, 10}, NCache[Rational[1, 2], 0.5]]}}, {
     {RGBColor[1, 
       NCache[
        Rational[1, 10], 0.1], 0], 
      SphereBox[{10, 1, 0}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[1, 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[1, 10], 0.1]], 
      SphereBox[{10, 1, 1}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[1, 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[1, 5], 0.2]], 
      SphereBox[{10, 1, 2}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[1, 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[3, 10], 0.3]], 
      SphereBox[{10, 1, 3}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[1, 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[2, 5], 0.4]], 
      SphereBox[{10, 1, 4}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[1, 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[1, 2], 0.5]], 
      SphereBox[{10, 1, 5}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[1, 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[3, 5], 0.6]], 
      SphereBox[{10, 1, 6}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[1, 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[7, 10], 0.7]], 
      SphereBox[{10, 1, 7}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[1, 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[4, 5], 0.8]], 
      SphereBox[{10, 1, 8}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[1, 
       NCache[
        Rational[1, 10], 0.1], 
       NCache[
        Rational[9, 10], 0.9]], 
      SphereBox[{10, 1, 9}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[1, 
       NCache[
        Rational[1, 10], 0.1], 1], 
      SphereBox[{10, 1, 10}, NCache[Rational[1, 2], 0.5]]}}, {
     {RGBColor[1, 
       NCache[
        Rational[1, 5], 0.2], 0], 
      SphereBox[{10, 2, 0}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[1, 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[1, 10], 0.1]], 
      SphereBox[{10, 2, 1}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[1, 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[1, 5], 0.2]], 
      SphereBox[{10, 2, 2}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[1, 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[3, 10], 0.3]], 
      SphereBox[{10, 2, 3}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[1, 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[2, 5], 0.4]], 
      SphereBox[{10, 2, 4}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[1, 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[1, 2], 0.5]], 
      SphereBox[{10, 2, 5}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[1, 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[3, 5], 0.6]], 
      SphereBox[{10, 2, 6}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[1, 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[7, 10], 0.7]], 
      SphereBox[{10, 2, 7}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[1, 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[4, 5], 0.8]], 
      SphereBox[{10, 2, 8}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[1, 
       NCache[
        Rational[1, 5], 0.2], 
       NCache[
        Rational[9, 10], 0.9]], 
      SphereBox[{10, 2, 9}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[1, 
       NCache[
        Rational[1, 5], 0.2], 1], 
      SphereBox[{10, 2, 10}, NCache[Rational[1, 2], 0.5]]}}, {
     {RGBColor[1, 
       NCache[
        Rational[3, 10], 0.3], 0], 
      SphereBox[{10, 3, 0}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[1, 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[1, 10], 0.1]], 
      SphereBox[{10, 3, 1}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[1, 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[1, 5], 0.2]], 
      SphereBox[{10, 3, 2}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[1, 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[3, 10], 0.3]], 
      SphereBox[{10, 3, 3}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[1, 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[2, 5], 0.4]], 
      SphereBox[{10, 3, 4}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[1, 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[1, 2], 0.5]], 
      SphereBox[{10, 3, 5}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[1, 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[3, 5], 0.6]], 
      SphereBox[{10, 3, 6}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[1, 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[7, 10], 0.7]], 
      SphereBox[{10, 3, 7}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[1, 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[4, 5], 0.8]], 
      SphereBox[{10, 3, 8}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[1, 
       NCache[
        Rational[3, 10], 0.3], 
       NCache[
        Rational[9, 10], 0.9]], 
      SphereBox[{10, 3, 9}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[1, 
       NCache[
        Rational[3, 10], 0.3], 1], 
      SphereBox[{10, 3, 10}, NCache[Rational[1, 2], 0.5]]}}, {
     {RGBColor[1, 
       NCache[
        Rational[2, 5], 0.4], 0], 
      SphereBox[{10, 4, 0}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[1, 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[1, 10], 0.1]], 
      SphereBox[{10, 4, 1}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[1, 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[1, 5], 0.2]], 
      SphereBox[{10, 4, 2}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[1, 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[3, 10], 0.3]], 
      SphereBox[{10, 4, 3}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[1, 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[2, 5], 0.4]], 
      SphereBox[{10, 4, 4}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[1, 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[1, 2], 0.5]], 
      SphereBox[{10, 4, 5}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[1, 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[3, 5], 0.6]], 
      SphereBox[{10, 4, 6}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[1, 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[7, 10], 0.7]], 
      SphereBox[{10, 4, 7}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[1, 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[4, 5], 0.8]], 
      SphereBox[{10, 4, 8}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[1, 
       NCache[
        Rational[2, 5], 0.4], 
       NCache[
        Rational[9, 10], 0.9]], 
      SphereBox[{10, 4, 9}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[1, 
       NCache[
        Rational[2, 5], 0.4], 1], 
      SphereBox[{10, 4, 10}, NCache[Rational[1, 2], 0.5]]}}, {
     {RGBColor[1, 
       NCache[
        Rational[1, 2], 0.5], 0], 
      SphereBox[{10, 5, 0}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[1, 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[1, 10], 0.1]], 
      SphereBox[{10, 5, 1}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[1, 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[1, 5], 0.2]], 
      SphereBox[{10, 5, 2}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[1, 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[3, 10], 0.3]], 
      SphereBox[{10, 5, 3}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[1, 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[2, 5], 0.4]], 
      SphereBox[{10, 5, 4}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[1, 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[1, 2], 0.5]], 
      SphereBox[{10, 5, 5}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[1, 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[3, 5], 0.6]], 
      SphereBox[{10, 5, 6}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[1, 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[7, 10], 0.7]], 
      SphereBox[{10, 5, 7}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[1, 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[4, 5], 0.8]], 
      SphereBox[{10, 5, 8}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[1, 
       NCache[
        Rational[1, 2], 0.5], 
       NCache[
        Rational[9, 10], 0.9]], 
      SphereBox[{10, 5, 9}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[1, 
       NCache[
        Rational[1, 2], 0.5], 1], 
      SphereBox[{10, 5, 10}, NCache[Rational[1, 2], 0.5]]}}, {
     {RGBColor[1, 
       NCache[
        Rational[3, 5], 0.6], 0], 
      SphereBox[{10, 6, 0}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[1, 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[1, 10], 0.1]], 
      SphereBox[{10, 6, 1}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[1, 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[1, 5], 0.2]], 
      SphereBox[{10, 6, 2}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[1, 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[3, 10], 0.3]], 
      SphereBox[{10, 6, 3}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[1, 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[2, 5], 0.4]], 
      SphereBox[{10, 6, 4}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[1, 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[1, 2], 0.5]], 
      SphereBox[{10, 6, 5}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[1, 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[3, 5], 0.6]], 
      SphereBox[{10, 6, 6}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[1, 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[7, 10], 0.7]], 
      SphereBox[{10, 6, 7}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[1, 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[4, 5], 0.8]], 
      SphereBox[{10, 6, 8}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[1, 
       NCache[
        Rational[3, 5], 0.6], 
       NCache[
        Rational[9, 10], 0.9]], 
      SphereBox[{10, 6, 9}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[1, 
       NCache[
        Rational[3, 5], 0.6], 1], 
      SphereBox[{10, 6, 10}, NCache[Rational[1, 2], 0.5]]}}, {
     {RGBColor[1, 
       NCache[
        Rational[7, 10], 0.7], 0], 
      SphereBox[{10, 7, 0}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[1, 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[1, 10], 0.1]], 
      SphereBox[{10, 7, 1}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[1, 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[1, 5], 0.2]], 
      SphereBox[{10, 7, 2}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[1, 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[3, 10], 0.3]], 
      SphereBox[{10, 7, 3}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[1, 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[2, 5], 0.4]], 
      SphereBox[{10, 7, 4}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[1, 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[1, 2], 0.5]], 
      SphereBox[{10, 7, 5}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[1, 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[3, 5], 0.6]], 
      SphereBox[{10, 7, 6}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[1, 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[7, 10], 0.7]], 
      SphereBox[{10, 7, 7}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[1, 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[4, 5], 0.8]], 
      SphereBox[{10, 7, 8}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[1, 
       NCache[
        Rational[7, 10], 0.7], 
       NCache[
        Rational[9, 10], 0.9]], 
      SphereBox[{10, 7, 9}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[1, 
       NCache[
        Rational[7, 10], 0.7], 1], 
      SphereBox[{10, 7, 10}, NCache[Rational[1, 2], 0.5]]}}, {
     {RGBColor[1, 
       NCache[
        Rational[4, 5], 0.8], 0], 
      SphereBox[{10, 8, 0}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[1, 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[1, 10], 0.1]], 
      SphereBox[{10, 8, 1}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[1, 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[1, 5], 0.2]], 
      SphereBox[{10, 8, 2}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[1, 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[3, 10], 0.3]], 
      SphereBox[{10, 8, 3}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[1, 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[2, 5], 0.4]], 
      SphereBox[{10, 8, 4}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[1, 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[1, 2], 0.5]], 
      SphereBox[{10, 8, 5}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[1, 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[3, 5], 0.6]], 
      SphereBox[{10, 8, 6}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[1, 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[7, 10], 0.7]], 
      SphereBox[{10, 8, 7}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[1, 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[4, 5], 0.8]], 
      SphereBox[{10, 8, 8}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[1, 
       NCache[
        Rational[4, 5], 0.8], 
       NCache[
        Rational[9, 10], 0.9]], 
      SphereBox[{10, 8, 9}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[1, 
       NCache[
        Rational[4, 5], 0.8], 1], 
      SphereBox[{10, 8, 10}, NCache[Rational[1, 2], 0.5]]}}, {
     {RGBColor[1, 
       NCache[
        Rational[9, 10], 0.9], 0], 
      SphereBox[{10, 9, 0}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[1, 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[1, 10], 0.1]], 
      SphereBox[{10, 9, 1}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[1, 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[1, 5], 0.2]], 
      SphereBox[{10, 9, 2}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[1, 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[3, 10], 0.3]], 
      SphereBox[{10, 9, 3}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[1, 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[2, 5], 0.4]], 
      SphereBox[{10, 9, 4}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[1, 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[1, 2], 0.5]], 
      SphereBox[{10, 9, 5}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[1, 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[3, 5], 0.6]], 
      SphereBox[{10, 9, 6}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[1, 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[7, 10], 0.7]], 
      SphereBox[{10, 9, 7}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[1, 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[4, 5], 0.8]], 
      SphereBox[{10, 9, 8}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[1, 
       NCache[
        Rational[9, 10], 0.9], 
       NCache[
        Rational[9, 10], 0.9]], 
      SphereBox[{10, 9, 9}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[1, 
       NCache[
        Rational[9, 10], 0.9], 1], 
      SphereBox[{10, 9, 10}, NCache[Rational[1, 2], 0.5]]}}, {
     {RGBColor[1, 1, 0], SphereBox[{10, 10, 0}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[1, 1, 
       NCache[
        Rational[1, 10], 0.1]], 
      SphereBox[{10, 10, 1}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[1, 1, 
       NCache[
        Rational[1, 5], 0.2]], 
      SphereBox[{10, 10, 2}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[1, 1, 
       NCache[
        Rational[3, 10], 0.3]], 
      SphereBox[{10, 10, 3}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[1, 1, 
       NCache[
        Rational[2, 5], 0.4]], 
      SphereBox[{10, 10, 4}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[1, 1, 
       NCache[
        Rational[1, 2], 0.5]], 
      SphereBox[{10, 10, 5}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[1, 1, 
       NCache[
        Rational[3, 5], 0.6]], 
      SphereBox[{10, 10, 6}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[1, 1, 
       NCache[
        Rational[7, 10], 0.7]], 
      SphereBox[{10, 10, 7}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[1, 1, 
       NCache[
        Rational[4, 5], 0.8]], 
      SphereBox[{10, 10, 8}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[1, 1, 
       NCache[
        Rational[9, 10], 0.9]], 
      SphereBox[{10, 10, 9}, NCache[Rational[1, 2], 0.5]]}, 
     {RGBColor[1, 1, 1], 
      SphereBox[{10, 10, 10}, NCache[Rational[1, 2], 0.5]]}}}}]], "Output",
 CellChangeTimes->{3.948370802721285*^9},
 CellLabel->
  "Out[112]=",ExpressionUUID->"d92a70f8-f287-401f-b1aa-d18d1ae98028"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.9475314041056843`*^9, 3.947531454892461*^9}, 
   3.947531565210017*^9},
 CellLabel->
  "In[113]:=",ExpressionUUID->"0ebd774a-8c1c-44a9-9eb5-9b7026bade37"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Graphics", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Circle", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"t", "*", "x"}], ",", "0"}], "}"}], ",", "x"}], "]"}], ",", 
      
      RowBox[{"{", 
       RowBox[{"x", ",", "1", ",", "10"}], "}"}]}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", 
     RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9475316151344223`*^9, 3.947531709704246*^9}},
 CellLabel->
  "In[114]:=",ExpressionUUID->"0f610f52-dd87-4bb3-832b-0f08a7f91b2f"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`t$$ = -2, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`t$$], -2, 2, ControlType -> Manipulator}}, 
    Typeset`size$$ = {450., {154.17282426252694`, 161.33774125471444`}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = True, 
    Typeset`keyframeActionsQ$$ = False, Typeset`keyframeList$$ = {}}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`t$$ = -2}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$, Typeset`keyframeActionsQ$$, 
        Typeset`keyframeList$$}, "Body" :> Graphics[
        Table[
         Circle[{$CellContext`t$$ $CellContext`x, 
           0}, $CellContext`x], {$CellContext`x, 1, 10}]], 
      "Specifications" :> {{$CellContext`t$$, -2, 2}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{509.375, {212.76085603132577`, 219.92577302351327`}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.947531687649651*^9, 3.94753171103229*^9}, 
   3.94837080280546*^9},
 CellLabel->
  "Out[114]=",ExpressionUUID->"65cff056-a454-4b31-b715-195cab7f559f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"Graphics", "[", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"RegularPolygon", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", "y"}], "}"}], ",", "0.5", ",", "6"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "1", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "1", ",", "5"}], "}"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.947531761154133*^9, 3.947531813122737*^9}, {
  3.947531885070217*^9, 3.947531895488574*^9}},
 CellLabel->
  "In[115]:=",ExpressionUUID->"6a3da825-b345-41fd-81c2-deca71c346de"],

Cell[BoxData[
 GraphicsBox[{{
    InterpretationBox[
     PolygonBox[{{1.25, 0.5669872981077807}, {1.5, 1.}, {1.25, 
      1.4330127018922192`}, {0.7500000000000001, 1.4330127018922194`}, {0.5, 
      1.}, {0.7499999999999998, 0.5669872981077808}}],
     RegularPolygon[{1, 1}, 0.5, 6]], 
    InterpretationBox[
     PolygonBox[{{1.25, 1.5669872981077808`}, {1.5, 2.}, {1.25, 
      2.433012701892219}, {0.7500000000000001, 2.433012701892219}, {0.5, 
      2.}, {0.7499999999999998, 1.5669872981077808`}}],
     RegularPolygon[{1, 2}, 0.5, 6]], 
    InterpretationBox[
     PolygonBox[{{1.25, 2.566987298107781}, {1.5, 3.}, {1.25, 
      3.433012701892219}, {0.7500000000000001, 3.433012701892219}, {0.5, 
      3.}, {0.7499999999999998, 2.566987298107781}}],
     RegularPolygon[{1, 3}, 0.5, 6]], 
    InterpretationBox[
     PolygonBox[{{1.25, 3.566987298107781}, {1.5, 4.}, {1.25, 
      4.43301270189222}, {0.7500000000000001, 4.43301270189222}, {0.5, 4.}, {
      0.7499999999999998, 3.566987298107781}}],
     RegularPolygon[{1, 4}, 0.5, 6]], 
    InterpretationBox[
     PolygonBox[{{1.25, 4.56698729810778}, {1.5, 5.}, {1.25, 
      5.43301270189222}, {0.7500000000000001, 5.43301270189222}, {0.5, 5.}, {
      0.7499999999999998, 4.566987298107781}}],
     RegularPolygon[{1, 5}, 0.5, 6]]}, {
    InterpretationBox[
     PolygonBox[{{2.25, 0.5669872981077807}, {2.5, 1.}, {2.25, 
      1.4330127018922192`}, {1.75, 1.4330127018922194`}, {1.5, 1.}, {
      1.7499999999999998`, 0.5669872981077808}}],
     RegularPolygon[{2, 1}, 0.5, 6]], 
    InterpretationBox[
     PolygonBox[{{2.25, 1.5669872981077808`}, {2.5, 2.}, {2.25, 
      2.433012701892219}, {1.75, 2.433012701892219}, {1.5, 2.}, {
      1.7499999999999998`, 1.5669872981077808`}}],
     RegularPolygon[{2, 2}, 0.5, 6]], 
    InterpretationBox[
     PolygonBox[{{2.25, 2.566987298107781}, {2.5, 3.}, {2.25, 
      3.433012701892219}, {1.75, 3.433012701892219}, {1.5, 3.}, {
      1.7499999999999998`, 2.566987298107781}}],
     RegularPolygon[{2, 3}, 0.5, 6]], 
    InterpretationBox[
     PolygonBox[{{2.25, 3.566987298107781}, {2.5, 4.}, {2.25, 
      4.43301270189222}, {1.75, 4.43301270189222}, {1.5, 4.}, {
      1.7499999999999998`, 3.566987298107781}}],
     RegularPolygon[{2, 4}, 0.5, 6]], 
    InterpretationBox[
     PolygonBox[{{2.25, 4.56698729810778}, {2.5, 5.}, {2.25, 
      5.43301270189222}, {1.75, 5.43301270189222}, {1.5, 5.}, {
      1.7499999999999998`, 4.566987298107781}}],
     RegularPolygon[{2, 5}, 0.5, 6]]}, {
    InterpretationBox[
     PolygonBox[{{3.25, 0.5669872981077807}, {3.5, 1.}, {3.25, 
      1.4330127018922192`}, {2.75, 1.4330127018922194`}, {2.5, 1.}, {2.75, 
      0.5669872981077808}}],
     RegularPolygon[{3, 1}, 0.5, 6]], 
    InterpretationBox[
     PolygonBox[{{3.25, 1.5669872981077808`}, {3.5, 2.}, {3.25, 
      2.433012701892219}, {2.75, 2.433012701892219}, {2.5, 2.}, {2.75, 
      1.5669872981077808`}}],
     RegularPolygon[{3, 2}, 0.5, 6]], 
    InterpretationBox[
     PolygonBox[{{3.25, 2.566987298107781}, {3.5, 3.}, {3.25, 
      3.433012701892219}, {2.75, 3.433012701892219}, {2.5, 3.}, {2.75, 
      2.566987298107781}}],
     RegularPolygon[{3, 3}, 0.5, 6]], 
    InterpretationBox[
     PolygonBox[{{3.25, 3.566987298107781}, {3.5, 4.}, {3.25, 
      4.43301270189222}, {2.75, 4.43301270189222}, {2.5, 4.}, {2.75, 
      3.566987298107781}}],
     RegularPolygon[{3, 4}, 0.5, 6]], 
    InterpretationBox[
     PolygonBox[{{3.25, 4.56698729810778}, {3.5, 5.}, {3.25, 
      5.43301270189222}, {2.75, 5.43301270189222}, {2.5, 5.}, {2.75, 
      4.566987298107781}}],
     RegularPolygon[{3, 5}, 0.5, 6]]}, {
    InterpretationBox[
     PolygonBox[{{4.25, 0.5669872981077807}, {4.5, 1.}, {4.25, 
      1.4330127018922192`}, {3.75, 1.4330127018922194`}, {3.5, 1.}, {3.75, 
      0.5669872981077808}}],
     RegularPolygon[{4, 1}, 0.5, 6]], 
    InterpretationBox[
     PolygonBox[{{4.25, 1.5669872981077808`}, {4.5, 2.}, {4.25, 
      2.433012701892219}, {3.75, 2.433012701892219}, {3.5, 2.}, {3.75, 
      1.5669872981077808`}}],
     RegularPolygon[{4, 2}, 0.5, 6]], 
    InterpretationBox[
     PolygonBox[{{4.25, 2.566987298107781}, {4.5, 3.}, {4.25, 
      3.433012701892219}, {3.75, 3.433012701892219}, {3.5, 3.}, {3.75, 
      2.566987298107781}}],
     RegularPolygon[{4, 3}, 0.5, 6]], 
    InterpretationBox[
     PolygonBox[{{4.25, 3.566987298107781}, {4.5, 4.}, {4.25, 
      4.43301270189222}, {3.75, 4.43301270189222}, {3.5, 4.}, {3.75, 
      3.566987298107781}}],
     RegularPolygon[{4, 4}, 0.5, 6]], 
    InterpretationBox[
     PolygonBox[{{4.25, 4.56698729810778}, {4.5, 5.}, {4.25, 
      5.43301270189222}, {3.75, 5.43301270189222}, {3.5, 5.}, {3.75, 
      4.566987298107781}}],
     RegularPolygon[{4, 5}, 0.5, 6]]}, {
    InterpretationBox[
     PolygonBox[{{5.25, 0.5669872981077807}, {5.5, 1.}, {5.25, 
      1.4330127018922192`}, {4.75, 1.4330127018922194`}, {4.5, 1.}, {4.75, 
      0.5669872981077808}}],
     RegularPolygon[{5, 1}, 0.5, 6]], 
    InterpretationBox[
     PolygonBox[{{5.25, 1.5669872981077808`}, {5.5, 2.}, {5.25, 
      2.433012701892219}, {4.75, 2.433012701892219}, {4.5, 2.}, {4.75, 
      1.5669872981077808`}}],
     RegularPolygon[{5, 2}, 0.5, 6]], 
    InterpretationBox[
     PolygonBox[{{5.25, 2.566987298107781}, {5.5, 3.}, {5.25, 
      3.433012701892219}, {4.75, 3.433012701892219}, {4.5, 3.}, {4.75, 
      2.566987298107781}}],
     RegularPolygon[{5, 3}, 0.5, 6]], 
    InterpretationBox[
     PolygonBox[{{5.25, 3.566987298107781}, {5.5, 4.}, {5.25, 
      4.43301270189222}, {4.75, 4.43301270189222}, {4.5, 4.}, {4.75, 
      3.566987298107781}}],
     RegularPolygon[{5, 4}, 0.5, 6]], 
    InterpretationBox[
     PolygonBox[{{5.25, 4.56698729810778}, {5.5, 5.}, {5.25, 
      5.43301270189222}, {4.75, 5.43301270189222}, {4.5, 5.}, {4.75, 
      4.566987298107781}}],
     RegularPolygon[{5, 5}, 0.5, 6]]}}]], "Output",
 CellChangeTimes->{{3.947531797625296*^9, 3.9475318137395*^9}, {
   3.947531888997224*^9, 3.947531895761084*^9}, 3.948370802823453*^9},
 CellLabel->
  "Out[115]=",ExpressionUUID->"0a40b006-4b1a-4c46-b3da-ef0248df073b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics3D", "[", 
  RowBox[{"Line", "[", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"RandomInteger", "[", "50", "]"}], ",", "50", ",", "3"}], "]"}], 
   "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.9475318174162083`*^9, 3.947531836633679*^9}, {
  3.947531875007472*^9, 3.9475318804809217`*^9}, {3.947532088877705*^9, 
  3.947532174029903*^9}, {3.947532206623518*^9, 3.947532259906041*^9}},
 CellLabel->
  "In[116]:=",ExpressionUUID->"36a578a3-c1a8-4e9b-90ff-77ddd0d52995"],

Cell[BoxData[
 Graphics3DBox[
  Line3DBox[{{38, 50, 4}, {6, 37, 27}, {22, 31, 25}, {37, 50, 7}, {24, 49, 
   49}, {17, 46, 15}, {30, 10, 24}, {41, 41, 5}, {50, 1, 24}, {35, 28, 9}, {1,
    14, 0}, {29, 4, 35}, {28, 36, 26}, {2, 19, 35}, {47, 0, 48}, {23, 36, 
   23}, {31, 38, 7}, {49, 31, 4}, {45, 12, 10}, {49, 31, 1}, {30, 32, 43}, {
   48, 46, 41}, {13, 29, 5}, {4, 15, 4}, {43, 27, 39}, {46, 11, 5}, {19, 50, 
   20}, {2, 48, 27}, {20, 36, 25}, {0, 2, 22}, {22, 24, 33}, {0, 4, 34}, {40, 
   35, 20}, {49, 42, 5}, {10, 6, 29}, {14, 48, 7}, {23, 49, 10}, {21, 39, 
   20}, {14, 36, 1}, {13, 11, 44}, {37, 30, 17}, {43, 2, 34}, {50, 25, 48}, {
   24, 47, 36}, {46, 28, 33}, {43, 13, 34}, {10, 11, 32}, {4, 25, 46}, {8, 16,
    36}, {42, 38, 8}}]]], "Output",
 CellChangeTimes->{
  3.947532161759069*^9, {3.947532242635045*^9, 3.947532266401909*^9}, 
   3.948370802825501*^9},
 CellLabel->"Out[116]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
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
CwoZCaIGQMQD2Dg+4fhNGwe2La83lNpiaLmFoAFCNHbCskmT2GdvaMdGVzGg
S0XRHWrFYUj/dReGOiZimE4ZEmhyi3Z+oVYSvJuGZ1xtM4LGh8eghXZ1RQx5
W6XFR5zsO7Ik3sZ1HoGc7YekVn6X61dACrijaOkeoLVli6zdYS2iLQbF6eDB
g+Mucg+CXqRf9m8TO7qqAZ3LRFFfvd8wv71DGbKo+YbNvROCy+F2yoT2JaD9
R+cb3BBSKw4b6kaN3TWYn7lVFftHYaFQmW9nQPOC//0MLwse6wVdGYtpa0sj
bSs14dddl8YQzh4pnKwNNnLFY5I6ZYeWkeQRP23StoHNUUEb75GTtagBepCL
CR2s2Z8RHCQZ2YwlBjE1hjVQTXE/0FNCUlPeU0DZSaPYmyul/z7N1WgFCuAU
nKyH6WM161bN2rJNel7HtOgutAd3cJpYKoC6kkRpYUlxCD+up7iNpAxWj28y
KzMLAl3UAaUh2SPfUYiRvNQ0ic2pdSgm+r87sMPt16OwdLq1BupB3sGwO9Fo
QTsWxfBMbUJsC9RcPsMVavW5ueDJ54Oa0uUxUsIOwTmLlL7p2SQaYUaehLn2
0LYaScIuvDgKUx6gOVwLbVoOg0dD9GJMQtqEB5XDUxSQwYdWit0+krFYwWsV
cdhqLVufoc3kDuVbOiZuujR21ZCyg34o0XPouVkAxOGF/Wncaqi+zzEVWlAx
DW1laGVi+gBQ19EGkPXwYmwIY4PQA2s7wPCDLExef1y2qKN4h+JgtdqzGNPi
xSCthbX44K0y+R+XyVWawkY9IxPZemiQ4Wa2rmW1KhXPUf45NhP929067crX
mwTSK76r1dub4odMops5rdsqiuHzeeeMMVGMYwWrtd1fILfw+I4+sSbgQmoY
QIc2URZbjlNszi6n+Yulw/Uo2mOy32F8vL25qwGFpDoepO0ChKOWEuZWFrNX
aVb9H6LtarIxQsKF1vXGsKtlkWTXUr8wVFh8tq9Wn0QS2rF5s6TFKmZazhcY
I6WiMwrFT3L7OWSaLcHOLMXP+7O2MXOec2Kg/CiYC/0X3WxKMT1oSTfMnYwD
RTHRszCg0r+nPY7JVMiEpxUqK7eaiRtXd6WSWbIrqY3mypb+ng7QQW49tCpz
s6T1G1eq+otMxLJlFdTRTPc24n1TOiM22dijlS+tSNdq4YnTsk3UDnJqz5kx
aGjzcJTeoOk5qXywUrKSMf4/yI9pjMKPYAer3oGbk9Ch59B84nDnjTLc5RAb
oPhyp0sT6vKKFqwiRTxFzQrNCtHa0TusVrGXNWRIrO3PGGMtmBsT1lRXg7pk
2Ry2qK5q2ut1K6fGjwvTMuUsDrNl/E2KVOZMyjCVJqGyGL9Jq1C4lL3sIyRk
ZAuX5YnEIjNi3SjwSTNlRjF1GAnCJ+YV02Vq+3j83jUADXlfS4xFetBmkpXa
w18wupE/y9btTAcAOho7cpwVXX755YR6V4+wCbhsEz3SWS3d6SAWSvDcaIZG
J17SOtyyoulpbisWAu5YWlkUPmz0x1nMsrk9wx/WM6ilYzUY/dy69dG9D4dq
sK8Q7Ts54sYfX70JM1KrEG1DeIfkiy1CRiL3m36Z/u80kaQyBoV9N8NExlLl
SVQKtHI3fvW9q91VNJfwqZYZjkS7FAf9GQJuME5dMCwGzecWxD7+qrhTiWMN
rSK1oFiWIXno5S8Kix5uRDsV7Wi2SKvobsJj/bpO3pkjvFUUko4PZhHSW7lb
bNU8ig3zV0zAsuWGwmPaYijJEjpdc9MT5rcpqsPQnKPUJstisv7wWOPjyWBV
2LPfk4zxm0Z6WUTQH1chEuFraHnE1/f9mAVl53ML6I5pxxt4rjr2pUnkPaU5
aI1MYQgNvaimLR+33wlNW+THR3HCkAv4XZyW4HI8BdhS/oZ+91pKTZbjc6lb
IQuwO+q4y6n4+fWH+yZxAS/QdSNqrTFLFEgam3aY5mr5nqnjDNuiEC5wqqxz
di5D1zyUhmIRUcU6VW6hpxtSiVQjS3blTi2ViJxuOnNFiXayoA0mKPzT1q0n
ffo7JkpBKOZh02/UHcQgjzLnxjsyUd23t+aVDOFny6VcCY80BMRY3kXnuKrq
eHrKRg8FVq5OJPjolH/wwQ+axmaBjS36jajhlkIqKrZV/R6cK0puPwY9+7ht
NV7TvbHo1oQWHkFA+aMI6Pu7hZ5JoH2P0RqHqX9iFCKbRigdDVMCPSwN0a5K
4bNCS/u6k85SNTTbpVx8tgb5FqnBRhy5NmtnocVlY/QSB2lIo1OyKCZ78CF1
r9QKK0NIUSCbWePuIK+doJtkXny+aD2oRNrU6vz2cDFIUCP4Fy6rFORhBiuK
2xgywvJIujiql0p311Ll6RCdNRyfqwGr9lgJmTFWbULfaL8qKRrqtYRz5/r5
4JCYrHv5gIAG73B4YzNlRiLWu/w6vrNyISE9ImCf4qY24E4edA/du61slDMl
/Bvmwxk4OcRDHJSWMAQbfWJ/x3yDEjNvWS4Ms2UmZDC8645hkC8EchoU8pqh
xK0gt4zFmEaKuyzjEHVysFbr0HSq3x0bpQk4J8o6afFn6e1XLXRYvb0zjNiK
UNilHS6diyi9y2rK3Tqp/X/nsgo1Cx5PSP3wMxr1mRHLlhUcyXlmpEd3Xd0D
8JGOW7huKIv69JxqmBNHaO5DbrF1tg3iaD3+FI9IUcnLkBsebYo2UGpo6MRu
d2dECYTikHkAiA5Oqqt29DRPNnzfKVAjhDzOJ4b/p1TYclsQHTmU5LLUq59d
0yP7rHMPlgZpjNiEA/nGv/MyKtrSw4EM5QFv7iRafBdCxJMbwg5rHaUtB0My
Kv+1pSVvhuwLx9WYrw6JidsJBf30QB4+gqO1eTlbk5R+IIrgiachmfm8592C
BsZPX6HfPanX5LBlRitlq6e4loID1ojUKw+jlCVQx1iuSBltBhzBSR9q6j7p
XnWo8gyreHD5dGgtesutCez0NAPPZHW9RlcBqmVgyE5p+4qW4laI60w8uVnK
rijo/6LfHUFjC27dvw2t9J81IHV3sOih7ShrNJ3bbyXCxMu+IkcaT9rM/6P4
AL1tYMBhef1u+Jf5WLnMLZsQ2B90d6/ZxOb3NSFz7VYgDW1BRrMO2duVGCzC
1zPcUe1/lX5P5vlnZjIjQyXc82BE2YOW95C8r3S0s7xLGjrw7MPqbRzFiSmy
DkpKLNZJW25uO4350fCMRualEBbAqB0IzTIUJhjJNDjdrEP7Fm8ZpZEkqbUg
azfENRjCT5zzKlP4P08bFCs0a0SiDSH7qmgTRceAtMJ5eoI/zNIJ8c51gsHq
sqNlWpCTj+oNC7SwJrMtZva9mrNDHw3DgowvP2uP9omj+5j8JGgWbOIpQRGj
T5FVIngQWWq9VaZKvrJE01TWpRfTX1lE0TR6fP0NIYgctyjSOtoVF9TfoLXx
OG9X6caGaOW46yTV3VqRtbgXtYw2cknWxVTaVagOlHs3I96E5HvO3AbzE6Zo
UA5nqDYV4bcalK1EHZSX2RxlWuX9oFhW3enX3D3c6Go/hF25TJeqQvdescLp
yubcgGjS2mVqRU/ZYKl4+2IRtxMT5tiBxy2iulECbQGTHXkdywsJFO3cDcpb
KYRhzvLgmxjKg+9WZlRbaKJyK5hEWqbvRe1sUUWbpgTH6V5O5Irxa5VkxqdY
DgHTerfXphVCc2Zm824FVBuP5mXH6ihuHmupBx/5z/KHW4VNhNGR3loYmFEM
MnSqEx1WF3knhrFdAnn5H/R7+ytjrBF2K8pavZbVThHWiJK4hxa3kaPVHmqj
i/Er6s9lo4oqILYRF5pVa/J5GNg6OMII3j/CULb487hL/ly7MXcQ/JRS4sZ1
jGISju4vnZyxQiMx2siDToChiNoiXQkNiZZDlq1rZ2HpsiLpBmhRPnCDssaT
NHgxGulBcqZFo8VYvFyMOASiFDqlxVhkaZBG8VB29TJrQNowNaYOe0TYwWIZ
IizkZ7uW04DksUGG7Gsk/HI1L+WVOxNSi5oRPu3LWFtqzUHoeNNV2RI8HbDF
RyXPUmEWJSx9UKlR7BeAcNQeLqTSY3UXABbwMgCQTd3jpZSFvSXsgSXQMQcj
1vWT8Fre5pROtB9PzPNlq5IstpojhdR6ucaQyED3T0XZUwV/Sm9LY86scdYL
nTIoKp3wjhIlQZNTpydwG4xqkirJkpAKUrX+uJdBahqwBBcx//jTj5Fk2k6z
L4w/U0eIOMlif1Cilg2374XXrNnkynggxa4/xd1P6Gx+2SdPj191KuabhjyO
TYLPOt2SZaxw7l1LrWzAKafPmSaP7xtCYWwQyLlyYdPqgj2+UCgqo3gYKml0
dKCjzkCG8mHqRGHxHr1s0+GutamPZqaFpPqWzRC2Jx5L1jwEzi0jNDSEDVvW
AF9noGYaBx+83r6t57Ga0TROTLGh5Y7LtsF6lF78jLy++zhNIVGFF4I0mYwn
NR9oIZx9jbOMB2Um2EJha+3dxrGeaVXA6GABMhaQD/CeOR89eop6Yjqi5oAO
8enyRQst8DWSL5oI2XpIwvgYVbo0lmxlMnZvTEb6o2MjoOiuazhrObhO/53L
aWN9qP0YNzw8ArdPfZYhUydwAp9OJT6nuzGpONr+Ao6KLA18FhpynaNbemSx
OXFJt+FFCcYWk5rmLgDgDFD5q6Vy0GIQ+z9KlS7bpMUUw2PDkEPqhAeGibx9
F3NY6NEMg2KswasiWnudMpPWRQEFY0HT2hfjh7CqotVYceb20REkodDZHIMu
REV799Yx6ahdXAWKwyMlRh0SuqSlxlFOzhCy0hCm8zbcEH6Rfq++FNfdo4Mk
xJGQJkxCN2YFB+NQstslYBHvcBd3biklTfY5Ktv0b/HxK/fQ7anBv6ANBUXR
98lrN2ZbSburlfBT18j8lJEotQY0Y0fXk79S4PVaA1XK1yVs39a4MJeb6gf2
7E/kH4K8GkGd6wC1qYBbPYdWxUx13tbecnTw8Qdd6BTOxFJziOs4IYJAHpVm
4oUmtNC8E+3TiMfuW0A4tCp/EyWprKJ83ytAoxWSe336FC7hGsLPloYDjyhb
BgO+s4OPwvRVj+C+qMamHe8DN34ObdKzc5pc5Brx0u9wZZTnRt7fw3rOIE4m
QxxusoQ+fa2e0sMU1NKuzGn0oEmAj6HBKZKr3MhV0vPdXOIIAdkCSLDfSZmW
CntLjxPviklKInf2ovt5n9WkDaBTsZ0Q2LofYHIVaL8hmGB9jzDvNxiam4xL
+7Yrl6QP3LW5iZclvnggO3iHF4qNViQ0JiXeWUZB+29k014SM1oOiOsgCoCe
dVD/uQDoKxjKpJ2kWnjhkXAdDIRSW60DD8iOzMWDmQfKLhSYey7AmDYhcE/o
EMDGNpCbpri1li1oB8oXwza05taCNhRFh3JEp/QYXaYYktLvkxDAJQrjOwoO
jBYUFk6kMeMyUFZ20naMS4RYUVL0uF/newzeTDt5A/2+Jd6sy7xyLdU3KWVt
bvxignYN2dlYrhZZbDG3BoDQwR2xYTVNhSEOauWiIo4O482E02l2BYPCTy0d
rSWXG+EoH9Iil4KyMdBia8GJha4mDp6xpaZtAKDfI2mRuWJ6nAE+sUW6fWPT
b0pGquXBjPLQMgfRloAzHQFtI1aJtKRDenoVWBdUnXs/0bIW0iB6R3PQFmpp
Qk9ROROgLCLIaKNccHaQvyw+Wlg2YCSJ7jWKi+WJxD/TJFLTEWs06QfuR7BJ
vJSBL1sW+5bWqGzljuX6iuNh9Jt4E1WD/pXY8worZmGyiUcohhuK+x28Vtmj
eWz40NqE3ZOVLW0joeEbVTNeAiVj01DzzWWdoDShq5heKdet06OGxMRO9cET
aZO9AFk0Oc3NJNVCV8OvLbWWLS3WZabIlcVjnQOqcpdGGWZMnQki6Vv/5MXx
Rcw3/qA92SzXXdEbpdtRxtOK9LUMzpSG5v8s+/WEXiiDdpCWAPJUJJxPVBA1
yjk9sgIwNUl9HQeZFXvtq3iqkoxnxP9cKjjCWsEQvY/V8viMw9IyF/3ADdT0
g7YYdf8gl0/3cjK0RY2eEC1pdzUcNTKLMr67fbm/i9u54XVbPiR/5EleA2kX
g7Is/0mgpM0AY9mC4NG513NAvlczAUe4kq2I1NCeIZW3bVubKFzk4xha6plt
pq1s0O+emTlWmttISdvHFDJVAXtbSg4tQ8bmiSsL7YBGXOcWk7b9DPqNUBA7
ONHO9v1kw5jyRCu8ENS3nwFPTUzk2UTTk3NA2kpN4kmZUv3Z0rC8EVBxE0CC
OTkROo8aNg2MumPZ0pzNeO83yHAfWsSv409sB+mMlzsztA4CCGK+V5WREHAN
jVzxZ+c0L1HcTOcDJonhQ6i2QFFraoyACs8xdF5rxUXQettaVDJ0RfPaUsts
aSZy784t7zFWZYhwGcXKw8HOGsCSALJKmNir6HKoDYY+tOzyYLYf1dvH1Fr0
TBB9hm9xDHDz9lp0CBha6l6DEoAEzrRObtZatmAK7udyiYniR5magrxJZxmy
an1I4b9W0qKMxQ5A4idDfm3ZJuIvJsBTAMaPBtWXoyDKAXSSVdYZo+FhhKJp
gNs6Zau67zfqbXMCHRaZjicwkkTBUChAFr2H52XVs66FlgJVG8s+wClZX8sW
H30l1aOPgUOq/HUABo8jejnckS90O/I2FiWfLUADEirqVHnx1+o3OZNa+zrl
60wJfVE6tGiFyx+CjGF0bUN50AqlG9e+Q1l97YQVax1noIbW888RIAvWwu3q
tyG865w+lWPhryNzb2i4hfqJ/jfI157USz+7jn5vfyj/VoD3owyJzgW9BYGB
/ht/d66oFE04BOJFWSyGkHV87zaBheeP4747Ml3fSwDzOO5v6rcQv0d+wmYi
4wAjbDMb5Za+I5UcLuoinBR8C2XPBuVEzkmYM3I+wLRFAoj4rUb0AVD59QCd
zt1WvD9lDJAV1uvxWsMGM6Ll8BRJl+uVK2hH0QIUokf266buolklnM7Q8mge
LCdF0ezgCINHZXMDLFvu3OUmZnr82k9mQ6SPMukOwFjP1rJO3Z3WhNeWSuSW
3puXGz8eJRW1IO3OXSPRqa+BTo/HWc8KWaXeuJ9G08Mw27oRdUIcsEiLO/u8
O3eWgHZIBQ0LDcX94y0Ph40KM/N0JTnyS1wVbHAE8gInUv43Wn6xxNBuLVmo
1MqZXZsGTNnQ1kawrzEWfL29dZZrwnRGcbVWxpLAnRUtDocoI5p3fPfA2yVc
zq6cfxDYPvz66F22C2r2MOEyWZWZOWF2Sk6jp/jZ2OA53NxtHjNzHKdFvE9w
/OuK6s1G5NZCXLZoY1nn7AS++16r45EAsc6OURT4V6coUYl0tgP4ZSNn2Bva
VT6/3FZKyFakpNiQKVNm0ZvGJdfw657FWqSf2wjbJw63TBiMIK1Buo4wRe8s
4QrLnj963uyZTa6iin2j4d2tXFsokvrjsuY2Pub6DlDRIwCmYvtEysb3sLfC
OC5cTONCWemPFkqNNjYYQUhHa+aJ06QTAd7bk3dpRtDGTtM+glDt+7lDo5v/
bp/rVoAoEqcej9ZVH6sL7bTeSuKlSx00bJlgk/lalvm3ZrLoudEQKQskxTAZ
QpJ2hiTpEEtxaKUL+FAJjiiM7zyKd09+hd1YQ64POaGT3TUoL7jS1tzuKTNo
+oxuZ0Wudb0Ju4GBCjlhLg1068Jw4gm9fT+XnJ7XwnInZ/fask3k3tHrzwKI
PRyk8ZTCRujYGixqVkSxM9CjkHbhAqGsqv3mlanPpAwtS68TqXZzemiXVHz4
cwp6plnhTTso0E7Z86okIOXAIqepOGXT0SpgBK2ErRtB+vRwg9AWSs5U8fO3
Zfh5MqDuYSBN5pdDy42hDAQJpbIHI3UOpE7iRWNRh8dGAW4VphJn2psMP6m1
In908Bbkfo724wT7ScmAVkUR9vjErkpp6EZGEXbq1iJsVXBxEHicYdMWivvc
KP9ogCq6sREFTwuXGsdercv/UeDn4KyER7m5bpCfrmh9x7aYHgl5/bYzf1Oo
RfUSHWhP6p0yvcQHtO+Gu7tFwh+fKA9fZKE3D9gjgzUS4VOtlvnB+qFcNlH/
UKsKCUwmN0pAMmuKwDboN3Z1i8djaFnFaRhg5AgJ6m/QKs42BIumD96xaBKe
6hQZKr7f6i6YNnSGX1S04q7paBcUCpa4khB9t8JqI+/9AJ4PAZWf60woJok5
+CKMUQAbDsbo4pEOT9GQk0ur6DhAQq8yju51ikoD3JFa0+le1poHOl+BQjqi
2+bDjthMLpIv2pPTk29SwS+0ittiaLN6dm3MdQ2g6CEgbS+gUmNUxGoOHjwY
shrjWOulgXVQ8CXsz2ZTBD1CVXGGlB7nCIYmYo/flnNWLkaVrwNar8p0actB
wi9W1dDC1CPI1cqg+w5/UOiP3TSPpEnCLzNuFYdlGUF9Y+pD7A1JUZzRdKhA
AtGPxdFpphLWPVJhqIjm1KfGf7bR8vSC1CLVpN9KPBeqAG3ju3uGoZitg6xB
yy6bi0yUu7Jaa/TLKH9IYMXRiNGDJ2dfY4jPj5Z3sAoenGmlBx0nLMcOl60Z
65eRUD/uGi4Xmgyaejxs4p7QwzmtlaGxqGx3PoR9N6Zt0bF2PnxsHv2EDrJ7
WXOaxPTbIvOhGR7Ibtqm9Mi6XVu2ifQ6w+QFVrlIMfXwbgSitruuWyrSmu9k
UDSY+5quS7CxuKEg3qOej+JMB2diO8erLTo8i5I3nHPji+jzvQXMLLwIz0I1
hPXZtJrQsIgOt4lkk44UyaIDuu8yYttCyZsbINFy4gObZkGSRVvJg+kYRVPC
S1PxY6dZx/f1jMdhZ9HE61AO3NKDFAnaqB2ORmu+8TubCUnza7ExG8dHxcJc
d0yzMCVYcIvXDcq4hwT340b//LiHnFg3gDR0dhOFwFp3jkSyy5lKKh4uNc8z
B4+LzKH9aBelhPYbgYWtZv7mcwheBx0zc3CoZFJHE4U71WSXUxoOgyisK5fG
RQ8WCiV80HKvph2ROSwiSaiSTiSWoitZOjvikLMunFzR9OAf725+mQIPa5aD
YolWaBGFvGiWgtOO3++Vi3NHHn8Xw0QfwltmyNU6QdZrrzMlBRnMhcXQcmOa
kyRag7resDzNyviJrs4BerfKy0XLyi71CfQDouDZBIpsVAz/8S+MoIi2k6+5
+kubk7RCawIz19c0a7xqZAwtWJ2UQS4ySy0+D2NJgB+zytpC6dIfv47Qh7H7
AOxOsdIbjMYR5OTkeaRUWTEEarsLl9wiuxNy2fQQMR7Bh/0Rhl3c2KIo0ONr
MtzDJtdDLFuQPRc9qhJyuLzTN3SuaA2kCfXTIQ1lfjengchldpdZ/PRJTotN
bIsBT6I/JS4QQxdjln2GK5qut5koV3G0SNPvk6eAxnf3fyIN6V8vBkzifjD+
e4D+X0cyJbKXmrG0CtkEmvoumnwE2dmGRS1AGd8rhYC8NL5d7KOfAvWuG3qr
jY/oZP1JlnO/YRzWnU2PMS92WrlWh7wqRhvywKVHhgGKAu0LFuhsBjp0Ue64
IMjo2giWk6lXrTH9fzGoE8k3jPDUqCJZItqkSLcp2hMM+7YY2uoDJzqpRiIm
aV5gSIdwzNZ1ZHv3svl82b6JBTCdvu+lDz1rSWERIWgSg25G4MneoFCo5d0N
5GOxW6B7TVf49P8FgB9hHcxgiXWgIlNSfliy9iRJLPi04bvHKmsLRWsqNR8t
NwB2YeHNuHSR1eWDUthGfVy0TFLB1iah3uyQhSxia+WpXy4cCUNsD0DMfT9I
L6JGIG7s1JfKtIAgs0kDFPA+q9JtOzH+aPRoPrS8lzMcSRULR1tbFOenDMp5
VpkPhMXGoa9oWznaquO7iFFsJFmCiGnjjzhR0kH566+/fnwfUZZrW5RV2YQc
y7v2LAsL9FwIUJdAHsuAhLaH8R1dgh1O51uagkQy2wDVukmq1wPojb32wW/Q
XEl+fK5sqf9uORx6X0LSuwTUxZMFs1oHIUX5oGUXhjdPw+POhi6PeOBJ3dE6
DfIhaBCSCIO1XVoQNnagsBEFBRF1EhO6jKOYnwTpXIDOIuejx70NaN1CjNg0
POaRM9lLnwIVXOl0LYa27SlngoVGSZl/pXbBCmxy5UpUy2mtBgVqXbbcpS/2
5AgHNZ0yrSE0fVrDfcf6t7YA/YsaAjKewo0Xg6at5YoJBjpPgdZHymK8gWQO
pWQ0teH1fRgg79MAg3s6kQtFV3+Qjld7pwXJS0iZJPnicNUfbuBCIXItdNwV
F3i1hjpwGY3fw1n6LDwfATbof9txqFA3mYxpyaubfbH0/q1DE+TRRvq+5GHo
3HgKafzZpuT/ANRGdxK5yYVWyaqXbMyHhF3OmaokGPeuL0IPyBRu+QUwzA8T
UzLEkAbaAFSeITi0qah7nZzSDgqZLcgCxd4q62XEJ3TQAnkKfeavm5KKd0p8
Ul0pU4/5DKD6YMaKHrXkW7artrQG1DSanua1EyNKUX+vwETKGwam0+Pdl79P
EAgV9SPd51ND43fUq64B/AmRnYqKyRt90f5RlyTy5Ovmi9AjDZt3CnaRu7kj
p0+oI6OminbZh4tJF0rlKgYAD1zrFMXgiCmqqnyQqtDQDU56jNnDGTODIGvj
mjV18hLCZDDmEKtjhFYtmvo1uovqGpCGdimViR6loY3j7ohFGr274OOLBPsT
DkjYCdd7WX1IxLc2BNtCUZ+K2EdzbvMe53TPnj3KQRJ3HJk3KC/JNNZZQsXQ
I2CVUZGAWLRsLqEnLuFFoUJNjXZpXQPSwv7ZQdM6C07I7+IyRreLxSWtRMrN
9iHLOKlzJGOknVBXOMeyocG72GzMv92m+jsxTGWmpPUoXr77PpzWiPIh5GWo
SLwPfB6aD8CM52AU2BM0uxGPGBIO9RnzyryKoGvHalPtmOC52yhczDj+e7Nk
jvZU1tCrChTwBTlGlm0iUNbMu1UiMRa19tERP441MWnTbhGXQzRD68+dzrOc
K0yQ0TFEpGnRns7SsinvCTkfPXKrcmJicye1xHCoJtQPCSQgvZPAp88YhQj9
MK0zmV0B0vgSwR0aqI/+Y+tkh27xc1aujeA7EfHDznIDXkYhSuOGn7xfgyIe
ttgrU2Y7oG+AQN0u+KrzMI3aEDoX0RGjAjtOKEG2ksgS3DezhSx5/mbrG/qM
n4ytl1tu7mexj+nZO+Wrrnsc0Z1LRW5+jXCDSkzkWw6N0YO2s5eZUBpUuU+v
OsMhvssZgNS20Ry3xASg9E70i5k78XIXGtGJ53EVED1yy3hXwlTmDw3O0klX
EENzmV5mGY/ohdG0qdfycr8ZmveWBUCgu5pYhtm5w2xh6ER7CSeFNLBAW0mo
DIOhJ26fC9KQoLnPH254yQFdUxsD2mpmevwEPX1F98bnPps+faZNIR4w5Mpe
B96ww/GpVLzFxwBVtlrqUciM9rJNhNyZFHUOo/vSi68AzYUmCCtBQ7PRg0Af
brlp+hkMmRAnFbp0QMa4jZy2DLQPHSSsbLXDl/ohXIU4fvU75POouqVU7+mI
mGDk0BQhJzv0okCdud2zpNtYY5RbgZctS7A1tynGvCiCfLFRKS24yYeWJJmD
XqCTQ2iNgHGB3TnV2/GSIz9EWbIIpEz8i3QmAog1cfwPAdp344JT3MOJdx1O
TQ8jp7I2yonhVhYi0WgbFuwnPQ5t6Pa+ugNITM/ORjL3NkPF2Hs1yBdO29Uu
qGWpPJpYFnE1xz5dSzt+m4hLW1nk3mcBfnc19FqOCnuJVNREXHHYDJ4Ha4aK
bKzwEsMf61SVi8rB5ynhXtPiBQBWpl9tuOEcM6ksQRq6pTjMCa1doP0trBjH
JGk1UyvmrYAXMuatKheKikSKkOd03cMDdRy2B91twIdXTVcMLbiAy7kh5F8P
EZO0qNtClCNtg7LGfLbhuGFvyAq50Os0Xorlq2nL5tpZPceHQ9r41+VCNf0A
Q02aixVpGMs+B9ChBdMF0ZXPVlxsxSTKzhiI5VD/nji95zaKolz1Q/mCH3LQ
tHCGU9NuiSGotzTHfCgM44GMVjNyi3u0LFLqT7QaWqs61GUiPaQrk2I/fBZg
SvNu4jMKIB3izS5ivPwx/2R7w1zwKoKI1pGZA9sSjM8ENgDKXXFQiUv866Bf
2S8JOm+xCfQhQOyCSRu6xnwonMBWEiF4fPQkN/iFfd3Pb0kOFDq9YRWDLvny
mTm6m4Vb+7bk4A3gXHuTAT11EOkMSSIhbncZ0C1MeEJPRJFgtCyKOphvLYrU
b1wUd3TcrH50D9SG15vW39lrNUQWoFM2yNfiU+0wdFP7XDYsmDmHfsL2XJCG
DoUh1VXOBFCNC5AvzBJNUu4QRmciPSgtZfk++3dfpiQy6XMGUWM6tSApMUBS
C2Q60wp6vAYiOlMMRXuQrVFu/6FS5UobtrPo92QOilbAzgN4o2CSqDdd6lVn
WRA9RVLcapYGxR5kphX5vMX+XUk+KGQ3On5+poH1U4AkHAWELobxc1yFfAIb
XL6DlkDzSLSpxNdG3eRaAubIPHvZwogecCjDh2ZB50/DDaVjZSj8mKgu9wv9
kVNoYkQ3bKHrj8KFmOvRMxsLluUOyu2nvEMoi91xaqHMVShjtWhI3m/lzwZf
0U3g4XSBVhBjRGrTHssg061EodZvwmoQnMXCjsUB5HMAMXQvLjpIxxPgXXX6
EfnOHEGXY3lHvL3l8wVVuMi7brS3LJO9lgetNKJtN/cEaVdmLCkdWEzjO5pu
Uv3h3kUrs02J/BEg4fyM2vgXetbZENrdmxRq+a7R5Hf8SvzJZFdqTX0JZY6E
8XFQOBuWGW2A18vqI5R7OBRreTJhVez0L9JEPISnGYmhEC4+HP99kxTvCyp9
QoJCUZQ8VEWI7727eqSVDi3mK+uOJc/57eKFSP6s+YQcM0wY6PgE4EzwFekw
FkQ62Ky1jP+L/ZRkHBaKFOnx52yjkhB4o5SMPYNRXlkW5zrVJgsUkiusOi3q
7nPhZlT+0PPr2LMG2ta8A/kGkC//IoA8Cu86o9xSvrWctjSCy62ULVNIWd5g
/8o4jubMnweI7AXEoniYx1oFbRc6E6AA0oju8MEs6SgtpnSh4T3sHkOroWKP
IFunzfWQnBaGc4N0m4w3pd9iJqOoEicamnqDCdpnLepSWaTsOR0A3MgY0388
/m3R+ifewCHQlqpww9XvTgvxbwzOPUDanUAaMz6NG+M3lWoctV/PaYnVTHFQ
GH9sWKGjtTohbkH06h7q7H32SU5ROkgAoiOSAEq4Y8rXmbShDTbo8nq3bP0i
qhkhpL6BhBAO4pE8lD9jih7iEK4runILTFcYhQmfr3gqjVQp2sonnqnpNuVi
w7jG8dWF/QADP0KK5mjuDu1O0vd5vdZ2xGuRGHw6SEOnUZAaQv6LsP3MGOSn
KQlTdCUPa90thIHasJs53fM+0mm1mHISnY7VK8Zi/W5+FZOVinrcV3RbJ9qJ
im7FPQ3km9FJKR9yUxcPB+HiUiiZX8OZZ+SRPrk80L4TTluPGE7GCHfjlo0X
foZK5mHgMODcMhF0+qUpiAvzQv9qpXw2j85yom5xZwDFdXC5UpOeQhm1pNcC
akUCanBGzfXHABE0G9MdXGM1o3+8zOaQGOg/NPrrbCud1hD4LQtkzlQtaNI3
5K9H0kE3jLvdhqZ5LJ3u1k501FIdALKmQ8jIVSKHdK/6ykI50QgLa7qTpb1w
m0sUQwjVZmxhQ8OOTAxta447hxCffcYm6y2JV+jg9d1BGlJLawBe2PA1aJpc
XlxHbL+Cc4PzHW8JfwIg09fFWNDDBOSzwIZcV/vstQ8zczBzjxc2+yFAVzEX
29sV9obu3gj3itemm9Kaj6nolKCvTVJNr7J/N7isxiiNXfgLzfhgD82cFiMI
PwxWhtTiFNEHKZMNxzSb5SsrDhp99gryLQgMXfCCgtBMuJ/IRZEuoFofAZSF
JKoyrAnDa+mTmshqfUtZkIpajNXobXJo0iUaRNFVhvhSJHKirWbkrwtS0QJA
gSXR/cAoNsqdAJGngLS7gTSWip22V7goyJTY1BrVgdJfBUhhJaviSJ9EHKkN
0IC+GGva4oYusVXGnGovju9l29b4N65pDS0JIxv9xwIcw/TESEcXhtwW0IKm
VuiQTF877YxpBifAsNax33E3el4J6BFxoI0tfwLQ3WWU1puYbP7leyNaDgOO
PK3hoid88g+tk3shpI/C/gpD+85WAt220dVHi7FEGD8G/cpzvckQKuon6Zit
GExYrQM6fPgtQ0HZabxpUAoJ++zDqSXLZilmRcYHRaEIl04aD3xK7E6Guzpq
xl2/2UMMGaBhDDKVQnfW7wvcSFR+t30QRe+3SnzRal44ROOvGmeHarynEEbx
cHO14ZOMfQBauHp0CLR0p0rofnMUcBF5mp3fSGejY3JXOWSTy128rOUtvmmq
LXI+VfQK+xA5X5q/t/GwM8MoKZcOzG2J1DKEJ/KDbHja0GIf2t58CcVLRVHy
g8fdyEGBK30bNfJiXQXS7uxQDHIJREx5dbUkLOB2esNWMklijWHf6iDbjQa7
DujYm3Em/CTuvQLQb3MCUb9aFIj7oFwL3cFxM+bf3b4ik6XbK2ixeG/+SjgJ
y9Oo+gqAX1b6qZPzqJoG8iYc0NX0qcovd4oqO32oDby2NnML9jVeCGgJzXbQ
fChS8KWez2AiBzNaNUBT3KCfLG2DCD6sb9MRWISROM59Z9vCqA7mLAw0nUXb
XPwMJo9B2xKHRlGN4ghLFMYadPbojlbxAf6amHscKIGin4bh2dKLo5tg7uXa
psPzywQoEIieKY3UfYl+7444EJX9AENAGandHglhm3+hGQfBkbUgyzva/uO3
ywF+5c4wxjanjX8D95f2dhzIh9Yf75zzUfr+nI/Kap+PM66Xc1pS91uye1dk
8eTcXSeKPrp/pRwpZolsWr5BMVczMaLiq7hIufiu1KsBx5CRtAT4lVMT+u2C
jDZlV19gHFylLc8wFw2z5hdTrlodXUVSwhPR417FPFMyA1ObUmSqL1b5UKHN
OgK/phkS9qAtKChf2NmjMMe/OpTE4roL7wh66kxt32VckkETsfLzlom34agu
jtLV9zr/HLR2dF6vfzwpp9F/VxsW6DR/4JeloXDE1xj4uHnOPjfLC9w4IbN9
uNjrtTTRdnV0fKkRMMNrOaIxnRehZa9g/C0i5eMPsncltsOy5UEwTJMWiROa
fC/DvGhRetZzGsG5EtTuIXdQEJaDoARDSQaCvYuLZ9nCSOw7v0oveYlkjr0z
6440RHKAv+7EaN0IKadzQvy22HTdAXALDHA0eT5odPoRjG5z9mMf19L/kzDz
CfS9m0HIjT9f22rvssM72ac6EMWh8TsFLpDAMeDTJ43CzjQIsR/NVdFK80xA
2p4UdmUwlONaw9GHEuRKct1xnTPLoHc/XGlf0Twx7Ky3UoHvNmoK31PzZv0E
+f67RlMxu+OuAOWCq2rdWx3wX3r+yFzIXeTCvc4wCYa98bTctUdpYeZuombG
LhSylpdbJBK/ebRYT8WbKxx04kN3SscRVVRNl+FE0ifsrbC5nHNgjo2/9zh2
8eNcm0UbNO5rFaO1+p05jUr0uZqxvC/Ix/q7ux59GUBBow5H8+I7OA1snLMV
1vjpN+k3XjkKse7WFfU6tAQn9aBc4CHysOG7VHzdhLkfvx2Sc93dgU7M79T2
7m3ZSny7fkOFEZVS2mVOh42Q4dxH1icvtg9ZKyfO/hr93iIQKXKNk1oc0yuv
SxHKjOYsiD60BeT+AGsPd+FvyPPnQnBns/A/scoH1AX4Wk6p0KMbuaJiZrKm
DE+K46OWqSzzSNiUEYg2YSMwx+febGmqg9d53KJB9zc/QEiahqrNShmZKlcZ
5HuDrwv7el2ulx40V0K+53CXtAkUsXzSxlGwhcOWqajmGA85mRiy9lmZHq3E
yHSoq1HomBJIlfLrbWPTbUlZjZZtiVSj+8IP+lcThVg4qS2LyFIvuRyk+Q7V
EsyfIOvyVRwlXyT5IudFpSOh/JIgPJkVBX+cUhMt7Z1VKEvLsIJQ0NVa6CDi
gyhtkYTSoopAwNFinc+QUMivg6CE6yIU+SRc6WzpuiUkDrAv8jTDj20b9fAf
+fIL9H93UqTX77bsqDpWSjVXVFvZLXpOPlLi47Ze6px6wPgBBYJEWxivAfl8
HQM1+TCQVlMptY2yokHlw93ldM3G+N9W7C7U/RwjB+dC0YNi1IwPN6Bjlg3P
caICM1zR6jxaL3gopVF7H8OfqqhdC6ADNUsACMU1RH6Ay0DaApSlBQ+y0nTN
MKr/FwqUyNsZtv8MkzMdCHxJvbi4bsGST5jGGnVoUwo6Z/AwQXq81kTLomVe
JI0DXoehr5ufI37XAFzcG4zWHYtPndL1BFiUxgsYypGkrPdTr/hJy1RkwBAX
kc7x5xbM7N0mxGJIxNVZsD3cJfik4REKtRFF/EIQkqXwowVpuoa7F6hYQlIs
29Tv1pOrQQ7XLo67OSnvt3Ntzn0U5ohuqu1MpIIAoj5BR1g7CzzuuipuHNdp
aAfvw73YJEjt0r4dACXdgBMOp5Z+R5C2DtKudsi1qdBGZ833fK5tnsM/wtX0
JlS+0F53YIxvaJ6EjlARAPTBJUBMnV5cpyEY6P8lgHCPzAzKh3Y3orLC8NR8
10G+e+U0qiPczWGj6vM9zfgr6h2x/r1M/HRqxQbSzrGezfDD84JNJRf5FSOj
E1lohYxZvj40b0cKbGQ7Wuvx/RR40xgab1PapQYABeEIE7TJHCRqbmE02Jhp
ZmscR9/FlU51eIk8zmb4ZodEuQlB+THITz2kmZvijfaV1bx+HCET+lcDNtzN
AZmwTjdAnC3LHR3UQAy+1vPZXAQx+Ns4bVUG3+wg8uTIj9wVZm7Q78nG4m60
cATjYVzp+Htnsjyb8HZpJRFH0TlsHyCRbtgFStzX81n9IcyWDXff6mnGtszR
xGwKA9mf6nDf7LEPIZ1IvzETMhjV6k6KqNzDvvr0XbajJd2AjDw/3oX2xnyt
o2alwn5fy/ctAnlF3n0/VwpnK6xhbJlA0UHr5I+grDsVu2hjmOkf1Tk6DhWm
v1bWdwShzR9oFxuait8v5yPIIRISnXYy3hEzZCRC0Vg9plJRkPfN7GpCB4rJ
gNadmIULTdN0HWMjCmiefBcAcoNRbTPtraQh7l3vkK02nWdGPfjNxpgZ7r3R
MhXusSu4x73UeYLj0sT5SEA+qr97PoyKoqBeaCO2x/RBgYNu8DQbOBDDngfw
k67q+0r5ODK26m8wNMo6BAqe03Vt3eiZjXXIBEM7/511+8FXdDYDbftFTHyQ
wxs0TafV/39rVwJ1SVGdG/hhkAPngOwQnX9GmEFkSwQRDPCDCARQlE3BYYdh
kx0JKB4esmOCiKgoBBEF0SBC2BxFhkWQVUAUUYjsERWXYDBxiZN5t+re+93q
r/r1w/Q5M3+/7qq7fLX0rapbtzKI8ut4IimCWHSFaZdN1YTfGUBqGkC02EDU
WIqizrF6yFZufaL9LSTHLHvL6ivbKL8USbezU7bnsJXI9Djenxm95HJPITw3
Cdc2xXc3qYuxOStfn36a46IP9C2DbBPLUYSyklwsegzzWdbzOhsAStdyGrh2
iXmFB+xLsW/GaPDCq7OSEu3+L39BUdYCv2lB5qaYrjjcZTPE2Fm9vtvwTURr
x9i7ODbtlyezBiilBs3ELu649CzUn4yOGogo8BlOItrGczrQAZt3ooTlCMKE
LZGzcK4ek4UtP6q7MVLxEXphNDJ85NmxKYda/xyVtKBetW/3ldetsRZboxLZ
jjKe7IBfFk3V6wJbBgGfIqPCPkB7+LOBPlNXEuzRj6GYyINT7K5trR7QAUN2
BQgDH4eBbaeFQaJSonNOLK9XHGa9wBfCcsHq/XCKXn4dTWEo2pJPDBbdycEc
DTbA8Trork9QC6y82LT+xkRBcPWzOrIMeTYnPhMesJpoPezR/syaROxDAiQn
1iA5LEGi8heQhLrhkLhbF0QttbTembJOhW2uZIcz7u2UY6dWdKYZCLLZ0JTA
V+nLxC3HIyIWKrbP8m9I9FkvyikysdgKbOvumxLlxoPo4Nt9IpUBQUDSHlVH
gI2Tjk1vasbe0SZToYC3qgxDqN/rFtnsYpvHGY6sgbDVnP0yAphO/cDmJmdN
+XVkehZaQQcq3vEV9tvxnXgUDFhvAFHCrYm4octi9DEbhA2YD/BnNqQC29Q6
zSNMt1UBAK/yrF/4R1C7acDmZ2r7XhWmrE/5Mo/qtckz1hoO8mcDfQYN3J59
gCpbCHxoFrNlUn1oHLV9Kto/bltkkRq42Nr72paDuQrMzfI10Pnp9Ah2fr2U
TchVLaW0pDyB0g2lP5lQYlNLLFrzFFGJNQ0W+INN4B4Snw0IHPKLmfuxzYdO
cv/hfxXDadAfFTZ4hy0VhspWiV3D4/a8keDDsDjMKdszddHE/u9wovDKdSz2
cSxiR5BGH2YzqXysPbBR5GyTlrn+sCVhj8DDlqEO9xzW50FwwXQOowp0WB0D
db7GqrJXDYOz+2PA7H7HIK+ehIJnu17ZuJ2hARbLoPFBHnZgqvthRNgOLPLE
K7WTPhbhUM4MDu8YZzeGgrWI7ewtW35iLYLtwEog2GLn/KZdNRYKPUp/SZQX
NGu20XlJ8dJYzoqHauam3Syi+PadinuAr+XJ28PsbdoGM2j80oSDqPuhdrcK
aFyAsYslKiygC/przaIHrWny5jnzUPurfUZBhcWkSHJPDEkrEMN/sI5gyRc1
5Q7pg8W7CyysJ/iUcWTqs+/ZGi6NlZY6I6My65K8uRsIgC1Pnh3kQGjtH94X
M4wORKFttjZC+49dQ9BSlz5axtNFJkUHOEHpmZkUCK3YN511IzxjreQAo1K4
nSRDuhXkfoHPD1Ag2HpdWn2sGlYXgwhBNuZ8wCLjz3C9BiruzkTXXHVClfDJ
cuYRmQZRE8PX2HLSJ8YWLIdZTOGDidAr1bHZNvGnttWl4wAz2xJDZbHS25Wo
zkaSs8gz9SlrylmHotpgYiUwMPXmjsBFEr3D0Yj9yeUpoZLVv6z9eInOcCBM
Rl9mYBMss8gz5uP0ftdSqSeieXPcIMsnx3YtFE4HZdibxEoRXm1Zg+GKCEOT
eTN3KFaS0x0QKxz3m1mHKOofJXaM0Z6FtpkmnJ4u3Ww2NQ80rWJfEVTfLOdl
9tRXooDyl6nOIhNPN0X4AiYbYwQCjKhv9gXvo9iNYs+ttfSAChChGqdlg6qJ
dfV4WIQazWLgziHp2JeI0WOhVHdLiiGP4T+tlXmKVpL78DLDsZgniqtRzOq6
NjEqxxwnERprJBoVBLxLqxa/vGVRxXHlN3SHOr7FyYj9iGgr1TXfqNDcOoPr
k+bYH9Y0Z4dc7Uu0ZF/XNUg65hHp9kjhKp8+uxOKgRLP/EOlXxFgEJV1aa1l
Q93UX/mZJhg7iGD/xiS2azZ5tgZ5xgLevitr28SK/7cOgu6THz7eZwQIdOag
aknNM9YMBzCTrNDYGQC5n274AIO5aqxCnu1gVIomkeZagz/3MOPeRN0OJPK4
kdpNt/SBIRTkKobC3FL5oJS3o1UJNLAtepjErQINeAxiTDU++p5jusRuoG34
sm7gtqgtHIlCCkl0PIQgsCZ5NpPoyPQWGzaJgGbA20wcHUw1UA327KN0CD+M
St9JlJ5Mdw0/TEHnNZoRXRs72WZV8mxr41Z88Tcv1VZc5O0epdo5UbvHqhhB
d+d3TbSEHQa3dMDp2mD4gL1lX3LvKtnBcFsl1khv0Nh8rSusMglDdWZA/Vas
q55M1KrZc+8o7V8fRZDLzbQjyds3kGes5jMv5imjXHRyurWwY++u5E0TabHS
rwDo+A5mZvt8rzHOJtZJMRsfyw1lMHmPdip2ZQDalaN4xkAB91zlkzDKG+xD
eRd7vIXw7iNAYS5BrJN4JCq2gMIT1GFhBo41+VnXMMPessNFkw/jhNLTRrGj
CQE7eQeaaVeiY4f6sP0xmkg/qKlfEGBNvdhrLbL5Ci9rHsy60BMfG7jealSK
JrNTCcqggTrBtgJHUEJ1SfJXDaXicPQqNL6rgh1nfgJRbzJSRmhCOnaIYI4B
P2hi/+oTzsXB1CLEzvY296qpSVkjW87etw2l4ni0KgweBpydVnpipIIwjISG
HXq8ocMwH/i8lwjGaorPSXNAqtG+PYh1ISTbFcEO0YF4AVY8vlA+SXJM2lt2
bK67CxQmRnaGCx2pOmsg851IuhUQFNPdwxUVoDwzDihsWAhReOLEy0kk8XSC
wnSSLqMVqldadJ8YcsLW44uVLApSnqOvI2T6JR8KbpM9Dzr2BSmkY+GbNHIA
6sg+6ZOEHkuHnkeh4903vXCEphpYGdTFKOxdl89/I0JpFqtquv1MXpvpNsj/
2HYtNqHE9gcPTCXWfNwQ9juY81ZK6YVPTsIuFoNohw4QRG18wyy1X/ZX3jcC
+/lrH+1UlNm8rCWl2Z2JQRPHaYcQIYq2IiS2J+kMBJnRy52GtYtfd2rdtu9E
Q1bQp+ccDVzsC9rRf7RHu6xnZd4ghS+05PLYaq3+VPqRl52pak3VZkty7KiN
M4lizG7zLW+ThHIa704g5eG/I02ZIjifXL5CFe0t03V4/db1NY4d+obCeI3x
PNukZ5Zj385vhmuJ9oO75cJ2HOvmtim1hKnYBbkHa37TU0vmguJankP0YOMo
9pFj+nqZF5X5g6YTeNQPNJv6GeGnLzdnWOofqF6/iiSquvsubXZugx6Mgzqx
2RU2OGNmNAk2PvzHjFgWeHJrokAqPLWntJYLmZeiVAtqGHRH2D7P3rLJNJ+g
r05CsI/4yUQMdm7V20m6rHGxe8S/W8DPrhMIHRZMe5oROD+qjeswIQebZihO
7vXP9ilRZvlVxC0WIltmolghstrgKm6vf15Tm+26ZGpr7Wmg3POpyYEeMwbZ
RAIDpQjLokV8WpJ9boidbRmn7G1u60UINlH/xVehfhBtgqh/IUnHFpX9oFQ2
M8eCYAm5M00xEGig2XxSNquddlsNlSjsUpXvBKIqi8TPouB82oRk5csMF6Zq
PuhoSAb7tnMzSazK7MjEzUqVi4OxJPML/ZX3eEhQugbyZ4gCuXSZ1RYAYfNq
bvsWHR076a6o6JJWt7mjCq+NybGje8FlNTkYCr5Lj23g/RzRmIX48hM12bpL
9biN84lAxaSDCK6HVbW+y54ce7vnXIaBasJ0T3JZ5CC9lLXku8SEZW5DzMxh
izCpU5pQ7ZW67/8v/FuF9aZ1rTU5lvizPbXOspRasykN92SrFjpfVQ7p/JNZ
VH0PHlGEC5VL92Niv5DV18lLtNifFmLzjY5dxxuXVN4WC36YyuS5jCjjQbdY
K2frTROuvlJPBC4uVZ1qoH7rvkmiqgKPZvtTo1VdCpIEzL9ApGbmvds0zHkg
DZkmBk38VH8+J23X2Fiz31KgYRMkaKDDIZLKB6JqMGP8SyZzcdSRvF1tENAY
WOKZorQUnUpp74qPckaPjDFih7VhqaAuXWI39WTMWChYzF2JMFf4M2smwmB1
opsQnjlMN2P4fIbcDZ/NGOafbYyKpi156wcY2UQxdj1PdGpyXWPC2VW4ybPe
QWxpkTVJbZpMy9V66HujRzSsQKp63nnUHsm4mwh2ID8uBLHLW9V1loT5moLN
M0zijb+gJ5VoySmXYKES8muF4f+6yZJIrYYW9gWPR0GEUQE9ChzaOEws4Fep
WPWW619zduyhtq1L+jpPbu35sZqkBVlWXXxnxKTdFaU9QRTMUrcdlAuWWWo4
uclei9SLLuiWNTBlTkbZg3TQRNN3Gsl+dVJwoQw+UZWb3vSojiD7Q0fLyHyw
JqngxjYXrO7yadkM75ciSb9mUvkUU5ZP/ZMRv0fHka9AbRaBB479jV0zi0nj
IVj1aJi2pVmeEimoft85L+iS+t8IQMwESp3mxKCJ5c/GX9cSNhpGkkifuYWe
7GFRm9gHLABJDhVcERzP/w3NjQWMu5aIyWak0oDWPJBx/PbQXyV6kAamoodJ
vDtm4UQ9YHKHwLOiwOiyohxE5g8SEtfnZ6iT+1pAAHK0p9gWjutNUo21i5Bk
SXMbDy3xgfEkDVhOEkFwITS0RDZHcINJ7d5VuQardzKier/LagZFVVaRgXkI
puY1gRoP/+kxLQ1cN+bsiOVUKWn+hoa2dq8jo31cF6pTDSA43aTH2MyhmbG5
lZsJ+S1KWeEAULMV7ukp6w0EIDazCfvMBg22MLaAd7NJOOWiFZNutvML7Ybv
SsYFXbJWVxKTET2h0mm7YpXlG6V8ZEZGN8KHdnV3T/nYEsAS9rYodxZ7b55J
uEVdQt1Xiq3pLpOQxYe7ibBi8xrVsS3bSfKtrGx7Kwyb6LPTlBDXO3Ny5TW8
jqvL37YSCpGKA+60Lrhp+e0MBKKqEeeIzMUYSV7fEWWe6pRZmK5GpGedKguX
cQuhnINu2LRx3m4xfH97Sj7oJRwzYBaLcskvtgfx2yZDSxqNkIOgzY9yDWpy
ab+HrNLEgUxmLYD8LGDFfJNFIzG2p8ItchE2n1vHkU/KDvy17WIBRm/Lz7B2
sVm/NNNtMWGxlejpMv2FU7cHFOR2wnSTuiAaShBRyi1+apQg38hkERt2UtXt
JG+HSH8fsZFf82oiSS2YR3DY1nNYvbnTcujpZ1hcmb36COPndp5rZcR80T73
5g0/J+07ls43iuUquoVLYd9IaBo1VoVWOgxGpndZjo1LpilNrHrw4SBMv+lv
7WIHdH43p8My1eBI7VVQO8QZq54abw18KQpBBOht6uwDqw72b484yC8wmPuw
D5DfY+k0XhbikNwc0LPBKlceeQ5aTIv6yYphayLIvSbIRnVBVAOsetdGQaY6
BREcVJ0GiuF+Y78hyZvZ5zobKuHX/1/YP0B0/jsTKZd94e4vCFzTk33uHUMx
bJXTNVAMD0QeXBCNfo44XO1aWV83piDh2YPGtMVeA4gjDjrT1ou9FMNWnsOK
4SFjpQGCWkuVrTAU8uurrsFAiR0zmr3c+XG9GtISa0GaVtLIHcFuge3bnUxv
8XR2TeV0DZT9IyTv+nWRCmdoKYarnJWBegwhcYtpvyUR7pFIGQUhHkganDpU
xyuFwVCGYzvZZxymUOBH09uFGda3u1z2GgUDdb6ik5Ua9ajf5sb+h8ZgvZLV
rlEr+fXF/KyBTpfBW2ValLizX7dkv5tran3+5eOwF/10oIiC5Hn4UJK6nNFe
HcdtCtbnXza2IOzAgsdJjjeRZ2maQTfehWr2+Z6C3EpwYMHEH08CL8yqwSOI
IMVuBUHlUtfPvgMsVOt8Q0RHw8j+x8Zel2uwkDL79xMcLhmbPTs14Qljr6NN
wl4D1WJPmNkb6+F1FGF/m6ezi4Ulf5Kw9/3CuWLCBmurmOCvMniVgoQCyWvQ
LDCNC7JPShQK5LPjCCIFwg4U+HdjtRbJmwtk3/hKsLjIifVkz4rhKWM/m+TN
7Pcn2n+6J3sddjZwsTDtT5eChAJJrgAWFRVx+FQWDolVBREc2AnXz+RnWB3V
z4kIclBERH59siaIaHVHyT4goo49yEoXPFCkzH6u62dfjgs62d9JmLJQxs85
ZVNsDaOS6wPsvrBmeb4TMybjs3/ecrSYFnFdReePj2YqkLOg5S9YujeUrA6L
IIiO543HKmj6H46XleSMyEN+5dL9QNRUfqkLIZL1PRDfIW9ZIOYXczqsZjPI
szSnjocJWDUDb/ipIEihnyPiEcV/TnTuYH+Uk7Vqdu6rY1+UffaVnutRJzBv
Zp8/rqHCnUOIMfasQFhk2F+YIJN2l2vBMREsQeBsZz8Ylz2LVPySMZ1esj+O
aH9mStSEoolM5S07gzvvxQjl7EECMtNi7UJ0PuOvZxoq3OvIs1ziJ0Sd5ddp
nezvylo1cLFTE35tmuoOGcQh+Yjozstgdp2WRUJiR9QEETFZ3N3fGns9m42w
PzGyF/BfJslbrALk/2msdE8AiplZ5ahfoXLpdixkdXd+htqzSfaXCavVyLPM
/sNEU90nNYo9iwj9u0jP2YOXnx7vHCoXaxRprXHQ8BWO/zKyLQZwZr311i/1
YRCgfMXIrur0TOAM4CBnxJ75F4SVTvw2cLHVpN8b08L1EJmeml6FSvMiSX6P
6cfirv6Pi27VAs6cN5GWSH8+GhmItj97tUxDjg6mpxNNXyAk7iVQMifAPyTh
5mq0uqh9ZnpGZCCvnx+PaXj2R2O6kt3lkjzLpbDq82yNlYDKfDH/bGRXLBmc
TQB8ZjQDufsLgWj5ksE5kZho8TRhcB8BhoUozEzZjsxAL5fVx4h+P62xF63W
JoL8xbSCA6LtbdpQqfZe0NTHrPcbAxaAULgtYol1Iy3hcl5USH75VIVO3aPw
eZQYUJQEi1o29XnHksz8dOCAfeVPXh0/FultWSOVC+wTnshqvE9EPZDuGu64
KT+yZ0bbZQ256BAQq8WPCBfmvrrA0SFuO8jlkzGR6POYJXqQaMC2UUiCJSyb
bkhEzrmsdICPdeMHkZ9oNavGZVrJJaCYkNX5jFAjsmNrKFpHkfnECD92CPIy
dc4XeXKrG2ydgCHL9uBJAnXrRX66oxqJZhnyXFaoOQ+PJ0Mb92Kb5igZPheT
CxYP1WSQEliDSCM/PDTM0naXa9MlRNMHO7lUMV7GaDu/zOVfiC4PEC4QDc0u
nRlo8fMoQAzZjKJOl2Nrua/GWfRj+3SFH2stumWFcL4svhJO9xISLc7t8mO9
ATvMOfW95ZYdQfsekvwhwm96ztuUaHsQqg7OulqEtelukrzKWXCQx25jZIxD
cWV+XyKa6hi0xU9oT2ZiTVm6hU0jd7kkr4xayS+dwevk0i7JFYgufiZH5vdl
18r63jsIv4cJF+a0KgnUsbr1RUHOX3HxrO+9rcZZNGUuqMLPrVz2Fc3llxex
Q325lSR/ZDS/lUt+QeC0wafcHSM6fpvwy5shArIsnon8WMU4M6skc/4a0VT9
x0ZxZh7RkoCN6RetPlPPjdAjfbMmg6DN4hgg55DNLc1curCvw2rTN14dv9WN
dovLdQTZmwkX2JZjF3OalQQYr3N4O7zzX7YLJlSkm+IzZyqqMf9iYfV6YNXG
01zTg3439GHVRjF37kpmASh0I1HI913Aliu7WMRoSTAp2RZ4Cd0cNZBf13XS
ZlHoJAHst7KuMeMENcteXRu5CDos7J+XeSJgxb1owmiALXqR9OebDqa9vqbO
r41TqnyLK78hIQ04FgYY34rwiWK+Je0xAh+L2uAfgVTXFkd+AwUsr/gUbtaS
wXfpPWa6seAfbi0wLKGim2jZ/0OdjrGafNVBtiwOrW/VcoOwC9AcRWO+C2c1
5SuEEYNWP+BNWZqvGQVtPhnhdmdk1ebL4zGvDof7wZ3PT7wjwi1JrqwJIiCz
iAg+p9EF/GRKfKeLafpf0YdlgNsnuipIp3GQGoJBwS8Sbj8iqLL4AP89Dshp
9K3Gb9D48poMojELr/a7UfimSVY18kMLuqyTG9sY6KsjFXzTOoftA0NzIg+3
ggWkTk+oEdtL+ctx8E3LWzqUC/he+lfIkOayO5BOTiO2sxDrlroEtfgK0uyA
S1/eryCdfMh0QB60vHhsbk+Ng29G5KGop/xSRx/k/GOCL9vq65OYqUpGcJO3
s45rQv98UY2pqMsCWPlMn4OregvJ5NRrG5+xQ/50Jzd2QPGj44D7zpAnVKIL
nU6c+S3AXZrI4L7EDNzk3dn8IDKQ1MUUJjINkC5NnrkbewXm5MSo37Og7Cdq
fAVmnSNEtaE/HQ1zOttK+/fQT7EwTE8QSNkWe98dw2DeLyXKDSLUKvWZQaZP
EiWLwwzlglHxaMWTX1jzEwL5P9dkEMizuqGAk527OHKOGif3IIMPK9Y/9eEW
dL+pE9zk3KE+ikGxcy3jTwnZIgCsXDCGGw1p8n4pV5Uk4Tkl5wDfkqbu10cB
mRwedOEs9LlnRR5CD6IcG7evdsKXFvpx6c/61zNLJQJUSxJIr3Aqo+FLq/3q
ThdaxenG+SnCZQkizeWjgEwLxrpcG6qJh1Z8yoCcRoC8tBPItKBaLkJL6o/2
ZPDZceBLbl660h5qxsAhtSwMyMXJs09FINt6pg4a3QqswpxS5xv0hD3UVoAX
OLjc7kmCqQ9FqC4fqfEVpOEwDpMAurzRSKcgiGqLhqrDDkRXmwq1Y2F5zhmF
dDJa1UEl1Ch22PTT6VkoTRbEyJt1BenUlpJDVqEvi8D7tCG9GOF26jhIp7l7
dTQKGrOY6i3OAd+PjMI3zfwmd6yiBbE4uKmLXDzg2+TR7odHYZo6evXCCnYH
i5eQeaE+hipEMxyNaJoJLd2vJOHxNb6CaD5eQ5keOwrMNNWWfKOKSsM2JGUF
jX4DgZHcabcCZpqKSi5RhVJs24t6juef8hf8l0eDmAwtdVEKFeWoOr9BA2Fb
5o7CL81MJD+kols9spvHUJ/hXzhxs4JbGp03f0p5Qxd6eMRSfj3vuE0pX9j3
Mhq3FL8mTc4UdaLwH0d+xmt4vc91It/cNE5r/jcSk9SHEgZS8h6MoTI4SaOS
7MIepT64RhQCJoyG5XFgsEikKOnm1ri8uROMp4AseNxYER9YI+v7CyuIPAeU
JwgsB9Qorz0OLC8Al2J9UFLvX+MyqxOWl4DsNCL8vpZbkkActNEi/xpoF8v+
knqfSDstVHYYqa8AvaWirPJrr0jP/VuZ4n8AYjpmxW5lTiQGi8GjFf8T0M5j
8lDX9oy0lxulOFRanLePJbVHJOq+JUx7KG/qMCH53ueim3pYUfqB4XP9caUj
FN3uNVaL9cJmWSAPXo9WmLsR8u68WAVoBSALfghWjux8NvhE9cRmJbjXowqx
YHcmXF6JsFTkf12LSyzg9xDK7n5f+UwKtRlAWQPZoMw7EcpgqfdE5g1wXziT
S5Z3ES4v9kJmbaC8epRffu2YngWjYuTcs1BbDyjrQW/4+WKnKo01zyyUN4D7
Yj+KZNmecHmiFzIbA+XppGS3I5TZxHEbmbcB5Uki87aE8vfHRmYzuJ8Z5Zdf
7yBcvtcLma2Bsrr0YSfDgkLe1wuZ7YCyurpiP1PEs5FfY83rCuXt4X5WREYS
TxEud/RC5j1AudgFLMJsQSjf2guZ3YAyHCtvMm9GKM/zZz2ReS/crx0pSmJ2
rMKNLn/t87E3kF2HFOumhKx7eVSsTaG2P1Bel8CyCaF8tT/rCcuBcL9epChZ
3kq4XDUalsOB7AZEeA/8fkUvMI4CekVIGMm6kVG5bGwIjoH7N0dZG3smuS8Z
rfiJQEw312IH4kF0PuNvewr6IbjP+6JDXdvAaKelq1EW1alAb2NSSD4q+vho
xc8AYkWlkXwQ0dM0gw0yPSE4C+43JWW1DuFyRi8wzgPKEBfQCo4F4jh1NCwX
AFmIe2ll9kZC9uSxYbkQ7jcnJbkW4XJiL1guBspFFy/CzCaUPU5+FZbPA9kt
icBrErIQr6EnLF+A+608twnPgiccHmGpyH8VUN46yi+/1Gkd7YSDHZaOr+HV
QLkIVi6J2FZ4mBfoicw1cL8NQWaScNm7FzI3AuXtIjIiBtva7GPlLmTmAeV/
IDKzXcsQPaknMt+C+x2i/PJLD7tBLu/phcwdQHlHl8t6mNUI5Xf2QuZuoAzj
JetkVnZupgcg2BOZe+B+p4iMJF6JcHlHL2QeAsrvjlREGOalv2UvZB4FyjsT
mZcnlMES7InMD+F+l0hRErNNmm/thcyTQBkmOKxklyWU/cyZLmSeBsq7E2TY
7pr1/VlPZJ6F+/eSkvXdSuu41LWPxs+B2B5EZN/GtRaBoG1U/gro7UmE8w1b
MBTsqfhv4H5OlFV+uWPs9NGK/x6I7eWiWM+xpJHwHQFdiv8R6O2T6IVa5Tsu
oU33VPzPcL8vKSTfXfPa0YrLfxNAcT9STLqyjF/xpT1dT7kXmOL5/gBSamwb
SZr1HmVHyX/LAPk08FoilOPCS0k7TN3gLAck58aiTMmHxCRPD/WXhwd5156q
o/wL9qtBjkMcc0L7b/KTRf4Pd7YIoA==\
\>", "ImageResolution" -> \
144.],ExpressionUUID->"1bcccb59-d709-48f5-8203-ef985c41abe2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Graphics3D", "[", 
    RowBox[{"Style", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Dodecahedron", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "2"}], "]"}], ",", 
        RowBox[{"Icosahedron", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "x"}], "]"}]}], 
       "}"}], ",", 
      RowBox[{"Opacity", "[", "0.5", "]"}]}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "1", ",", "2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9475323593536987`*^9, 3.9475324755858*^9}, {
  3.947532506375822*^9, 3.947532647764689*^9}, {3.947532734104517*^9, 
  3.94753284790219*^9}, {3.947532889590173*^9, 3.947532945532617*^9}},
 CellLabel->
  "In[117]:=",ExpressionUUID->"740d84a5-5cd2-4ef3-bdae-6bb904963def"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`x$$ = 1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`x$$], 1, 2, ControlType -> Manipulator}}, 
    Typeset`size$$ = {450., {221.41754150390625`, 228.58245849609375`}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = True, 
    Typeset`keyframeActionsQ$$ = False, Typeset`keyframeList$$ = {}}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`x$$ = 1}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$, Typeset`keyframeActionsQ$$, 
        Typeset`keyframeList$$}, "Body" :> Graphics3D[
        Style[{
          Dodecahedron[{0, 0, 0}, 2], 
          Icosahedron[{0, 0, 0}, $CellContext`x$$]}, 
         Opacity[0.5]]], "Specifications" :> {{$CellContext`x$$, 1, 2}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{509.375, {280.0055732727051, 287.1704902648926}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.947532867691874*^9, 3.947532894679059*^9}, 
   3.947532947619439*^9, 3.948370802829966*^9},
 CellLabel->
  "Out[117]=",ExpressionUUID->"3fb257b2-8b96-4ac8-86c3-64c6f3022d54"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Section 17", "Subtitle",
 CellChangeTimes->{{3.9475329889279337`*^9, 
  3.947532990996442*^9}},ExpressionUUID->"e8430f9b-db35-45e8-ac1e-\
61ba8edc3982"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"UnitConvert", "[", 
  RowBox[{
   TemplateBox[{"4.5", "\"lb\"", "pounds", "\"Pounds\""},
    "Quantity"], ",", "\"\<Kilograms\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.9475333200611258`*^9, 3.9475333329670677`*^9}},
 CellLabel->
  "In[118]:=",ExpressionUUID->"8af27645-a127-4203-92f6-c0cfba8de6b9"],

Cell[BoxData[
 TemplateBox[{"2.0411656650000003`", "\"kg\"", "kilograms", "\"Kilograms\""},
  "Quantity"]], "Output",
 CellChangeTimes->{3.947533335223421*^9, 3.948370802850565*^9},
 CellLabel->
  "Out[118]=",ExpressionUUID->"662a03b0-6a93-4dd5-92cb-cea32bc2fc4f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"UnitConvert", "[", 
  RowBox[{
   TemplateBox[{"60.25", 
     RowBox[{
      "\"mi\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", "\"h\""}], 
     "miles per hour", 
     FractionBox["\"Miles\"", "\"Hours\""]},
    "Quantity"], ",", "\"\<km/h\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.947533362484685*^9, 3.947533445028255*^9}},
 CellLabel->
  "In[119]:=",ExpressionUUID->"1ba60157-7aca-4a09-8cbd-2486a69b7e6e"],

Cell[BoxData[
 TemplateBox[{"96.96297600000001`", 
   RowBox[{
    "\"km\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", "\"h\""}], 
   "kilometers per hour", 
   FractionBox["\"Kilometers\"", "\"Hours\""]},
  "Quantity"]], "Output",
 CellChangeTimes->{3.947533447194519*^9, 3.948370802852311*^9},
 CellLabel->
  "Out[119]=",ExpressionUUID->"2bb44c60-ac6d-4965-8145-86874aef6e5a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"UnitConvert", "[", 
  RowBox[{
   RowBox[{
    TemplateBox[{"\"Eiffel Tower\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"Building\"", ",", "\"EiffelTower::5h9w8\""}], "]"}], 
      "\"Entity[\\\"Building\\\", \\\"EiffelTower::5h9w8\\\"]\"", 
      "\"building\""},
     "Entity"], "[", 
    TemplateBox[{"\"total height\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"Building\"", ",", "\"Height\""}], "]"}], 
      "\"EntityProperty[\\\"Building\\\", \\\"Height\\\"]\""},
     "EntityProperty"], "]"}], ",", "\"\<Miles\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.9475335274459476`*^9, 3.9475336363225403`*^9}},
 CellLabel->
  "In[120]:=",ExpressionUUID->"5a56e33f-a302-4f32-86f4-b66bfa1c9aec"],

Cell[BoxData[
 TemplateBox[{"0.20505249343832022`", "\"mi\"", "miles", "\"Miles\""},
  "Quantity"]], "Output",
 CellChangeTimes->{3.947533568240491*^9, 3.9475336453978243`*^9, 
  3.948370802857246*^9},
 CellLabel->
  "Out[120]=",ExpressionUUID->"ec46e87f-835b-4718-bb9c-89ea360d622c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TemplateBox[<|"query" -> "mount everest height", "boxes" -> RowBox[{
       TemplateBox[{"\"Mount Everest\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"Mountain\"", ",", "\"MountEverest\""}], "]"}], 
         "\"Entity[\\\"Mountain\\\", \\\"MountEverest\\\"]\"", 
         "\"mountain\""}, "Entity"], "[", 
       TemplateBox[{"\"elevation\"", 
         RowBox[{"EntityProperty", "[", 
           RowBox[{"\"Mountain\"", ",", "\"Elevation\""}], "]"}], 
         "\"EntityProperty[\\\"Mountain\\\", \\\"Elevation\\\"]\""}, 
        "EntityProperty"], "]"}], "allassumptions" -> {}, "assumptions" -> {},
     "open" -> {1, 2}, 
    "querystate" -> {
     "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
      0.849034`6.380470075632419, "Messages" -> {}}, "contextinfo" -> 
    Automatic, "version" -> 5|>,
   "LinguisticAssistantTemplate"], "/", 
  TemplateBox[<|"query" -> "eiffel tower height", "boxes" -> RowBox[{
       TemplateBox[{"\"Eiffel Tower\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"Building\"", ",", "\"EiffelTower::5h9w8\""}], "]"}], 
         "\"Entity[\\\"Building\\\", \\\"EiffelTower::5h9w8\\\"]\"", 
         "\"building\""}, "Entity"], "[", 
       TemplateBox[{"\"total height\"", 
         RowBox[{"EntityProperty", "[", 
           RowBox[{"\"Building\"", ",", "\"Height\""}], "]"}], 
         "\"EntityProperty[\\\"Building\\\", \\\"Height\\\"]\""}, 
        "EntityProperty"], "]"}], 
    "allassumptions" -> {{
      "type" -> "SubCategory", "word" -> "eiffel tower", "template" -> 
       "Assuming Eiffel Tower${separator}Use ${desc} instead", "count" -> "2",
        "pulldown" -> "false", "default" -> 
       "{\"DPClash\", \"BuildingE\", \"eiffel tower\"} -> \
{\"EiffelTower::5h9w8\", \"dflt\"}", 
       "Values" -> {{
         "name" -> "EiffelTower::5h9w8", "desc" -> "Eiffel Tower", "input" -> 
          "{\"DPClash\", \"BuildingE\", \"eiffel tower\"} -> \
{\"EiffelTower::5h9w8\"}"}, {
         "name" -> "EiffelBuilding::q6v42", "desc" -> "Eiffel Building", 
          "input" -> 
          "{\"DPClash\", \"BuildingE\", \"eiffel tower\"} -> \
{\"EiffelBuilding::q6v42\"}"}}}, {
      "type" -> "SubCategory", "word" -> "height", "template" -> 
       "Assuming total height${separator}Use ${desc} or ${desc} instead", 
       "count" -> "3", "pulldown" -> "false", "default" -> 
       "{\"DPClash\", \"BuildingP\", \"height\"} -> {\"HighestPoint\", \"dflt\
\"}", "Values" -> {{
         "name" -> "HighestPoint", "desc" -> "total height", "input" -> 
          "{\"DPClash\", \"BuildingP\", \"height\"} -> {\"HighestPoint\"}"}, {
         "name" -> "ArchitecturalHeight", "desc" -> "architectural height", 
          "input" -> 
          "{\"DPClash\", \"BuildingP\", \"height\"} -> {\"ArchitecturalHeight\
\"}"}, {"name" -> "Elevation", "desc" -> "elevation", "input" -> 
          "{\"DPClash\", \"BuildingP\", \"height\"} -> {\"Elevation\"}"}}}}, 
    "assumptions" -> {}, "open" -> {1, 2}, 
    "querystate" -> {
     "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
      0.783193`6.345413790683599, "Messages" -> {}}, "contextinfo" -> 
    Automatic, "version" -> 5|>,
   "LinguisticAssistantTemplate"]}]], "Input",
 CellChangeTimes->{{3.9475336865877657`*^9, 3.9475337243797903`*^9}, 
   3.947533769378583*^9},
 CellLabel->
  "In[121]:=",ExpressionUUID->"399d2658-1737-4bdf-a2ed-45bc6e1c3527"],

Cell[BoxData["26.81472727272727`"], "Output",
 CellChangeTimes->{3.947533776488254*^9, 3.948370802862699*^9},
 CellLabel->
  "Out[121]=",ExpressionUUID->"c1e9fa2f-9cf4-458c-8a82-b0237e4bceec"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TemplateBox[<|"query" -> "mass of the earth", "boxes" -> RowBox[{
       TemplateBox[{"\"Earth\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"Planet\"", ",", "\"Earth\""}], "]"}], 
         "\"Entity[\\\"Planet\\\", \\\"Earth\\\"]\"", "\"planet\""}, 
        "Entity"], "[", 
       TemplateBox[{"\"mass\"", 
         RowBox[{"EntityProperty", "[", 
           RowBox[{"\"Planet\"", ",", "\"Mass\""}], "]"}], 
         "\"EntityProperty[\\\"Planet\\\", \\\"Mass\\\"]\""}, 
        "EntityProperty"], "]"}], "allassumptions" -> {}, "assumptions" -> {},
     "open" -> {1, 2}, 
    "querystate" -> {
     "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
      0.885217`6.3985947391661275, "Messages" -> {}}, "contextinfo" -> 
    Automatic, "version" -> 5|>,
   "LinguisticAssistantTemplate"], "/", 
  TemplateBox[<|"query" -> "mass of the moon", "boxes" -> RowBox[{
       TemplateBox[{"\"Moon\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"PlanetaryMoon\"", ",", "\"Moon\""}], "]"}], 
         "\"Entity[\\\"PlanetaryMoon\\\", \\\"Moon\\\"]\"", 
         "\"planetary moon\""}, "Entity"], "[", 
       TemplateBox[{"\"mass\"", 
         RowBox[{"EntityProperty", "[", 
           RowBox[{"\"PlanetaryMoon\"", ",", "\"Mass\""}], "]"}], 
         "\"EntityProperty[\\\"PlanetaryMoon\\\", \\\"Mass\\\"]\""}, 
        "EntityProperty"], "]"}], "allassumptions" -> {}, "assumptions" -> {},
     "open" -> {1, 2}, 
    "querystate" -> {
     "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
      0.820038`6.36537897125522, "Messages" -> {}}, "contextinfo" -> 
    Automatic, "version" -> 5|>,
   "LinguisticAssistantTemplate"]}]], "Input",
 CellChangeTimes->{{3.9475337904145317`*^9, 3.9475338016253767`*^9}},
 CellLabel->
  "In[122]:=",ExpressionUUID->"83a690d3-73fd-4509-82a7-4a11945c23bd"],

Cell[BoxData["81.2997656645660290825`3.6756537838193837"], "Output",
 CellChangeTimes->{3.947533811391428*^9, 3.94837080286821*^9},
 CellLabel->
  "Out[122]=",ExpressionUUID->"d9b1ef7f-431b-4f7c-985d-ed84aad99840"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CurrencyConvert", "[", 
  RowBox[{
   TemplateBox[<|"query" -> "2500yen", "boxes" -> TemplateBox[{"2500.", 
        RowBox[{
          FormBox["\"\[Yen]\"", TraditionalForm], "\[VeryThinSpace]"}], 
        "Japanese yen", "\"Yen\""}, "QuantityPrefix", SyntaxForm -> Mod], 
     "allassumptions" -> {}, "assumptions" -> {}, "open" -> {1, 2}, 
     "querystate" -> {
      "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
       0.51296`6.161628494170026, "Messages" -> {}}, "contextinfo" -> 
     Automatic, "version" -> 5|>,
    "LinguisticAssistantTemplate"], ",", "\"\<USDollars\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.947533824308879*^9, 3.947533885962365*^9}},
 CellLabel->
  "In[123]:=",ExpressionUUID->"4c92040f-7689-4d9d-8aa9-be2da018fd29"],

Cell[BoxData[
 TemplateBox[{
   InterpretationBox[
    TagBox[
     InterpretationBox[
      StyleBox["\"16.44\"", ShowStringCharacters -> False], 16.44149888306856,
       AutoDelete -> True], 
     NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
      "\[ThinSpace]"]& ], 16.44149888306856, Selectable -> False], 
   RowBox[{
     FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
   "\"USDollars\""},
  "QuantityPrefix"]], "Output",
 CellChangeTimes->{3.947533888222104*^9, 3.948370803419839*^9},
 CellLabel->
  "Out[123]=",ExpressionUUID->"4662351c-3f3b-495f-bd49-e34da70c9b52"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"UnitConvert", "[", 
  RowBox[{
   RowBox[{
    TemplateBox[{"35", "\"oz\"", "ounces", "\"Ounces\""},
     "Quantity"], " ", "+", " ", 
    TemplateBox[{"0.25", "\"sh tn\"", "short tons", "\"ShortTons\""},
     "Quantity"], " ", "+", " ", 
    TemplateBox[{"45", "\"lb\"", "pounds", "\"Pounds\""},
     "Quantity"], " ", "+", " ", 
    TemplateBox[{"9", "\"stone\"", "stone", "\"Stones\""},
     "Quantity"]}], ",", "\"\<Kilograms\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.947540912472281*^9, 3.9475409640591784`*^9}, {
  3.947540997885996*^9, 3.9475410131784983`*^9}, {3.947541050797083*^9, 
  3.9475410543897343`*^9}},
 CellLabel->
  "In[124]:=",ExpressionUUID->"6ca85eea-c918-4bc0-b067-50cd7fe2124b"],

Cell[BoxData[
 TemplateBox[{"305.352713579375`", "\"kg\"", "kilograms", "\"Kilograms\""},
  "Quantity"]], "Output",
 CellChangeTimes->{3.947541003569398*^9, 3.947541054833748*^9, 
  3.948370803429863*^9},
 CellLabel->
  "Out[124]=",ExpressionUUID->"eadc5544-fa15-4aaf-9fed-59fd31cc001f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"UnitConvert", "[", 
  RowBox[{
   RowBox[{
    TemplateBox[<|"query" -> "planets", "boxes" -> TemplateBox[{"\"planets\"", 
         RowBox[{"EntityClass", "[", 
           RowBox[{"\"Planet\"", ",", "All"}], "]"}], 
         "\"EntityClass[\\\"Planet\\\", All]\"", "\"planets\""}, 
        "EntityClass"], 
      "allassumptions" -> {{
        "type" -> "Clash", "word" -> "planets", "template" -> 
         "Assuming \"planets\" is referring to planets${separator}Use as \
${desc} or ${desc} or ${desc} instead", "count" -> "4", "pulldown" -> "false",
          "default" -> "{\"C\", \"planets\"} -> {\"PlanetClass\", \"dflt\"}", 
         "Values" -> {{
           "name" -> "PlanetClass", "desc" -> " referring to planets", 
            "input" -> "{\"C\", \"planets\"} -> {\"PlanetClass\"}"}, {
           "name" -> "ExoplanetClass", "desc" -> " referring to exoplanets", 
            "input" -> "{\"C\", \"planets\"} -> {\"ExoplanetClass\"}"}, {
           "name" -> "MinorPlanetClass", "desc" -> 
            " referring to minor planets", "input" -> 
            "{\"C\", \"planets\"} -> {\"MinorPlanetClass\"}"}, {
           "name" -> "Word", "desc" -> "a word", "input" -> 
            "{\"C\", \"planets\"} -> {\"Word\"}"}}}}, "assumptions" -> {}, 
      "open" -> {1, 2}, 
      "querystate" -> {
       "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
        0.594104`6.2254074699125175, "Messages" -> {}}, "contextinfo" -> 
      Automatic, "version" -> 5|>,
     "LinguisticAssistantTemplate"], "[", "\"\<DistanceFromEarth\>\"", "]"}], 
   ",", "\"\<LightMinutes\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.947541210542643*^9, 3.947541238426371*^9}},
 CellLabel->
  "In[125]:=",ExpressionUUID->"63fa3ebc-1b63-4be6-b8c4-8d470e78b029"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{
    "11.419235624982877`", "\"light minutes\"", "light minutes", 
     "\"LightMinutes\""},
    "Quantity"], ",", 
   TemplateBox[{
    "3.663602514126493`", "\"light minutes\"", "light minutes", 
     "\"LightMinutes\""},
    "Quantity"], ",", 
   TemplateBox[{
    "0.`", "\"light minutes\"", "light minutes", "\"LightMinutes\""},
    "Quantity"], ",", 
   TemplateBox[{
    "6.197194036537774`", "\"light minutes\"", "light minutes", 
     "\"LightMinutes\""},
    "Quantity"], ",", 
   TemplateBox[{
    "39.237769281480105`", "\"light minutes\"", "light minutes", 
     "\"LightMinutes\""},
    "Quantity"], ",", 
   TemplateBox[{
    "87.3816064332859`", "\"light minutes\"", "light minutes", 
     "\"LightMinutes\""},
    "Quantity"], ",", 
   TemplateBox[{
    "162.48520174771957`", "\"light minutes\"", "light minutes", 
     "\"LightMinutes\""},
    "Quantity"], ",", 
   TemplateBox[{
    "255.37066604040123`", "\"light minutes\"", "light minutes", 
     "\"LightMinutes\""},
    "Quantity"]}], "}"}]], "Output",
 CellChangeTimes->{3.9475412402887278`*^9, 3.94837080371933*^9},
 CellLabel->
  "Out[125]=",ExpressionUUID->"15cf6da9-ff9a-42f0-af33-6e380e413407"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Rotate", "[", 
  RowBox[{"\"\<hello\>\"", ",", 
   RowBox[{"180", "Degree"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9475412568306313`*^9, 3.947541270872404*^9}, {
  3.947541348545128*^9, 3.9475413832320213`*^9}},
 CellLabel->
  "In[126]:=",ExpressionUUID->"19f3cb62-6849-4b74-a901-ac18690b4693"],

Cell[BoxData[
 RotationBox["\<\"hello\"\>",
  BoxRotation->3.141592653589793]], "Output",
 CellChangeTimes->{{3.947541351447515*^9, 3.9475413839128437`*^9}, 
   3.948370803724375*^9},
 CellLabel->
  "Out[126]=",ExpressionUUID->"ebcfee9d-bbf9-4f48-a323-aca623566473"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"Rotate", "[", 
    RowBox[{
     RowBox[{"Style", "[", 
      RowBox[{"\"\<A\>\"", ",", "100"}], "]"}], ",", "d"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"d", ",", "0", ",", "360", ",", "30"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.947541610129941*^9, 3.9475416692796392`*^9}},
 CellLabel->
  "In[127]:=",ExpressionUUID->"60a4627a-cd83-41b9-bdd3-7bd5afb91a6a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RotationBox[
    StyleBox["\<\"A\"\>",
     StripOnInput->False,
     FontSize->100],
    BoxRotation->0.], ",", 
   RotationBox[
    StyleBox["\<\"A\"\>",
     StripOnInput->False,
     FontSize->100],
    BoxRotation->30.], ",", 
   RotationBox[
    StyleBox["\<\"A\"\>",
     StripOnInput->False,
     FontSize->100],
    BoxRotation->60.], ",", 
   RotationBox[
    StyleBox["\<\"A\"\>",
     StripOnInput->False,
     FontSize->100],
    BoxRotation->90.], ",", 
   RotationBox[
    StyleBox["\<\"A\"\>",
     StripOnInput->False,
     FontSize->100],
    BoxRotation->120.], ",", 
   RotationBox[
    StyleBox["\<\"A\"\>",
     StripOnInput->False,
     FontSize->100],
    BoxRotation->150.], ",", 
   RotationBox[
    StyleBox["\<\"A\"\>",
     StripOnInput->False,
     FontSize->100],
    BoxRotation->180.], ",", 
   RotationBox[
    StyleBox["\<\"A\"\>",
     StripOnInput->False,
     FontSize->100],
    BoxRotation->210.], ",", 
   RotationBox[
    StyleBox["\<\"A\"\>",
     StripOnInput->False,
     FontSize->100],
    BoxRotation->240.], ",", 
   RotationBox[
    StyleBox["\<\"A\"\>",
     StripOnInput->False,
     FontSize->100],
    BoxRotation->270.], ",", 
   RotationBox[
    StyleBox["\<\"A\"\>",
     StripOnInput->False,
     FontSize->100],
    BoxRotation->300.], ",", 
   RotationBox[
    StyleBox["\<\"A\"\>",
     StripOnInput->False,
     FontSize->100],
    BoxRotation->330.], ",", 
   RotationBox[
    StyleBox["\<\"A\"\>",
     StripOnInput->False,
     FontSize->100],
    BoxRotation->360.]}], "}"}]], "Output",
 CellChangeTimes->{3.9475416699339523`*^9, 3.948370803730027*^9},
 CellLabel->
  "Out[127]=",ExpressionUUID->"90bab44a-def7-44ff-a5f5-5d33bbfc9ab3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Rotate", "[", 
    RowBox[{
     GraphicsBox[
      TagBox[RasterBox[CompressedData["
1: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
zQhguJZ0zkGedKqqZkkZk5SMsrCIGRF3GYzKeXGVMKkRJ3SShEGaxGQJTBYz
Hsgsj4Nj2lRJuxx8EFibLdj3FxKLFQJwAwZTLiGhHqnHdAfcyWGPSzPqNVAK
AZVDRY04ZKSeY5VTDMJBQssohrCwXeg3cx2qCdLIsmsoevHA2lTk6nJ2ruYp
RHTNrCPqllnU4xGXPEoqIGJFvRqws7HLr549/uN/+vv/85Xnv3/ilX9WS+k2
rTBs1SScOp9e4NHR8j7JZFo9lVHMV7Q7s+TKJLHS8tYzTsbwueG+09ShgbGh
/sErZy5eeg0oe+PUz4ZHzrLYQ4BhOOJ04lqRmPr68eeee/7vkUtCIoV0qlFx
cYcG04uY9H6FlGbQ8oS8EaNeIBeOgSCLggxKOmRRhXCklHZphROQQoFBrZBq
lNAJndClF2n4I3r+qElMcSqZbh0PAAQHJNRsh5wZxGQhozJsUkUtmrhNk3Rq
0oQuTWijVmnCoch5NF0Mo6Zm3NJKmJtJ63SOBAAnU0Qjaq8EzWUfVnDrci5N
yWso+rBiwFgMmcAKoRa+udl89/7Km/e7uCEGATfoAJKQTqFFGB5xQ8Tg0xj2
QmmPwaeFXkVHHhZyDdwuhQLK59ZAfoNbNwoMAh1RKygOWREwCZkiQSMoFsQS
YROQCAQVM0Ql764VAS7AMATqNCJTTQil8dk2BNEUuCEaIAUMJ+s+qB+BWcAQ
DBROz8RtKIuiuQnAH0jspdCeG/Z88JkW6bDKAUObWQwCJIFQN6GEf0gXQChm
M3gh5wIVoUiv+qab/o1OYHfKtwckttzbdfdOw3OjE7k7k3hrNnOrFdvKeuZD
linS0LCrcjpRVMpMKvgRGTcgYnr5NDeP6hcxQwpeVCvyydhFpz5lVSUtyk6c
bIQcLhUH4w159XSncgjQAwDXWz5khfMlJ7QZtxgEnjiZMsKmlnPGoRwB6KJE
d+TBJJswykYFlFPFkB4YjDrFpIFWCGlsypFGyrwxFV7vhKaLzjAhyARUoE7R
ZVNTnXpmK++Okiopt3+i//VTr/zT+ZPPgeijZ6x6vlUDtqsDH/FoeX4MLIaS
dLEXSrpWWvLufm53Ibg5HYp7FczRs1fOHb9w8vj50ydPvv6zCxdeEwqp584d
Gxo6y+WO0ekDEgnD4dAaDJKBgdMvv/zP4+OXBALKlStvKBQcqZgWi+BWs9zn
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
UchnDmjlbLtRAlJL6WGvyYFJdHK6kHFFxOwHAN1WaRhXA4YmBc0op1oUVMAQ
E43Asw7cENcwPXpuHGpGhwLoQ8RBPgEHhIckGCK4ZNmHVX2Gmh+r+7oYlgl5
wSGBir6dst/Zmvzqs7t/BOIggv7+yW/+9Mnv/vQRCDBEJAKGT5PYgxH0bQw+
k77DeqaToj3AHTDoI40BjxkEHYQkqg0Rhj0fRBiC9Gp+TzoVD6RRcJ4p5J5P
n6iWs0FwgFbJhU14qeezgC1ul0MchZIwGuou/uzOvB9i8ADArxn8pt9Vj1Bk
l1A2ppN29HsyqQQYItCKNyuBWtFbzLiSEYuP0AH7KhlbIqDy6EMcyhX28EXu
yDmIozrOsEU0YZfSkk5NxqUHFbymos8cNEoiVsVsPgitYPSsWUI1iibkrH4h
5YJBPKEXjcHjuhgyLTeiUB5CNI04RItV39ZUdKsdWap4uj/3hAujFk6OlM5m
7Tvt4O6U7/pC4NZS9MZCZKfjX2+QoM2W585K6vZyfKfjXa3bbi0Hn9wqPtiJ
rlSx1SK2mjfcnfNPhsXzae3t+eBs1nBrMbJWd358p/Vwv3JnI/3BnfYX7698
9nDxrd1CLSz3aoamUqbd2fjV5fz+ZuPB/XUo7mqt5LE3nn/j0itWr8Hs1pk8
uuZi8c33999+eG1jvdmejK+vVT1uVTSK7e21trert2/Pra+XUynrQP8rfZde
4rCvrK+23rq/3axFZ6fSs1N5rYqtkrEEnFGNgs+gDEAWdeOGvvOveQgDnzME
DA5eeU2jZNApF+FugbsLTJNFuRwLWONBG2P8Ao/elwxZY14juKFRyQi5NKRF
gsko8Ewj9ByvWegycCGXAoYRhwwMEdwQcmn6YME8wAi26NFycAU9S6jTTmXa
LoNCvuJWg3IOcffXX20ieAY+vLn4u1+9BQz+9l8ef/nbD7743Qe///PHz1TP
HHtgIh32xMM6zOlh0+xRfEToSNQH3OBTOswgbPYYBDfsWeEzaUIAAkeIqafV
OwYdhgTowfXqMQgv9TAEKwTTBAbBCqEkBAYTUStaeIayaC+O9hg8jB4SGrTJ
pp2AXiJmAQGGwCPsqeTdoC6DMZvPbTAbxQoJU8AZo433MSf6OOOXBZRLUnq/
QTAGThfARH4ISxY5kJhzY4BhwqmJ2VVZ6AcsavYgMGhXMFXcIf74OTVvGLKT
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
bgiV30Mfnyw8QQ8RAIgwiGCIJFL6Sf8MbIFKeFaQn05DKUBX4A4E3CHoAXfg
tiDEeQvX8n+3esZJ1xCQeLpcfYa15zFEhjifl9UssVpEWh1HLKHQGa3Y9prG
+pLq8qKqkutQCaLrSyntVXI+psPM7Qop+uLK3pgi3iFO+KUmGc6mIiV9cree
rhegHUrSYFSTGXRNdRvjTlaXl7M66bq/EtvMePdykYO1BDAIOlrt3F+KHi5H
7q/Fj9c7D3Ph3Xn/brbjIBc4XPDvZjxbadvasDbXI0/HhWMRwXgiv4DMTjZ+
b2Pg8d7Y4+2hfBZdTexnvIt9qgEXKaZs7FGgu0UtMXZdQoxKSNsmnNxHs5H3
V7v3Z8P3l7sfbg7sLHc9PppaX0rNTQcz6cBYv60/qfc5hT6XRCzC4fC1TDZO
quDS2JTG1nqzw2S0GfBEXBOq3u2x4/Bos03tC1i2tucf3l/OzfYsTyc/uT9/
tNS7OR3JjbinUobliY7xHuNWrnNvve94b3RrpW9xLpGdSSQ6rdWVN94+/+o/
/fN/e+PNMzfvFP345/967cbl8qqS8opiHKHR77fAx94/EPL5dcCg1SYRCnBi
EYHPw9TVXq+pvIJBl2HbyttaShmkBh6jlYSpQtUVAYBghVIuQcjEcMhNfFqz
nN3u1HE6PcqUT9Mb0HT7VAmXOGLlhU2ssIkTt4kSzvxKUF0BdSqo7O3Uz4z7
N1cHnjxZ+vTzA4iRkP0++wbiaD6FfvUt4nQfPC+EvgKAQB8oHx2/fnSavr9n
zi+OvlfPXyWBYHg6l/LYJD6HDBJwKUIeVcSngcQCulTEBEmEDGjDHngWBIch
6BWEMHjaDZGuGNgDXikU/h068DtECH2n0YMkfCoMf7+Qa6xO9xohrBV6dJ/B
8IcYNOi5CiWdz8WRiQ3o5vKGmuL6iqLa8us1pVdbaouRHlGvkRl18xM+ISju
FfZFVd1BhcdAS3hEE11mv4kuopQbhS0jcfVOJgzV39KYfT3tWU+7siOm3eXo
/nrn0UZyfzW+nQvvLEXuryef7PbBFmAETzxYCgOSD9cTwOy9XHBnyrE+bJrv
Vk50Ssc6Fekew8KoezUderg59GCjH8rD+yuJvTlfrl874KbHlC19KmyXsDVE
rwmz6sOcxiEj/f5U6N2l7r2ZyOFi8tHW4P5aN6CxnI1lpv1TY57+lGmw2zY2
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
gqq9SWmvkNBRGm6bjovWsptjRlbcxIqZuD4t0yTECwj1mLri2pLLFUUXAMOS
q2/evvwGsFN65Wz59Tcqb5ytvfFq/c1XGm+91nz79ZaSN9B332wre6u9/G3Y
guBha+k52I+6cxYOaLr9ZunlV+5cOnP74mu3zr9y452Xr7794pW3Xrr01osX
33750juvXDyf1/nzr+V18cyFC2duAPLXzsGfri650lhZ1Fp3G9tUgkfdhboS
PFpIaZQyWq5dP49gCG4IoRSpDQFDJJEWMCxE05q67zBE3BAJpacxPO2G+VwK
hkjBUah4EMIjwAikAEQIhqdJzDf49OcZBO4QBml0PLRhZ/7lPBqCIWzhIeyE
t4VjKJQ2MhmNZFE6FY1pq6mvLq4uv9FYe6cNVcGgtfC47VoF1aRlaqU4laDZ
Y6QOxxRdLla3nZ4yUxJafFyJiUnRMUlrVNwc5NWE+NURYW2nvKnfgJ1w0TNh
wWJSdph27qcd+zPOo4WOR2uRR5ux+6uhvUX/wXJsZyG8MuOH+qg3rDIp8EXn
/42BLdfLKTJu/t7rCgFWxsdw6fUsSg2H1YzGVLYR61FtlRevnvkf//x/MZlY
CDNNdSXffvkBYMjEo/ANFfV3rha99cqVV371zou/OP/KL26cf5GErvDbFWO9
ganB0FKm9+FB9mh75uFRFrS3OQkMQnlo0DHlEqLdIrWaxE67yu3USERUhYyZ
7PRisfUtLZU2mwo+cDwRBRWiTMlj88hWh95iN9BZRImUC+dDvUGk1rBmZ1Lj
48GtjdHFbCo7G11b6t7fHD3YGjvaGn+wlwYM3z3OPL03d7QzsbM2tLk8mMuk
pkbDkyPheMRi0HLgjEfC1+Haq9DN5c0Nt8tKLlSVX8lP1kXdJWBraOQmOIDP
wYLIhHoKsUEhpQGniBt2JZy9nTafU+yxitw2EQAoE5PgG6ytvlFfc7OhtoiC
rYZPVcpEs7BVMnqTX8dI2fhJK7fTzOvQMEx8HDCIr7/TXH69+vblylsXy268
U3rtrbJr58qvv1l5883qonONxWebis8AYsAaQIepeAdbeR5XdQH2INwBng1F
eU7rbrxcc/01KBYAQFDxhVeLLrx68yLozPWLr71z7regt8795s03fn327G9e
f/3Xr73+wpkzL7zx2gtvn3nh0hsvXnvnlVuXz5beeLvy1vna2+ebSi+3VFyB
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
5+L85SMkiM49vLvy9OEG6NGdtTs3F27uz44Nt0Kbu3j+V8mJIVDx8JAMJcid
Dvh8ck9P863jaxBHYUvu5+/56/d/rjcoJFJgk6hWstQanpBPEktoRr0YuXXC
6YS0HBYuKMjtN+//7aef/jIhLhiqK5+WIaalSVnZEnaumIMRs3EqCcOgERRa
VVIxHawwJyOGTszQKVhVxbq22rxWu6G7wdLXVAgLJRahQojn0DKppLTMtPC0
5BCHFcZG+YDion3jY/wiwN1QYHm+iZH+SVEBMCLH+wC3MOQEmLcVH4ooKcz7
7WMTsag3xyYAw7Bgr5BAj9PDE24+Pi7e3s6eXi5OLpcuuFwEEp1dLkBGhZVB
EF8DXeEfBf+F0JsV6wtuhSMjyGBJCFBoAoJSLj4HlsHFHWsAq+/Xw0MMIjzu
ByOGgMcQsT8cCXgCBTohmUgFTqhkOg3kYJDOZv07cRiOEariO8XlQxzlcHhs
KJIQYhksiLU0OpPCgThKJbCYFIVCoNWKZRIGj4Pnc7AiPgH+8tjcGDI2CUoE
m5ojYOHkfIqEgVFzCQUKpt0sbilVd1Vp+2t0gzW63ipZewm/pZDThZy3Zprp
KZzozB9q0s33IHeCuD5TdTBXvTdl2xkv3Rkt2R0vm25VX6mXjdaIJxrkS+36
tS7z6mXTfLtutE4G0fThVvej7d6Ttc77W31P98efHky8uj3/2cnSo+uT6xPN
HVWaIjXFJMPlqUilOmaxhl6kpsFYYWTVFYrabKquWq3dyqvJFzQWSxpLpFUW
vl6ApmSgklGuXDQaHR2fGRqeFOgrJGTzCGkQ1eBbNztUvTLVuDnftjbTOj1k
H7xcOtxdPjlS29dbUlDIMploNpu0tlrTWG/It/Kw6PCOtmIHjCo5Lc8sqq/J
N6g4OhWvqiofiCgrM5WV6JvqC6bGWq4M1h/sTlzfGT05nH32aPOzZ3tfvLzx
4tn+0eHC3rXZxtqSsCCf6HD/jJRIPpuglCNH281GkUJG39manp7stpplXDY+
0N/54rkP0lMjKOQksRitVdMUcjIUBK0aueurXivUnk72rpRy0pKjPvzgf378
4U9zM+MMWl5LncmiJQuZqQJWOoucnJOKykxGEbCJJFwqh4E9vasXh0XDYrNT
qYRcqZChU3AKDOJGm7W7uazBZtKIKRR0PCYtHJ8ZhU4Ny0hApccHIztIY4Oi
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
doFJUlKoyjOILMjp/Xz4BQYu24DB3fXR48Oleycbjx7vP3t568Xru7fu7Q2N
dWJyEzJSwxRSSr4FwaqyQlllU9TVqsvLRB3t1oJ8dmkx5FJ8RNhFH6/f8DhZ
Rj1Dq6YY9Sx4cXGBHHq62SAstCods3WBY/p6fXTx3E8jQp3VSsrocO1IX/nC
dMPG0uXF6dbxwZrejpLGGjNgSMQlBfs7u1z8DfhgZFgAVLDIsCACNpNGyhFy
SUoRQyagiJlYISNHSM3iEVPYuERyVlROUlhaXFBqbHBidAAwCA0OAAwN9AYA
Q/3dYYRcCmUwIcIPGMyMR+Ukh2DTwwBeQkYYPj0UYMQkBaAT/XMT/E5h9ANn
hHSaGuMDppYc4wskghtCNI0O9YgKQWA8PX/GLcgPaqBziJ8LOGAsyiMh3BM5
GnK6UxSfHMjgMkFIHeMwaGz6GZJnVDrAPLNLh6/953XWAc/oe5M5edx3islj
vVNsAQfE4rNh+exXBQa5PCaLfYohOQdEJKWjc+JTk0PSU1DxMUj1hm8IITeR
hE6h4pC7fOIy4nHpsEmMpmbFCompBj62XEuvy+e2lYiHG/QLvaWLgxXT3UWT
3YUrozXXFlr3FxuvLyF7O6/NVm9eKV8bLXF44lKPda7TONGsHqwW99n4oKFq
MaTQmRb1bKtqulk12awEiwTHnGjT99mlg/VqqJmro/bj7f7P7y6DG748Wbi7
f+Xx7YV7R7Mne1MHO2N7GyM7a4PbK0Nbq0Nri31ry4M7m+OHB0t3TjaPTzYP
ri/vbs31NNvb7SXd9bbqAoNFLsxXiZiY9Ah/V/jC0AnJLHIKh5paaOZ2tRcg
l/x05Pd2FPS0I2NjtdpWJGiu0TRUqnVibKGOVVMsH2wt664vqC6QF2rYBjFy
TaW9VGsv00EuhYBaXaKuLlX1tpVODDVsLA4cHSzeOd5+9OTmkxfHTz9/sHd8
zVZbHBbukZzgJ+TnFuYLALfaGlVNtbyxQVNpE9mrJPl5DIOeKJfl+vv9Ojba
WaehAoNqJUmnoRfmiyC4IrOJmsSFeXIY9Rp2Qqz3b95/z9/3Q6Wc0NZiHRwo
nxqtWZlrW5nrGO2v7GjKg3pYXaEtsorAQNl0dHZ6DKDk6+Xs4Xrez9slNBg8
MYGASeHRsUoxXcknA4MCSqaYnsUnp9FyY3OTw1NjA5OjAx0Mhga/2Z+J8vcE
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
x09OgMGI+PALF96/+OkvL3z6Mxw6Vq2glpVIC/L4EEqrKmX1dZrKCnmNXQ0r
NSoydEAQRFCQSc9RysjQIpUyKpeVg8mJ/OXP3gMHlEmwkD+Xl9p2drp3d3uX
l5tX59unRut62ouba42NdmNzjbm5ztpcm386OwTSIgFD8D5IlZ5u5859/Csg
MSzEMz05IjczloRJ5FCRWV941HTAkE1KQadFpsQFggnGRDkY9EMF+gT5ewX5
egb6uCFWeLqnNCbUJzrUy5FIM5MQKwQMkVCahkw1Q88Md2BISUMwJKUgJAJf
p9Ni+OOSAt4WORVFTgmkJAWAqFD90oI4WaH8nFB2RhA/EyXODZdho0Ry8Tvl
oNIBpkOAJ4grFIAAFsSzHA3ulKmzHZsAGhB3BuZfOwZx9nrHj/9bJQTQTsUE
3E7FgIQMlfD7ZTqXSWXTKeCAp42VBKUTHnGQ89zoDAIWn5qWFhWfEByMcvMP
cPL3vYgKco2O9IuPQcVGBEeg/IL8XAM8L/h7nI8N9YQ4apHT4JvWVCqb7itf
HLFvTjftLXXuryF3Uthe7Fifa14YKV0YKXFo8XstDZcMNqnAE69OVW+O29ZG
ypApLIZL57qt6yMlRwsNh3N1p/tR6/bn6tdHK5aGSzenaq/Otxyud9/ZH3t8
NPvszuLLu8vPH6x9/vzqZ692X7/a/+L1ja++OPr669tffXPn62/vfvenJ3/8
xxd/+qdXf/9Pr7/+47PnX929++zw+P72zf3ppSvNkBLVfGJmDMrr4u98Lp2L
CvBLi4niUvBqEdukFlaV6htrzJWl8tJ8YbGOXaiggZqKlS2l6t5qy1hLab6E
XKll2fWcKh27XEErEhPL5NR6k6CjVFVl4tUXSbvsBhjzpMQyPauxRA4Y2kuU
izNdTx5ef/X63vNX968e7FjK8lBRwb6+rm5OH53/+BcBPhejwj1lYoLVxAez
M+iY+VZBWYncVq4qLYK6J9SpgTuqRklTyklyCVEqwgN9Welh3h6/+/Uv3iPh
48tLZTNTrWurXWurnZubnWtrbTMzNeCDl1sKWmotA5dt3a2ljXZTdbm+rEBh
K9MX5Sv0ajAQCo2SnZYSERzo6ur8u3Pn3nd3/yQU5ZEYG4TJjGaSUkXMXCkH
rRYRAUMGIS0jKQQYjI8NjI0KCg2FSogoJMj31BA9g5D9J66Bvk6RKGSnSmy4
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
Bn9ghf9tBh0rv2dQCD7IlnLZEj6IKxafSShFXBXsVaaWag3KolJLYwsA2NY/
2N7T19LYXFlUYtQZpBIZm0JDp2fGeflcAnn7QiJ1j4gKADAxuDT4lLHoJCY1
VyqkaRQcs0FoK9N3d1bOTHasLPWtrfRBa9tc79/c6F1fu7yy3L602Hp1cxC5
x99Kz/J8x9xU89R4/fhw9ehg1diQHTG7y8WX2/K72gsGespgDTw73Fc1NGAf
H2uaW+jZ3JrY2Zvf2p1f3praOVi9eri2d7R+eHvj+O7O/UfXHj/de/782qun
66+eLL16NPf87tTTW+OPD0Ye7g882Ou/u9V1vN5xY7nx2nztzlw1ogX7tYWq
o/nqvdHCvdGC7WHrUpdmuVcHJC73mRZ7TO2lnDIlxsTLUFKS5NQUMSGJkhbG
xycR08Op2dE8YgoLm8DGJYqoGWJqtoSWI2OglWychkfUcckaNlHJwMnpuTJa
lllEKlOzqg38Fou4q0jeYRbWykk1YrxdkF0jym2Qo2sk2bWyrL4C5lyrcWe+
8XBv+MWjjS8/P/j8y+MXr0+evX7w/ItnBycHu4e7S+vLQyP97R3Nl7vaerva
mprs9tqykso8pUaIJ2XJlDz4EFvaqju7GkwWJWw/09Nj5XKuxaIqKNBZjIoq
m1Un5xrVfJBGxpLyEQBlAopaygRp5WwgUSGi8ZlYOjGDjE0hYJIphIzkxNCI
MG8gkYhNYVJzQECiQkRB+GXjGIS03LQwx5nVSTH+kaFeURE+sdEBcTEB8dHI
KTSxYb4QPgG9qEBk4qaYAPeEIO+UML/MKBQ6FkVLC2WmB3OzQt9m0ERMLKCm
WKnJIDMFwieSSwFALTn+nQAqcAkaUopDWnKqzqz/L0lrNLzTCv97DL4NoINB
nkTAkSGlD+l9EsmZJAqkb8L7q/RKo0VbUp7X1GoHBmEzOzreAx+irarAbFXJ
lTwqHZOWEQsYAncJSeHxiWEwwpocdDIOl47JTaQSMwUcgkxEgxhTlK9oaSwa
HqhbXe4/Y3BjvWd15TIAuDDfvLXWt4ncZ+HfBDyCFmZaZyYagbvB3vL+7lIY
AcwrIzWjw7VXxhpmpjtW14ev7c1du7G0eXVucWPixu3tw5Orx/eugQmCWTx9
cfji1eFnn924fzzz4Hjiwa3R+4fD968P3t3tu3u15952N5jgnc3LR6vNwODW
TNXmdOXmrG1ntmJnvHh7OO9guvxooeraRPHV8cKdsYLFHsP2WMlArazeQrfr
aBUqcqmCamDn0jIi2PikjMSg9IRAXFYUISeGjIlnEFPI6EQ6fD/xaRxSJp+a
I6BhQHwqWkDJFhJTjQKCTcdtzJO25Uk7rOJmHadaSrALsSWslApOOjBYK82x
CVLajKSZZv3EZfPSpP1od+jZg7UvP7/55dd3vvjq0WdfPP7825fPXz+9frQ/
vzgzvzC9sjq/ND81OTnU3dfW3Flb32Sz2QvbOuvgEyy35VnzNWwuSSxlqdVC
q1UtkbDAFiGuMGi5xRb4wLkSHgm5AlTCgGXgDpnOQsUDKoFHIRsPDHLpaA4t
F3BDrqSI8D09Rh+EzUkg49OgV4IghSJ3KOMSOJQsqJbwB0Guboj2iYn0jo32
TYgJ/P85e++nxvY0zbPml43uiZ2YmOme6S57/c2bNw2ZkHhvhPfeexAIATII
IUAIIUBICBmEkEEOCSPvHUhIwrsk3TV9q6pd7WzsbmzsH7Hv4WQzTN66NVMV
8cQ3jo4OIhP4nOd5v+5kpT/NSXsGVGYkPU5L+Co55ovkmM8QDGM+y3j+VU7C
14Upz8vSnzXkv2gtQEYDe0sSUQYJVQiGY7WZqEg1GaM1qSPVKcM1KfjqVGx5
EiRPhMSKVAiu7ztC4Usa81CRmjB/AYMohiiDdxj+uQze0XcHIHINtgexwoHO
dmw36DZ/vhd2CPlk5POHsUMjWBIFP8McX1qeVWnWFEoR3EvpjDECCdvT11xR
lZ+WEZeVkwj0Qf4EwctcTEpRSRYw2NZS0dtZN4RtIeA7x8m94IOrghmNctls
kFjNSIb0AGVuBWDocUuBRNPOCtgfEAc+CEkV6AMqA54Nm0lkN69CazEIAEYw
x9sacMZhk/q82oOQ4SBi2j+w+PaN3pDFH7b5QrZA2BE+coMPnl36zq+8l9e+
qyvXN68c16f6k5DsZF96BfYXVJw4hUED+8y9Cj547hWdeYTghvsWtmeH4dBN
Bbbp+1tTFy7O2+DqlWf5zMGOmpgeNdUsIWzM94pnutYYvbf7vXez8M0QLNsb
CvJzY3MynyErmjEJxQVJ5SVp0JbmJ5UVJEMwqynLhLzXUIUBK2mpwrSWpuNb
SuaGW/lU7OoEVkDq5OAaWT3lwCCzIx98cGWoYnmwbBFbKBlvMAqQaUI7MorX
sHQa0gCGv/vh8B9/f/nb3738v/6f3//+n787uzwKHfj3g16TcUu5sb69rTo+
C2q25YucGeLYIH60FwS/suHR3s7uhonJ0akpYmdnPbhhWVluX3fT+NgAwNUC
ebKhBEyQPNw1QeqHFugDEgHAjqYydJMEcMO+2zkziXFfxdwunk1JeozJji/C
JKMbAkMK7Wwu7W4ua60tgNtRXvqT9ASIo5+npzzMSH+UnRGTmxWDyXyem/4k
O/UJ4Ils4nS7o1pa3OfZ8Q8xyY9K0mPLs583FyW2FMV3ILPOEgEuqO+Gq9IA
Q1JVBgE5gJep+MqkoaokXGUirjL5dlpaMoohoDdUnYGvyQSNtRSAKK2FIAKF
+GcJZfCPYvgXMIjShwKIMtg90NuJ6+4c7AV1DwzcqXcA+TTkw/H9uOH+UdIg
+vxKNmdmictgLUzSpgiksUEcvqu5taqwOBPaxuYKyKWQcBqayts6auE2OzjY
0dtdPwAxBt9BIffPTA8vcyY3FEs722KzaR0qOIdD5nLJ3G45tA7Hut0usVnE
NgvguXYni0kMslvXATdgFlp4ubO1olEtbsjntvV8w+4qfJrJIjXbVHa3DgCM
nPpB4IOXN2GkU/Sb6Ntvwm/fhN6+9r25tl4caQ/3JIf+tfN92XlAemhb8W+x
9ncWQgb2gZkdtiztmxbBB11bdPvm5KGdHTazTl3cSx//yL4AOnFyQkbmjnBI
PtctY3Yr53EK5pCMMcQjdZE7q1rqMLn58RlZsZk5z5OSHyUmfZ2Z/gyUm/0C
BH+lBbmJxfkpZUXp8LcK/lhXmNRTnTPRU80hdYMPrhDaF7F1c91ls21Fi70l
PFwVD1fOHSjlDZcrplq3l3HAvklGsqkn90yck72NV+fmf3gb/OG7oz/8y5s/
/OG7H3549e7d1dXVkdNp3NyUG006qBC3TOptg0qwyp5lTcBvkELFQxGxvDIH
v77m5kpwQAKhf2JipLOtFiJiXkZsVUl6V0sZvr9xdLAFFQHX2t9ZDdYGJV5P
WwUUjB1NJS11BfXV+amJj5MTH6WBr2XEIg8jS42B/x34I8pgT0s5+CDkAcgG
t+ttH2SlP87JfIzJeZ6f+6wwJ7YgB8kMuWlf364B/DIr8avspAf5KY+LM56W
57yAVN9aktxWkthVmtxTmoIyCFaIr0wdqUA0XJ6MK08aLENmoGHLEvrLE3pL
4vtK31shCuBIXfYoBNe2IhC1vRj05zI4SiaB7hi8j+GfxeAdfXcAIhro7Rns
6xpChh5APYODd+rshTg6AJ+PJw4Rx4apk0QIMxBpgEEujwkYMlkT0zNkSDX9
A23AXU1dcWV1AdSAJWU50FbXFgGSrRBFWio626v7euoBwykaDhhUyNlbepHb
pfa4NR632u3eABItltXdXcHWFg/4QtEDElHuUPRQ+uC82bhq3BUadgTvtbuq
1fE2VEsq7cqOSQ6VoP/Avh91eYPWvagjeuIGE7y48p5fuk9P7CdHxsi+8mhP
BgAeelajTmHYthKxLIfN3MAWy6+f8+kYXj3Du80EDMMOzqGbByWh38AI2xdP
XNyQeTZkZACAnk2aRzW1ycUpWL3qRZxmYWRjdogz0jZQl19dkZWSEROX+PBF
wlePnnyMzKGN+yI+7sucrLjszNjs9OegnIxYgLE4L6kMk1ST+6IhLx5bnT2D
beCTu+8YpDfns/tK+fgaYJA9ULJCqJRPt26ye10bJLeShDz9TTcdMC4d+mQ3
x6Zvbvzfvw3/3//nd//f//tPQOJvf/v67dvzs7NwJBrwBqw7Fq3TYzRaNtfl
fCgo4De4IpgHN8QOttPp5Pn5SQCwurqwtCirtjr/NmQWAWIAHdBHHGoDGIG+
YWzTOKF7ioIdG+kEEptqMM21+W3NJdXluaXFGUUFqfl5SQAg1HdghcAgXANZ
FNtR3dlYUleeUYqJL8qJBWGynmByYgoxsUX5cSX5ccWY2MLsmPzMJyBMxuP8
dGRLmdKsZ5V5L+qKkhvLUtvKU9vLkjvLU3rKU/sqbt2tIm2oPG2oFNBLGii9
Re92rlpPSRyiYiS1ghVCCgUGAUBCQy5E0PsMEsdJf5buGPyxFf5lDN4BiFw2
0NuL6+/G93YP9YN6cbg79WAH4JPhOxIoo2NUwiR9jLU4tcxnCUTzYsnS6hqb
xwcS6UzWOJHc39FVW11bAKqtL2pqKe/ubRge7Z6YHGYwxyYn8DQqboqGZzJI
AKBsna3XCU1G6S2AiNwuld0mN5lWt7cEuk2eamNRrWRr1RyddhnxuB2RySA2
G9eMu6twgB5bTEiOtVmkoFBw1+PbtNlVNqfa7d8BE9yLOANRZ+jYHT33X7wM
vnobfvPu4PWrvetLz+Wp5cAnP/CIQy5B0MaDv2Hv9jwy/Xtz1i5DFj3ZNyZc
2mn/LitiXz4LiK4P1oPWRb9xLuJaOvHy9s1ze7sM39a0VUE62Jm3SCi7UKAt
E9Rz+PXJPjaucageU1WSGfviAdI3dftMrrjnX0C5lBD7IC8rPicjLvv20bTI
Hl+pz/Iz4koy46oyn5cnfV2XFUNsLuaOtgOD7IF6YHC+q4yDLReN1q+PNYpI
dUJyjZLRYRTg3NLRgIoQ1NGgMvXrZ/ZNS2d+xetj46sz+/dvD/7lH6//+R9v
fvfD9T/9/jV44tXLQ7fPLNeIt3aVYIUA4DhtBNCD9DJFJ3X1NKI+ODLSSyIN
8JfnNjXiKcogebgDuBsZaKaMdlGJPWCCA9210+PIU+Dp1EEgEXgc7KmDawjD
7U11xcWFaRlpz8BDocqDOwxYfEtDCXwJCK0Ha0rTyvITQBBKC3OfFWOelxbE
lRfFVxTGlwGJec+LcmJKMbFwAIKDysL42tLkpqqMtuqsjsr0zor0rorU3oq0
vvI0pIOlPBWELU7CliT0F8f3QqlYHNddHNtV9Lyj6Dk6WxsS6WBlCr4mfbQ+
i9iYQ2rKpbTmg8bbCkB/GYM/tsK/jMH7AKIM9g1he4b7kMF3PLZvaOhOg8Mj
8O2IlDHiOIFEGRmjjkzSSRBm5hdpyyuzfCELJFxdgBbFkEwZAI2NDwJ6s3MU
Lo8hkXI3VEKVWrgh50klSyClYlm/uWrYlVjMcpDNKnfYN5wOJbQ2q8xskhhv
KQMZtld3t4XbOsGWbkWvXQEelfJFaE27ay4HMtnY7VTaLXKTUbJrXDPb5HaX
xurUGuwakNm9ZfcbAhE7YHh64b9+uf/qBgB0nZ1Yb5+foov4JB4T27XNAgDd
2lmjZEzNHZTMtEN9pxfgbQqqf5sZsixFHJyoa/k6Ij30rsDBgWPRsz3t3aEf
mFmBnRmfju5UTLgVU1bxhJzexye1LuEbIFLWleXExnz5xac/f/L1J0kvHuWl
xxdkJWQlPi3KQh4EhkmKyYl/nAPnEx4VJD8rSXlWlfEs/9mnJS8+x1VmLw21
CIkdnIEGYFA00gwmKKW06lj9ambP2mSTZqHXuzFuE2H3VCPHO5PR3Rmkg2h7
9sQpuglv/uG74Otzx/evQ//tX1//t399+4d/efev//rtD7+7uX51fHDsD0U8
Kq1knj0NFT2Uge2ddUTyAJU2wmRS8fhuIhELLXVsaATfSRntYdFHV9g0NpMM
uAGJYHwM2hAACJ4I7nY7TtFCI/eBJ1LH+sqLMxLjH375+d9//dWvUhK+hqR9
uwtiGRpcwQTry7PBBAuynhXnxpUXxBfnPi/Jjy0veFFZlACCA4CuOPcZ8AiC
l9BWlyQ1VKa31mZ3NOS1AYNVGV2Vad2Vafcx7CtOBAGAAB0I6GsvfAb6MYMA
ILk5b6wFA0JJvJsVA7o/BvGTcXSMfB/DO0P80wz+WPcZhJfouAOYIHZ4sG8U
2zcyCBoYGUE1ODrajxu66xcdJQ2RKHjy+NAYFc9ZhiTDXF1blEg50HJ5M0wW
ZYo+SpsanpklsTlTIvGCfGNFpRFpNsWgXYNie0em00s2dWs6vXhnV2oyb4Bt
7exKDEap2aKAY7tDbXNsWGxys1UGPNptCpt1A0o8o2F9dwf8cXVLL9CoeRo1
F1q1iqNWLauUSyolFyRXLKk3+buQQj1634EVUmjw2ANCGTw+gxTqubxwA4DH
YUN0XxuwC2161o6cuquYcOmY/q15h3LKICKC/NpZcDdk+5pd1olHeOTmeXYY
XiPrJLB6HpQc+fhRN2fPMgdueOkXHNu5SHBVz+xtLhj4lHlcDak+G7ysqTQ3
/vGDz37xNy8efV6Wk1ZblNtYkttWXtBVWdhbU4KtLRtsKBusK+2vLugpzess
zsRV53eXpLfmxHVgEgg1uXM9VUvY+oW+yhVcPZigbKJDzeiWT7dL6a07vKE9
zaRzDRfUEM5NM1f2+VMLK2KcOzAuhizL4IavjgxvL12vL7zfvDn4l39++Yf/
493v/vHV2VVoL+IGBqPHAZtzRyhegjpibX15Uy9Dxph4cxBE29try8py66qL
sH1N4HfMqSE2k7jAGJ0e7x8dbOppK2trKCAOtQxjG/D99XBAI/fAW1Ri1yi+
DSwPguiL2C+/RnY+/Dgr7VllaVZjbWFDVW5teVZlYWppXiJE0MLs57cCv4sD
76u4ZbCqOLGmNLm2LKWuPBWOAT04rq9Ia6rObK7Lbq1D9uppKk+BOHqbSFM7
S1I6ixI78+M7MC/aMc9RteU9bcE8bc5/L2wVMpMNmUtTm4GaIAog6oCo7jN4
H8Of7Br9YwD+ZQx+AOAHDPaP4lD6UJGpE2MT1PFJ2gSdSp+lMeZoUM7PLU5A
BAX0gDKlWiiVLwODACCR3EehggPiAcPFpUnh6jxcsKmXbO/KHU69zb5ptWlB
dofW7dnyBwz7QbPTBcc6r2/L598Gebx6l3vT4dRATL1Fbw3Q020KtJqVW+K4
m1o+KjiDCnhUqXmyjSW5mqvWiXRGudG+6fAZvAc2yKIQSkNRe/TYcXRiP4qa
I0HdnnsDmdRt5XuMHPfOvHuLBQzaNqZ2BKNqNlbG7II4emJdvnKLThwrRw7e
qXvl1CfwGVghBzdgWXTvMgMmls/IgPLw0MU59wqiFg6yanh3ySAcY/SVtuY8
Ko3/rLkoOy3m4aPfIMsMi1MT6jEZzQXZbUU5o43VpKZqSmvdRFsttbVmvLmC
VF9CqC3qKYJ7e9ZQVc5IdR4wOFaXS63HTDTm8ocaJOTmTeaARUA0rIxql/p1
3AHL6rBHPhLepFyYGe8ZNDAOdudChoVT79pNBFmtfHNqe/vS9/sfTv/5n65/
+O3ltz9cnd8cHp3uB8Nug1m7KuHyhQtSOX9xiQ6JtKurYWioq7OzPicnKTsj
vrG+GIwP4Jqi9BFwze2NhfWVWQDgYE8NtqsKWkBygtTNoA3SqVjycNtAX319
dX5JUXpaytOnjz9+9OCXz598kp78JD8nobo0o7I4DQreouwXKIBAImKFmBcI
gGB2AOAtdAAgcHd30FCd0ViDMNhSjzDYXJHeXJbSWpbSUprcUpjYkh/fnPu8
JftZa87z1twYUHNeTBPmScOt4KC/MnmgIhmZUFqTPlKXSWjIvp9F7/vgjzH8
X2QQBfBPMIjOWPux7vInCuD76/EDAyO4fsIAAAhC6cMRCCAiZZw0TkEwnKJM
0sfps9QZ5jiDRYEgCgyCzem21qEViFh0BpE01g/0gRhMMmuBurwCQZQDJggM
gkOhMpgVZpvK4dZ5/Du+PcNB1B4+dKAKRWyBoAnOA6GGHSloZ0sCqXVTI9So
+KoNHoRYOEClVq6A4CRoQ8mTK5elG1zpBk+mEai31ndsGgiinpA1eOSKHLuO
Tl1HJ7bDiCEU0HjtEqeJH3SJ/RaeQ8/clVF1q8TdtTG3cnpfz9rlj1rXKH7t
zJGZc+YSnHmEV4HVmwP5voVzYOd5d+ed+pmQdfHAxkYG7r286z3xVWANGdl3
id1q5gqlpQ3zJO2Lv8l++iDlq89BeXGPy1PjqzMSm3LSugqzx1tqaa210+21
jA5EM63V082VtKZyUn0xob6IUJs/WoMZrc4hVmcBg/TmfMii62MtehbOJaG6
ZZOmVcL2ytCuYMinGots0c7Ms+e2BWDwyMiMGuYixvlTt+ByX359gKxZvjm3
f/dm/4fvD7/97hh8MHq2v3/gsjq2N9RinmB+gT09vzjF47Mgjra0VCF7VDaW
g9qaq3q765tr87DdFeSRllFcQ1drUW1FWjV4U1UGYxI7R8ex50Z57DEBl4rs
MEPrJxM6GmoKqivzCvNTUpIegw+CIJFisuNLMIlFufGFWXH5Gc/zM2OAQQAQ
QmllQUJ1fkJNQWJNcXJdaWp9WVp9RXpDZUZjVSaimqym2mxQY11OU30uYNhQ
kdZYltpQnFyfn1Cb+7wmK6Y282lt+qOGrKegxpwnDTlPGnOfNmBiUAx7y5He
0YHKJFx1Cr42baQ+Y7Qhk9CYRWrOuRM6E/sDDD/Ipff1YwdEq8KfYvD+qooP
Vljc2R9cBl+CfOEw5E8cljiIJQyBUPpAQ0Ti0CjyXe76ZMZphIkpAo0+CmYH
4ROcDnwQMATQwPLEEjYI2ATBwbqMq1Dy1dpVsEKTVQnoWexqu2vT5d0C+vZC
5mDYenTqQRU9dgGD/n0jvGtzas0WpcW0YTYqUBK3dGKdVgQwAoYbci4qhYyD
Sipb2lCvyDQrcq1QqRdrDXJg0OLZdgSMkTPf8bnv4tJ/dem5OrWfRrYjAXXI
va6T0nbkNNPGpElBM66P74hIu0ICCCo7lxx5upNXPQ22AlZ47ES2WNwzsg+d
wqiDf+gUXO5JLvZWwRxfHqxd+kWvD6Rvw6rXoY0zt8SqmGYOVzdjniV8/osX
n/wy9atPAcaMrz/LePBRTUocoa6UXFdGriuh1pVM1BdPNZRMNRRN1RVO1heS
aouGa/LxlTlD5VmDRSmDhYljlVnM9mIutoaLq1qfaAcTBAadcqpNSnEoKF4V
dU9HixqROQNn9kVUp/alUyfv1Cs+Dayf7ivPo1uvLhzvbvxv34TefHv6zW9v
3n57CVkUMISqcHllbopOwo/0DOA6enub+/pahod7SKQBHLa9raViqK+ut6O0
o7kAAMT1VRPxTcAjtAAdADjPwDOnB+kTfVRSB5zEYetLC9PychKgJHz44Jef
ffQ3Dz77u7iYz8AKMZnP8zKe3W4u+hST8RRM8BbApJqC5NrCpLqi1IYSADCj
sQLoy26qzmqtw7TU5sAdoLkup6E2t6E2u74mB5CshbBalFiVF1eWFVOa/nVp
6sPy5K8qUh7WZTy+3THmcV3uk/q8p/X5MQ0FT5sKYrpLX/SVxf9RDO90tyDi
x4b4R/UBgHdTuH+KwZ/SB/S9H38fAe8bGiDhBoh4EILerfAk0n0fnJqBOEpl
zFFn58chai7z6auSeTAglVag0YnUm0Klhq/Vr+p3JOB3QJzVoQEBd3AMZLl9
23foIfYXdUUO3dEjDwgODiLOwL7F7d212jeNZhVEVotVYzKrDMYNKCT1W+tQ
SGo3xWqNSKUWolKqBKgQ0nVizc76lkm5a9ea3TsWzy4wCNqLOsJHzpNTNxSD
12eOiyPDcUh3GNhwG7heA7Ik37ez4NXN2eSTkEU1i1iTiORTzQT1TI9qyqma
9OtnHeoJnRC/vUrc21k8dYnA8m6CUgioYfvSmV94HhDdhKWvI6qbg41XB5oz
r9Qom2ZTO5sKUrNiHjz95d8++Nv/8Jt//+9+81c/y/jyV4PluSOVmJGqXGJl
Nqkqi1KVTa3OmazJodVhSHUFhNpCcn0hpbF4tCILmx8/WpIKPghxdLo1d2W0
bpuL9yqm/Ro6eHRgiwn/Nrdmen+LcWhePHdyX3p5N76Vlz7BmQtuGitRl+DY
t34SVAOGLy+syOKR19F3P7z87oebq5ujw5M9SKRmqw4qQYtNL1xlz8yM0elk
KAnx+G4yActiUiijHYO9Vd1txeCDSyyCQjK3sc5aE0yD/YGWF8lA4uzUwCSl
m0JoI460dbVVVZbnJCc+gnrw4Rc/j336aUbKU/DB3HRkw2cAEAQ+eNshk1hV
mIzQV5TWUJLZVHY7d6gqp6UK6Mtrry9qrc9vqStoqoHKNLemMrOqIquqPL0s
/0VJ7rPC9EeYpAeY+C/y478oSfiiNPHL2szHoPrsp7fLe581FcU2F8e1lMT2
3AKIrUgcrEoeqkkdrktHGbwvdKngBxj+CX1gf/9TBu+WNX2gu7dQ+t5PtiHg
QcDgIGkYBOjdiTROJVPHKbQJ6vT4NGNihjmBjPAuUMHm1qSLUgVHoeIBegAg
CEjc2l03WjacHj2wFjlyHp64QeBxEDXhJfjdybnv9MIPOj71H534UAZBgORe
0OrxGWwOvdkKPqhGAdzZlaMAarSrACDwuLUtRQXnUYERa7ckUAkCgMCdzWe0
eg0ml97g2LS59IB/YG83HNqNBrfDYIIu6Z5DHLQKPbtsq5pukFHBB02ScYig
FvEY+CDIIBzRLPWb10h723NmOVlAb+JPNhnXKKHdpWOHAPJe0Ljg0U3vmVhX
Qai/ZDcRxWVQ9vJAeR1WH9hXjRtMDg3XU1ea+fTLRz//j7/865/97b/72ef/
+8/SPv0vUO6NVGUTqjKJlemU6kxabfZ0Qx69uWCur6G3MK3qxZeNqU+w+YkD
BQmDmPihwhfkmgxGR75sstMlpUV22KFtFgC4b5iH+waUsT490hUD3L0KiN5A
ZvYLrzxQw3LDNm7ULTryy4+C6ovjnVcvvfATProIQT0IcTQQdOyFnA7X7qZe
ptmEUmJNqVyVSlc4HAZgSBzpI4x0M6eGwOkWmSOrK5Nq+eKmkiNfYwqXJwA6
OA9uCBiCG8JL8MdhXFNvZ215adbzmM8++vV/+uiX/xF8EErChNgv87NiwQox
6c9ABVnPSvJeVBQmVRelIPSVZDWV5jaX57RW5LdW57fVFLXWFrTXl7TWFzbV
FNRWIdNQy0vSSorSSgqTMRmPc1O/yor/LP3ZR5kxH+XGfloY/3lZ0gN02zR0
fT3Q11aW0F6R1FmZ2FeRCA54ByAQR2zKBt33wbsVux9g+D+sGbynHwP4p8cH
f4rBu+VOKIDohwzB9yUOD5KHAEAceQTQGyaTUaFZFO4AkEUpE0TqJJE2TZyc
IUzRR+cWxviiWQiBO0YZJEywOW9gFzInJEk43j+wAHpnl4Grm9A1smDh6N13
J9/+w9l3P5xD+/bb45vXh9c3kbOL/VsFT8/3j078BxFXYN/q9ZvQDhwg0QjW
ZlCgxOn0kvsCMFEhXa/bUs2uDFKozrSxaVGD9GaQ0mBBArDDpUKmpLrkyBLF
LY5pc967yw2Yl/fN3ICB7dOzvFrm/ubcwdbCgW5+izPEIVbwKDWQ+iCLujen
xMw28UyHSTy2r58/tPIuvauH9uW9XSYUhi8P1l9F5a8PlS8jINXLw82LA03U
t7G7sSzjzU4Nd9cVpCR99cuv/utfffYffvbxX/8MX52Nr8oYqUgdrUghVqVN
1GVON+XS2wpJdZi8r371xV/97Pnf/m+VMR93Zj4dyHsxXJzAH2lSTHY5xbRj
A/fUsnKwM7+/w4paeQc2QcC04ttdCpq5p07+pRehDwwRMDyyccKWpUO3EKzw
MCA/j+pfvXTDj/31d5fXr47Rbhm3z6zfVqytL4MAQ2AQAJyfnxSLOSqFSCrh
yMUsmXhWIqSLeLSVJQpqf3AA9AGJ0lUGvMVdIEEcHRttHRlq7umoqa3Oz0x/
/vTxx19/+YuYRx8lxz/MSntWnJeA1oMgNIgCgzVF6Y0lOc2luS2lGACwrbKw
o7qovbYEAGyrLWmpK6qrygcAy4oyCvOTMbmJeVkv0hMfpMZ+kvz0V4lf/zz1
0S+zn32MMJjysCHneVPe7eZOxQnt5YldVSndNWm9takD1Sm46iR8bcpIfRqh
MYPUnEVuyR5rhTIw6073F87fx/B/kcH37Pw0g3es/VHdBxD5NCJif4NjeAAQ
NDRGBA2TEQ2OIpdBGB4dGyHdqwdnmIQlDk0iY+u215C5YU691akz27WegNHt
N4DgIBCygvehGN68ibx6d/j2m9M33x6/fnt8eRM+Pd87PPW9fBV9+ebw5vXR
yzdHVy8jp5dBIDFy6PH6jeCJbs+Ow7UFPJrRXGpSKjZWoPCEVqbgyRU8qXxZ
Jl+GFoIoVIJQD66rBSD55qpqW7a5KzfZkDwMDLqdCqd1zbLL3VXN6WXTxo2Z
XRlNuTy8PNE4PVjCwJVIZjoMIpJRSFqltcwPl60zOvz6uTOXyLc1q+ENGVfJ
fg0rYuCcu8TfH21+c6hCumL2168PZDeHG29PNW/P9W/Pt95ebr+7NLy9sh64
1Ochk2d3nT7cVpb2OP3rXyZ99p+f/fyvkQn8ZSnYkoTB4oThsiRSdSq1IWuy
Jb828UHGp3+b8Mt/j/n65/XJD3vyX0y2F61NdFuEEx4F49DAvXCKjswcyMZg
fJc+yXlAGnGtwj0kZOFC+AQrBPQOTHM3e2vHdu6/Mbh26Fu/iGjf3rhOz3wn
56GL6+jNm9NXb8+Oz4JOtwF8kMdnsTkzi4vTbDZ9bm6CRhulUofpU6OM6WE2
kyjkTgJrEEH5nHHwRAiffDZFsDTOWyDP0vpHsLUdjZjGqoyG6syy4tQiTEpm
6rO4mM8ff/UrYDAt6XFBbiLUicX5KSiJYIJl+QmVRclVxSkNZbnNZZiWcgTA
VhTAutKO+rKW2uKm6sLbJ25nFRemAYA5WS+y058nxX6eEPPr2Id///yrv4t/
+HNww4LEB2VpXzfkxTVikF0N20vB/pJ7a9P76jOxDRm4upThmqTRuhRiQxq5
KYPSkjXemj3enjPWmgUkokK2iMEPDI7ggLvRMQKJSh6jUSiT4519XfAWWh6i
+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
zTqWRtojFbQZNQyHmW9Q0xWybr9XqdXQlQqKyykJD5mCgwZg2B/UDY1Yg/hx
yISScH5pYHWDuKlsbjk0uxKeWgxBaMD+VnZnlnem0Tip+8gOarLug/BVnwwL
kkIbQhBd3pogGVRouFRmS11DUVFJGjE4WJRK2N/V96CcnCR6b6tWJSSHC8+e
feP8+bdqq/OFfApIzDmewgIYouJurs2vwq/nxlcUJDdWZLaWpnWUp3dXZVFq
cig1WcAQACKLkgySVthVldxDLPiS1luXTq3NhAAgTBB44j0NhQSDVVnR1dm3
KnNuVeXGnGTCF7tQPtfvXkSvtbf7T+iLGGyhdEF4Az4E/xBLLBCq5Aq9IjBg
Gwo7xkeJ1aWnxvvmZ3zrK0N72xPbG+Nrq8SyRxNT/SNTwbG5ocnlqZm12ZWd
xcCQJzDoX1idDwyFKutrT50//+pbbzX3dAfHx7buHi5sry7vbRy8fwTt3t9Z
3Fh0eOwANjkjqbGtvr2nta65hsLo1llUBpvG1mfwBh3hif6ZpbHlzdn1XaIb
HMedfO4Jh568aQrlCc4HNMh7F8luGfKuNnJ5JmTO8Qn/yKiHWBpm2E1uAR0Y
hBUODjkBJhowR1/AjLJlYMgRDDudbq1ay9cZRG6PXqXmGoxio15ktyo0Kq5S
zuIy21mMVtqxemnNnd3EDXvtrRXU7no2o1kloRlVRL1mVNCV3E4xvVHOatHw
O/tUHIeMYZMw3Eo2AAzbFENW5YBRPOLQhMxSj5rv1wn6VDxua3lTAWqZQim7
p6e5rqmypKuxitpGPOuTlxqXFHW5NCe5sTIPGEo43TIeBZ4ISXkdLGqNWkE1
qBlPZ3cx8uwWYZ9b7rCLB0KGwbDZ61f7YIKjtuFRG8InGkihEAnj8JgdAG7s
TsIEYYXzayMQsig0vzEOQ4TfnQwRkiTCDSHy9higRxaD5MUQ5UBw1InP2dyd
WduaJG8WlcqZAlEvhdrUTWmgUJp7epra2mqamiooXY1IoXNzYwMDbrKztLm5
EgUjm9keHnT1dtVXl2eXFKTUVeU1VueCQVghfLAyM7om+1Z9XhyyKBytIT+2
LvdWTXYU2S9KYthentBBLHx2fLfMZ3012B6jmlifH1+TE1OdFwvV5MfXFiSc
9Ek+h+FJ/jwB8Fn/Ij0OBIGj5p5OiGTqRX1RRj1xSTggVyZWmvQWj6tvoG9q
JjS/EFxfG9ncGNlaHwF9d2/PPX60urszsbU9ubF9PLHS1iwcbXF3eWlneXx+
ZPf25tr2qlQlSc5Mv3Dtyo3Y2OTMTIXRMDwzPbmygGIQcXTjztby/ur64drM
8kz/UKCksvhK5OXSqmIAWFiWDxLrW6vpXIrKILG69Q6vyT/ogicilN5/vIuc
gwNN9rqAOKRQXG+J7pfFME4McuCevKkbGj5ejCl8vBgTSd/omBfejXYwZCfR
A4OoCkEorifADR81OukPhGx2p5qUxabQ6YV2h8piknrcOrWSo1XzRLweiYjK
4nSy+d1cfg+L08FgtjJZLaLjuf7cVqnPJffZpGBQ0FtHbyvhdFaIafUuJbNP
zfZqeH49P6AXDphEQG/IJpv06INmMQAM2+VAUsVs5rVVKBitZqVAzKLSO5qZ
Xa08agezq7mttgy2WJAeB0MkMRQyO3i0VlZPPau3gcNs4nGb+ZxmuazHZORq
NQzI7VHoDGyXRwHiyM7P8LgduJE9opMzHmRRmODMvB+5dGjMERy2gsG51WGU
cosbY9Mrw5NLQ7Nro7DCZ4vBk8H6k3SKyyMAxLURVGIP3oOK0uiQ8UTdcjUL
V7apuZC/H+Ge09ZRXVGVW1qaXVdXAtYqKvLyspOy0uMyMhJKSnIkEpZMxoEn
RkURa8QkJ17nMju622vys+Mjr56KjjiVmXw9PfHajctvkPUgiSEArM9DcXer
NicaDJIiSCyNg9rK4olVCMuSnt7AVkEMI54wWFsA+uLrChPri5JO4uVzGD6b
P58F8EX6mro7oC9i8Isy6tMCUMDlK6Qaq8kdDIzMTs2tEl8y8ST1g7X7D1fu
31u6d3fh0cOVJ++vE+37xBwRtx9u7z/a2b6/vX57c/Vwfe/e9ub+6uTchMao
Lq2uvHozMiI6OiMvz+bzuoMD9n7v0MzYzv1DADs0O7ywNT8yPTK9MCXXyIor
inKLchJS489dPnPx2vmMvJTa5kqehAU3dPktA8MeMLi2M3d4dx0X2On5waW1
caLr+/EOzgTYH6hEY355BCLpA6H9g3ZYG7lIKLEs70gfcCMLQBI9bNHGHiKF
jnlHxryh4xm5B4Zs5LTAaLi9Wo2eZ7FKnS6Vy612OJUGHV+r5mhUbK1OIFGw
JCqOXM3B5V0kporEFIWMrlOzUDjbjIQJSrkt3J4qVmepiFqj4rZ4NCzIq+X6
9dx+ozBoFoYskpBFNAhmdRzsGXbI0O438oFn0CK1ayVWjVwnFUjYND6tW8ig
SNi9EOJoZUE61FFfxupphGgdtdTOagG/ncVuplFrBcJOk1loMPLVGmIypVDY
6vZrfEHD5Jx/dikYHLP7Q0bgtrY5AvompvtA4txi/+JKCK+Oz3iBHgAkR+pR
BpJ9MkvEoxDTLzJIhhNc/UiRJJJZBeXkwvro1NyAxSGnsVq7qQ0qDS805ETm
l8iYhYXpxGQyNy/GxFyNibp88/r5q1fPvnvqtTfffLm0NNdqVSPnJ8VH5mYl
3oq60NFWJeZTaitz426ej4kkqsKkW+fAYGXGTbJflOyTIbtlmgpjSREkFsec
6LM6kQCwtSy5qTiBZBDoESpOhp6t8p7F8IvqvtZeQi2UHgh5r6m7q7Grs7Gr
neTxRT31u97ntl3Ew4ZinlAuVphUTr9zeHZ0dWd1/z6xPNkHHx988unRx987
fPLh1oNHq4Dx4eO14z3E5IQPPz668+HhwaP93Ye7O/e2Dx5sr24vTs1PIGE2
tjdfvxV1My6utLra3ueDD4YmxkMTo6t7mzNrc2aPRW3VwAfnVhZMdnNmfvbr
77zx2jtvwBBjkmMaWuvKakur6itYQuZAOLBxsLp9sLm0MRee8MPvyAFBkjVc
fnG4gSRODJwVIBT0hcfc5AMUJ+uBkl0x5LAgUigckFimcMjp9emRSMPDzpFR
/AhrcAdCFsCLTxgccbu8WqtdaXMqHE6CPvyiySy2WOUKJROeiIZExpAr2Tiv
1BqOUsXSalhmA99pE1sNXIOSrhC0i9lNCm6zUdbjMXCDdsmARehWMaySHmwH
reJRlwIAgkoAiC3QA5tOBQ1sjrmVPr3Aqha6zEq3SWnRSi1qCbYqIYNFaRbQ
O1pqi6sKM5prihidDcyeJmwZPQ2U7hqxpEcq6xWKulRqJjA028TOPiUADAya
+ofMwBAAzq4OruyML22Njk65pud8QG95bQhCPbi5N7V3e37rcH51ZwoYriDt
ELerza/vzS1tTq7uzKztzqK9sT+/ebCwdbi4fbS0c3sZL23sTO8eLhzcWT68
s7x3uLC5M00uer6wHB6d8OBShm8JaaGjs7qpubSlpUImY9lsGpGIAROMjb12
/eqZy5dPnT79nYiIs5GR599777VbNy9xWB0mvaynqy721qW4mMvIol1tVfVP
MXyvJDc2O+5iYeKVsrRIVHP1BbEo7poK44+fnoj9o4puNRZGkyKdEQG1rTS5
pTQJDNblx4DBhuIkQiUpDaXJXzTUfoLef+1CobZSCLX09ELN3ZSmrh4IGALG
Ez2bTmubm1u6uih0BpVNLAzaezwnG0vIUmhlFrd5cKx/bm1yc395//7Wgw8O
PvjevZ/+6ns/++V3f/qLT37y849+9NMPfvCT97//48fE6pw/fkzO0EssCfHx
0b0PDm8/3jt6tI1jcXh/c/twFeAweYysvNyMnNyuXrrL0+8PDevM9uDw2NLG
hmcgYLCZTA7L1MLc+MLs6vZmYVX51195+d2L5xLSUuIzUqMT4mJSkxraWlwD
/v7wIK4ScFWuhDs8OTA5PzQ07hudHiCP/uLGxMr2NE4VXLoRn1B9QNPLwanF
0PQ8UQZOTfRPTw5gOz7qHR5yhQYs/X5jsN8MedyawZB5dXlkeWkQDa9P2x+0
QaiCEZm8frPHZzxe/cTgdOuw9fhMKBLNVoXeKDaZZFabIuAz+Pq0bofSYZXY
LWJsvQ5FwKXwO+UaSbeI1Shg1PN7qwzS7oBN5DPxrTIKoLNJiS1YA3QadrNd
1gv0sCdg4GHrkFPltDqzqMupYdsNPIuRWHPT41LbjWKnTe62KuViOnmnLqWt
pqOlsqu5sru9jt7VRKc0MenIoq3AUKNlm/FRTjkAdHlU/gHD4LBtdKqPvBUN
GpvzzRy7HjS/MriwOrS0Pry8MbKyObq6NbZ9MLO1P43CcG17fH1nYn1/ihhn
P1oAdxuHT7V+e57Uxp2F9YPZjYNp/Nb+0fzh0cLe7jS+0ukJz9R431DQ7LLL
9Bq2TNyLShklc11NfmtzWVlJeklRGq23yWJRGI1ShNIrV06/d+rb58585/q1
01E3zl29+Pa1S28X56cIOF0aBae5vjg26kJaUmRHSwXaGSk3EUeL02/kJ10p
z4pCNVeRfbOlPKW3PqupOK65JJ7YFsecANhQcANqKYmFiP2FsQ35SLDRtXnE
g4d1hXFQfVFiQ3HCF93H8mz3yzMYUtt6aa0UQi091OZuYNh7giGpYwyJdPqU
xI7Orl4qnU2sossWcPgSgUwt1RhV/WHvxFx4Y2/p7uPdJ9+7890fP/rR33/w
s19/9+9/88Of//oHP/vV9//ul9/78d9/8sOffUQujfTpT56QM9KD08cf3waw
xLQwj7ePb65eW1ibGBofsDjNHZTOnILCnIJircE6PjU/PDY9ObuwsrEZHht1
eT1gsK+/3xHw+8JD+Fuux8Wevx7xrTffeOvc2aikxE4GHQkW//9vnj2Tkptj
cDrcQZ/aoLR7jMubs8ub0w6voT/sWt2enVocwvUZDIK+yYUgapnJxf6ppYHZ
xcETBqGJMd9I2D0YtIK+0WHXQMAU8Osmxt1Li/Bnt9+nJhk8BtDqC5AMmsjl
h1x9erSxB22rXWWyyEEiKsRQvznk0wfcaqDXZ5OhDHRbRH1WsdsskHCaWT2V
bEqVkFYDBl16tkna4zfywnapS0lH5gRrfWqmgl5vFHTAFoEhtgMmATAkvVJA
qZLx2ww6psclh2xmERgHhkYdH6clj9XBYbQf36yLbTub1sVhdHLZbSJhp1xB
0xt4NrvU3afq82k8fm1/yDQ0YgeAY9Oe4QnXyKR7fN4PBhfXwhDoA3okbuAO
Vvgcg9izczi7fXuOZHANAB4tEgCCvjsLYHD33uI28czF9O7B9O7+1PpaeG6y
byRk6nerXWaxXsmUC7sFrDZGT11bU1ldVR6xikRuQlZGTELc1ZiYy7m5iRRK
s14rpFMa05NvvPfOty6efS0h5nJq4nVyxtGyojRg6LQqURK+9drXKkszOYy2
pJiLsRFvl2TeyIw7D7VVpoGg4vQrnbXpLaUJwPApbk8xvAn9kcGiW88wGHUM
4PHkwM8w+NxdZM/1gn6GIcFgWy8dOsaQsELSDRs6OyCEUlIkhhAA7GUwmVwe
R0DMLKo2aJxeBzxrfXf58P72h58+BGg//833f/lPP/rNv/zkd//+81///qe/
+t3f/fIffwwYSRJ/8ovv4j0nGMIK3//kzsMPD4m7rJ/s7t1dPXxAzIy9vDkf
HO5n8lhgMC4pFQwurW6tbuzOLa3OLi55An6RTNpF62nq6BAoFcCwl8t59d13
/vrbL7/+3unqlmbswQXkqy9/C0jSBXylyYg/li0Rosy0usx2j9kdsI/PDgPG
+dXJibnBmaWR6aXw8crX/uEpYu6gsdkAyhDykXkEUYjsGkXgDIasE5OeQL9h
cMg6B2Cn+/z92j4voqY+MGAlGXwWQFKgktzvcCGgquxOjbtPZzVLHFaZxy4H
hgMeLTF849NCDgMXlSAAhA9qhO0OLRPSCtoHbbKAUehUMkfdaruc7lAwtNx2
s5jiUrH8BoFVSsUen54PocHuKGd0V+rUDK9bAbkdcqdNin8OtquSsSC1nKOS
sRUStkzEFPNpQm6PRERRyKlaHcdqkwBA4i8KGqHgkCU86iAZxBYVHy5TRCI9
dr0T0IAeWCNw+wIGET43jwiBwY1j+jbvLkIHD1d27y5sH0xt7oyvbQzPz/lH
B82BPqXTJDIomWJOG6O7uqOppLY8syALAedaVlo0EIuMeO/alXdvRp5FzoRi
oi8Kud06BYfeXZ9461LExbeyU6MKs+Pjoy7kpEVnJt9obyw1a4WI3JfOfOfC
6Vfa64saK9LTY84Cw6by1PykS6UZ17vrspvLklvLEgkd98aQ0JHcPUvlCYM1
uTdPADxh8MXbOJ8bj/gMQ1o7ld5OZXyG4R9D6Wc++F8AhA92Unp6aFQai1jf
UKyQmOzGwdHg3PLM3ceHH3zvAeACbr/6/U8gMPhPf/jZP/3bL/7xX//+t/9C
wPgP//STX/z2R7BFCIZILo30yQ8fffjpfVghORUh8uHtR1vgcff2Znh8kCvi
FJaWxCUly1Ta8Njk8PiUtz/kD4YUGm1pZcXNuJi3z5y5lZKsd9hpfB4ATC/I
VxgN+Lteeeftl776lcyiQolWU1Zfl11S3M1itlF7G1tbJEqpzqy3ua3h8aH+
Ib836FpYmwkMuQfHvAio43PB4wXoiXsdRyY8I8e9oCc9Myj6hsKO0KBtKGwD
g2PjbjA4GDb7AprgoHEgaEIEPTHBEweE0MZOcgQfPwJDgkq/ye81DviNg34D
BADhhi6z0IaazsA3KKiIoyYVvc/I7beLvWa+VUXzmYQ2GQ2sjbhUILFPwwF9
Xh3PKOzG1q1me7Rc7AGVeI+U1cSm1VpNfL9H5etTDvj1vj41GOxzqvRq/vGk
f1LIpJPqVEKQKBXSNCq2XsexwIj7VPgDgyFzKGyFAODIuIukb2LWNzUfQFz/
cxlEuQcGt24vkSLpg7buLe3dX9o6ml3bHl1ZG1pc6J8cc4b82j67xOdQ2PR8
paiHS2voaSmvr8wuyonLSIrISIpMSYhIjo9IjL8WH3sl+uZ5wHjp3BuAKz8z
VsDqAGs8RhsAjL1xDirJS4JiIs8mxVzm0FpUEkZNWVb8jbPVRYmNZSmVeTEV
ubcaSxJr8mNqC2JpzQUdlSntFckdFcTARFtZ/IswkgzW5RIAPssgPuTF+6hf
vK/sGQxpHTRGB415TCL9OJdST/pnjkWWgR2tvZ1P1dWGfEhOQCpVyRwe++Tc
+Nb+xpPvPvz+330Es/vNP//sN//yUzD463/+8W//9e/++T9+9ft//4ff/eGX
IBEvkZ4IEkk3fG6tauLRv0+OEEc39hZWthbwyYijTW2tMQmJbV3dSq1OLFfA
iEUyuVAqS8vK/OZ3XgGDWcVFxTXVSJsssQi6Eh310l/95enLl7gyKeIoCC2t
qy1vqD8Xce2NM+8h1sJYO3ooXKEAF5PjK4moi9qpNaldftvIVHB6cXhqITwy
HSCWGhz3hoac4WE37G8UhI71DY+4jn3Q3OdR9w8Yp2Y845MuABgaMk1MuYaG
LcT44GcplAQQlSCEBnaSFnkSTQP9lvCgc3jQHg7ZEEr9LpXDJELuUkl7zBqW
w8hHIvXaxAGnzO+Qeqwiv1XsN4usCrpNyQjaZXYV063jelHumYRSRiP2oz3m
0w3YpFpBJ6TktWkVVHDX79Nhi8IqGDCAQatJbNAITDriWU6bSY6tUSvSKLhK
KdNkEFpRaaIgDehDg5bwMLHkDeGAE25CU30AcHqhnxiFXx2EltZGl9fHVjbG
Vzcn1renNndntvZmoe39OWw3dqbXtibJ/agHwSBZg2/fIQT0SG3fX14/mF7e
HptbHpiZ801NukeGLP0eFWK5SclQi7qFjGZmT01ve3l7Q0FtaUZpfiJMjZwu
O+r6mWuX3om8ejoh5kpW2q3rl96Grp5/A6yxqc0Bt17I7iQf6YUzpideB4bX
LrxZXZop5VPYlIbYiHd7Ggp6GvOzEy4WpUZQGvLhg1W50V3VaYQqU8nn6EkY
oT8CWBAFEzxhkHTAZxl8kb7n9nxmiPROOrOTzjomkfEUw+OeUiS3k/teOug9
nQwKqfaejh46hcFlCmUCnVkLH1nZXLrz6OAHP/3457/+EVzvX/7Xr//5f/3D
P/3h72GCv/+PXxI/HmOIl07cEBj+9B8+JStEhFIykZIYopA8uLeBiLiwNjW7
PAmTRcmZnZ9XUVPNEQgBYEpGZnl1TTeVFh0X+9JXvvTX3/zmS1/768qmRqTN
3LJS0PfOhfP4u2R6HUrCxKzMuvY20PcXf/M1bBMzs69EROUXVdY2tCalZr11
6sy5S5czc3MqaitpbKpMLUFAHRzzQ6gT+4mp1dz+46EH8q5sOCAZREGfwymH
FSKFgj6vXz0yZp+e9QyP2rx+07MpFPTB8kiRVohXSTDxnv5+W2iAoA9WSPTM
WKVWPR8MamQ0taTHbuD1mUV9FiEwdJn4SKc+u2TAIQtYxIAOuJEM9ul5Li3H
JO0FmNCQSxlyyPGjWUY1SHpRY8L+wKDXrQp4tX6Pxm6RGrQ8+OAxhmLiiU4D
cUcrMIQz2ixSp0Pm8WrwN+IPHB4hJhsk5yocnyJS6OScHwCiAJxfD/8PGASA
hO6uHD9OuAz6SK3uTeIDiccPxx0AECbosUmQB+S8dgG9gd5R2dVY1FabV1+R
UZaXmJ8enZMSlRB9EbhdufDmzYgzMTcvRF0/CxiLchJAXNS10yAu7uZ5vAf5
0+/SyYXUrJSbeH9q/LVb18+8+/rf4FV6Z42c15mffK2uOBHXq5bytNSbpwEg
s624pzarpzajpzqdGI6vTumqSgaJEAB8lsHaHALA6pwbJwA2lSZ9Uf580RZJ
BrsYLAgkEgwS3FER2KBnhjZoEIVDJ0Xn0JAP5RqZ0ab3BT0zi1NH9w8+/sGT
v/vl93/1u5/96//3m//4v7/79//7j//6v38N/dt//gYAQs/6IMkg2VEDN0Qo
PUmkwBBbYsTw7ubWwcri+iys0OqyAPziipLWzo7q+rrrUTdBX0pG+qmz5155
8833Ll6k8rgcqQTovfSVL8MNGUJBRWMD6EM9G5uW+uVvfgMV4qWbN15+682/
+NrfZuaUpqQVvfLa6Zde+tqrr596+9S5U2cvJKam5RcX1bc04K8TyvhiJV+m
EeitSpcXhkX0Z8LdnnZ4Bs2+fiO5KCF8AfHMP2DoDxnCozZocJhg8Nl+GJJB
lH4Wm5LEECJ3ohEIWCfH/SNhNxh02uRAQyGlSfmdYm67StJrNXCtiIVaNhzQ
aeRZNEzw6DOLw32afpvMomDY1WyvSUQ+He8xCiGznE62HRoOXrJpOeDa69YE
vHqXXWHU8S1G0QmDpECiWS+2mWROq9JtVztscrdL4fVpkatJBkkfnJ4LTEx7
SQYXVoeQPxc3R8AgEDuh7PjxIgK0vaPFL2Jw987KU91bBYN791dIIYjiAydn
PMgSAwDQIcUfrpFSdNJeBaeNT6lltpf3NpW01uTWFKeU5Mamx19Ni7uSfOsy
ciaIg7vB4wqy4iIvvp0aezUv7VZW0o2UmCsQ3hN/43xbXfFU2OMyyWOvnz39
+t/GRJyJvnr60ulvVxYkGqVUFa+jtTKT2lRIbyluLkvtrMnsrc8hVJtJqfmM
xKo06KSbtD7/JkwQDAJAkkEA+ByDz1neF7HZxWSQDBIYojx8ymDPZ7eYMqg8
Jikan0UTMGB/Cq3M7DACwLHpkc39VaTQn/ziUwgMwvWeZfAP/+e3X5RFT7po
fvTzj0+sEABCx5Nm7x7e394+XF/fXT7umWGkZaemZaenZqVF3LxxOeLaO++d
fuX1N5IzM5V6PYIoQHv34gU0QB+4Qzqtam46fz0C4RP0Ac9vvP7a5aibpbUN
CUl5X/rKqy+99PVvffvU33z9zZf+6uvfeePdiJu3Im5GJaam5JcUlFWXVtaV
N7U3MPlUhU4EfJxu0sLMx4Xe8XCDTxcedcEajidvNwyN2INww4AOdRNefc4E
8QmQySK3OdRkbUjuIXtpgvhMvNMmN+kFWhVbo2TpFCxYoUHFshuFRhUD8ttl
cECbjo1oCsoGXSq/RaIRdDm1XLSH3OoBuxz7A1Yp6COpxBY/GhVMq14I6GCy
2EqEPSo5Aw2QCMsDfToVASMYBIA+tx6XAodd+iyDyKL466DZhYETBmGCqPKW
tkbBIGl8II5Ejxjdu7tydG/1TzB4smbHCYDQ/v0llI3wwaFBE0pXu4kPAKWc
VhGtgdNVRW8tpTYXU5tLgWFHTV5jRWZOUmRqLAFXXOS5xKiLSJ6wPPAI+tLi
rmFPws0L5KtAMj895sald65feIvWUTs51KcU0qKunHrvja/HRZ6JuvB6TsJl
Xk8NvkydsJvXXUVrLoIhUhtyCdU9xfCExD+a4H9lkASQZPCLxia+6Jncbhbz
BRGcssQCpohLF7AhhojFlnL5SqFQLRZIeVqz0hdyTy+Og5HHH98Ffb/+/c//
8J+/+8N//uOL+rf//VsI/giRuZSk8sQNYYWoCk/iKDlOcefRHhjcOVqDFQ6N
D/QFXN20zoTU+IvXLr134cw3vv3ye+fPNba2aUymC9euffON12F/QpWysasz
u6QYWwCIApC83+DVd9/51ptvAMD8ivIzVyK+/NVXv/LXr339m+989WuvvfTS
3375r7/97nuXLl+7mZiagZRbUFJa01Bf11xf21TT3tPGEbKUakFXT71CxQdN
wUE3qAE7DpdmIGQfHHYEBqzEUiZOha9fPzzmnpj2Yw/QA2Kk3+mNEq1eRAxD
HHMHgUTIaleRCvhMeq1AKqZp1TyHTem0KwhAdHyPXY5cCnlRDDrlfVax1y4d
8uuQTsmHjJDQDHIabMKFUKrjuk3CoFuFdr9TAWbhgHinSc3mMVrEfIpKxtIo
OOQWxLlsKrWCCeT1Gi7YR3lIdpb2OVV+nzbg1yGIohiECY6N44/y4moDBonZ
d5dD8yuDi2vh5Y0RMAiR07yQt7ucPAoBEcsQPNy682Dz6N46eQ8M+bgK+ebN
g+PC8O4SaYX7D1b37i1u7k0tLAcnJ1xDQWOfXaKTUyXsFhG1jt9TzWovQ6XW
VplZV5RUmRtfnh2LbWFGVHrsFYKjK+9AsDZAB/oIJKMvwf4g+CAYhGB/eBUY
osHsbhjyWeT83tjr7904953UqHPF6VGdtblg0KXlKjmtMMSuqixmSyGvvZTe
kNdVmQ6RDP7RBPOIySuqMq9XZEaUZ1wjO3Og+qL4Lxqj/6K5KT4XQAgAMoQc
UiSAEp1MblRoTAqH1zQyNbi6PQ9SPvnh+7/47U9+94dffS6Az2EIBk8wJEMp
3BBWiDhK9szABMnVq+8/Obz7eB8Yru8uTs4PB0f8yIc1jVXR8VHnr1xIz85i
cjkNLa3feu01iBzEBH0UDpvG55XV18HcDU6HI+CHs5+9djUhM+NWSvKFyOtv
nb3w2hvnv/Xt09/41rswwb/80stf+urL33nj9LmL11MzcmMTU67diL5w5eqV
6xG34uMQd9NzMopK86qqi5UqkT/gDA8H+oNOi01tNBP3osPRABGAOjZKAyrH
4KCDHAEkO2FAHOgzmmUkgyR9zwKIgOrxGox6kVLOMuiEdqvCZpGDCMhtfcog
wiQARG3oMPJ9DhnSKU5OYChkNalF3XJBBwB0mgRmFRNvcxr4AZci4JAjyAFD
lZgi4nRJhVS1nE0yqCae3RDazXLCcNUchFKzQWgzE4OGANDjUhMABvQwwcEh
68ioc5xYlNyHIEpOf/3sWDwAXN4ee+6WsxMMAeAJg4d310gGSQxJoSokZvgh
Mby7vHs0t741Pr9ILB8wNmTpdyutGrZW2K1mtyqZzZLeOnZHObWpqKM6u7k0
o6EkDQwCnOz4a4k3zsVcPXXr2imSMggOCD1HItqZiZFoXDz1yhvf+hKCKJfa
Mj3kVnC68pOvx155G5+GDxdR650aDirutrK01tJUoEerz2U05lNqstpKE1uK
4+GAEACszY18jkESw7rCuC+ac+mLGOxhs57RCbO05xxQqperrRqdQ+8OWIfG
fcubs6jagAwIQsgEaP/+f/7pc/Usic9iiFz669//FFaIRHrSM3PcQUpOmk2s
l3T38e7enbXlzWlg6A06gCESaVl1uVKrycrL/ca3X0nLzuum0+PS05p7uvkK
OYJoWn5eck52XnnZ6NzszOqK0mTMKS0Bg2+fP/eVb33zlbfffef05dffvPDK
d86gJHz51Xf/+m+/87Wvv/rKa++eOX/ttTdP/eWX/+alv/jS177x8tmLVy5d
izh19syZc+8VFOVKFUKzTW+xG+wus1onN1k1VoderZMq1AKTVeVwG2xOncWh
sru1oI+sBEnWSPQQRE+4I9EjBTadTq3RKCUfNrSaZSaD2GKSuhxKQAESbQaB
0yx2mEQmDcekZgJAvYKhkdF0crqI0ybmtAnZrTA7vAe4mbWoH3kwUI9Nhiir
ldHwKgBUSJgaBRdSyzkQwicxw4aac2yCPKtJ6LBK3A65x6X09akH+g3BYxNE
CoUJTk0TAMIE55dCC8sEgKQJoh5c2RmHnn0O4sQKIfLJI3J+QjB4cjvo0Z01
8seTWbZIwQRX1kfmFgLEEh5ha9CjxvXEJKNpOG1qVouMWs/vrGQ2F1Nqczsr
s1rK06tzE0ozb+UmXkuLPp94/UxcxHsJkWfBY1zE2fjr56CEyPOJNy4k3bxI
KjnqUvTlU1GX3sVLkeffeu+1v7186tW0mMt9Bkm4TyfobciOv1KcerOnPl/G
bPYYBEZhN/65jvJ0Sk0OSCQna+ooTwZ9TwHMuV6dFUkyCH0ug89h+OcwSHTC
ENUfnwUGOTKeWCtVWTRGt8nqs4RGfdOLw7u3UQbehX+hskOwBGsoAz9Xz5L4
bCglu0nhhviEk6oQbvjku/cffXTnZE3PowdbG3sLi+uT47Mhg02l1MlRGyal
JwOQtKzc0qraiOjo63GxLRTixh4kUlR/py9fqmltAYOTS4v9oyOdDDpKxa++
/K2//c6rX/v2q6++/s7rb52B3nj77Fvvnn/51be/9NVv/uWXv/5XX/nGSy99
ldQ3Xn7j9Nkr75w+/61XX//GN18uLi2RyiUCEZ/OpGHLZNOUahlfSCxgKleJ
tQalwawxWrRGi9pghuspyF5QcAeRAxNoPMsdKfINVqsS9JnNxw2DGInUbJR4
+/RIhi67grhtxioFg+DLoKTrlDSdgqGWUhWiHgGrBRJz27EHqCrFFDSAnkXH
w5vBqVzYLWS3K6VMcEcySEqr5BJdMVrecReNwG4Ru+wyAOj3aAJe7WDIPHQM
4OiYa3LKOzNLOCAAXFwZWloNkw5IDgiu7R3PmXb8MCaJ4bMzMgG9E5FPCJLo
3Xuwdff+UzaJ6X9vL5JzL4PB5bXhmTnfxKhjJGRC/LapWAiHcEBRdzWvvZzZ
VAQc2svTm4tTGguT6vISK7Jii1JuZMVd/v9rewuwtvN835+RegvFXQLBQpAQ
AyKQAElwCO7uAYK7Q0uxYi2UAqWC1KClTt1t3Fdmz+7M7qzO2tk9sufc+/+/
f/l2spzOdO695+59nvfze775kWYYklfe789XRSxHgacD5OvpwGHYQS+RCAUL
WGi70UyBnlautsbgN07hN9pbPzvanZ8YiheEG5ZmRB7cU99bm1+aEkr2uEBh
mBkpjBS5wvuUUrcX0jAYLaGkDPYmGILBV23T9P17hP5XUf2fBeqiwspiMFje
oK5tr2vd29a7f8++8T6Y4MKZmau3V5+8e/uDHzz94c/e/+LXP/jl73/yKgZf
IlGLIeksJRiiKiQYojAEg3cerZMTzW7cv3DtzjkUDqfXjh1dOnRseQaFYWyS
kuvHQzGYmplj5+iCetBfIUcBGKKMKamuQpzm+YuLqyoPzM0eWV4anjyoTE0x
t6eZ2tma2NrobN2yS9/I0NTCxMLayMzSyNQK2qlnBPvbsl1f543t0PZdJrBI
XX2LzdsMwObWbbtCQsNr6xoyMrMjo6Ni4+NiYpVpGemx8crSspKmlsba+qrq
WnVre1N3b0d7V3NzaxXCJ+BCGdjeWQMfJDxu5A5P+Lu66iAw2Nvb2NZW1dCg
QigFg4iFI0Nto8PtaABDqn+mRQWyYIhN9QXqsrTy0hRcG+vyW5uKO9tgaio0
IPy0oTYP9+uqc+pr8jXeV9FcD/rUbU0VHS1UPwyECIrCc29Pdf/euuGBhtHh
5vGR1onRtkOIoBoAj8wPA8DFpQOEPgACkRF5MiFt5fLR1csnNOsggCHcEFa4
tHZ5+cKVk9AVyu9WiK7dXNXq1p01CDFVs7cktVEM8cG1K8fPrM6AwdnpvQdH
2wZ6qjpq8uqKk9WZURVpYaVJclCQHR2QFiZIklNLFRJk/JggTriYJfdlSjnO
Ym86SBR60QmAhEEtgPBBhp2Jt4sN7sAN0YY8HS3ZrrbeTha+7jQoOz5kdn/X
wb7mopSIlAgRSO9rKJ7cg7+iMj1cWJQoz4+TRghdov3dogNcoRgJAwBSkrpD
YJBgCCt81Zah/20GNT5YiyDaPdSzd3TPwZlhMAg0nr1/9+Mfv/XjLz8kDP7m
j198j7QkastDCG4IDBFKSSIlo/ZP3nlw/+lNTT1IMbh+dxVv0Mql40src1du
ru4Z7CoozW9obYxUxqKK8/OXBodGvLFzB5wOGGYUFuDqK5UIg4NUtTX7pyZx
dfRwx0/NaHbbDQ3ghkZmpnqGBqaWFubWNnqGRvrGZuBRV99EV99s8zaqPNyh
a0r1l76uq6Oz443Nert3m4nE0pzcIr6PkOHm6cViB0iC5YpQXz8hSFRXVRYU
Febm58Eou3q62ztbaupKG5rKmloqoNb2KlIMvsRdZ3cd1NFVS6mjBujh2tlZ
29xcUVtbDCvs72uGCQLA8ZHO/YOtQ3vrB3pr4W5wwJ5OdUtjUVlJcmV5OtTe
grKuFAyCJjRAIgDE56a5oRANBE4w2FRX1lirAoYAsLu9BvUgfJAKutQ0udqh
/saRoSYAeGCsfXKic+bwvrnZAZSBx46PLixOnDw1BfRAxwtpAIRnnb987NzV
49TiCGrtCYUhGDx3cZFgCF1eR/g8Q0jUnrsK3dToxi2SVM9eu3mG2o775pnL
1xbPnT+ytDgGH5wabR/srkIxWFuUWJkVXZkRUZ4aWpKIoiwwK8ofRIDERLlP
fDAvWsoNE3kBw0Cuiz+bMkRfpsNG9BBBIQHLOcSfCyodLfXtzXQdzPXoFrvh
iUBVIfSSCzyVMr+oQH6Ev3ddUeoE3q/aovQIcVVObF994b6Goprc2NRQP2rX
JiEDGEaKnaEof4pHLYMxQSwtg686k+V/ubEhGYnQijBYVFWsqiuraqlu7G5C
Mdg91HVgZvDE6UNA460P7372T2//01cfffX157/5089++6cvv6VfaES1CYYb
cykawBBuiHISVvjp5+9+M2r/9rP3KAypqWuPLpOtzvFewwoXTs9Sh9Ydmcor
zhdLA/3EEl+xZLexmZG1FYPtDTcMjVVGJMSjKkQuFctluKIw3GViDAcEgIZW
ls5e7pZ2Vtt0t9Oc7Hl+vij3dA0MwSAC6tYdBpu26gG6Nzbpv7HJAHpzs+Hm
rUY79czsHFykweG7dhvDMeGePF8xz0/kwvQMUoQkpKTGJiYlpqaVVpQ3tbW3
trdUqIvK1bmV1QX1jarmVnVLWyXcEAwS7v6OXlct7kOt7TWNzerGxjIAiCsY
bG5UIY4ilw72t5IlFQCQMIgI2t1RiTquWp0Nj1OXZbQ1qwCahqZ6xEs0yAAH
cmZTfRF1qEddWX2VqrayCI2utmrNrJg61IN9vdTEUZJCx/a3UAAe6Jg60AUA
548MIYWeWBhfWj54+gwF4Mr5ubPnZnElDggAYVtr6wuIkZqN0f5uhVoML107
DQFDwiDou0HZ39p1tDUChjfurEI3756DrqwvrV04eurkgePzQ3OTveP9jcii
bZVZVdkxVZmRsEJVsqIoXpYXI4UbokxDHAWGcUH86AA26rhgPkPCdhJ7Owk8
HIWeTpDIy1nMcvH3doUC2Azc4brYsp2scfW0N3e1MvR2tArkucMBpTxGiIiV
ECrOiA6MCeSlR0n3NqpGOirL0iMBO4y4qzIbGCYEc4PYtDA/p3ChY4TICRhq
GVQGeoBBLYbfPr3lf8Vg2Tf6LxiS0UAwWFqrUjdV1nc2II529LdPTFMMXr+3
9u4nD370xQdf/uaHv/7jT7/+y89fweCXWga1GBIG0caVFIY//uIjVIWwQmD4
2U8+eP/T50/fvYt68/6z9TuPL4F3FA4nz82fXD16Zm1xYnqkvLoMGCoT4h3d
3MxsrExsraydHP0CpXFpGaXVtQ0dXYUVlVyRP43hyvT2NrW2tLC1NDI3FkmF
IeHBNjSzzVt0vFiuyWnxXB/WboNdBkb6ugb6W3fq7dA1BInA8M3NBtt3mm/e
aqyjs1NHZxtKRS+2H2Lqtp36eI6nN9/Byc3ekcHm+0mCQhThUcqE5PxiVU1D
c0NLs6qiqLAks7QspxYG1FJZ11hOpdPeps7uhg6oq769GwDWt3XVaBisA4N1
DWXVtSX1jeUNDeU1NUX19aUdbVXUZnS9DcAQsMCzcO1qKa+pzCHDeY21xS2N
JeUlGc0NxUByqL8Z9IFBNPBk5Ew8Hwwic9bXkr1bCxrrS7s6avbtbcbLgvG9
YHBvw8C+puEhajziwETX5MGuqcnu2SP9R44OksEIpNDTK4cJehSG/3UsHgAi
ooDB06svWyF08eopwiCsUMvgzbsXruHh9bNkuxigd+ve+TsPLtx5eJ5i8OKR
s2emTp4YPTE7MDPRuX9PbV9ziTozAgCWpYQUJwQXxEpzosRZEeIMZMUQ3ySF
DxJpdCA73N9T5seQcB392Y6wQqBH6AN6Eo4bEehj0S3dbIzpprp2htsdzfTw
ECWkzMctIsArQSFICKGgzowKyI6R4mVx3ddYMtRanh8fjPvwxKaSVLRDfR3D
BHRgqGWQjA/+bzK4cVunb+azlZB5MhDauSptcC0uqS6vaKysbq1BMViL72p8
fvrbkUVnjk2cuXD8/tPrn3z+Nizsi1/9EByhvvsuBr/Rn7+AUQJV6Fd/+CcE
V+jnv/0R+EWO/dmvPvunrz75yS8+RqwFjGTg/t2PHxMMYYVkv/pL18+uXFxc
Onvk6NLhA4f3N7bXKpMiuUIO3Y2+3VB3q76utaMzXxIYm5adkJknUUQ6ubOt
aHRTczMTUwMzs90uThZBEu+k+CBFMMeZbsjysFbI+IoQXy7PxdrWCGBaWptt
27F9l76Bjs4mcLd9u8munRavI5G+sRP0Wds5b99lpKOzBZHVg+WzbachHjq5
etDobu5e3EBZWJm6NjRCmZSWmZKZirScmp5UqCpoaKaGU1vaG1q7mmsbKmqb
Kxuaq+pa1LjWt1ZSp7E3lHV0t5Spi2vq1S3tdTW1ZS2ttd09LZWVha2t1a2t
lVB7a2VbixoBta2pvLW5HGw2Naga6krqagrraooa6oqbGkpbmsr2wAFbyjrb
1Q11hXW1ua0tJQ31+e2t5Q2NpYC6rq6kvqGE7GnTt695cKgdGhqmVh+PjnVN
HOidnOo7NN1/aGbf7LHBueOD8wv7jy2NLpyaWDpDTUtbPncY6OF9P3X+KL4M
TwM3UAa+bq6SHhiyVznZAOTUypGTZ+de6inV7tlLndB64+zl2ytX757DO3v7
/hoYvPdw7cHDC7fvnlm/tnD5/Ozq8oFjM3tG++v7WouH21X1Bco8pTgnWlio
9M+PFmWHC7IihKkKfrKCFy9jRwd6hQUwZWJXqdBJ4ucs5blIuK4BHBd4Iumr
8fOwh9mh7vOim3nYm7jTjCFPB1Pc4TpbUAef+TrGiN2TZdyMCEGuMiA/Ligv
Lig9QgSrLc2I7GsubSnPTgn3z4wN7m0oyojyU0rdYgOZCTJP5FLKFkUuMr69
QuAS7s+MCWLHK/jffz7gxp2dNBNmisl8UYrBEhXpHSXPKapUoRIEg3DAZnyN
D3QMHOgfnxtZOH0EODx//z54AX3E0eBx3wPgqxiENjL4+c8/AoZaBp+9d+/h
cyqRkq1B8R/F+w4rXDwzN3v8QN9wR3FFtjIpnMl2M7QyhRUyvDmubK6dq4eV
I9PM1pnmxLSypZubmxsb6Zkabqfb7Pb1tg2VuisC3BJjfBOi/fz96AoZKz4u
QK7wCY8MoDmY6e7eYWJmqvPmFh2drZs26W3bZvzGG3qoEF/ftBPo7dptqvP6
NgtrOt3Zg3SlmlrQDIytcIfpyUtKzfEVBgrEgUinmXlZ8nBFUnpyeXVFVX2l
uraiuqEqKz+zqKygtqm6raepubO+qqEcqgdoHY0Vlaqq2nIAi2t9UzUwLK8o
bGysIII5Ajq4GFFzQ0VTfTncDQBCaIBBxFdk15amUkBXX1sABluai+vr8lpa
y+qbiusaSqD6xtLm1oqOrpo9fU37BloHgOFwxzAYHO+dONh3cKp/apo6jfrI
ieG5xeH55ZFjp8ZOnDmwtDoFAE+em1u5tHD24gmyQx3SyOqlk5rjrlZgdmS/
VhC3euEE2boc5qgds9g4dk+NR9w4e+HWysVvGLz54CJh8NHjS3fvr9xcX7py
af7c6ckTc33jQ/V9HaV7G3JbShPLUuW5MaK8KGFBjDg3UpCu4FI7zIdwE+Te
UUEe4RK3YH/nQJGjROAYwH8lgyxHc8IgruCRYtDFTMa2j/BxiBW7JstZmZpT
loBhbpwkOcQ3JUKYEOqXoQxqq8o7sK+5viw7ROTerEouS5fFSBigD79AUggn
0p9BfQ+I3SIlHspgTnyoz/f0yXx7azUwSGZrg0TKDUuKNW5I9t8uUdWVg0FU
gnBA6iz4owePnplbu3oGXCA0opQDer/788+//udf/OGvv/w/ZfAXv/sxsUIw
+NNffqpl8JMfv4MXf//Tp2998GDj0kLN4vpTZy8s4GOwvDIPOwaGDW1VEkWA
O9vTheXhwefR3NwNLO2MLB3M7VzMbeiWtvbmlhamJvp2CP9MmyCRW0wIR+Rt
lZUgSony9XLR53iYCfk0H659Qlwwn+9mYqpvbmmmh3iqa/jGG7tggtDWHUbU
sMVrW/UMzHfoGjs4uQM9wAhzxEPAiPhqaGItCQpz8+CaW9GEARKEZGGAf2hk
REZOdklFaXpORk5hdn5JXl5xbklFcVW9urqhsqKmDI3mjsb6lrrKOnVVTUV1
rRoMVtdVVNeoVGX5NTUqjUqg2qpiqKaqAAKSdXXU/aqqoircAYl1JTC71jZ1
XX1xc4uqpjaf2pSmqQSNpubShuYSYIhrY0tpS3t5R3dVb1/93v7Gwf1tQyPt
+8c6Rye6Jyb3TE7vOzQzcGh28OjiyPzy6LFT4wBwceUQNRCvObqFMHhmjdLZ
C0tgEJ+Ei5qOFzLyTjAEdEBPuyPWxo18qVOWrp0kDF65s3rt3vkb9y9QxxA8
vHj/0YVnz689fLx299bp69dOXFw9vHRseHK0ebCnor06vbMqvaEwtjBBCiuE
IYLB5CBWehifGjFXsGNkXhFSplziGiR2ChQ5+/Oc/bmuIraz0NvJz4vu6+ng
42HPd6exnC29nCw86GZMYOhg6ulojjs8V3M5xwEMxvi7Jcm88Zqac17E2Ur/
SLFHWpQ4OUIkF7iFir2K06O6GksG2iuipJ7NqsT6otjYIFakPzNOzkEEjQ70
jpKyooPZsXJ+XJjf95zh8u2t1ai9fDWrligSiwqpKdwvFlkUFKiLSmup3piG
rkYwOHhw4PDC9OL54zfuXURK/OFPP4ADAjEA+Pu/fPV/wyCsEAzCCsEgROaR
krnccFuy2cW9J+taDM9dXkYoBYZww4np4Yq68uSsZL8AsSXdYYehyU5jC1Mb
upWDqyPDg+HBsqc7WFmaeHs6RYYJc9NCVXlR8SGeIQI7CddSwrcK8qMxnXQt
jHT4HBqf67Jz5+u79XcaGBiYmFpu26avsUJSIe4iKRT02dq7EkPcvG03EilI
fO3NHWizOAInV68t2/XMrGyDQ0JBIoRGUlqqIjwsQhlZqlblFuURHsuqqAVT
tU01cElYJFRZXa6uKqusKauoKi0rLyorL6iuLtWoGKyhoKtWF1ZX5kMAsLa2
FDfV6gIIGNbCE+tKGhvLqmsKmprLgB6hD1eQ2NSqam4rA32tHRUAsKu3Bgzu
2dcABodHO0bGu8YO9ByY2jt1uH96ljrw/djS+NGTY8dPTyycPQgHPLU2e+bC
UWoc8NICpYuL+BpcubgMBsnmydqpL+QgM+1ZZkikZCt7snWPdoraJcTR26sw
QTAIEwSD9x5duv/48lvv3njy9MqD+6t3bp5av3Rs5eSBuUO9E4P13XW5e+pz
OipSq7IjCuMlcMOsMJ9kORuelR7ukxzKjVVQVqiQMmQBLoFiFzAo5riAQQHL
EQwSAHlMO7arNaADesAQAo+4w3ezlnEdwnwpBhOCWeSQl4woIZQVK02P9geD
ShkvROQJDDPiZU3lGVMDDSkRfsUp8o7qrHgFVy5k5CXKMuOkcQqf2FBfABgf
Kfz+8wFf2tYJSsvTLKUvoNbUU8sJi/I1P80rrCwGg5WoXzrqW/e2wAcPL04t
rZ0gQ/Off/nxV797MSZI3PD/lMGvvv6cYPhSHCXTuYkValcXEhJvP7wCDC9c
O423Hm64cHqWmsY2Pd7a06pMSqC7M3cZm+qZWti5uLF8hVFxSXFJyUKxgO5g
w+e4JShlhVnR1FmcKqWCbx4V4FCVJ2+tiCvKCJSL6Gx302B/T28Pez++lz3N
2tzc0tDIXM/Acst2w01b9QhlKACtbJ30jSyBHqjEQ2pIkQzrv74NhSEyKu7v
1DPiC8QcH4Fmpo17oFzhJ/aHwqKio+Ni45ISUTAWqoqq6qsr66qKy4tK1SXl
1WWgEg0VyvCygmJVvqqiCG5ISUOixvJeqEZzU60uKi/Pg4AhOCVuWFWdj4oP
dR+xxdq6IpDY3lXZ0a3u6qW2Zurtq93bX080NNK6f6xds+ijW7tE9/D8oIbB
iWOnDiycnVpamSGbMgHD1cuLlC4tkU3LNTAugUcNdwvf1neuaVq9fAKV4CWN
Ca7fXwOAqPcB4IMnV8Dg02dXHz+6eP/eyu0bJy+tHVk8PjI32bO/R72vpbi7
JhshsCIjHCaVHuqbGS7IjtRs7xnuGx/Ki5F5h1IYMoMDmABQzGEIvV0ELGdf
T0cfDzrf3YHHtOcw7LxdbLycrDwdQaIly9kad3yYNsE8h1BfxygxIz7IizqE
N8wHr4lrbkIwfDA6iBPm7wm+MpTSxDCRQsgszgg/0N/Qqs7MiJXUq1KKMiMR
UJPgmNGSxOgAKD7K/1UAbtxXbeO2TtSK3dz8tPw8slxCs2AwF9IwSPWI1rbX
tPW1Dk31Hzk1c/bqKUABQH761WdgkAz2kZLwv80giaOEQYisqiCj9gRDhFJC
IjDcGEo1teH8saX50YMj1Q01scmJ3gI/U1uarbNrgCK0vqW9p29fVk4m092Z
4Wwj9GEqpJyYEF5WFDsh0KGxQNZbG9esiuhrSm8uU0bL3IUcWkggOzk+lOFs
r6+vb2pmZWVFB2hImyAL3gfiTMztcAWDABNCSaidWgM27RwYSKdmlvZ0Z6a9
IxOeqG9k7s7ieLB4ru5eDs4MLw5XLA0MUshloWFRscrM3BxVZRmKx8y8DMRU
hNXs3IycvMzCklyoskpVWYXASamyshAixgcAKyuLy8sLysqoo+KAIX4EDOGP
1dWFra2VwLCltaKzq6axSdXSpu7ZW7dnX92+wcaB4ebB/S0QGv1DTcOjbYTB
icmeyem907P9ZInu3OIoRB0ScWpq4cw0wRBx9MU2aFdOQiSKnD5PvQWaeTK4
Hl29cEwzf/vF+sGNAOJHL1YUXl1ECr2sMcHrD6ggeufxFQD48OnVZ2+vP352
BVUhMHz4YO3mjeW11blTC2NzB7tHeyp76vM6KjPqCuMKE4JAX75SkhPjnxkt
So8UJITxYxWciGAvCkOJh4gLE3TVMkgAhLhuNC2GAJDtaoubqBNlPKcQP4pB
ai28nJMUwoMSFdxYGTdewY8KZMv8GFBMMDctOiA7PhgYInPWl6YO99Y0qjPz
UkOzk0JS44IyEuWp8fIkZVBCtPRVc7ZfWkGv3VmUrJcna+fT8nM0GOZA+RWF
xdUlFY3q+s46alhwfuz05eXrjy4DjR/97MMXa5Q0Y3z/bQYJhtqSkGBI1lNo
VzYBw/c+eQLnJSubUB5qMcTH4Mza4vLpY0cX5/dPjNS1NClTkxyYbrvNzWgM
14a2tum52baOVh9ftq2VMd3O2ItpFyxiSLyM8mO8+uviK1L9QvkmqWGM0hRh
QZLA0fw1J5sdAq4zikf93TuNjEwsLO2Mja0BHTFBhFLQBwE0AiD8kQCIBu7D
Cq3tnC1tHPEEaztX/BMDYysDYwvcsbC2B4/6xmZWdg7ObkxYpJUdjevrl5KR
HhEbFRodnpiWlJqVFhUXGZccCwwzslNghZTK8lUa1lSqPJUqB1IDwIpiVVlh
SWk+hJ+WVxSqqwpr61XVtSXtnXVtHdUdXbU9exo1Q5PV/UMtAyMt+yc6Rg92
jU12jxzoHB5vHxxtxZXcnDjUOznTd2iuHyY4e2yYHNQye2Jifmny2MlDC2dm
Fs/OLq3MEQfEnx05BBjij3/q3LGls0c0xyfNQsCNDF4Q6L5zXeGF9WWSQmGC
Nx5ehAnefXKVMPj42bWHaDy58uTpNejBwwvXkXLPz58+MTo7BhMobqlIqy+K
r8yJKkmmpqzkKgNQtSE0JkX4xoVwo+TeYcGeoYFeYFDIcSWTtH28HMnyJQ6T
Rq7eDFsvF2uWq82LRRYe9kF8J7mfc4TYLTrQ65u1DzwAmBopQpUXGchKCIPV
+oT6u4eImSBRGeITHy5IVQamxQeX5sUN7akb62+tUmVkp0ZkJkekxocgcb1q
7dLG3X037oyt2bqQYJitYTCbUmFmblleUVVhRWN5Y09d33jv3MnDl++ef/zB
PZgUTBD0kVE/MlP0+wcmvpNBrRVuLAm1DBIr1K61B4YAUIvhzfuXqF7x9TNr
V88cX5w9s7o8f2x233B/XUtDTEqiB59Dd2dkF+ZPzh7aN9wnCRJZWhpaW+iz
3GnR+JaTu9VnBXSVhiVJbL1tdCAZ26A01S9BxnSn7eC4WXA96B5uToYGu3fs
2GVgaAagiBtSYxOanpmdeiZwRtwBiQAQbcKmM4PlwfLRN7LW0dlGd/ayoTGQ
XfEEwAuX3L6LGvXYtHWXNY1uYmGtmRmu68nmSOTBAokIBWNccnxQSGBYdGhG
Vmpichxxw6LibEpFWRplFBZmViC7VhSXqgoIg2jgYYW6qK6+Ahh2aoYgu3ub
9u5rAYyd3bWDIxRr41M9Bw/vhUAcwRBCA1QSBlEJUvs1HR05ND8yfXSU7KsD
DI+fmj5x+jBIBINADwBq/uzUFyCVQ87OLp46tHR6evnMYYRPYnwbSSS2CAAv
XVu+vH7y4vWT1+68zCAAfPTs2gMkUo2ePF9//s5NYHj7zrn1a0vnz0ydmNk7
0F1er0qqKYxrLEmsyo4CgHmxkpzYAFhhsiaOgsFwmRcYFHKctQxqlxCSJRWE
QQCoZdDX0yGQ7wwGwzQMfjPnk6sMfkEiLA8YEsXIOHEh/Iz4oIQIcYSMh9hZ
lB1TkhtbWZq+r7s2L0OZrdkyEQx+Z/8n0HvVvtmwP5SB5PnAEwAiiOaW5ZfU
lALAhq76nv2dMMEzV5YevX/3sy8//Pawu3YemratnaKGp/3unykRDAmAxAHJ
2MRLQ4TUKOEXH2n3u9DuiwgYP/jsGUgknaXkJMH1O2tXb62dv3j69MrSwvLR
IyfmxqfHG9ubY1LiuWJfvsg3KZMapAODFhYGDIZddKQ0M0mWEuJZmS7srojM
jWKWxLJK4jzTFI5ZEcysKFaEv6MqO6KtrtiH42ZmaohEun2HnrkVzdjMFuiB
MhgiuMMVWOm8sZ300oAv3ASSeBowdGaw3dx9PVh+LI7IzJJu7+jB9OSxOAKG
O8fekYFXMzSxJBNWcd2ht3uHvp6RhRnT2wMk0hlO+LVhhXwhTxEWlJ2XnpmT
GqUMi44JgZSxYVnZyZlZqfkF2RmZKekZyTHKCAAIEpOSY4knNjZVdfU0Dg53
Txwc2DfQASvcP94zMNYxMtl7cHYAOjDTPz7dh4dDE12H5ofRnji8D0+A/aGN
m5Oz++dOHDx+cvbIwuT0/BhENp1bXqHmSECwP1zhgAAQeB5forYYJesKyaqK
kyvTZKtDMrHt/OVjF68tXL6+dPXmySu3qUN1r95duXZv9fqD87ceXrjzmDqe
9R6M78m1h0/XHz+/8fTtW0/euvn46fUHj64+eHjp8oX5MwtjUyOtPY2FNYUJ
qsxIVVo4lKuUZsdIMiLFSWF+Sjk3PIiFICrzdxfz3IRsho+nE8+dzmU6QHwP
Rzxkudh6Oll7OFq50y3RwEP8CD4YwKFL+Y7Bfi5wOoCGl4LxJYZTrwnoAGak
xCNK6hkTxKJcMoTq9gSDADAlNjA9QZadEpqTFpmbHtXbXt1aT50hkp0e86ou
0Fed4QIfhCdqFlagYCzIUeUVqIsAYHlDWV1HbddQ++jM8NEzM1furb3zg6ef
/+qzjR63EcON3FHo/fnnL/SPZhCFIUmk1+9euH7rwvr1C5cunzt3/vTZcycX
Tp0YmRxRN1Ul56YKA4WiIBHXj21rb2lqttvXl5WSGJmRpAjkWOfFsPtq45sK
ghvyJIUxzORAm+wIRl2uNDXcMyPKB190nq7WdJqFrY2FsbGxuYUtykDwhWBJ
TBAAIqCCu92GFuZWDviRtpfGyNTGwtrJy1vM5vkzPX1odHehv0IsUYBBXCVB
IZAoINib54tQqmdostvI2MTKYqvuTjMbCwBoYGZkQ7cLiVRw/TiSQHGwQuIv
FfgKuRKpn0zuL1cEhIXLoqIiEhPjo6Mjw8LlQcEBQDIqOgw1b4wyPCc3vay8
CNG0uaWmf7AT6hvoGJroGRzvHhjrQmN0qu/AzODwgd6ufY0Q2rC8qSP7xw7t
mzk+fnB2CM88ODMyNjU4fmjo0JHxIwuHAODs8QOHj47jivax5ekTp2YgNDQb
0I1qt1k7vjwBEsnqQi2GZ9fmVi/Or105fml98cqNZWD4bQYB4P1n1AGgj55d
B31gEAKMD56s33906aqmj3R6vKO3taS2JAkMFqWGFieHgMGs6AAkxsRQX8AS
IfWS+zODxUyYoB/LBQCyGTRvVztcOW72wM3L2YYAyHSwwBUPcR9W6MeyF3Jo
Eh5diyFeLVbBg4AhGASAECySrM9NDBMkRAiTogKSlVLEUZSBmYmhmclhrfXF
LXUlUGNt8bdG4V/UgK86JyIxKx0kahbaU0uWAKCqrryyuaqmrbqjv31sdv/x
lfmLt1cfvnfn0y/e//L3n2vh2ogh6RolY4VEv//LV0T/WAbf/vDh03fvPnx+
8+7ja7DCW3cv375zVYPhysUrK+cvry6cOTEyPdo50JWjypVFBLu4Oxmb6ZuZ
63O47nK5f6A/m+1iFBvIaCmLri+UwRCTg+3AoCqB1aEKKUzkidwNXay3MRwM
o0P8xQLOrp3bTc2syConC2s6GZRHOiUMgkdAB8EQCZiaSaf6ljbOVrYuDk6e
nt6+ijAl30/i4OSOei80Qslw97Z1cAKDfmIJ6kE/sb+to4PO1k1mNBsm19ve
hQ4YZeEKP4lfbJJSFhYsDRaLAnzZPE+uD0saKFKEBIaGh8QnJkTFRPtLxCy2
lzxEJhD5mVkYe3M8lfGR8Ukx8M3cgszmttq+ga6R8b49gx39I13QwGj3+KGB
san+jj0Nqqq8qoaS3oHWgzPDo5P7JqYHIfxo71Dn4Nierr623oHOiemR2eOH
pubGwOOBw/uHxnvxhENHRuGSRxYPHj42BmZHp/Zoasm+w/P9R04MH1saXTx9
YPns5KnVQ7ieXJk6fW565cLsuUtHLlw9dmn9BNzw2p2V9bur1++du/lg7faj
i3efXCYM4nsVbytCDr5jyWru+09v3n989fr68rmz00em9/Z3VzZUZJRlxxSm
hOYlynOUgWQhYQK1sp7qvQwWukkFbhSAns7ebg6eLnbuTjaQh7MtabvRrRgO
lq72FrjiIYthT+Hpbsf3shF40/x5jkEChsLfIyzQKwLEhXCVcrZm7M8rOshD
KfOKD2EnhvKTI4VQSqQ4Odo/JSYAQm0IT8zPiCzOjVeXpNWpc14yQW0nzKsY
TM7JxDW7JF9rgmX15TVtta17WwYO9h09M3fpzjkA+MHnb//k15999aefEsRe
IlE7UEj0h7/+Uqt/LIPaXS/IRoh3H165cfPS1avnLlw8g1AKnTq3eGRx7sCR
icGDQ/gfiUmK9hXznRk0Zxc7JpPu7GgeJHJPjfarLY4qy5AUJ/vkRLrVZAn6
qiImuzO61VHBPHNfd+M4hU9lcVpUWIC5mSEYJIsNIeKGII6MzpMhQpCIO2Qi
De7v1EPDfPsuEzcPrjQ4PEgeiYa7Fze/qCw8Olbf2AyVoKMrMzgkFJKFh1s7
0HS2vOnC8lDERII+hhczPTczMz8bDAoC/AKkIoRSgZjvI+D4B/jxfdieLI8g
WXBcQnxoeBiHx+X5cNlcb5qDnS3NJjA4wFfA8+Z6AMbKGmoWXG9fe08/GNzT
N/xiW2Pwpa5TFZbllqgLyqqL23qaOva0DE/0d+9r3zPYhXZLV0Ntc2VrdyNu
jhwcxPM797YCzM69zX3DHcAQ6RSmCfeEqw6Ok4qye3JmDzCcX9h/4uS4Znrb
FK4ExrNrM2Bw7crRi9fghifW750Fgzfua03wCmWCz6+T7bxAH97fp+/ef/z2
3QfPbj1E4Ll99tLF+RNHh0cHG9vq89WFCYWpYbkJsry4YGCYFuUPBqMC2aFi
DxAk8aNSKMfd0cuVxnS0Bm5EgI7Q52xnBrnQzMEj2PRytWW72/I8bX297UQ8
eqCfq1zsHir1RLKNVXAIgzBBLYMJoRyUn0kRguRwAa4Q5YnhQuKMiKZ56REl
eXHff8bZd51Zlp1VnEdMEGVgYWWxuqmyoatx33jfoRMHz10/++Dd2+//+K0f
ffUxTPBX//wFoUzrd1oYX3LA/xcMkq3ytZuwPXh2A+/R7dtX1tfXwODq2smV
88snV48fPz0/t3ho6thk39jetj3NpZWFoREyFsfdyZlmbW0cIPSKjRTkpyvS
Y33yE3xLU327ysNai4O6VPLmwqBof1p6FCc/KTgymMegm1mY7ja3sNIGUcIa
IihqQDQQPoEh6TUFgOSneCbauOng5AbX04xTMIJDwjNzCxJSUn2EIi8OVxYa
JgsN8Q+URsYppQqFC8srPF6JNys+I5XB9krOTC0qL/ER+ZpZm9Kc7AKCqf00
wiLlAYFCGztLQ2MjN6ZHfEJSTl4uMHT39KA52Juam1hYmfN9OfZ0WwdHu2jU
iZUltQ2Vxar8ls6m3sEeqLu/q2Nvu6q6NAPfx2X5xeqi5Kyk3JKcirryrn2d
lQ3q+ra6lu7mqnp1oSq/VF2Mf9je01rdWAFmmzpqmjtru/pa4IYoGEmCBYOo
HzUdO50Hpnumj+ybOz50fHmMWOFGHzx/ef4bH1y4fn8F0prg/WdX7791/cHb
Nx4if7575+n7D5598PDZB4+fvPfw4dv3qMWk99eury+ePTU5M9mzr0uttcKi
pJD8eFmmUpocLowJ5sIHNzII4wN0wM3J1pSItOnWxpCjjQnB0N3JiuNhx/Oy
82U7iPjOgUKGPOCFD8bIvKOCvCKlzAiJGxQV6B4X7JEg904KoRJpkmZHXwgV
YryCjyuZIZMUJU6LD3zVUOCrz5fPRyVYqC4tqlSV1Kgqm6tb8ckd6Z1ZOnT6
8vKd59fhgD/+5SdffP1jAPjbf/kFIUtreVr0tIb4EpX/cAbJcntgCDd8+vbt
hw9vPri7fvPmpSvXVi5cPn32wtLJ8yeWVo8dOTVzYH5sYmZ0YLxPXa2CNfj4
cuxolk5OVgJfZlS4b0IkPz9FrEoX1udLkEgzFA5gMCPMLSeWV5ASlBgl9PFy
sDLTs7S0BoPgDn5HLA+U4Y6ljSOueAgrJCmUTOTWBFSr3YZm+kbmOm9s3bZr
txPDHfTlFBRGKmM1k2cUANDVneng7BQUqohJSQ6Pj8P7pW6sw1vG8uMrIkPj
UxOl8kAXd1cmy00oESCOykKkMEQETnif2F+SX1CkrqxGKLWnO+zS0339zTfM
Lc0YTFcjE30XhmNqepK6qkxVUaSIkMenxde21PYO7O3b39fTvydflQ+3lUfK
03IyIuMj41IS8krzymvUWYVZBaqi6qbqorLChNT4qLjIzLz08moVVFyRX1Se
V99a2dbTsHeoHdkVKRQan+4fmewdn+oBgMQHweDRxRFY4cKpCTjgmfOHtUEU
9F29uXTt1vKNB6uQ1gQfPL9GAfjOzUfv3H7y3l0A+PzDR88/fPL0/UcP3nn4
4K3bKAlv3Tl98cKRhWP7J/a3dDcV15WkVOQoy9IjS1IoQ4QVIrdESFgyETNI
wPRhOXM9nOCDhEHgRriDHKyM7C0NaRYGuH6DoQXLw5btZevjbQ8GpQJXmb87
GIQPRkg9wgKYoWKXEJEzFObvGi1hKANfrJKIDfKkznn5Zh8nYJgQ4gMSlTJe
lIz77XMGv/8ceWpaWkVJaU2FurGmrqOha7BnbGZ8bnn2/I2VW0+vv/ej5z/5
9Q8QQX/z15///m9f/fl//G5jztxIonYDmZe6aP6xDJKxQoIhQstzGOKjW08e
3nrwYP323cvXbpynZtFcPbl6ZXlp7QS+RmYXpg8dPTg0sq+ppT4zM10k9nX3
cuX7eoTIfZLjAkqygssy/FtKZOkh9Aj+7qoM31C+icTLKFRAx9egwNth51Yd
c3NLsEbqPiI8hMws7SHEVHgiuAOABEPQZ2lL7VlqYUPbvH2XlZ2DwF+alJYO
sfk8Ews4lrmxudnrW954bfPrxpbmdHeml5+vr1QSFhcbnZzgLfDhCf0CZEH+
wRJff4FIKmTxvKxszOlONCRSf4kQCEfEKMurqkvKKxThEUZm5tt1d725dYu+
iYGlnZWuoR5PwC9UFVTVV+aX5HF82V48b8DV3tvd2t2Oa35pIV8koDk74L8i
kQeGK6MT05MjYmNCosJwTc1Oj02KCwoJRAyWh8tSs5KLygrAYH5pdk1TeUNb
FWpJJNLhA70wwbFDe6Gp2X2kHpw9NoiSEAyiKoQbgr7Vi3PEAQEg6Lt+59SN
u6cB4M2H5zYySAB8/O49mODTD588++jps4+eP/ng6cN3Hz18+86DJ1fuPViF
Fa6cnkJVONxb01GT11CaWpUTW5EZXZQalhUbmPSNFcpEHgIOg8ty8WI6MJys
HWlmDrYm9jbGkJ2Voa2lgbX5bsjGQp9mbUS3M3WyN3V3tfZkWnt72vDYFIYS
oWuw2E0e4C73Z8iFLjI/erCvQ7AvTS5wCBc5Rfq7vFg5GOCqlLjHBXrGy1iJ
CjYMMTtOkhEjTokQxof6kO3RqAURxUXQqxl8sW82akAqf9arASDiyujhscWV
42s3V+8+vfH8kyef/+KTr/70s9//61d/+Nuv//o/v/73/+9Pf/zXX/7xX371
bQzJ0njtDk5aJP+BDJKSUHtQBTB8+/37d+9fBYD3H66jcYPaHHgFGK6tn144
Oz+7MAUdWTg8c3T68NzkvoE9JWUF/lKBj8BLIPQIlfOSY0Vp0bym0vDSVL/q
LP/GYrmcZxbiZy3lWLjTdrhY77Ay2W5qagrQLKzp1nbOEOmZAYngDoYIDM2t
HPCQJFU9A9Oduw236+rvNjJ1cGYAQC8OH94XEBTs5ullTbPbbWS8S3+3gYmx
pa2NjT3N3NZ6l4mxmT1tk+6uHUaGZjSbncYGW3V36psa6xnrm1qbAxZjCyOd
Ta9t2bnZ3MbMwtbc1NLC28enoKQ0M59ayKxnbAwMDc3Nt+3Spf6VoUFgiLyy
rqqqoSa/pIDp7cHw8sgrKVHX1WXk5RWWlWUXgkGRqbW1vqkpVyCQR4QBQxaf
yxXw+SLfwJBgkVTsK/bhCbhCiV94TGhWfgbCPCrHyvpSYNjUUdW5t7Fvf/vQ
RM/IJMUgOQ1t9tgwdQrMwujRxTHqKIqlcbLW/sLVE2RU4vqdMzfvrdy6v4oU
uiGIrj98i0qhGhO8DxN866PHzz9+9vbHzwAj4uijd+7ee3rt7qO1GzdPr50/
cnx+aHywqae5pKUys7ogvipHSQ1SJASnRori5PxICStU7CXmMPxYLmymPXIm
nA6gAUMHGzNbCyNrC0MrU33I2swASOI+IHV1NHdzMfdws/L2tONzHIFhgMBF
KmIECl0D0eA7SLn2gTwHuY9DiJ9jmNA5xIceKqDWK0UFuMEQkU7JMRMbDTG/
TJ1bWp5VVJKeX6idhJZRSI0PAj2yPpeUfkVVJaq6svK60pqWivbexr6R7snZ
UQS52w+vvf3xI2pt4G9+BIi+/utXf/633/zlP7/+6398/df//N2f//3Xf/q3
X4HEP/zLV7//6y++/svPCWJk/F1LGdnjl2y1rW0T7jZqI4N/X0X45Yc//Nn7
P/jpe5/+5J1PPn/74x+/9dGPnr/36eN3P3n0zscP3/7owVsf3n/+wb1n79+F
FVI92JrOmVv3Ll67fR4MXlw/AwzJGNbxk4fnTkxNzY2NTQ0OT/QNj+4pLc9N
TA6XKQTSQK5E7O7Hpfl5W/vz7bISRJFBrgEci/xk/9L0wCCuDb76ohQ8R7r9
G5t3wN2QMOMS00LCY5xcPUwtbO0cXGh0V1t7UGlvbEatxDeztLO2czSxsNYz
NNmyQxcwIoVKZSEoBn1FATb2jq7uHoimppZWQJIvEELhSmV0cpIkVO7C8rCk
08ztbXeZGG7V18XHxcmTaeNMt3K03757p87rOjpv6mzeudWSZm1lb+fl64Mq
kiMUW9jav7lTT2fTtte26m7ZafDatp2mVrayyOiapqaW3p7ymqqMvJzYpNSw
KKVYImPzBExPnjODRaO7WdnS8dsyPFj4fvATixiebnaOto4MB0+Ou1jiF6yQ
RMaExiVGJ6fFZ+YkF5XmVFQVN7ZUNrdVt3fX9u5rHtjfOTKxZ2Kqf/IwNbpB
zqiaXzpw7OQkmd62vDp7YX354vWTl26coraquLNCOkIhMPViMOKbfhjSF4ov
VSJk0bc+eKS9wh/vPl2/fvvchcsLZ04foqxwb01PY35tUXxVbrQqPbQoWZaf
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
lBoK/f/8AxNy
        "], {{0, 168.}, {300., 0}}, {0, 255},
        ColorFunction->RGBColor,
        ImageResolution->{72., 72.},
        RasterInterpolation->"High"],
       BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
       Selectable->False],
      DefaultBaseStyle->"ImageGraphics",
      ImageSize->Automatic,
      ImageSizeRaw->{300., 168.},
      PlotRange->{{0, 300.}, {0, 168.}}], ",", "d"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"d", ",", "0", ",", "180"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9475416804587717`*^9, 3.947541684782748*^9}, {
  3.947541726348207*^9, 3.94754176113835*^9}},
 CellLabel->
  "In[128]:=",ExpressionUUID->"6698d5a6-3661-43bc-9ca9-af38d6f9860d"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`d$$ = 0, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`d$$], 0, 180, ControlType -> Manipulator}}, 
    Typeset`size$$ = {375., {101.41754150390625`, 108.58245849609375`}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = True, 
    Typeset`keyframeActionsQ$$ = False, Typeset`keyframeList$$ = {}}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`d$$ = 0}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$, Typeset`keyframeActionsQ$$, 
        Typeset`keyframeList$$}, "Body" :> Rotate[
        Image[CompressedData["
1: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
zQhguJZ0zkGedKqqZkkZk5SMsrCIGRF3GYzKeXGVMKkRJ3SShEGaxGQJTBYz
Hsgsj4Nj2lRJuxx8EFibLdj3FxKLFQJwAwZTLiGhHqnHdAfcyWGPSzPqNVAK
AZVDRY04ZKSeY5VTDMJBQssohrCwXeg3cx2qCdLIsmsoevHA2lTk6nJ2ruYp
RHTNrCPqllnU4xGXPEoqIGJFvRqws7HLr549/uN/+vv/85Xnv3/ilX9WS+k2
rTBs1SScOp9e4NHR8j7JZFo9lVHMV7Q7s+TKJLHS8tYzTsbwueG+09ShgbGh
/sErZy5eeg0oe+PUz4ZHzrLYQ4BhOOJ04lqRmPr68eeee/7vkUtCIoV0qlFx
cYcG04uY9H6FlGbQ8oS8EaNeIBeOgSCLggxKOmRRhXCklHZphROQQoFBrZBq
lNAJndClF2n4I3r+qElMcSqZbh0PAAQHJNRsh5wZxGQhozJsUkUtmrhNk3Rq
0oQuTWijVmnCoch5NF0Mo6Zm3NJKmJtJ63SOBAAnU0Qjaq8EzWUfVnDrci5N
yWso+rBiwFgMmcAKoRa+udl89/7Km/e7uCEGATfoAJKQTqFFGB5xQ8Tg0xj2
QmmPwaeFXkVHHhZyDdwuhQLK59ZAfoNbNwoMAh1RKygOWREwCZkiQSMoFsQS
YROQCAQVM0Ql764VAS7AMATqNCJTTQil8dk2BNEUuCEaIAUMJ+s+qB+BWcAQ
DBROz8RtKIuiuQnAH0jspdCeG/Z88JkW6bDKAUObWQwCJIFQN6GEf0gXQChm
M3gh5wIVoUiv+qab/o1OYHfKtwckttzbdfdOw3OjE7k7k3hrNnOrFdvKeuZD
linS0LCrcjpRVMpMKvgRGTcgYnr5NDeP6hcxQwpeVCvyydhFpz5lVSUtyk6c
bIQcLhUH4w159XSncgjQAwDXWz5khfMlJ7QZtxgEnjiZMsKmlnPGoRwB6KJE
d+TBJJswykYFlFPFkB4YjDrFpIFWCGlsypFGyrwxFV7vhKaLzjAhyARUoE7R
ZVNTnXpmK++Okiopt3+i//VTr/zT+ZPPgeijZ6x6vlUDtqsDH/FoeX4MLIaS
dLEXSrpWWvLufm53Ibg5HYp7FczRs1fOHb9w8vj50ydPvv6zCxdeEwqp584d
Gxo6y+WO0ekDEgnD4dAaDJKBgdMvv/zP4+OXBALKlStvKBQcqZgWi+BWs9zn
MZG4Ri6hMml9YsGYQjSukdFE7Cs6OdVllThNQo9D7idUSu6ITc2VMPqF1D6L
nAUA+q0yj0kMUTNklYHBQTHo0XMtknGrdAJgBAaDmMKvl5EqoVPGJpRsv0EU
symAwbBZHDJD/SiIO8Q5j6oWMYAbNqDuSzpbSbwVdzbC1ooXy+HqlE0OxQLA
CNZZjdnma2EwwVu77TvXZ958sHH/QAAdEpggCNkiEhqrQQy+9+Tat1khCqW9
IvFwnfg0g4ePPMwgeEegO0tugBsY0EP0HQbwgEFwSSNisJDGyzmyWgCsvK1q
EIQwnG7FEIZznSSYI1jhYR8EAMEHn2YQAAR9Rz34zJdwu9JpUxyaoFfCv8Lv
0cKfCgyC/SEGSwU3MDjTCmxNh67NBq9O+bea5FaNvDrpBwZvdGLXW9Gdoncp
am+7dU2HumKWZeAGljLDUnYMoJPzPAKqlTpopg2QInpMJwprhGGDCADMODVZ
XFfyGIs+cwpXRW18t24cQKuE1Z2MGdqIjV2NaMAEAcxiQAEvQRwFNwQihGOv
eo3cALi2WajhD6p4lyWMc82ULU5IawljgpTkAipMfDnrV6y1/YBhFxmXKBdW
T5XxWspsU0+UYuZ6hrBr2QYJZbTv2Gs//X7fqZ8O973KmjhvVLMNcoZLLzGL
GJhg1CwaltOOG0Vna3HJVF5zfSUMPrjQdLfyLoVwjDHWd/r4sfNnTpw9++rl
yyf5/IkTJ34KGLJYw4AhsKZUcq1WFZV65b//978CDEdHL4yMnFer+ZBCk3ES
RBJ6MEGIowLuMBQILMoFrZyulowDgwCgD1cCgGCITp2ANEqkzAFg0CRlkJgw
5cWKEbvPKAqYJVAGggM6lXSbjHIgGqnie+GJp5O61QJczsEVLK+OHzJJgEFQ
3CFNOGVJXJ4iZGmXPEXKF8r+uXJgLu+bSpOtsK0IxaNFFjMIoQNuWPAaoEhc
6SRvbLfeur3w4M2Vtw4C5/2nSET1IDLB3nAN6NEHV5EQjL3yEGHYI/Fps0P7
e4cheBG/cOtCroMKC+5euMPRTFzQh0WC5sMKB0wHwnpJNRO355LOYsZVzkG8
9NRL/kY50KwAiaF2HdwwNt2KA4ydRggA7JpgFY7xAIDlHAG1JGIQIi5kUXhP
ZIIQho+Mi/aIOzJb0UMSnr2EQ4XGSNE/AQCExwg8N1JxO6IPTLBc9DTrgdnJ
4M5s5Pp8eG86uFoj1mvu61NdAHdq/rWcayZiqhOqokWWx6RprbA7FCNlBkS0
hIafMUgDErpxvE89fMbG7g6HFnEdLqEEtPw8qc3i2lrYOp3xZt3qDCkLmlk+
jA5tOaQpBlQhCxs61YgOOnGnIOuRuTTjCVwIxSB36OdmOcWh4wQcUruWCT6I
SUfA4IIO4XQRBwzLYa1TPZwPyLemAytNz/5SvBLTliJq4BHM0W1iLzbD+ZBJ
LxnHpNTxS69dOfPi0IVXwBB51AsmDSvq0YfsWqeSbxRN2OUTvOFXFMzjnRx2
bSl8fTm21HRN11zL0wkbJpQIKJcvnmKxxi9ePHHlymkmc+RnP/unl1/+0dhY
n1BIl8u5EgnLYJBNTFz53vf+r3/4h/968uRLly51UQUGoR6MhBwGnVCrYkMQ
1ak5cEWoI6fVUipAZ9VzCYsYAPQ6FRLugNcit2t4vPELYIW4jhewybMBcylq
95vEYZs8aBYRaiauYngNPFLLNIlGnXKmW8PruqFR4tODofOBwQAmAhOM2+VZ
Ulv06yGOQgsffpJQlIKmUtgMKRRU9RlLbn3Bqc7ZlcBg0aOH2nC65N9ZKQOA
j97dfP/9nQffsIaqv8M8IqGdPSTfeW8H9O77u6CHj/cQjKDDTB32RNgDhCIh
YJEOZ1rEIDgIqrngHkaTcWiiHC1ZCfmNSIAhYhDAAXwQhvkUXkhDKAW+wOYg
bfqBxMlaGEhs18NQKnYdsOKul7v2BwBCIVlIOw5M0Po0g09PDiLWvm3u3kuC
deoQpwcAfp2lwb7TCQeiDzCslLytRnCuHdqbj+3PhbYmvYsle5fB2dh+J7qa
J6ZCWMkhT+n4CQ03oeJFZKyIhBGWMv1iWkonLEK5ZxCRwgkT/YqNPeQSU+Ca
epRMr4adJdSZgwdsNWTJe7V5rzJi47rUE07lSM6jaMSxrFs+mTIncbFZfMUu
G66EtWEL162jQOXoUI7rhMNmJT0dMCR9OsLAIo2cxWYw5VO1MtbJrHUqb835
JdMFC9A3V7RtTvmXG65WFlud9AGkUZd0phxIeQ1WJVMnovSdeJ4zceHy6Z+x
xs64LCKXVTxdixYihN+isqlYMVyh4V4yywY2p4JvX6vvLcRna+TKbPz6TisV
dyrlrImJPotFPTJykULp5/Opx449B6JSB9RqoUYjMpmUACMQ+qMf/f2LL/7z
T37yA2gvXnydRrk8NnIOAJRJ6Co5A2pzqA4gnIg4gyoJRa+gQRBFM/VAIpSE
VhUH4ihz6LReTI3g6iihicID1iJJurRxXB0CWo2CsFUSdyqCZgHASGq5IYsU
CsCsx5DCNRGbPGyWwp6IRZLAlfCx16K2dpJop13QNhNOiJqVqLUascLlqAZM
EEHLLl2J0NYDZoimnQy51kndutp59+31x4933/9gr2dwyO96rPUMERWG/z5E
83AL9PajbdBhGHug9QIq4hEoQ5CCeh4KxyOhTZtVYrdJHXaZ0yHHnQoCV7oI
FelSu0kNyOPWej06v88Q8GPBQBfD2Ndx1ISGayBMAokgMERQKQugeRCJB7YY
gPwJ9NVKrkoBB/sD+vIpINeGGIQ3QWMyR9bJ9Jao9VgD/HuPgsPr2YI+U8Br
REfCJhwGERoVs9kUjugD1Sr+yWZoYSqyMxfdmPTOF6wzWRMwuD8T3WuFFtKO
hleXNPACEmp3/h3QE1L9QnpUzg7LWUktr2CTVwlNyaFMYAKPlGLnDeGS8QjG
j1vFKQekIGXAyAtbRVNZV8GnidkFbi3dIh6IWAVQpGTdSsDNpaaaRf0m4QD0
8141rhyDKibpktk0DLuBW07Yqymn1yoIOiWbs8m5mg9srpk2g/fNFK3rLc+t
1cRMwbTcwLdn/Gsd72KdnCnhCZesnnDkQxZCzxfRLr/yo7+RsQYvHX/OpGKu
zuZCpLpR8GYjDo9ZBi5ZjNjsaobPKtidS19dzk+VyErKAgC+dWd5caEkllAm
KJesdjWbPSYWM8H4zp9/HYjjcMaBPptN6/c7wAoHBs4iNsENf/jDvzt27Mf9
l0/2Xz4BVaFCxuSxB1EsgRaCqNUgwFQM8EEc3M0iJm1SQFLBGZSx+kGkUQQM
QiUYsMncRmHOb4g4ZAGTMGqXJQ8mTIFBvxFyuyzr09djdqjywMXSHi2gF3XK
oWwEZjNgcwFzNWJvJIjJFNnOeOopvJGGPtFJuWYz7oWsdyXnXysEpxMEbC43
oldXKm/dWXzvve2Hj3feebzdW5zWm6BHOkxfD8CuIb7bFcLwsCf2TK2XTpGe
5g4d34MXBAAiIQwRiUiIRyARMPR59YAhCDHYc0M0iwECQ0Se2EunB7Z4UAAW
iS6AOQcAeEBfd2T1wAQth4tBxOC3rReNhiyg/xiMu4qGbOGABbEJL8UjNoig
QF93QAbc+YC+atlXrwY6k5HF6ejmdGQ6Z66GFJMJ3Ubdc7UT3ar6EYNRHZsU
jvnFlKCY7uGN+wS0uJIbU7HjGlbaKGq4tXNx5xQEALPYJRmVDJ3wqKgRkwDK
kE4aB/TgnimHDdABuIA+h3wMV05AnRK28AFJo6AfWlASl5aDejgmZOaFLELc
wAEGa2l8aTJeilvyEeNKO7LSDk0VHBA7NzqB+YpjreW6thBeaTg3O+6d2cDV
pchig2hlLFA2ttJEOeaAUDdy/pVTL/0DJD0R7VIqZLq6Xot41LmYJR2yeGwK
k5w+XQ6D40Dqu7XRXG4nOiVfPm7d35rc35teWa5y+IOjE+csNiWDMSgSMVis
0ddf/+mFC8eHhy9IpWzwR6/XZrfrwBPPnDkGJviXf/l/AIlQM4qFVD53FCQR
UbmsATehBR/UKFkQRMNeDAAUc/oBPbdd5nHIoTyUswfgjyEMgqBDCe6sF42H
ncq0D0u4VD6TACIoQBd3Aox8HwYOKMz6tJWouZV2giBkJkk1oBqySSJ2RdSh
jDnVcVyTdOlSpD5FYkkPxAlDyq/PBzAAtpPAF3O+rUp0t56YS7sXioHNqfSt
3TaY4HtP9h4+2X3z/c2HH1x79PgaWpmGVmsjHY6gyCK/1n80wZ6d9czucMgE
PdP+Dp8IslvlR+SwKUCogztULlzjdum8boPfazzM4BEhQ8wmgDKImlDxQd3n
Lue6+fNrADM2BGA6BjnW9DSDXQC7pdwzzA4UC1t7QjwiJOMRRyxsR5vwEsQq
ALCQJYHEfMaF6AMMG7XgVDu6NBNbnQwUA7KYlV0Pazbr/u1mcLVALmacHYiv
eg4w6JOCFTJI3piXT02q+QktO6yghFWMklO6kHSuZIkm5EYzD5eOkooxt4oa
tfEnk7aZAl4M6kJWPkAXtYkLPl3QxEeL0GDTIh4x8PqtklGwS9ishIwzOTJD
qgg13WMRmjXMdNi8uVhYm052Sp52gZguu2bLRNor2Z4JL1acq01ia8pzbTaw
M+O7vhJdrDnma05wyUJQBw/2mEvj0HB4o+eNEvpMJZYJmOcnE1O1YCnlqOfJ
dMQa8epxo3hjvlKI2OdqsUe315ZaqZ2FSqsc3Fypbm+1l5arCjVjgnHB4lDQ
mYMCAe3y5VOQOU+cePGNN16m0QYdDj24YSDgjERIKAlfeOEf/vqv/wscc/78
qwadCEpCIX9cwBuTiiZMBiHUg8MDJ6X8kXjQAj5IHz2lkU44TUKzli3jD6n5
Iw4t12OWAIYy5mUQMJiEutUmCdulUbsEHBASBTzQAEDoZ33qQsRQihlzIV2E
kEFWd2iYYOi4jgvuGQQScV2M0Eec2qBN4zPLU34s4dUC0TGHPGmXZxzKIq6B
ONqJOWdzXmDw7rVpKAOf/OLGe5/uP3iy8+jJ/nsfdAUkIiEYnx4R/doun1UM
AnGHx2qOwPjMOHr4sCMA2iyynhCGhFPdYxCCH9z2CDoA57DQHCLCEFWIgOEB
iSSqASGCHkwIIvTMvWIQLRbtzdEjdzuCIQgM7htZDkjsjtYezKE4ElE7Gr+F
/Ak1YD5LQBmYTnYHZA4Y7GLYrAcOGEwsNXwJXOjWUstB7XozvFEPLeQ98zk3
XKM4JoJCzy9nBuRMgjfhEVChEoxp2X75mFc2ljJzp8LG5Tw+m7BW/eq5jCNh
53t0NKj7HMrRUkgzXyYLAXXIyg2Y2Y2EJetVkVpmwa8vBTFgzcAf4A8fd6np
QGUzbrs6m24lrISGmg3qrWqqzyZcbEW25rqz8PW0Zb7qBh8M29lQvQKAG20S
dH0pAu3be4VCQNzJmaYLXfB3Z1MOFZXUc+KEcr4S3JzJLk9G7+406ln72lRk
ruGP+Q0xP0ZYpBuL1VTYNtNMPnpze7aVur49vTid31xrvnl/48b+ktdnpDEv
6wwiSKEajaS/78wPf/j982dePXXq5xzmaDzuVSu5Ho+5VIgoFJxzZ37+gx/8
1fjIpcuXjjPp/XotD9N3F60pZXQmrU/AGT194qcizrDfpZcJRmmjZzDwOxUd
DFHKG1QJR41KhlnBMEgoAsoFOaffaxY7NGy/FXDTF+GCklBQi+OEPONWpz3q
lFuR9quBxBguI/Uss3TUIBzWC4Yw4ZhDyQxZ5VmvsRi05/3WBKEP2xRRUhPB
FUB0yCSKGkUQWvJ2eQlXNf3GqSSx3k7e25958uTqJ5/f++DzO48+vfHeh90v
KCEMD5PYg663ePvfCX188K2KJ93l3F2/+7A72NLb30Xs4NXuGz65hl6Ftgvj
k+u9/YfPtZsVNpMcyWqUIVkwKRLshAOcVhVh17gcWsj5vbGRHh2Il54TgYAU
4AIEgIAfoersyDxjwKt75vsA5iA0/gO8H7xnly94HxAgBnBlkk40834gG1I2
bc9lAEAnqJDrroopF8liHnh0lgoAI9moeTt1/8ZMCq4mrmFCHbHSSC7XE1O5
YCcTqoSIFGEM6iUeBSekFiQxad6iKthVaasgaWHHjKyUldMIaBYLjsU8Phk3
zGbtK3X3XBHPeiSkjmKS9HkMNCjTckFplORVkvp0QBF3y3E9E26qoFUcwxUS
6jmrdAxX0epx8/Z0bKnmqUR0rYwp4uT6LSww6Dub5ZkSEbCys175ZidcjWk3
p4JQA+7OBxZqlptr0ZmC4dHVUsRCXavjG033VBq7sRCDPyZHihcrxHTOens1
vdn2vXejtlR3zhbNhZDSoKIoZdRWPbaz2Q769IW8+9bNhfW1GthfKGi6tjf/
6J1rD+7t1gqRoUsnnSa1xaC1mYynj7/6w3/8/ssv/HCo/6wFU+SzQa8Li0eJ
ajHaaqQdFiWHNRwL4ULuWH/fa5fOvwT5EwBkUC6L+RMmvYTHGrEa5ZTRi0op
k88Z8uLakcETbNp5rYIKTwOrno8pmCrhOGfiAm4UagSj9MHj3W9pGfgekyjm
UgGMcRLo0wCS1ZilnSXqMSuUiibRKCYYNovHoOM38MNmcdQk9aq5NuGEmTeK
S+k+vcCpZhBalh/jxkzCjKX7DZfuV12MwgqurHsNi6Xgg+tzn31655dfvf3x
l28/+fLBh5+/+dFn90Ef/uLek0/vgj745A7o/Y9uIb334U2kR09ugA7615/Z
vv/RjYNTbjz++Pbjj29C+8Ent+CtUB9a9OrBe/6H4wExpKcxhLbHIG5TdzF0
qv0erFejHYYI+ReiBsGIbAvBCB3Yg0o5xFrvTXrvg94qcOC2RxgEfrv0HQDY
ZfCAPoAOlElZQNm0FZTL2PJZsD8HCKCrlFwliMEFvFwkahV3s+7rNANLk0lI
Pk4tN+ExLLVyy5P5RjpcjHjyAVcCN/kNSq9WFNZLUyZFzqrK2ZUNv3Yypm9F
DHlSHDNzEjZO0atoRnVAH9zztai+mTAAMl4j1YvRZ0qOYlwR8/HyMWU2ovTZ
uWFCFrRLITt5MaGSecWupOEa+lQOn0xbbyxnlxvuxRqecvP8ZupSnXjnWn2+
7ApaugyuNv3trPlgIBTfnvWtd4jrK8HZIvZwr1j2ideqztWKYzql3+v4ZrOG
ybhqo0msN/AH2+mNlvODm5W9Gc9cwYBrhpTCQadNUq+EZ6bT1Upgdj63c3Vq
bbNxbX8+GDIvLVTfebD38ft367moiDmeDLitBoNOobpy/vy5N46ffPVl+kQ/
0AQ3AGT+Uj7QbqYWZktBrwUeyJGAgzJ64afP/Q11/DRUghxmP32ij8scMull
SinHqJPKRHSFhAl3EeBJp5xXSCkhv8FhFDlNYsBQyOr32pUGOYNHvQDO6DIK
QJAwQVFCiVZ1FsLmUtBUDBjjTgWUikGjMO/R18LWStAMOTNmkYDTRTAhKKTn
e1Usl4KOqxguDSto4MYxQc4kBPoKGA9UtkqrpHqpGHhwbfazT+5+/uXbn3z1
8KNfP/zoi7c++fytj3/5JsKwR+IBNV/rMIw9Np+p3ikI5MM68m6Hj4dnGtJh
EnswIgbhVbgKXRLtSi+pP/J9oiM89mYx0PhJr3CDPb3v4YLQjMORtzp4N2D8
a1vs5t4uyxYUMkHf0Oc80H9gEAHYYxCgQxgCgNDWq57JZmB6MjRXj5ZjDkLP
h5Jktppc7hSLcV+ctMYJS9iq8+kVPp04ismBwYxZkTRJ8k5Z0S2vBbT1oLbk
U2VdkqxLChhWQrpKWBtzCutxrBjUZDwyiKC5gLKW1qdD0lrWWM2YHFpqPox5
zUKTjIqr2YSGY5NRUi5lOWzI+1XXFlL7S8n1trcSVQSt9NmS7a3dymLNFTCz
gEHorDQ9Gx3fCmTRKfe1peDVRd9C1XhrKbpYsGw2XFtNEkiEdrFons8bdzqe
/bnge/vFzUn8ozv1u2uxhZJRMPaShHk+GTLVir5Kybu91bx2fWZ9u7FzrbO8
Vk2kiUYzuX914aPH96YaGR+OJUOeEFxgtWpiZHhidOD0yVckQkbQb3O7DPVq
rN1Kg2anC+GgvVFLBnzW8dHzz//4/50YfUMiHB/qPzE6eMaN61m0ITdudDkM
PtKkkrFjIefI4BvjI6dk4nEvqbYZBCLWkEXHg4Bq1nLlglGNeNykYuol4zrx
GLS4gVeMWKaKvmwAsyppPoyf9xmmsu6ZvLeVxMshc5bsLlSLmsUZXNVdgebR
p2zysEEQ0HIDep5LxXRr2IjBtFGQwwR5Azej56QNvAIuny/4wQd/+em9L756
59NfP/rst+9/8uXbv/jV259+8QCRiGAEIRIPO+O3wfW00FmI6MNcf9vxCC6k
wzz2GETq2SXEUbRApTcld1iHwTzskgi9w99/7y0HPfxuB2/YnfJDX5xHDAKA
kGa7+TPp/IY+Zy6DQ/IEIQc8YoKQPwE6wBAxiIJol8FWZL4R65QChEGgl1GL
cfd8M5uLuIO4kcSUuFbiUAhwJdfftUJxWCsIqjkhAzuMsdIOST2oa8etjYih
5NXk3XKvnpkhZR4DM2Ln+02cnE8Zc4rdGL2aMmTCik4FLyeNZsVoLmSAesco
pYAPuvX8g5kvWSWCQdm4UHGjYc+Fqj3qZE8XLKstLzij38TM+RTzFXxvPgIM
rrVdoHvbib0F71LdvFyxgfeBbs5Hbi/GEIMLBdNmy3VjIfzkVvX6QuCzt9r3
1uOrdRt/5AUl92IyaGiVvJ1G6M17S3duL27vTt64s1CuBSenkqVqqNlK3b+7
vbLUnGkXSCeWSUb8bkIq5PHYtL4LJ/RaYSrhBgDnZooAYDEfADlsqql23u3C
5FJGf98xhXRcr+Hy2IPgg/m0n0EZsJlUYj6NsGsxrSgVIy9fPHbu9AtaFTMc
wGSCccrgaQl3CABkjJ3VKxhwISTsfqgNRfSLBulE0KlIuDUek8Ao7U6eVqLW
7txf2lXwYxBHweMghSIG86S2HrIAhnGzxK/hgBXGrVIA0Kvjho38pEmUMQmz
RkHWwE3r2DE1M+eQQhZ999bi57+4/6tfvwsAfvEvTz77zcNffvUu6LMv30Ew
Huaxh+RhoJ6pw9ChU57WESR7m5AwQRA1kXo8Pl0kooAKVohEOFQgSKdIh/cA
p25CC0JAHcyhd2tJeOlgTUt3ddlhHX5DdC5QjBiEEAsAoukG0AF6XeWzBCr9
kBuiShDKQNBBDdhdoY1KQigGoa1VvN1hmWZ4oZ1caMbdJjFcd79DW8sFU0HC
7zAYpVy9kKHjUjH+hEPMIGUst5RBiCZyuLJAKgtuTZ5UZgll2ilNEYoMqcCV
1KhN6FBQSB3dIhvzm7lQ9wUsvEJEF3aJciGN38Y3ycfibqXfJNZyhwJmiZ4/
Uo/ZzeKR6SzuMzDaKSsE2npCvTPnT3v4M0VrxisBBkNWTjmsBR/cX4p3V5jP
djF8cDUDPrjass3nDfeWYvtTvhszgXuria2Wa7VqX687V2uOvWnfh7ca7+zk
P3937vpS5Op80Ca/5FSN+W3C2ap/Z6X4zptL+1fbt+4s3n1rtdVJbF3txNJ4
JG5fXmuCbt5ajcXIfD7ealacTqNEwhocPKPW8HBCMztXaE0m8wVfLO7wePUq
NTuZIm12lddtALLKBa9YMOZzG+RiutkgMRvkQ1fOgKAwDHqt4IMs+uUXX/ge
lKWQRZkTF9nUPtroOQFrUCEcs2NCPq1Pzhtij59VCkbABJ16rox9hTN2Gh5c
uaC5FrdDYeg2cG0KqkPRtcWMSwNxtOA1QCdhkwGMEZOoK0wYNgoDmCBkEnV/
oscqzVrFUA/mMF7awAmrGOCDa/XY4/trX37+4EtA73ePv/zjR1/8/v1f/fY9
0Be/efT5r/8Dj0g9Kr9biDKE7bcdcxjqw8dDsEdCMPZ47EVThB58tia9GGS3
yEBQg4MOc2QzS3svHcbqMHffrK+WWk3d7xz1hE5E56JT0MKY3nwfOGAuTYAO
0CO+WQXaJQ4B2GMQAQjcgaADe9B+hOFkLTDXis9PJgK4SsIdsGgFyaA96rG5
rVqVgC5jjoooA1LqZS1z2MIftwsnbILxPKEpubW57uWWHIQfHVz6gLFbm6DF
VF4Dx6lm6AUDSfLga3peKAP5FuUYJh0yK8ZDB5NZmHAMsqhDRQcfdGkYYQu/
ETOXApr1VgAY3J0PlMIycEOoCgE9CKKdnGW97Qcf3Jr2XVsKb06Tb+2lb6wF
Njr2zabzwVpqt0UuF8xX257tSRIwvDEfAga32+4nN+vv36wBgwDgu9dK5bAs
gQtdWspCzXN7p/7g1tzuZuXdd7bu3Fve3utsX5sy2sSeiKnZyXRmC/ff3t3c
nl1cnLx6dT0SIcVi+tlzPxeKxnV67spatVTxZ/NkIokbML5URrNYZXaHOpvz
5TPuZi1sxkThgEXMnxByxxQS9uuvPMekDupUfLBCuIXgmp4/81MO87JBy9HI
GEN9r4s4w0oxFTdLwA2NSpZKOC5k9BnkNKuKpeQNIkOMAWtJwiQZs8gmXDp2
2C5N4EoQlIT1iA0SaZpQQ1UI3Pm0HK+GDXEUfDBmkyUcigyuKOKqolNesEkL
FmHOxI/q2BWfdncm9+nD3d9+9fCr3z76/Pcf/PrPn3z5hw9+/S8ffPX7x6Av
f/c+ghHxeBjJnnpsHhGiDAELevqA3kuHqUR7SKcO6QiMKJHCB9gDENMKQYBP
j6AeOyC4ChajGIRePczjYfTgAPTNd2h7p6CzkOB4uGQQSiGOAoOJaHcsFBww
n3F19c0a7IOvQnRx6wHYYxABCJuwvzdkijCslzyNoq9TDaWCZkzFMKq4Xlzr
ceitWolSQBcxhnmjffyRc/KJy0bOCDDoFFMDWj5c6KRNGYL6gtB2Uq56xAEA
BuH+gfqFNwwAkjqeaOJMHFfHCWXQIYb8qRH043omQAcAZn3dKWNSy66ETQ75
RMjM07AuTGXs1bD+2nxyue5caxGNhBo6KRd/oeyYzlnXmt6rc7HNtm93NnBn
Pbk357u3Fb+7GdnuOPanPPeXIjsNZyemWK9Yr097AcPbS1FUDz6+1XjvRu3T
t6avLUY+f7gA71kLKwMG6lyJ2FvKvH1z+vpO4/1Hu1f3pxdXyo1Oksrp90St
+Vqk2Ijt3Vp++9GN23e3b97cyGT9Wh3vjVPPaXRMr1+3f2N2aiYFAhKZ7Es8
/hCwGQo7pqbzq0vVYs6dS3vgInIYg2z6wMjAueH+s9Cy6YPUsUtAZTziEAtG
RodOdr9hrRf2X3jNrBOQdhWm5loNoogXg6pQwh4EH1SLxnRSissoiLm1UVLj
NgoNwmFgEHwwaBVDS2hZMYe8mXBGLBJ4GBZ9WApX+XVcl4IOxWB3QtCl6S4i
9Wirbl3NrangyqJDkreJUhZhK2q+uVr74qObf/jd41//7r1f/f4JMPjrP334
2z9++Js/PAEhGIFEBOMRHg9T+bQOc9cD9gjCR3jsbUIRDXqaxMMMAoBGnQhu
LNARZHpeBlgdJuswp6jTo8+oF4DQ8b1Tejyi1YbfxuAhAMkjDB4xQeAunbSm
EpZk3AwtbHYDaoEsJJ31greQxAmbxAhByyLHzSqtjKMWMcXsUc7IJfbQGelE
n4E74hBTXXImqOjGKj6zR8VxyOhZUt9OktWIHVexdNwhDWcQcqZTxeINn4o5
VTY53W3kLzRCdg0tH8acalrQKmymHDdWymlSNVdyp11yLfu8Qz7i0dFW6/7d
mcjNlfhs0dRKaVebRCupnyvaNib9e7PRm8vJlQa+Nxe8v5W6tui7vR56cye6
M+Xca+M3pr17LWImodqq2e8uhjca+NVp383FyJ2VODD4YK/44b32zdXEHz7d
3uh42klt0smZyduWGr53b8/evzkHDG5sNeMp3BuxXhg67o3ZkiV/qhZa2Gzd
frB95972xuZ0tRaLxuwjYydDEWOjFblzbxGwBbXasQuXXqTSz9HoF8uVyOZ6
e32lvrxQzCRJg5YnFVLPn36ZRRuCYvD86WM81sjQlVM81jBcUybt4s+e/1uL
UchnDmjlbLtRAlJL6WGvyYFJdHK6kHFFxOwHAN1WaRhXA4YmBc0op1oUVMAQ
E43Asw7cENcwPXpuHGpGhwLoQ8RBPgEHhIckGCK4ZNmHVX2Gmh+r+7oYlgl5
wSGBir6dst/Zmvzqs7t/BOIggv7+yW/+9Mnv/vQRCDBEJAKGT5PYgxH0bQw+
k77DeqaToj3AHTDoI40BjxkEHYQkqg0Rhj0fRBiC9Gp+TzoVD6RRcJ4p5J5P
n6iWs0FwgFbJhU14qeezgC1ul0MchZIwGuou/uzOvB9i8ADArxn8pt9Vj1Bk
l1A2ppN29HsyqQQYItCKNyuBWtFbzLiSEYuP0AH7KhlbIqDy6EMcyhX28EXu
yDmIozrOsEU0YZfSkk5NxqUHFbymos8cNEoiVsVsPgitYPSsWUI1iibkrH4h
5YJBPKEXjcHjuhgyLTeiUB5CNI04RItV39ZUdKsdWap4uj/3hAujFk6OlM5m
7Tvt4O6U7/pC4NZS9MZCZKfjX2+QoM2W585K6vZyfKfjXa3bbi0Hn9wqPtiJ
rlSx1SK2mjfcnfNPhsXzae3t+eBs1nBrMbJWd358p/Vwv3JnI/3BnfYX7698
9nDxrd1CLSz3aoamUqbd2fjV5fz+ZuPB/XUo7mqt5LE3nn/j0itWr8Hs1pk8
uuZi8c33999+eG1jvdmejK+vVT1uVTSK7e21trert2/Pra+XUynrQP8rfZde
4rCvrK+23rq/3axFZ6fSs1N5rYqtkrEEnFGNgs+gDEAWdeOGvvOveQgDnzME
DA5eeU2jZNApF+FugbsLTJNFuRwLWONBG2P8Ao/elwxZY14juKFRyQi5NKRF
gsko8Ewj9ByvWegycCGXAoYRhwwMEdwQcmn6YME8wAi26NFycAU9S6jTTmXa
LoNCvuJWg3IOcffXX20ieAY+vLn4u1+9BQz+9l8ef/nbD7743Qe///PHz1TP
HHtgIh32xMM6zOlh0+xRfEToSNQH3OBTOswgbPYYBDfsWeEzaUIAAkeIqafV
OwYdhgTowfXqMQgv9TAEKwTTBAbBCqEkBAYTUStaeIayaC+O9hg8jB4SGrTJ
pp2AXiJmAQGGwCPsqeTdoC6DMZvPbTAbxQoJU8AZo433MSf6OOOXBZRLUnq/
QTAGThfARH4ISxY5kJhzY4BhwqmJ2VVZ6AcsavYgMGhXMFXcIf74OTVvGLKT
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
bgiV30Mfnyw8QQ8RAIgwiGCIJFL6Sf8MbIFKeFaQn05DKUBX4A4E3CHoAXfg
tiDEeQvX8n+3esZJ1xCQeLpcfYa15zFEhjifl9UssVpEWh1HLKHQGa3Y9prG
+pLq8qKqkutQCaLrSyntVXI+psPM7Qop+uLK3pgi3iFO+KUmGc6mIiV9cree
rhegHUrSYFSTGXRNdRvjTlaXl7M66bq/EtvMePdykYO1BDAIOlrt3F+KHi5H
7q/Fj9c7D3Ph3Xn/brbjIBc4XPDvZjxbadvasDbXI0/HhWMRwXgiv4DMTjZ+
b2Pg8d7Y4+2hfBZdTexnvIt9qgEXKaZs7FGgu0UtMXZdQoxKSNsmnNxHs5H3
V7v3Z8P3l7sfbg7sLHc9PppaX0rNTQcz6cBYv60/qfc5hT6XRCzC4fC1TDZO
quDS2JTG1nqzw2S0GfBEXBOq3u2x4/Bos03tC1i2tucf3l/OzfYsTyc/uT9/
tNS7OR3JjbinUobliY7xHuNWrnNvve94b3RrpW9xLpGdSSQ6rdWVN94+/+o/
/fN/e+PNMzfvFP345/967cbl8qqS8opiHKHR77fAx94/EPL5dcCg1SYRCnBi
EYHPw9TVXq+pvIJBl2HbyttaShmkBh6jlYSpQtUVAYBghVIuQcjEcMhNfFqz
nN3u1HE6PcqUT9Mb0HT7VAmXOGLlhU2ssIkTt4kSzvxKUF0BdSqo7O3Uz4z7
N1cHnjxZ+vTzA4iRkP0++wbiaD6FfvUt4nQfPC+EvgKAQB8oHx2/fnSavr9n
zi+OvlfPXyWBYHg6l/LYJD6HDBJwKUIeVcSngcQCulTEBEmEDGjDHngWBIch
6BWEMHjaDZGuGNgDXikU/h068DtECH2n0YMkfCoMf7+Qa6xO9xohrBV6dJ/B
8IcYNOi5CiWdz8WRiQ3o5vKGmuL6iqLa8us1pVdbaouRHlGvkRl18xM+ISju
FfZFVd1BhcdAS3hEE11mv4kuopQbhS0jcfVOJgzV39KYfT3tWU+7siOm3eXo
/nrn0UZyfzW+nQvvLEXuryef7PbBFmAETzxYCgOSD9cTwOy9XHBnyrE+bJrv
Vk50Ssc6Fekew8KoezUderg59GCjH8rD+yuJvTlfrl874KbHlC19KmyXsDVE
rwmz6sOcxiEj/f5U6N2l7r2ZyOFi8tHW4P5aN6CxnI1lpv1TY57+lGmw2zY2
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
gqq9SWmvkNBRGm6bjovWsptjRlbcxIqZuD4t0yTECwj1mLri2pLLFUUXAMOS
q2/evvwGsFN65Wz59Tcqb5ytvfFq/c1XGm+91nz79ZaSN9B332wre6u9/G3Y
guBha+k52I+6cxYOaLr9ZunlV+5cOnP74mu3zr9y452Xr7794pW3Xrr01osX
33750juvXDyf1/nzr+V18cyFC2duAPLXzsGfri650lhZ1Fp3G9tUgkfdhboS
PFpIaZQyWq5dP49gCG4IoRSpDQFDJJEWMCxE05q67zBE3BAJpacxPO2G+VwK
hkjBUah4EMIjwAikAEQIhqdJzDf49OcZBO4QBml0PLRhZ/7lPBqCIWzhIeyE
t4VjKJQ2MhmNZFE6FY1pq6mvLq4uv9FYe6cNVcGgtfC47VoF1aRlaqU4laDZ
Y6QOxxRdLla3nZ4yUxJafFyJiUnRMUlrVNwc5NWE+NURYW2nvKnfgJ1w0TNh
wWJSdph27qcd+zPOo4WOR2uRR5ux+6uhvUX/wXJsZyG8MuOH+qg3rDIp8EXn
/42BLdfLKTJu/t7rCgFWxsdw6fUsSg2H1YzGVLYR61FtlRevnvkf//x/MZlY
CDNNdSXffvkBYMjEo/ANFfV3rha99cqVV371zou/OP/KL26cf5GErvDbFWO9
ganB0FKm9+FB9mh75uFRFrS3OQkMQnlo0DHlEqLdIrWaxE67yu3USERUhYyZ
7PRisfUtLZU2mwo+cDwRBRWiTMlj88hWh95iN9BZRImUC+dDvUGk1rBmZ1Lj
48GtjdHFbCo7G11b6t7fHD3YGjvaGn+wlwYM3z3OPL03d7QzsbM2tLk8mMuk
pkbDkyPheMRi0HLgjEfC1+Haq9DN5c0Nt8tKLlSVX8lP1kXdJWBraOQmOIDP
wYLIhHoKsUEhpQGniBt2JZy9nTafU+yxitw2EQAoE5PgG6ytvlFfc7OhtoiC
rYZPVcpEs7BVMnqTX8dI2fhJK7fTzOvQMEx8HDCIr7/TXH69+vblylsXy268
U3rtrbJr58qvv1l5883qonONxWebis8AYsAaQIepeAdbeR5XdQH2INwBng1F
eU7rbrxcc/01KBYAQFDxhVeLLrx68yLozPWLr71z7regt8795s03fn327G9e
f/3Xr73+wpkzL7zx2gtvn3nh0hsvXnvnlVuXz5beeLvy1vna2+ebSi+3VFyB
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
5+L85SMkiM49vLvy9OEG6NGdtTs3F27uz44Nt0Kbu3j+V8mJIVDx8JAMJcid
Dvh8ck9P863jaxBHYUvu5+/56/d/rjcoJFJgk6hWstQanpBPEktoRr0YuXXC
6YS0HBYuKMjtN+//7aef/jIhLhiqK5+WIaalSVnZEnaumIMRs3EqCcOgERRa
VVIxHawwJyOGTszQKVhVxbq22rxWu6G7wdLXVAgLJRahQojn0DKppLTMtPC0
5BCHFcZG+YDion3jY/wiwN1QYHm+iZH+SVEBMCLH+wC3MOQEmLcVH4ooKcz7
7WMTsag3xyYAw7Bgr5BAj9PDE24+Pi7e3s6eXi5OLpcuuFwEEp1dLkBGhZVB
EF8DXeEfBf+F0JsV6wtuhSMjyGBJCFBoAoJSLj4HlsHFHWsAq+/Xw0MMIjzu
ByOGgMcQsT8cCXgCBTohmUgFTqhkOg3kYJDOZv07cRiOEariO8XlQxzlcHhs
KJIQYhksiLU0OpPCgThKJbCYFIVCoNWKZRIGj4Pnc7AiPgH+8tjcGDI2CUoE
m5ojYOHkfIqEgVFzCQUKpt0sbilVd1Vp+2t0gzW63ipZewm/pZDThZy3Zprp
KZzozB9q0s33IHeCuD5TdTBXvTdl2xkv3Rkt2R0vm25VX6mXjdaIJxrkS+36
tS7z6mXTfLtutE4G0fThVvej7d6Ttc77W31P98efHky8uj3/2cnSo+uT6xPN
HVWaIjXFJMPlqUilOmaxhl6kpsFYYWTVFYrabKquWq3dyqvJFzQWSxpLpFUW
vl6ApmSgklGuXDQaHR2fGRqeFOgrJGTzCGkQ1eBbNztUvTLVuDnftjbTOj1k
H7xcOtxdPjlS29dbUlDIMploNpu0tlrTWG/It/Kw6PCOtmIHjCo5Lc8sqq/J
N6g4OhWvqiofiCgrM5WV6JvqC6bGWq4M1h/sTlzfGT05nH32aPOzZ3tfvLzx
4tn+0eHC3rXZxtqSsCCf6HD/jJRIPpuglCNH281GkUJG39manp7stpplXDY+
0N/54rkP0lMjKOQksRitVdMUcjIUBK0aueurXivUnk72rpRy0pKjPvzgf378
4U9zM+MMWl5LncmiJQuZqQJWOoucnJOKykxGEbCJJFwqh4E9vasXh0XDYrNT
qYRcqZChU3AKDOJGm7W7uazBZtKIKRR0PCYtHJ8ZhU4Ny0hApccHIztIY4Oi
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
doFJUlKoyjOILMjp/Xz4BQYu24DB3fXR48Oleycbjx7vP3t568Xru7fu7Q2N
dWJyEzJSwxRSSr4FwaqyQlllU9TVqsvLRB3t1oJ8dmkx5FJ8RNhFH6/f8DhZ
Rj1Dq6YY9Sx4cXGBHHq62SAstCods3WBY/p6fXTx3E8jQp3VSsrocO1IX/nC
dMPG0uXF6dbxwZrejpLGGjNgSMQlBfs7u1z8DfhgZFgAVLDIsCACNpNGyhFy
SUoRQyagiJlYISNHSM3iEVPYuERyVlROUlhaXFBqbHBidAAwCA0OAAwN9AYA
Q/3dYYRcCmUwIcIPGMyMR+Ukh2DTwwBeQkYYPj0UYMQkBaAT/XMT/E5h9ANn
hHSaGuMDppYc4wskghtCNI0O9YgKQWA8PX/GLcgPaqBziJ8LOGAsyiMh3BM5
GnK6UxSfHMjgMkFIHeMwaGz6GZJnVDrAPLNLh6/953XWAc/oe5M5edx3islj
vVNsAQfE4rNh+exXBQa5PCaLfYohOQdEJKWjc+JTk0PSU1DxMUj1hm8IITeR
hE6h4pC7fOIy4nHpsEmMpmbFCompBj62XEuvy+e2lYiHG/QLvaWLgxXT3UWT
3YUrozXXFlr3FxuvLyF7O6/NVm9eKV8bLXF44lKPda7TONGsHqwW99n4oKFq
MaTQmRb1bKtqulk12awEiwTHnGjT99mlg/VqqJmro/bj7f7P7y6DG748Wbi7
f+Xx7YV7R7Mne1MHO2N7GyM7a4PbK0Nbq0Nri31ry4M7m+OHB0t3TjaPTzYP
ri/vbs31NNvb7SXd9bbqAoNFLsxXiZiY9Ah/V/jC0AnJLHIKh5paaOZ2tRcg
l/x05Pd2FPS0I2NjtdpWJGiu0TRUqnVibKGOVVMsH2wt664vqC6QF2rYBjFy
TaW9VGsv00EuhYBaXaKuLlX1tpVODDVsLA4cHSzeOd5+9OTmkxfHTz9/sHd8
zVZbHBbukZzgJ+TnFuYLALfaGlVNtbyxQVNpE9mrJPl5DIOeKJfl+vv9Ojba
WaehAoNqJUmnoRfmiyC4IrOJmsSFeXIY9Rp2Qqz3b95/z9/3Q6Wc0NZiHRwo
nxqtWZlrW5nrGO2v7GjKg3pYXaEtsorAQNl0dHZ6DKDk6+Xs4Xrez9slNBg8
MYGASeHRsUoxXcknA4MCSqaYnsUnp9FyY3OTw1NjA5OjAx0Mhga/2Z+J8vcE
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
x09OgMGI+PALF96/+OkvL3z6Mxw6Vq2glpVIC/L4EEqrKmX1dZrKCnmNXQ0r
NSoydEAQRFCQSc9RysjQIpUyKpeVg8mJ/OXP3gMHlEmwkD+Xl9p2drp3d3uX
l5tX59unRut62ouba42NdmNzjbm5ztpcm386OwTSIgFD8D5IlZ5u5859/Csg
MSzEMz05IjczloRJ5FCRWV941HTAkE1KQadFpsQFggnGRDkY9EMF+gT5ewX5
egb6uCFWeLqnNCbUJzrUy5FIM5MQKwQMkVCahkw1Q88Md2BISUMwJKUgJAJf
p9Ni+OOSAt4WORVFTgmkJAWAqFD90oI4WaH8nFB2RhA/EyXODZdho0Ry8Tvl
oNIBpkOAJ4grFIAAFsSzHA3ulKmzHZsAGhB3BuZfOwZx9nrHj/9bJQTQTsUE
3E7FgIQMlfD7ZTqXSWXTKeCAp42VBKUTHnGQ89zoDAIWn5qWFhWfEByMcvMP
cPL3vYgKco2O9IuPQcVGBEeg/IL8XAM8L/h7nI8N9YQ4apHT4JvWVCqb7itf
HLFvTjftLXXuryF3Uthe7Fifa14YKV0YKXFo8XstDZcMNqnAE69OVW+O29ZG
ypApLIZL57qt6yMlRwsNh3N1p/tR6/bn6tdHK5aGSzenaq/Otxyud9/ZH3t8
NPvszuLLu8vPH6x9/vzqZ692X7/a/+L1ja++OPr669tffXPn62/vfvenJ3/8
xxd/+qdXf/9Pr7/+47PnX929++zw+P72zf3ppSvNkBLVfGJmDMrr4u98Lp2L
CvBLi4niUvBqEdukFlaV6htrzJWl8tJ8YbGOXaiggZqKlS2l6t5qy1hLab6E
XKll2fWcKh27XEErEhPL5NR6k6CjVFVl4tUXSbvsBhjzpMQyPauxRA4Y2kuU
izNdTx5ef/X63vNX968e7FjK8lBRwb6+rm5OH53/+BcBPhejwj1lYoLVxAez
M+iY+VZBWYncVq4qLYK6J9SpgTuqRklTyklyCVEqwgN9Welh3h6/+/Uv3iPh
48tLZTNTrWurXWurnZubnWtrbTMzNeCDl1sKWmotA5dt3a2ljXZTdbm+rEBh
K9MX5Sv0ajAQCo2SnZYSERzo6ur8u3Pn3nd3/yQU5ZEYG4TJjGaSUkXMXCkH
rRYRAUMGIS0jKQQYjI8NjI0KCg2FSogoJMj31BA9g5D9J66Bvk6RKGSnSmy4
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
Bn9ghf9tBh0rv2dQCD7IlnLZEj6IKxafSShFXBXsVaaWag3KolJLYwsA2NY/
2N7T19LYXFlUYtQZpBIZm0JDp2fGeflcAnn7QiJ1j4gKADAxuDT4lLHoJCY1
VyqkaRQcs0FoK9N3d1bOTHasLPWtrfRBa9tc79/c6F1fu7yy3L602Hp1cxC5
x99Kz/J8x9xU89R4/fhw9ehg1diQHTG7y8WX2/K72gsGespgDTw73Fc1NGAf
H2uaW+jZ3JrY2Zvf2p1f3praOVi9eri2d7R+eHvj+O7O/UfXHj/de/782qun
66+eLL16NPf87tTTW+OPD0Ye7g882Ou/u9V1vN5xY7nx2nztzlw1ogX7tYWq
o/nqvdHCvdGC7WHrUpdmuVcHJC73mRZ7TO2lnDIlxsTLUFKS5NQUMSGJkhbG
xycR08Op2dE8YgoLm8DGJYqoGWJqtoSWI2OglWychkfUcckaNlHJwMnpuTJa
lllEKlOzqg38Fou4q0jeYRbWykk1YrxdkF0jym2Qo2sk2bWyrL4C5lyrcWe+
8XBv+MWjjS8/P/j8y+MXr0+evX7w/ItnBycHu4e7S+vLQyP97R3Nl7vaerva
mprs9tqykso8pUaIJ2XJlDz4EFvaqju7GkwWJWw/09Nj5XKuxaIqKNBZjIoq
m1Un5xrVfJBGxpLyEQBlAopaygRp5WwgUSGi8ZlYOjGDjE0hYJIphIzkxNCI
MG8gkYhNYVJzQECiQkRB+GXjGIS03LQwx5nVSTH+kaFeURE+sdEBcTEB8dHI
KTSxYb4QPgG9qEBk4qaYAPeEIO+UML/MKBQ6FkVLC2WmB3OzQt9m0ERMLKCm
WKnJIDMFwieSSwFALTn+nQAqcAkaUopDWnKqzqz/L0lrNLzTCv97DL4NoINB
nkTAkSGlD+l9EsmZJAqkb8L7q/RKo0VbUp7X1GoHBmEzOzreAx+irarAbFXJ
lTwqHZOWEQsYAncJSeHxiWEwwpocdDIOl47JTaQSMwUcgkxEgxhTlK9oaSwa
HqhbXe4/Y3BjvWd15TIAuDDfvLXWt4ncZ+HfBDyCFmZaZyYagbvB3vL+7lIY
AcwrIzWjw7VXxhpmpjtW14ev7c1du7G0eXVucWPixu3tw5Orx/eugQmCWTx9
cfji1eFnn924fzzz4Hjiwa3R+4fD968P3t3tu3u15952N5jgnc3LR6vNwODW
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
6sPy5K8qUh7WZTy+3THmcV3uk/q8p/X5MQ0FT5sKYrpLX/SVxf9RDO90tyDi
x4b4R/UBgHdTuH+KwZ/SB/S9H38fAe8bGiDhBoh4EILerfAk0n0fnJqBOEpl
zFFn58chai7z6auSeTAglVag0YnUm0Klhq/Vr+p3JOB3QJzVoQEBd3AMZLl9
23foIfYXdUUO3dEjDwgODiLOwL7F7d212jeNZhVEVotVYzKrDMYNKCT1W+tQ
SGo3xWqNSKUWolKqBKgQ0nVizc76lkm5a9ea3TsWzy4wCNqLOsJHzpNTNxSD
12eOiyPDcUh3GNhwG7heA7Ik37ez4NXN2eSTkEU1i1iTiORTzQT1TI9qyqma
9OtnHeoJnRC/vUrc21k8dYnA8m6CUgioYfvSmV94HhDdhKWvI6qbg41XB5oz
r9Qom2ZTO5sKUrNiHjz95d8++Nv/8Jt//+9+81c/y/jyV4PluSOVmJGqXGJl
Nqkqi1KVTa3OmazJodVhSHUFhNpCcn0hpbF4tCILmx8/WpIKPghxdLo1d2W0
bpuL9yqm/Ro6eHRgiwn/Nrdmen+LcWhePHdyX3p5N76Vlz7BmQtuGitRl+DY
t34SVAOGLy+syOKR19F3P7z87oebq5ujw5M9SKRmqw4qQYtNL1xlz8yM0elk
KAnx+G4yActiUiijHYO9Vd1txeCDSyyCQjK3sc5aE0yD/YGWF8lA4uzUwCSl
m0JoI460dbVVVZbnJCc+gnrw4Rc/j336aUbKU/DB3HRkw2cAEAQ+eNshk1hV
mIzQV5TWUJLZVHY7d6gqp6UK6Mtrry9qrc9vqStoqoHKNLemMrOqIquqPL0s
/0VJ7rPC9EeYpAeY+C/y478oSfiiNPHL2szHoPrsp7fLe581FcU2F8e1lMT2
3AKIrUgcrEoeqkkdrktHGbwvdKngBxj+CX1gf/9TBu+WNX2gu7dQ+t5PtiHg
QcDgIGkYBOjdiTROJVPHKbQJ6vT4NGNihjmBjPAuUMHm1qSLUgVHoeIBegAg
CEjc2l03WjacHj2wFjlyHp64QeBxEDXhJfjdybnv9MIPOj71H534UAZBgORe
0OrxGWwOvdkKPqhGAdzZlaMAarSrACDwuLUtRQXnUYERa7ckUAkCgMCdzWe0
eg0ml97g2LS59IB/YG83HNqNBrfDYIIu6Z5DHLQKPbtsq5pukFHBB02ScYig
FvEY+CDIIBzRLPWb10h723NmOVlAb+JPNhnXKKHdpWOHAPJe0Ljg0U3vmVhX
Qai/ZDcRxWVQ9vJAeR1WH9hXjRtMDg3XU1ea+fTLRz//j7/865/97b/72ef/
+8/SPv0vUO6NVGUTqjKJlemU6kxabfZ0Qx69uWCur6G3MK3qxZeNqU+w+YkD
BQmDmPihwhfkmgxGR75sstMlpUV22KFtFgC4b5iH+waUsT490hUD3L0KiN5A
ZvYLrzxQw3LDNm7ULTryy4+C6ovjnVcvvfATProIQT0IcTQQdOyFnA7X7qZe
ptmEUmJNqVyVSlc4HAZgSBzpI4x0M6eGwOkWmSOrK5Nq+eKmkiNfYwqXJwA6
OA9uCBiCG8JL8MdhXFNvZ215adbzmM8++vV/+uiX/xF8EErChNgv87NiwQox
6c9ABVnPSvJeVBQmVRelIPSVZDWV5jaX57RW5LdW57fVFLXWFrTXl7TWFzbV
FNRWIdNQy0vSSorSSgqTMRmPc1O/yor/LP3ZR5kxH+XGfloY/3lZ0gN02zR0
fT3Q11aW0F6R1FmZ2FeRCA54ByAQR2zKBt33wbsVux9g+D+sGbynHwP4p8cH
f4rBu+VOKIDohwzB9yUOD5KHAEAceQTQGyaTUaFZFO4AkEUpE0TqJJE2TZyc
IUzRR+cWxviiWQiBO0YZJEywOW9gFzInJEk43j+wAHpnl4Grm9A1smDh6N13
J9/+w9l3P5xD+/bb45vXh9c3kbOL/VsFT8/3j078BxFXYN/q9ZvQDhwg0QjW
ZlCgxOn0kvsCMFEhXa/bUs2uDFKozrSxaVGD9GaQ0mBBArDDpUKmpLrkyBLF
LY5pc967yw2Yl/fN3ICB7dOzvFrm/ubcwdbCgW5+izPEIVbwKDWQ+iCLujen
xMw28UyHSTy2r58/tPIuvauH9uW9XSYUhi8P1l9F5a8PlS8jINXLw82LA03U
t7G7sSzjzU4Nd9cVpCR99cuv/utfffYffvbxX/8MX52Nr8oYqUgdrUghVqVN
1GVON+XS2wpJdZi8r371xV/97Pnf/m+VMR93Zj4dyHsxXJzAH2lSTHY5xbRj
A/fUsnKwM7+/w4paeQc2QcC04ttdCpq5p07+pRehDwwRMDyyccKWpUO3EKzw
MCA/j+pfvXTDj/31d5fXr47Rbhm3z6zfVqytL4MAQ2AQAJyfnxSLOSqFSCrh
yMUsmXhWIqSLeLSVJQpqf3AA9AGJ0lUGvMVdIEEcHRttHRlq7umoqa3Oz0x/
/vTxx19/+YuYRx8lxz/MSntWnJeA1oMgNIgCgzVF6Y0lOc2luS2lGACwrbKw
o7qovbYEAGyrLWmpK6qrygcAy4oyCvOTMbmJeVkv0hMfpMZ+kvz0V4lf/zz1
0S+zn32MMJjysCHneVPe7eZOxQnt5YldVSndNWm9takD1Sm46iR8bcpIfRqh
MYPUnEVuyR5rhTIw6073F87fx/B/kcH37Pw0g3es/VHdBxD5NCJif4NjeAAQ
NDRGBA2TEQ2OIpdBGB4dGyHdqwdnmIQlDk0iY+u215C5YU691akz27WegNHt
N4DgIBCygvehGN68ibx6d/j2m9M33x6/fnt8eRM+Pd87PPW9fBV9+ebw5vXR
yzdHVy8jp5dBIDFy6PH6jeCJbs+Ow7UFPJrRXGpSKjZWoPCEVqbgyRU8qXxZ
Jl+GFoIoVIJQD66rBSD55qpqW7a5KzfZkDwMDLqdCqd1zbLL3VXN6WXTxo2Z
XRlNuTy8PNE4PVjCwJVIZjoMIpJRSFqltcwPl60zOvz6uTOXyLc1q+ENGVfJ
fg0rYuCcu8TfH21+c6hCumL2168PZDeHG29PNW/P9W/Pt95ebr+7NLy9sh64
1Ochk2d3nT7cVpb2OP3rXyZ99p+f/fyvkQn8ZSnYkoTB4oThsiRSdSq1IWuy
Jb828UHGp3+b8Mt/j/n65/XJD3vyX0y2F61NdFuEEx4F49DAvXCKjswcyMZg
fJc+yXlAGnGtwj0kZOFC+AQrBPQOTHM3e2vHdu6/Mbh26Fu/iGjf3rhOz3wn
56GL6+jNm9NXb8+Oz4JOtwF8kMdnsTkzi4vTbDZ9bm6CRhulUofpU6OM6WE2
kyjkTgJrEEH5nHHwRAiffDZFsDTOWyDP0vpHsLUdjZjGqoyG6syy4tQiTEpm
6rO4mM8ff/UrYDAt6XFBbiLUicX5KSiJYIJl+QmVRclVxSkNZbnNZZiWcgTA
VhTAutKO+rKW2uKm6sLbJ25nFRemAYA5WS+y058nxX6eEPPr2Id///yrv4t/
+HNww4LEB2VpXzfkxTVikF0N20vB/pJ7a9P76jOxDRm4upThmqTRuhRiQxq5
KYPSkjXemj3enjPWmgUkokK2iMEPDI7ggLvRMQKJSh6jUSiT4519XfAWWh6i
+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
zTqWRtojFbQZNQyHmW9Q0xWybr9XqdXQlQqKyykJD5mCgwZg2B/UDY1Yg/hx
yISScH5pYHWDuKlsbjk0uxKeWgxBaMD+VnZnlnem0Tip+8gOarLug/BVnwwL
kkIbQhBd3pogGVRouFRmS11DUVFJGjE4WJRK2N/V96CcnCR6b6tWJSSHC8+e
feP8+bdqq/OFfApIzDmewgIYouJurs2vwq/nxlcUJDdWZLaWpnWUp3dXZVFq
cig1WcAQACKLkgySVthVldxDLPiS1luXTq3NhAAgTBB44j0NhQSDVVnR1dm3
KnNuVeXGnGTCF7tQPtfvXkSvtbf7T+iLGGyhdEF4Az4E/xBLLBCq5Aq9IjBg
Gwo7xkeJ1aWnxvvmZ3zrK0N72xPbG+Nrq8SyRxNT/SNTwbG5ocnlqZm12ZWd
xcCQJzDoX1idDwyFKutrT50//+pbbzX3dAfHx7buHi5sry7vbRy8fwTt3t9Z
3Fh0eOwANjkjqbGtvr2nta65hsLo1llUBpvG1mfwBh3hif6ZpbHlzdn1XaIb
HMedfO4Jh568aQrlCc4HNMh7F8luGfKuNnJ5JmTO8Qn/yKiHWBpm2E1uAR0Y
hBUODjkBJhowR1/AjLJlYMgRDDudbq1ay9cZRG6PXqXmGoxio15ktyo0Kq5S
zuIy21mMVtqxemnNnd3EDXvtrRXU7no2o1kloRlVRL1mVNCV3E4xvVHOatHw
O/tUHIeMYZMw3Eo2AAzbFENW5YBRPOLQhMxSj5rv1wn6VDxua3lTAWqZQim7
p6e5rqmypKuxitpGPOuTlxqXFHW5NCe5sTIPGEo43TIeBZ4ISXkdLGqNWkE1
qBlPZ3cx8uwWYZ9b7rCLB0KGwbDZ61f7YIKjtuFRG8InGkihEAnj8JgdAG7s
TsIEYYXzayMQsig0vzEOQ4TfnQwRkiTCDSHy9higRxaD5MUQ5UBw1InP2dyd
WduaJG8WlcqZAlEvhdrUTWmgUJp7epra2mqamiooXY1IoXNzYwMDbrKztLm5
EgUjm9keHnT1dtVXl2eXFKTUVeU1VueCQVghfLAyM7om+1Z9XhyyKBytIT+2
LvdWTXYU2S9KYthentBBLHx2fLfMZ3012B6jmlifH1+TE1OdFwvV5MfXFiSc
9Ek+h+FJ/jwB8Fn/Ij0OBIGj5p5OiGTqRX1RRj1xSTggVyZWmvQWj6tvoG9q
JjS/EFxfG9ncGNlaHwF9d2/PPX60urszsbU9ubF9PLHS1iwcbXF3eWlneXx+
ZPf25tr2qlQlSc5Mv3Dtyo3Y2OTMTIXRMDwzPbmygGIQcXTjztby/ur64drM
8kz/UKCksvhK5OXSqmIAWFiWDxLrW6vpXIrKILG69Q6vyT/ogicilN5/vIuc
gwNN9rqAOKRQXG+J7pfFME4McuCevKkbGj5ejCl8vBgTSd/omBfejXYwZCfR
A4OoCkEorifADR81OukPhGx2p5qUxabQ6YV2h8piknrcOrWSo1XzRLweiYjK
4nSy+d1cfg+L08FgtjJZLaLjuf7cVqnPJffZpGBQ0FtHbyvhdFaIafUuJbNP
zfZqeH49P6AXDphEQG/IJpv06INmMQAM2+VAUsVs5rVVKBitZqVAzKLSO5qZ
Xa08agezq7mttgy2WJAeB0MkMRQyO3i0VlZPPau3gcNs4nGb+ZxmuazHZORq
NQzI7VHoDGyXRwHiyM7P8LgduJE9opMzHmRRmODMvB+5dGjMERy2gsG51WGU
cosbY9Mrw5NLQ7Nro7DCZ4vBk8H6k3SKyyMAxLURVGIP3oOK0uiQ8UTdcjUL
V7apuZC/H+Ge09ZRXVGVW1qaXVdXAtYqKvLyspOy0uMyMhJKSnIkEpZMxoEn
RkURa8QkJ17nMju622vys+Mjr56KjjiVmXw9PfHajctvkPUgiSEArM9DcXer
NicaDJIiSCyNg9rK4olVCMuSnt7AVkEMI54wWFsA+uLrChPri5JO4uVzGD6b
P58F8EX6mro7oC9i8Isy6tMCUMDlK6Qaq8kdDIzMTs2tEl8y8ST1g7X7D1fu
31u6d3fh0cOVJ++vE+37xBwRtx9u7z/a2b6/vX57c/Vwfe/e9ub+6uTchMao
Lq2uvHozMiI6OiMvz+bzuoMD9n7v0MzYzv1DADs0O7ywNT8yPTK9MCXXyIor
inKLchJS489dPnPx2vmMvJTa5kqehAU3dPktA8MeMLi2M3d4dx0X2On5waW1
caLr+/EOzgTYH6hEY355BCLpA6H9g3ZYG7lIKLEs70gfcCMLQBI9bNHGHiKF
jnlHxryh4xm5B4Zs5LTAaLi9Wo2eZ7FKnS6Vy612OJUGHV+r5mhUbK1OIFGw
JCqOXM3B5V0kporEFIWMrlOzUDjbjIQJSrkt3J4qVmepiFqj4rZ4NCzIq+X6
9dx+ozBoFoYskpBFNAhmdRzsGXbI0O438oFn0CK1ayVWjVwnFUjYND6tW8ig
SNi9EOJoZUE61FFfxupphGgdtdTOagG/ncVuplFrBcJOk1loMPLVGmIypVDY
6vZrfEHD5Jx/dikYHLP7Q0bgtrY5AvompvtA4txi/+JKCK+Oz3iBHgAkR+pR
BpJ9MkvEoxDTLzJIhhNc/UiRJJJZBeXkwvro1NyAxSGnsVq7qQ0qDS805ETm
l8iYhYXpxGQyNy/GxFyNibp88/r5q1fPvnvqtTfffLm0NNdqVSPnJ8VH5mYl
3oq60NFWJeZTaitz426ej4kkqsKkW+fAYGXGTbJflOyTIbtlmgpjSREkFsec
6LM6kQCwtSy5qTiBZBDoESpOhp6t8p7F8IvqvtZeQi2UHgh5r6m7q7Grs7Gr
neTxRT31u97ntl3Ew4ZinlAuVphUTr9zeHZ0dWd1/z6xPNkHHx988unRx987
fPLh1oNHq4Dx4eO14z3E5IQPPz668+HhwaP93Ye7O/e2Dx5sr24vTs1PIGE2
tjdfvxV1My6utLra3ueDD4YmxkMTo6t7mzNrc2aPRW3VwAfnVhZMdnNmfvbr
77zx2jtvwBBjkmMaWuvKakur6itYQuZAOLBxsLp9sLm0MRee8MPvyAFBkjVc
fnG4gSRODJwVIBT0hcfc5AMUJ+uBkl0x5LAgUigckFimcMjp9emRSMPDzpFR
/AhrcAdCFsCLTxgccbu8WqtdaXMqHE6CPvyiySy2WOUKJROeiIZExpAr2Tiv
1BqOUsXSalhmA99pE1sNXIOSrhC0i9lNCm6zUdbjMXCDdsmARehWMaySHmwH
reJRlwIAgkoAiC3QA5tOBQ1sjrmVPr3Aqha6zEq3SWnRSi1qCbYqIYNFaRbQ
O1pqi6sKM5prihidDcyeJmwZPQ2U7hqxpEcq6xWKulRqJjA028TOPiUADAya
+ofMwBAAzq4OruyML22Njk65pud8QG95bQhCPbi5N7V3e37rcH51ZwoYriDt
ELerza/vzS1tTq7uzKztzqK9sT+/ebCwdbi4fbS0c3sZL23sTO8eLhzcWT68
s7x3uLC5M00uer6wHB6d8OBShm8JaaGjs7qpubSlpUImY9lsGpGIAROMjb12
/eqZy5dPnT79nYiIs5GR599777VbNy9xWB0mvaynqy721qW4mMvIol1tVfVP
MXyvJDc2O+5iYeKVsrRIVHP1BbEo7poK44+fnoj9o4puNRZGkyKdEQG1rTS5
pTQJDNblx4DBhuIkQiUpDaXJXzTUfoLef+1CobZSCLX09ELN3ZSmrh4IGALG
Ez2bTmubm1u6uih0BpVNLAzaezwnG0vIUmhlFrd5cKx/bm1yc395//7Wgw8O
PvjevZ/+6ns/++V3f/qLT37y849+9NMPfvCT97//48fE6pw/fkzO0EssCfHx
0b0PDm8/3jt6tI1jcXh/c/twFeAweYysvNyMnNyuXrrL0+8PDevM9uDw2NLG
hmcgYLCZTA7L1MLc+MLs6vZmYVX51195+d2L5xLSUuIzUqMT4mJSkxraWlwD
/v7wIK4ScFWuhDs8OTA5PzQ07hudHiCP/uLGxMr2NE4VXLoRn1B9QNPLwanF
0PQ8UQZOTfRPTw5gOz7qHR5yhQYs/X5jsN8MedyawZB5dXlkeWkQDa9P2x+0
QaiCEZm8frPHZzxe/cTgdOuw9fhMKBLNVoXeKDaZZFabIuAz+Pq0bofSYZXY
LWJsvQ5FwKXwO+UaSbeI1Shg1PN7qwzS7oBN5DPxrTIKoLNJiS1YA3QadrNd
1gv0sCdg4GHrkFPltDqzqMupYdsNPIuRWHPT41LbjWKnTe62KuViOnmnLqWt
pqOlsqu5sru9jt7VRKc0MenIoq3AUKNlm/FRTjkAdHlU/gHD4LBtdKqPvBUN
GpvzzRy7HjS/MriwOrS0Pry8MbKyObq6NbZ9MLO1P43CcG17fH1nYn1/ihhn
P1oAdxuHT7V+e57Uxp2F9YPZjYNp/Nb+0fzh0cLe7jS+0ukJz9R431DQ7LLL
9Bq2TNyLShklc11NfmtzWVlJeklRGq23yWJRGI1ShNIrV06/d+rb58585/q1
01E3zl29+Pa1S28X56cIOF0aBae5vjg26kJaUmRHSwXaGSk3EUeL02/kJ10p
z4pCNVeRfbOlPKW3PqupOK65JJ7YFsecANhQcANqKYmFiP2FsQ35SLDRtXnE
g4d1hXFQfVFiQ3HCF93H8mz3yzMYUtt6aa0UQi091OZuYNh7giGpYwyJdPqU
xI7Orl4qnU2sossWcPgSgUwt1RhV/WHvxFx4Y2/p7uPdJ9+7890fP/rR33/w
s19/9+9/88Of//oHP/vV9//ul9/78d9/8sOffUQujfTpT56QM9KD08cf3waw
xLQwj7ePb65eW1ibGBofsDjNHZTOnILCnIJircE6PjU/PDY9ObuwsrEZHht1
eT1gsK+/3xHw+8JD+Fuux8Wevx7xrTffeOvc2aikxE4GHQkW//9vnj2Tkptj
cDrcQZ/aoLR7jMubs8ub0w6voT/sWt2enVocwvUZDIK+yYUgapnJxf6ppYHZ
xcETBqGJMd9I2D0YtIK+0WHXQMAU8Osmxt1Li/Bnt9+nJhk8BtDqC5AMmsjl
h1x9erSxB22rXWWyyEEiKsRQvznk0wfcaqDXZ5OhDHRbRH1WsdsskHCaWT2V
bEqVkFYDBl16tkna4zfywnapS0lH5gRrfWqmgl5vFHTAFoEhtgMmATAkvVJA
qZLx2ww6psclh2xmERgHhkYdH6clj9XBYbQf36yLbTub1sVhdHLZbSJhp1xB
0xt4NrvU3afq82k8fm1/yDQ0YgeAY9Oe4QnXyKR7fN4PBhfXwhDoA3okbuAO
Vvgcg9izczi7fXuOZHANAB4tEgCCvjsLYHD33uI28czF9O7B9O7+1PpaeG6y
byRk6nerXWaxXsmUC7sFrDZGT11bU1ldVR6xikRuQlZGTELc1ZiYy7m5iRRK
s14rpFMa05NvvPfOty6efS0h5nJq4nVyxtGyojRg6LQqURK+9drXKkszOYy2
pJiLsRFvl2TeyIw7D7VVpoGg4vQrnbXpLaUJwPApbk8xvAn9kcGiW88wGHUM
4PHkwM8w+NxdZM/1gn6GIcFgWy8dOsaQsELSDRs6OyCEUlIkhhAA7GUwmVwe
R0DMLKo2aJxeBzxrfXf58P72h58+BGg//833f/lPP/rNv/zkd//+81///qe/
+t3f/fIffwwYSRJ/8ovv4j0nGMIK3//kzsMPD4m7rJ/s7t1dPXxAzIy9vDkf
HO5n8lhgMC4pFQwurW6tbuzOLa3OLi55An6RTNpF62nq6BAoFcCwl8t59d13
/vrbL7/+3unqlmbswQXkqy9/C0jSBXylyYg/li0Rosy0usx2j9kdsI/PDgPG
+dXJibnBmaWR6aXw8crX/uEpYu6gsdkAyhDykXkEUYjsGkXgDIasE5OeQL9h
cMg6B2Cn+/z92j4voqY+MGAlGXwWQFKgktzvcCGgquxOjbtPZzVLHFaZxy4H
hgMeLTF849NCDgMXlSAAhA9qhO0OLRPSCtoHbbKAUehUMkfdaruc7lAwtNx2
s5jiUrH8BoFVSsUen54PocHuKGd0V+rUDK9bAbkdcqdNin8OtquSsSC1nKOS
sRUStkzEFPNpQm6PRERRyKlaHcdqkwBA4i8KGqHgkCU86iAZxBYVHy5TRCI9
dr0T0IAeWCNw+wIGET43jwiBwY1j+jbvLkIHD1d27y5sH0xt7oyvbQzPz/lH
B82BPqXTJDIomWJOG6O7uqOppLY8syALAedaVlo0EIuMeO/alXdvRp5FzoRi
oi8Kud06BYfeXZ9461LExbeyU6MKs+Pjoy7kpEVnJt9obyw1a4WI3JfOfOfC
6Vfa64saK9LTY84Cw6by1PykS6UZ17vrspvLklvLEgkd98aQ0JHcPUvlCYM1
uTdPADxh8MXbOJ8bj/gMQ1o7ld5OZXyG4R9D6Wc++F8AhA92Unp6aFQai1jf
UKyQmOzGwdHg3PLM3ceHH3zvAeACbr/6/U8gMPhPf/jZP/3bL/7xX//+t/9C
wPgP//STX/z2R7BFCIZILo30yQ8fffjpfVghORUh8uHtR1vgcff2Znh8kCvi
FJaWxCUly1Ta8Njk8PiUtz/kD4YUGm1pZcXNuJi3z5y5lZKsd9hpfB4ATC/I
VxgN+Lteeeftl776lcyiQolWU1Zfl11S3M1itlF7G1tbJEqpzqy3ua3h8aH+
Ib836FpYmwkMuQfHvAio43PB4wXoiXsdRyY8I8e9oCc9Myj6hsKO0KBtKGwD
g2PjbjA4GDb7AprgoHEgaEIEPTHBEweE0MZOcgQfPwJDgkq/ye81DviNg34D
BADhhi6z0IaazsA3KKiIoyYVvc/I7beLvWa+VUXzmYQ2GQ2sjbhUILFPwwF9
Xh3PKOzG1q1me7Rc7AGVeI+U1cSm1VpNfL9H5etTDvj1vj41GOxzqvRq/vGk
f1LIpJPqVEKQKBXSNCq2XsexwIj7VPgDgyFzKGyFAODIuIukb2LWNzUfQFz/
cxlEuQcGt24vkSLpg7buLe3dX9o6ml3bHl1ZG1pc6J8cc4b82j67xOdQ2PR8
paiHS2voaSmvr8wuyonLSIrISIpMSYhIjo9IjL8WH3sl+uZ5wHjp3BuAKz8z
VsDqAGs8RhsAjL1xDirJS4JiIs8mxVzm0FpUEkZNWVb8jbPVRYmNZSmVeTEV
ubcaSxJr8mNqC2JpzQUdlSntFckdFcTARFtZ/IswkgzW5RIAPssgPuTF+6hf
vK/sGQxpHTRGB415TCL9OJdST/pnjkWWgR2tvZ1P1dWGfEhOQCpVyRwe++Tc
+Nb+xpPvPvz+330Es/vNP//sN//yUzD463/+8W//9e/++T9+9ft//4ff/eGX
IBEvkZ4IEkk3fG6tauLRv0+OEEc39hZWthbwyYijTW2tMQmJbV3dSq1OLFfA
iEUyuVAqS8vK/OZ3XgGDWcVFxTXVSJsssQi6Eh310l/95enLl7gyKeIoCC2t
qy1vqD8Xce2NM+8h1sJYO3ooXKEAF5PjK4moi9qpNaldftvIVHB6cXhqITwy
HSCWGhz3hoac4WE37G8UhI71DY+4jn3Q3OdR9w8Yp2Y845MuABgaMk1MuYaG
LcT44GcplAQQlSCEBnaSFnkSTQP9lvCgc3jQHg7ZEEr9LpXDJELuUkl7zBqW
w8hHIvXaxAGnzO+Qeqwiv1XsN4usCrpNyQjaZXYV063jelHumYRSRiP2oz3m
0w3YpFpBJ6TktWkVVHDX79Nhi8IqGDCAQatJbNAITDriWU6bSY6tUSvSKLhK
KdNkEFpRaaIgDehDg5bwMLHkDeGAE25CU30AcHqhnxiFXx2EltZGl9fHVjbG
Vzcn1renNndntvZmoe39OWw3dqbXtibJ/agHwSBZg2/fIQT0SG3fX14/mF7e
HptbHpiZ801NukeGLP0eFWK5SclQi7qFjGZmT01ve3l7Q0FtaUZpfiJMjZwu
O+r6mWuX3om8ejoh5kpW2q3rl96Grp5/A6yxqc0Bt17I7iQf6YUzpideB4bX
LrxZXZop5VPYlIbYiHd7Ggp6GvOzEy4WpUZQGvLhg1W50V3VaYQqU8nn6EkY
oT8CWBAFEzxhkHTAZxl8kb7n9nxmiPROOrOTzjomkfEUw+OeUiS3k/teOug9
nQwKqfaejh46hcFlCmUCnVkLH1nZXLrz6OAHP/3457/+EVzvX/7Xr//5f/3D
P/3h72GCv/+PXxI/HmOIl07cEBj+9B8+JStEhFIykZIYopA8uLeBiLiwNjW7
PAmTRcmZnZ9XUVPNEQgBYEpGZnl1TTeVFh0X+9JXvvTX3/zmS1/768qmRqTN
3LJS0PfOhfP4u2R6HUrCxKzMuvY20PcXf/M1bBMzs69EROUXVdY2tCalZr11
6sy5S5czc3MqaitpbKpMLUFAHRzzQ6gT+4mp1dz+46EH8q5sOCAZREGfwymH
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
yxXw+SLfwJBgkVTsK/bhCbhCiV94TGhWfgbCPCrHyvpSYNjUUdW5t7Fvf/vQ
RM/IJMUgOQ1t9tgwdQrMwujRxTHqKIqlcbLW/sLVE2RU4vqdMzfvrdy6v4oU
uiGIrj98i0qhGhO8DxN866PHzz9+9vbHzwAj4uijd+7ee3rt7qO1GzdPr50/
cnx+aHywqae5pKUys7ogvipHSQ1SJASnRori5PxICStU7CXmMPxYLmymPXIm
nA6gAUMHGzNbCyNrC0MrU33I2swASOI+IHV1NHdzMfdws/L2tONzHIFhgMBF
KmIECl0D0eA7SLn2gTwHuY9DiJ9jmNA5xIceKqDWK0UFuMEQkU7JMRMbDTG/
TJ1bWp5VVJKeX6idhJZRSI0PAj2yPpeUfkVVJaq6svK60pqWivbexr6R7snZ
UQS52w+vvf3xI2pt4G9+BIi+/utXf/633/zlP7/+6398/df//N2f//3Xf/q3
X4HEP/zLV7//6y++/svPCWJk/F1LGdnjl2y1rW0T7jZqI4N/X0X45Yc//Nn7
P/jpe5/+5J1PPn/74x+/9dGPnr/36eN3P3n0zscP3/7owVsf3n/+wb1n79+F
FVI92JrOmVv3Ll67fR4MXlw/AwzJGNbxk4fnTkxNzY2NTQ0OT/QNj+4pLc9N
TA6XKQTSQK5E7O7Hpfl5W/vz7bISRJFBrgEci/xk/9L0wCCuDb76ohQ8R7r9
G5t3wN2QMOMS00LCY5xcPUwtbO0cXGh0V1t7UGlvbEatxDeztLO2czSxsNYz
NNmyQxcwIoVKZSEoBn1FATb2jq7uHoimppZWQJIvEELhSmV0cpIkVO7C8rCk
08ztbXeZGG7V18XHxcmTaeNMt3K03757p87rOjpv6mzeudWSZm1lb+fl64Mq
kiMUW9jav7lTT2fTtte26m7ZafDatp2mVrayyOiapqaW3p7ymqqMvJzYpNSw
KKVYImPzBExPnjODRaO7WdnS8dsyPFj4fvATixiebnaOto4MB0+Ou1jiF6yQ
RMaExiVGJ6fFZ+YkF5XmVFQVN7ZUNrdVt3fX9u5rHtjfOTKxZ2Kqf/IwNbpB
zqiaXzpw7OQkmd62vDp7YX354vWTl26coraquLNCOkIhMPViMOKbfhjSF4ov
VSJk0bc+eKS9wh/vPl2/fvvchcsLZ04foqxwb01PY35tUXxVbrQqPbQoWZaf
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
lBoK/f/8AxNy
         "], "Byte", ColorSpace -> "RGB", ImageResolution -> {72., 72.}, 
         Interleaving -> True], $CellContext`d$$], 
      "Specifications" :> {{$CellContext`d$$, 0, 180}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{434.375, {160.00557327270508`, 167.17049026489258`}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.947541762097734*^9, 3.9483708037362013`*^9},
 CellLabel->
  "Out[128]=",ExpressionUUID->"eb277e18-02c2-4fd5-9c95-6fbc944802c2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics", "[", 
  RowBox[{"Line", "[", 
   RowBox[{"AnglePath", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"n", " ", "Degree"}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "0", ",", "180"}], "}"}]}], "]"}], "]"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.9475414187501717`*^9, 3.9475414363154097`*^9}, {
  3.947541468786552*^9, 3.947541536518367*^9}, {3.947541831587227*^9, 
  3.947541883163651*^9}},
 CellLabel->
  "In[129]:=",ExpressionUUID->"71514968-1f0f-4769-84cb-aeaedc428d13"],

Cell[BoxData[
 GraphicsBox[LineBox[CompressedData["
1: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
   "]]]], "Output",
 CellChangeTimes->{{3.947541475006818*^9, 3.947541500725346*^9}, 
   3.947541536808731*^9, 3.94754188345179*^9, 3.9483708037669563`*^9},
 CellLabel->
  "Out[129]=",ExpressionUUID->"b3b55d75-35d3-4fd7-9de3-6fbf403bd11c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Graphics", "[", 
    RowBox[{"Line", "[", 
     RowBox[{"AnglePath", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Degree", " ", "n"}], ",", " ", "100"}], "]"}], "]"}], "]"}], 
    "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "1", ",", "100"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.947541945441807*^9, 3.947542002693205*^9}},
 CellLabel->
  "In[130]:=",ExpressionUUID->"3914ffae-58d3-461a-8e58-e28de7c3139b"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`n$$ = 1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`n$$], 1, 100, ControlType -> Manipulator}}, 
    Typeset`size$$ = {450., {262.57839203977926`, 269.74330903196676`}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = True, 
    Typeset`keyframeActionsQ$$ = False, Typeset`keyframeList$$ = {}}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`n$$ = 1}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$, Typeset`keyframeActionsQ$$, 
        Typeset`keyframeList$$}, "Body" :> Graphics[
        Line[
         AnglePath[
          Table[Degree $CellContext`n$$, 100]]]], 
      "Specifications" :> {{$CellContext`n$$, 1, 100}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{509.375, {321.1664238085781, 328.3313408007656}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.9475420031691236`*^9, 3.94837080377201*^9},
 CellLabel->
  "Out[130]=",ExpressionUUID->"ae60dab0-6599-48d8-8c1a-f2ecf329c06e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics", "[", 
  RowBox[{"Line", "[", 
   RowBox[{"AnglePath", "[", 
    RowBox[{"30", " ", "Degree", " ", 
     RowBox[{"IntegerDigits", "[", 
      RowBox[{"2", "^", "10000"}], "]"}]}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.94754208339149*^9, 3.947542212754551*^9}, {
   3.947542273799326*^9, 3.947542280959792*^9}, {3.947542380100806*^9, 
   3.947542381859837*^9}, 3.947542449438311*^9},
 CellLabel->
  "In[131]:=",ExpressionUUID->"8597b4a8-7394-4d23-8f5f-6254d2a62ab3"],

Cell[BoxData[
 GraphicsBox[LineBox[CompressedData["
1:eJxcnXVclsnXxu0WCwQRFSQFpbuew1OgGGt3rN2t69rd3WJgd3eg3Lqo2Iqt
2N3d9c6Za3x/t+w/fr57nTlz5kw+d+HSslutNjmyZcuWVjBbNv4363/rqjZ4
3H/nM8Mv+d8tQz2Pir1jrn8w1J23+eyHzpdTv6r/vwx2qT8lfzKsUoxyOWld
Fn2F4neKa0m/P1IfoYChvuTcmmOJknsXvchDzSTn1x4rvZ7S3ZTeQnJ2ze4P
zq/lUewv/y2qFZb/5qAA+W8BpeegufkLNj3Tt5i2R8XjK/+/jdZP8itDJcnF
tUM/0d4gpcsktSix30/pm+X/uJ0aqvTFyt5HcYU/OI9mVP5ryHgLazNV/c5K
v/UTuuoO7f3RRc1sPQ4a/CV+Tn2pdOTxV+oCd5lHQzL8pP7MUr7yH/w6Vf7T
3We/UXF4Ivo7r/Iv/yG3/Q6qfIoq/0vV10z1x2nFfVT8Dir+h8WRX3uV7y5K
t1H56K14jMx/CW2vGi8TFE9S/u/Lf4poX4ujP99LLqjy9cvwVOnaH5xXG6ry
m66433Hkb7Mqf/eknnP+v/11Zb/8FPT5Sp+jxm244n7IV2r3n8j3ZcnfUu2+
Sz+p9lXBBTDwU+9K/V3qhcvnJxxye5v6xh3j9oTio6q87RGu91yqXYTRNzM9
l3alZQ2/AjMep5ZU3HnLKvtRlb+n2iveeYXL59Ec/mAbLVrWX1BbL7mAVlly
Xq3/4f3nXMNyKi6iLVc8RXHChAHL4rt+TI2X/vJp98Yz/0ztL7mQdrw1x/M6
db+Ti33X1sW1Jm3ArxQPXff8ieXvpalt5Li207rLPN9JDZJcQnOcCP9ge+2J
4sbKvquyz+Ufdq5QrVLaX1fgb6Os30lLb3nIeHnbDcPsJSsPXyznrBX9CX2A
4tftEM95Y7UJ6wxltfeTEL+H9O+sNTiK9s5S+t0jzHk1V6UblT5f6R+VniLZ
SVu5jfOfTbuouKqqD+ygbW0LribjtdU2q/b4SC6uNVPtXSntS2oOKj53pY9V
eqzkotq7Eyjvr/TuSo9U/lsq/yhfUtul9KKSHbRFV7n/c2g9/Tifdtrgqxgv
BZQ+VukFVH4HKC6m+ONWbu/71OoqvzHbMP4WqPY/2Qr+V3Fv5X+hyt/DiWgf
2FG7MAHcSfHTw8hvJ2XvrfJd8w8uothRy6H4TDjae0CWL6jlUPloKOPJpZVT
+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
2qzF+jJb6Z8q/X+Ux3V/
   "]]]], "Output",
 CellChangeTimes->{{3.947542434762141*^9, 3.947542456087907*^9}, 
   3.948370803788288*^9},
 CellLabel->
  "Out[131]=",ExpressionUUID->"65d4b213-ba90-4b1d-b4fe-2c964b55a446"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Some Research and a Graph", "Subtitle",
 CellChangeTimes->{{3.9476174956776867`*^9, 
  3.9476175004663477`*^9}},ExpressionUUID->"8a93c6d5-d638-4276-a691-\
8cb456fd4679"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TemplateBox[<|
   "query" -> "New York", "boxes" -> TemplateBox[{"\"New York City\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"City\"", ",", 
           RowBox[{"{", 
             
             RowBox[{"\"NewYork\"", ",", "\"NewYork\"", ",", 
               "\"UnitedStates\""}], "}"}]}], "]"}], 
       "\"Entity[\\\"City\\\", {\\\"NewYork\\\", \\\"NewYork\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""}, "Entity"], 
    "allassumptions" -> {{
      "type" -> "Clash", "word" -> "New York", "template" -> 
       "Assuming \"New York\" is a city${separator}Use as ${desc} or ${desc} \
or ${desc} or ${desc} or ${desc} instead", "count" -> "6", "pulldown" -> 
       "false", "default" -> "{\"C\", \"New York\"} -> {\"City\", \"dflt\"}", 
       "Values" -> {{
         "name" -> "City", "desc" -> "a city", "input" -> 
          "{\"C\", \"New York\"} -> {\"City\"}"}, {
         "name" -> "USState", "desc" -> "a US state", "input" -> 
          "{\"C\", \"New York\"} -> {\"USState\"}"}, {
         "name" -> "NFLTeam", "desc" -> "an NFL team", "input" -> 
          "{\"C\", \"New York\"} -> {\"NFLTeam\"}"}, {
         "name" -> "NBATeam", "desc" -> "an NBA team", "input" -> 
          "{\"C\", \"New York\"} -> {\"NBATeam\"}"}, {
         "name" -> "MLBTeam", "desc" -> "an MLB team", "input" -> 
          "{\"C\", \"New York\"} -> {\"MLBTeam\"}"}, {
         "name" -> "Periodical", "desc" -> "a periodical", "input" -> 
          "{\"C\", \"New York\"} -> {\"Periodical\"}"}}}}, 
    "assumptions" -> {}, "open" -> {1, 2}, 
    "querystate" -> {
     "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
      0.693757`6.292752371675046, "Messages" -> {}}, "contextinfo" -> 
    Automatic, "version" -> 5|>,
   "LinguisticAssistantTemplate"], "[", "\"\<Image\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.947584214002927*^9, 3.947584226441031*^9}, {
  3.947584510220487*^9, 3.94758455102136*^9}, {3.947584605926778*^9, 
  3.947584632547943*^9}, {3.947584674307663*^9, 3.947584731728438*^9}},
 CellLabel->
  "In[132]:=",ExpressionUUID->"4207d543-9cec-4e6a-9865-eb49a1a96193"],

Cell[BoxData[
 RowBox[{"Missing", "[", 
  RowBox[{"\<\"UnknownProperty\"\>", ",", 
   RowBox[{"{", 
    RowBox[{"\<\"City\"\>", ",", "\<\"Image\"\>"}], "}"}]}], "]"}]], "Output",\

 CellChangeTimes->{{3.947584254246977*^9, 3.9475842787963953`*^9}, 
   3.947584525668495*^9, 3.947584638061944*^9, {3.947584688628901*^9, 
   3.9475847366246634`*^9}, 3.948370803801248*^9},
 CellLabel->
  "Out[132]=",ExpressionUUID->"da879bc2-096f-476e-9c51-e4fd3ccd37e1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Part", "[", 
     RowBox[{
      TemplateBox[<|
       "query" -> "zip codes in portland", "boxes" -> 
        RowBox[{"GeoEntities", "[", 
           RowBox[{
             TemplateBox[{"\"Portland\"", 
               RowBox[{"Entity", "[", 
                 RowBox[{"\"City\"", ",", 
                   RowBox[{"{", 
                    
                    RowBox[{
                    "\"Portland\"", ",", "\"Oregon\"", ",", 
                    "\"UnitedStates\""}], "}"}]}], "]"}], 
               "\"Entity[\\\"City\\\", {\\\"Portland\\\", \\\"Oregon\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""}, "Entity"], ",", " ", "\"ZIPCode\""}], 
           "]"}], "allassumptions" -> {{
          "type" -> "Clash", "word" -> "portland", "template" -> 
           "Assuming \"portland\" is a city${separator}Use as ${desc} \
instead", "count" -> "2", "pulldown" -> "false", "default" -> 
           "{\"C\", \"portland\"} -> {\"City\", \"dflt\"}", 
           "Values" -> {{
             "name" -> "City", "desc" -> "a city", "input" -> 
              "{\"C\", \"portland\"} -> {\"City\"}"}, {
             "name" -> "AdministrativeDivision", "desc" -> 
              "an administrative division", "input" -> 
              "{\"C\", \"portland\"} -> {\"AdministrativeDivision\"}"}}}, {
          "type" -> "Clash", "word" -> "zip codes", "template" -> 
           "Assuming \"zip codes\" is referring to ZIP codes${separator}Use \
as ${desc} instead", "count" -> "2", "pulldown" -> "false", "default" -> 
           "{\"C\", \"zip codes\"} -> {\"ZIPCodeData\", \"dflt\"}", 
           "Values" -> {{
             "name" -> "ZIPCodeData", "desc" -> " referring to ZIP codes", 
              "input" -> "{\"C\", \"zip codes\"} -> {\"ZIPCodeData\"}"}, {
             "name" -> "PostalCodeData", "desc" -> 
              " referring to postal codes", "input" -> 
              "{\"C\", \"zip codes\"} -> {\"PostalCodeData\"}"}}}, {
          "type" -> "SubCategory", "word" -> "portland", "template" -> 
           "Assuming Portland (Oregon, USA)${separator}Use ${desc} or \
${pulldown} instead", "count" -> "15", "pulldown" -> "true", "pulldownlabel" -> 
           "more >>", "pulldownlength" -> "13", "default" -> 
           "{\"DPClash\", \"CityE\", \"portland\"} -> {{\"Portland\", \
\"Oregon\", \"UnitedStates\"}, \"dflt\"}", 
           "Values" -> {{
             "name" -> "{Portland, Oregon, UnitedStates}", "desc" -> 
              "Portland (Oregon, USA)", "input" -> 
              "{\"DPClash\", \"CityE\", \"portland\"} -> {{\"Portland\", \
\"Oregon\", \"UnitedStates\"}}"}, {
             "name" -> "{Portland, Maine, UnitedStates}", "desc" -> 
              "Portland (Maine, USA)", "input" -> 
              "{\"DPClash\", \"CityE\", \"portland\"} -> {{\"Portland\", \
\"Maine\", \"UnitedStates\"}}"}, {
             "name" -> "{Portland, Texas, UnitedStates}", "desc" -> 
              "Portland (Texas, USA)", "input" -> 
              "{\"DPClash\", \"CityE\", \"portland\"} -> {{\"Portland\", \
\"Texas\", \"UnitedStates\"}}"}, {
             "name" -> "{Portland, Tennessee, UnitedStates}", "desc" -> 
              "Portland (Tennessee, USA)", "input" -> 
              "{\"DPClash\", \"CityE\", \"portland\"} -> {{\"Portland\", \
\"Tennessee\", \"UnitedStates\"}}"}, {
             "name" -> "{Portland, Indiana, UnitedStates}", "desc" -> 
              "Portland (Indiana, USA)", "input" -> 
              "{\"DPClash\", \"CityE\", \"portland\"} -> {{\"Portland\", \
\"Indiana\", \"UnitedStates\"}}"}, {
             "name" -> "{Portland, Connecticut, UnitedStates}", "desc" -> 
              "Portland (Connecticut, USA)", "input" -> 
              "{\"DPClash\", \"CityE\", \"portland\"} -> {{\"Portland\", \
\"Connecticut\", \"UnitedStates\"}}"}, {
             "name" -> "{Portland, Michigan, UnitedStates}", "desc" -> 
              "Portland (Michigan, USA)", "input" -> 
              "{\"DPClash\", \"CityE\", \"portland\"} -> {{\"Portland\", \
\"Michigan\", \"UnitedStates\"}}"}, {
             "name" -> "{Portland, NewYork, UnitedStates}", "desc" -> 
              "Portland (New York, USA)", "input" -> 
              "{\"DPClash\", \"CityE\", \"portland\"} -> {{\"Portland\", \
\"NewYork\", \"UnitedStates\"}}"}, {
             "name" -> "{Portland, Wisconsin, UnitedStates}", "desc" -> 
              "Portland (Dodge, Wisconsin, USA)", "input" -> 
              "{\"DPClash\", \"CityE\", \"portland\"} -> {{\"Portland\", \
\"Wisconsin\", \"UnitedStates\"}}"}, {
             "name" -> "{PortlandMonroe, Wisconsin, UnitedStates}", "desc" -> 
              "Portland (Monroe, Wisconsin, USA)", "input" -> 
              
              "{\"DPClash\", \"CityE\", \"portland\"} -> \
{{\"PortlandMonroe\", \"Wisconsin\", \"UnitedStates\"}}"}, {
             "name" -> "{Portland, NorthDakota, UnitedStates}", "desc" -> 
              "Portland (North Dakota, USA)", "input" -> 
              "{\"DPClash\", \"CityE\", \"portland\"} -> {{\"Portland\", \
\"NorthDakota\", \"UnitedStates\"}}"}, {
             "name" -> "{Portland, Arkansas, UnitedStates}", "desc" -> 
              "Portland (Arkansas, USA)", "input" -> 
              "{\"DPClash\", \"CityE\", \"portland\"} -> {{\"Portland\", \
\"Arkansas\", \"UnitedStates\"}}"}, {
             "name" -> "{Portland, Pennsylvania, UnitedStates}", "desc" -> 
              "Portland (Pennsylvania, USA)", "input" -> 
              "{\"DPClash\", \"CityE\", \"portland\"} -> {{\"Portland\", \
\"Pennsylvania\", \"UnitedStates\"}}"}, {
             "name" -> "{Portland, Colorado, UnitedStates}", "desc" -> 
              "Portland (Colorado, USA)", "input" -> 
              "{\"DPClash\", \"CityE\", \"portland\"} -> {{\"Portland\", \
\"Colorado\", \"UnitedStates\"}}"}, {
             "name" -> "{Portland, Iowa, UnitedStates}", "desc" -> 
              "Portland (Iowa, USA)", "input" -> 
              "{\"DPClash\", \"CityE\", \"portland\"} -> {{\"Portland\", \
\"Iowa\", \"UnitedStates\"}}"}}}}, "assumptions" -> {}, "open" -> {1, 2}, 
        "querystate" -> {
         "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
          1.138072`6.507714732016847, "Messages" -> {}}, "contextinfo" -> 
        Automatic, "version" -> 5|>,
       "LinguisticAssistantTemplate"], ",", "x"}], "]"}], 
    "[", "\"\<PopulationDensity\>\"", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "53"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9475852623933697`*^9, 3.947585272998465*^9}, {
  3.9475853592704487`*^9, 3.947585447071006*^9}, {3.947585493247347*^9, 
  3.9475855148763943`*^9}, {3.9475856047826223`*^9, 3.9475856207735567`*^9}, {
  3.947585902088648*^9, 3.947585927234805*^9}, {3.9475859743301163`*^9, 
  3.94758605851585*^9}, {3.947586127748616*^9, 3.9475861296063957`*^9}},
 CellLabel->
  "In[133]:=",ExpressionUUID->"83932878-d959-404a-8c61-ac952093f77a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{"1702.3244170136436`", 
     RowBox[{
      "\"people\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
       SuperscriptBox["\"km\"", "2"]}], "people per kilometer squared", 
     FractionBox["\"People\"", 
      SuperscriptBox["\"Kilometers\"", "2"]]},
    "Quantity"], ",", 
   TemplateBox[{"1201.9360195426339`", 
     RowBox[{
      "\"people\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
       SuperscriptBox["\"km\"", "2"]}], "people per kilometer squared", 
     FractionBox["\"People\"", 
      SuperscriptBox["\"Kilometers\"", "2"]]},
    "Quantity"], ",", 
   TemplateBox[{"3260.2466267324126`", 
     RowBox[{
      "\"people\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
       SuperscriptBox["\"km\"", "2"]}], "people per kilometer squared", 
     FractionBox["\"People\"", 
      SuperscriptBox["\"Kilometers\"", "2"]]},
    "Quantity"], ",", 
   TemplateBox[{"2313.5241339863355`", 
     RowBox[{
      "\"people\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
       SuperscriptBox["\"km\"", "2"]}], "people per kilometer squared", 
     FractionBox["\"People\"", 
      SuperscriptBox["\"Kilometers\"", "2"]]},
    "Quantity"], ",", 
   TemplateBox[{"962.9387834048599`", 
     RowBox[{
      "\"people\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
       SuperscriptBox["\"km\"", "2"]}], "people per kilometer squared", 
     FractionBox["\"People\"", 
      SuperscriptBox["\"Kilometers\"", "2"]]},
    "Quantity"], ",", 
   TemplateBox[{"1167.5729274323562`", 
     RowBox[{
      "\"people\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
       SuperscriptBox["\"km\"", "2"]}], "people per kilometer squared", 
     FractionBox["\"People\"", 
      SuperscriptBox["\"Kilometers\"", "2"]]},
    "Quantity"], ",", 
   TemplateBox[{"3510.82692762646`", 
     RowBox[{
      "\"people\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
       SuperscriptBox["\"km\"", "2"]}], "people per kilometer squared", 
     FractionBox["\"People\"", 
      SuperscriptBox["\"Kilometers\"", "2"]]},
    "Quantity"], ",", 
   TemplateBox[{"3055.612482704916`", 
     RowBox[{
      "\"people\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
       SuperscriptBox["\"km\"", "2"]}], "people per kilometer squared", 
     FractionBox["\"People\"", 
      SuperscriptBox["\"Kilometers\"", "2"]]},
    "Quantity"], ",", 
   RowBox[{"Missing", "[", "\<\"NotApplicable\"\>", "]"}], ",", 
   RowBox[{"Missing", "[", "\<\"NotApplicable\"\>", "]"}], ",", 
   TemplateBox[{"7219.338160426652`", 
     RowBox[{
      "\"people\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
       SuperscriptBox["\"km\"", "2"]}], "people per kilometer squared", 
     FractionBox["\"People\"", 
      SuperscriptBox["\"Kilometers\"", "2"]]},
    "Quantity"], ",", 
   TemplateBox[{"521.6240161908444`", 
     RowBox[{
      "\"people\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
       SuperscriptBox["\"km\"", "2"]}], "people per kilometer squared", 
     FractionBox["\"People\"", 
      SuperscriptBox["\"Kilometers\"", "2"]]},
    "Quantity"], ",", 
   TemplateBox[{"1418.1532283264037`", 
     RowBox[{
      "\"people\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
       SuperscriptBox["\"km\"", "2"]}], "people per kilometer squared", 
     FractionBox["\"People\"", 
      SuperscriptBox["\"Kilometers\"", "2"]]},
    "Quantity"], ",", 
   TemplateBox[{"3758.70451341071`", 
     RowBox[{
      "\"people\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
       SuperscriptBox["\"km\"", "2"]}], "people per kilometer squared", 
     FractionBox["\"People\"", 
      SuperscriptBox["\"Kilometers\"", "2"]]},
    "Quantity"], ",", 
   TemplateBox[{"2992.6778308624976`", 
     RowBox[{
      "\"people\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
       SuperscriptBox["\"km\"", "2"]}], "people per kilometer squared", 
     FractionBox["\"People\"", 
      SuperscriptBox["\"Kilometers\"", "2"]]},
    "Quantity"], ",", 
   TemplateBox[{"3613.143999640208`", 
     RowBox[{
      "\"people\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
       SuperscriptBox["\"km\"", "2"]}], "people per kilometer squared", 
     FractionBox["\"People\"", 
      SuperscriptBox["\"Kilometers\"", "2"]]},
    "Quantity"], ",", 
   TemplateBox[{"2974.5310294110027`", 
     RowBox[{
      "\"people\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
       SuperscriptBox["\"km\"", "2"]}], "people per kilometer squared", 
     FractionBox["\"People\"", 
      SuperscriptBox["\"Kilometers\"", "2"]]},
    "Quantity"], ",", 
   TemplateBox[{"2683.796104028541`", 
     RowBox[{
      "\"people\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
       SuperscriptBox["\"km\"", "2"]}], "people per kilometer squared", 
     FractionBox["\"People\"", 
      SuperscriptBox["\"Kilometers\"", "2"]]},
    "Quantity"], ",", 
   TemplateBox[{"913.9038092699693`", 
     RowBox[{
      "\"people\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
       SuperscriptBox["\"km\"", "2"]}], "people per kilometer squared", 
     FractionBox["\"People\"", 
      SuperscriptBox["\"Kilometers\"", "2"]]},
    "Quantity"], ",", 
   TemplateBox[{"845.1776250494139`", 
     RowBox[{
      "\"people\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
       SuperscriptBox["\"km\"", "2"]}], "people per kilometer squared", 
     FractionBox["\"People\"", 
      SuperscriptBox["\"Kilometers\"", "2"]]},
    "Quantity"], ",", 
   TemplateBox[{"1364.871130447546`", 
     RowBox[{
      "\"people\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
       SuperscriptBox["\"km\"", "2"]}], "people per kilometer squared", 
     FractionBox["\"People\"", 
      SuperscriptBox["\"Kilometers\"", "2"]]},
    "Quantity"], ",", 
   TemplateBox[{"1498.4624773032324`", 
     RowBox[{
      "\"people\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
       SuperscriptBox["\"km\"", "2"]}], "people per kilometer squared", 
     FractionBox["\"People\"", 
      SuperscriptBox["\"Kilometers\"", "2"]]},
    "Quantity"], ",", 
   TemplateBox[{"1122.7850770414325`", 
     RowBox[{
      "\"people\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
       SuperscriptBox["\"km\"", "2"]}], "people per kilometer squared", 
     FractionBox["\"People\"", 
      SuperscriptBox["\"Kilometers\"", "2"]]},
    "Quantity"], ",", 
   TemplateBox[{"1570.6635809506697`", 
     RowBox[{
      "\"people\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
       SuperscriptBox["\"km\"", "2"]}], "people per kilometer squared", 
     FractionBox["\"People\"", 
      SuperscriptBox["\"Kilometers\"", "2"]]},
    "Quantity"], ",", 
   TemplateBox[{"1742.4790415020582`", 
     RowBox[{
      "\"people\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
       SuperscriptBox["\"km\"", "2"]}], "people per kilometer squared", 
     FractionBox["\"People\"", 
      SuperscriptBox["\"Kilometers\"", "2"]]},
    "Quantity"], ",", 
   TemplateBox[{"1547.1113492795805`", 
     RowBox[{
      "\"people\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
       SuperscriptBox["\"km\"", "2"]}], "people per kilometer squared", 
     FractionBox["\"People\"", 
      SuperscriptBox["\"Kilometers\"", "2"]]},
    "Quantity"], ",", 
   RowBox[{"Missing", "[", "\<\"NotApplicable\"\>", "]"}], ",", 
   TemplateBox[{"1445.9525837414596`", 
     RowBox[{
      "\"people\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
       SuperscriptBox["\"km\"", "2"]}], "people per kilometer squared", 
     FractionBox["\"People\"", 
      SuperscriptBox["\"Kilometers\"", "2"]]},
    "Quantity"], ",", 
   TemplateBox[{"825.1003128052067`", 
     RowBox[{
      "\"people\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
       SuperscriptBox["\"km\"", "2"]}], "people per kilometer squared", 
     FractionBox["\"People\"", 
      SuperscriptBox["\"Kilometers\"", "2"]]},
    "Quantity"], ",", 
   TemplateBox[{"22.00782303691941`", 
     RowBox[{
      "\"people\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
       SuperscriptBox["\"km\"", "2"]}], "people per kilometer squared", 
     FractionBox["\"People\"", 
      SuperscriptBox["\"Kilometers\"", "2"]]},
    "Quantity"], ",", 
   TemplateBox[{"3128.9718928279813`", 
     RowBox[{
      "\"people\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
       SuperscriptBox["\"km\"", "2"]}], "people per kilometer squared", 
     FractionBox["\"People\"", 
      SuperscriptBox["\"Kilometers\"", "2"]]},
    "Quantity"], ",", 
   TemplateBox[{"3447.8922757840414`", 
     RowBox[{
      "\"people\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
       SuperscriptBox["\"km\"", "2"]}], "people per kilometer squared", 
     FractionBox["\"People\"", 
      SuperscriptBox["\"Kilometers\"", "2"]]},
    "Quantity"], ",", 
   TemplateBox[{"2005.4146114694636`", 
     RowBox[{
      "\"people\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
       SuperscriptBox["\"km\"", "2"]}], "people per kilometer squared", 
     FractionBox["\"People\"", 
      SuperscriptBox["\"Kilometers\"", "2"]]},
    "Quantity"], ",", 
   RowBox[{"Missing", "[", "\<\"NotApplicable\"\>", "]"}], ",", 
   TemplateBox[{"1884.1785336871358`", 
     RowBox[{
      "\"people\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
       SuperscriptBox["\"km\"", "2"]}], "people per kilometer squared", 
     FractionBox["\"People\"", 
      SuperscriptBox["\"Kilometers\"", "2"]]},
    "Quantity"], ",", 
   RowBox[{"Missing", "[", "\<\"NotApplicable\"\>", "]"}], ",", 
   RowBox[{"Missing", "[", "\<\"NotApplicable\"\>", "]"}], ",", 
   RowBox[{"Missing", "[", "\<\"NotApplicable\"\>", "]"}], ",", 
   RowBox[{"Missing", "[", "\<\"NotApplicable\"\>", "]"}], ",", 
   RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}], ",", 
   RowBox[{"Missing", "[", "\<\"NotApplicable\"\>", "]"}], ",", 
   RowBox[{"Missing", "[", "\<\"NotApplicable\"\>", "]"}], ",", 
   RowBox[{"Missing", "[", "\<\"NotApplicable\"\>", "]"}], ",", 
   TemplateBox[{"2292.6746174250434`", 
     RowBox[{
      "\"people\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
       SuperscriptBox["\"km\"", "2"]}], "people per kilometer squared", 
     FractionBox["\"People\"", 
      SuperscriptBox["\"Kilometers\"", "2"]]},
    "Quantity"], ",", 
   RowBox[{"Missing", "[", "\<\"NotApplicable\"\>", "]"}], ",", 
   RowBox[{"Missing", "[", "\<\"NotApplicable\"\>", "]"}], ",", 
   RowBox[{"Missing", "[", "\<\"NotApplicable\"\>", "]"}], ",", 
   RowBox[{"Missing", "[", "\<\"NotApplicable\"\>", "]"}], ",", 
   RowBox[{"Missing", "[", "\<\"NotApplicable\"\>", "]"}], ",", 
   RowBox[{"Missing", "[", "\<\"NotApplicable\"\>", "]"}], ",", 
   RowBox[{"Missing", "[", "\<\"NotApplicable\"\>", "]"}], ",", 
   RowBox[{"Missing", "[", "\<\"NotApplicable\"\>", "]"}], ",", 
   RowBox[{"Missing", "[", "\<\"NotApplicable\"\>", "]"}]}], "}"}]], "Output",\

 CellChangeTimes->{
  3.947585927725257*^9, {3.947585981053673*^9, 3.947586009453245*^9}, {
   3.947586043914158*^9, 3.9475860649972277`*^9}, 3.9475861419107733`*^9, 
   3.948370804956682*^9},
 CellLabel->
  "Out[133]=",ExpressionUUID->"36bd3fda-a04f-4634-bfc1-ac22d4d28e57"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Part", "[", 
     RowBox[{
      TemplateBox[<|
       "query" -> "zip codes in portland", "boxes" -> 
        RowBox[{"GeoEntities", "[", 
           RowBox[{
             TemplateBox[{"\"Portland\"", 
               RowBox[{"Entity", "[", 
                 RowBox[{"\"City\"", ",", 
                   RowBox[{"{", 
                    
                    RowBox[{
                    "\"Portland\"", ",", "\"Oregon\"", ",", 
                    "\"UnitedStates\""}], "}"}]}], "]"}], 
               "\"Entity[\\\"City\\\", {\\\"Portland\\\", \\\"Oregon\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""}, "Entity"], ",", " ", "\"ZIPCode\""}], 
           "]"}], "allassumptions" -> {{
          "type" -> "Clash", "word" -> "portland", "template" -> 
           "Assuming \"portland\" is a city${separator}Use as ${desc} \
instead", "count" -> "2", "pulldown" -> "false", "default" -> 
           "{\"C\", \"portland\"} -> {\"City\", \"dflt\"}", 
           "Values" -> {{
             "name" -> "City", "desc" -> "a city", "input" -> 
              "{\"C\", \"portland\"} -> {\"City\"}"}, {
             "name" -> "AdministrativeDivision", "desc" -> 
              "an administrative division", "input" -> 
              "{\"C\", \"portland\"} -> {\"AdministrativeDivision\"}"}}}, {
          "type" -> "Clash", "word" -> "zip codes", "template" -> 
           "Assuming \"zip codes\" is referring to ZIP codes${separator}Use \
as ${desc} instead", "count" -> "2", "pulldown" -> "false", "default" -> 
           "{\"C\", \"zip codes\"} -> {\"ZIPCodeData\", \"dflt\"}", 
           "Values" -> {{
             "name" -> "ZIPCodeData", "desc" -> " referring to ZIP codes", 
              "input" -> "{\"C\", \"zip codes\"} -> {\"ZIPCodeData\"}"}, {
             "name" -> "PostalCodeData", "desc" -> 
              " referring to postal codes", "input" -> 
              "{\"C\", \"zip codes\"} -> {\"PostalCodeData\"}"}}}, {
          "type" -> "SubCategory", "word" -> "portland", "template" -> 
           "Assuming Portland (Oregon, USA)${separator}Use ${desc} or \
${pulldown} instead", "count" -> "15", "pulldown" -> "true", "pulldownlabel" -> 
           "more >>", "pulldownlength" -> "13", "default" -> 
           "{\"DPClash\", \"CityE\", \"portland\"} -> {{\"Portland\", \
\"Oregon\", \"UnitedStates\"}, \"dflt\"}", 
           "Values" -> {{
             "name" -> "{Portland, Oregon, UnitedStates}", "desc" -> 
              "Portland (Oregon, USA)", "input" -> 
              "{\"DPClash\", \"CityE\", \"portland\"} -> {{\"Portland\", \
\"Oregon\", \"UnitedStates\"}}"}, {
             "name" -> "{Portland, Maine, UnitedStates}", "desc" -> 
              "Portland (Maine, USA)", "input" -> 
              "{\"DPClash\", \"CityE\", \"portland\"} -> {{\"Portland\", \
\"Maine\", \"UnitedStates\"}}"}, {
             "name" -> "{Portland, Texas, UnitedStates}", "desc" -> 
              "Portland (Texas, USA)", "input" -> 
              "{\"DPClash\", \"CityE\", \"portland\"} -> {{\"Portland\", \
\"Texas\", \"UnitedStates\"}}"}, {
             "name" -> "{Portland, Tennessee, UnitedStates}", "desc" -> 
              "Portland (Tennessee, USA)", "input" -> 
              "{\"DPClash\", \"CityE\", \"portland\"} -> {{\"Portland\", \
\"Tennessee\", \"UnitedStates\"}}"}, {
             "name" -> "{Portland, Indiana, UnitedStates}", "desc" -> 
              "Portland (Indiana, USA)", "input" -> 
              "{\"DPClash\", \"CityE\", \"portland\"} -> {{\"Portland\", \
\"Indiana\", \"UnitedStates\"}}"}, {
             "name" -> "{Portland, Connecticut, UnitedStates}", "desc" -> 
              "Portland (Connecticut, USA)", "input" -> 
              "{\"DPClash\", \"CityE\", \"portland\"} -> {{\"Portland\", \
\"Connecticut\", \"UnitedStates\"}}"}, {
             "name" -> "{Portland, Michigan, UnitedStates}", "desc" -> 
              "Portland (Michigan, USA)", "input" -> 
              "{\"DPClash\", \"CityE\", \"portland\"} -> {{\"Portland\", \
\"Michigan\", \"UnitedStates\"}}"}, {
             "name" -> "{Portland, NewYork, UnitedStates}", "desc" -> 
              "Portland (New York, USA)", "input" -> 
              "{\"DPClash\", \"CityE\", \"portland\"} -> {{\"Portland\", \
\"NewYork\", \"UnitedStates\"}}"}, {
             "name" -> "{Portland, Wisconsin, UnitedStates}", "desc" -> 
              "Portland (Dodge, Wisconsin, USA)", "input" -> 
              "{\"DPClash\", \"CityE\", \"portland\"} -> {{\"Portland\", \
\"Wisconsin\", \"UnitedStates\"}}"}, {
             "name" -> "{PortlandMonroe, Wisconsin, UnitedStates}", "desc" -> 
              "Portland (Monroe, Wisconsin, USA)", "input" -> 
              
              "{\"DPClash\", \"CityE\", \"portland\"} -> \
{{\"PortlandMonroe\", \"Wisconsin\", \"UnitedStates\"}}"}, {
             "name" -> "{Portland, NorthDakota, UnitedStates}", "desc" -> 
              "Portland (North Dakota, USA)", "input" -> 
              "{\"DPClash\", \"CityE\", \"portland\"} -> {{\"Portland\", \
\"NorthDakota\", \"UnitedStates\"}}"}, {
             "name" -> "{Portland, Arkansas, UnitedStates}", "desc" -> 
              "Portland (Arkansas, USA)", "input" -> 
              "{\"DPClash\", \"CityE\", \"portland\"} -> {{\"Portland\", \
\"Arkansas\", \"UnitedStates\"}}"}, {
             "name" -> "{Portland, Pennsylvania, UnitedStates}", "desc" -> 
              "Portland (Pennsylvania, USA)", "input" -> 
              "{\"DPClash\", \"CityE\", \"portland\"} -> {{\"Portland\", \
\"Pennsylvania\", \"UnitedStates\"}}"}, {
             "name" -> "{Portland, Colorado, UnitedStates}", "desc" -> 
              "Portland (Colorado, USA)", "input" -> 
              "{\"DPClash\", \"CityE\", \"portland\"} -> {{\"Portland\", \
\"Colorado\", \"UnitedStates\"}}"}, {
             "name" -> "{Portland, Iowa, UnitedStates}", "desc" -> 
              "Portland (Iowa, USA)", "input" -> 
              "{\"DPClash\", \"CityE\", \"portland\"} -> {{\"Portland\", \
\"Iowa\", \"UnitedStates\"}}"}}}}, "assumptions" -> {}, "open" -> {1, 2}, 
        "querystate" -> {
         "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
          1.138072`6.507714732016847, "Messages" -> {}}, "contextinfo" -> 
        Automatic, "version" -> 5|>,
       "LinguisticAssistantTemplate"], ",", "x"}], "]"}], 
    "[", "\"\<AverageHouseValue\>\"", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "35"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.947586360559037*^9, 3.947586364401523*^9}, {
  3.9475870498868303`*^9, 3.947587065593286*^9}},
 CellLabel->
  "In[134]:=",ExpressionUUID->"aba23c4b-d18c-492e-9536-e1e91f709550"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"596\[ThinSpace]400.00\"", ShowStringCharacters -> False], 
        596400.`7., AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 596400.`7., Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"543\[ThinSpace]700.00\"", ShowStringCharacters -> False], 
        543700.`7., AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 543700.`7., Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"602\[ThinSpace]400.00\"", ShowStringCharacters -> False], 
        602400.`7., AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 602400.`7., Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"597\[ThinSpace]400.00\"", ShowStringCharacters -> False], 
        597400.`7., AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 597400.`7., Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"392\[ThinSpace]300.00\"", ShowStringCharacters -> False], 
        392300.`7., AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 392300.`7., Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   RowBox[{"Missing", "[", "\<\"NotApplicable\"\>", "]"}], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"554\[ThinSpace]500.00\"", ShowStringCharacters -> False], 
        554500.`7., AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 554500.`7., Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"400\[ThinSpace]800.00\"", ShowStringCharacters -> False], 
        400800.`7., AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 400800.`7., Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   RowBox[{"Missing", "[", "\<\"NotApplicable\"\>", "]"}], ",", 
   RowBox[{"Missing", "[", "\<\"NotApplicable\"\>", "]"}], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"555\[ThinSpace]000.00\"", ShowStringCharacters -> False], 
        555000.`7., AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 555000.`7., Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"801\[ThinSpace]300.00\"", ShowStringCharacters -> False], 
        801300.`7., AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 801300.`7., Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"530\[ThinSpace]100.00\"", ShowStringCharacters -> False], 
        530100.`7., AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 530100.`7., Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"695\[ThinSpace]300.00\"", ShowStringCharacters -> False], 
        695300.`7., AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 695300.`7., Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"501\[ThinSpace]000.00\"", ShowStringCharacters -> False], 
        501000.`7., AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 501000.`7., Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"642\[ThinSpace]200.00\"", ShowStringCharacters -> False], 
        642200.`7., AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 642200.`7., Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"575\[ThinSpace]300.00\"", ShowStringCharacters -> False], 
        575300.`7., AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 575300.`7., Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"351\[ThinSpace]000.00\"", ShowStringCharacters -> False], 
        351000.`7., AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 351000.`7., Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"464\[ThinSpace]100.00\"", ShowStringCharacters -> False], 
        464100.`7., AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 464100.`7., Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"406\[ThinSpace]300.00\"", ShowStringCharacters -> False], 
        406300.`7., AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 406300.`7., Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"556\[ThinSpace]500.00\"", ShowStringCharacters -> False], 
        556500.`7., AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 556500.`7., Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"362\[ThinSpace]700.00\"", ShowStringCharacters -> False], 
        362700.`7., AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 362700.`7., Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"657\[ThinSpace]000.00\"", ShowStringCharacters -> False], 
        657000.`7., AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 657000.`7., Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"375\[ThinSpace]900.00\"", ShowStringCharacters -> False], 
        375900.`7., AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 375900.`7., Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"459\[ThinSpace]400.00\"", ShowStringCharacters -> False], 
        459400.`7., AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 459400.`7., Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"540\[ThinSpace]900.00\"", ShowStringCharacters -> False], 
        540900.`7., AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 540900.`7., Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   RowBox[{"Missing", "[", "\<\"NotApplicable\"\>", "]"}], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"600\[ThinSpace]700.00\"", ShowStringCharacters -> False], 
        600700.`7., AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 600700.`7., Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"350\[ThinSpace]800.00\"", ShowStringCharacters -> False], 
        350800.`7., AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 350800.`7., Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"725\[ThinSpace]100.00\"", ShowStringCharacters -> False], 
        725100.`7., AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 725100.`7., Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"660\[ThinSpace]000.00\"", ShowStringCharacters -> False], 
        660000.`7., AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 660000.`7., Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"299\[ThinSpace]500.00\"", ShowStringCharacters -> False], 
        299500.`7., AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 299500.`7., Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"334\[ThinSpace]800.00\"", ShowStringCharacters -> False], 
        334800.`7., AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 334800.`7., Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"], ",", 
   RowBox[{"Missing", "[", "\<\"NotApplicable\"\>", "]"}], ",", 
   TemplateBox[{
     InterpretationBox[
      TagBox[
       InterpretationBox[
        StyleBox["\"628\[ThinSpace]100.00\"", ShowStringCharacters -> False], 
        628100.`7., AutoDelete -> True], 
       NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
        "\[ThinSpace]"]& ], 628100.`7., Selectable -> False], 
     RowBox[{
       FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
     "\"USDollars\""},
    "QuantityPrefix"]}], "}"}]], "Output",
 CellChangeTimes->{
  3.947586381495036*^9, {3.947587058714775*^9, 3.947587071829268*^9}, 
   3.948370805167029*^9},
 CellLabel->
  "Out[134]=",ExpressionUUID->"f7fdce63-9418-4562-b436-f0769e545027"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Part", "[", 
     RowBox[{
      TemplateBox[<|
       "query" -> "zip codes in portland", "boxes" -> 
        RowBox[{"GeoEntities", "[", 
           RowBox[{
             TemplateBox[{"\"Portland\"", 
               RowBox[{"Entity", "[", 
                 RowBox[{"\"City\"", ",", 
                   RowBox[{"{", 
                    
                    RowBox[{
                    "\"Portland\"", ",", "\"Oregon\"", ",", 
                    "\"UnitedStates\""}], "}"}]}], "]"}], 
               "\"Entity[\\\"City\\\", {\\\"Portland\\\", \\\"Oregon\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""}, "Entity"], ",", " ", "\"ZIPCode\""}], 
           "]"}], "allassumptions" -> {{
          "type" -> "Clash", "word" -> "portland", "template" -> 
           "Assuming \"portland\" is a city${separator}Use as ${desc} \
instead", "count" -> "2", "pulldown" -> "false", "default" -> 
           "{\"C\", \"portland\"} -> {\"City\", \"dflt\"}", 
           "Values" -> {{
             "name" -> "City", "desc" -> "a city", "input" -> 
              "{\"C\", \"portland\"} -> {\"City\"}"}, {
             "name" -> "AdministrativeDivision", "desc" -> 
              "an administrative division", "input" -> 
              "{\"C\", \"portland\"} -> {\"AdministrativeDivision\"}"}}}, {
          "type" -> "Clash", "word" -> "zip codes", "template" -> 
           "Assuming \"zip codes\" is referring to ZIP codes${separator}Use \
as ${desc} instead", "count" -> "2", "pulldown" -> "false", "default" -> 
           "{\"C\", \"zip codes\"} -> {\"ZIPCodeData\", \"dflt\"}", 
           "Values" -> {{
             "name" -> "ZIPCodeData", "desc" -> " referring to ZIP codes", 
              "input" -> "{\"C\", \"zip codes\"} -> {\"ZIPCodeData\"}"}, {
             "name" -> "PostalCodeData", "desc" -> 
              " referring to postal codes", "input" -> 
              "{\"C\", \"zip codes\"} -> {\"PostalCodeData\"}"}}}, {
          "type" -> "SubCategory", "word" -> "portland", "template" -> 
           "Assuming Portland (Oregon, USA)${separator}Use ${desc} or \
${pulldown} instead", "count" -> "15", "pulldown" -> "true", "pulldownlabel" -> 
           "more >>", "pulldownlength" -> "13", "default" -> 
           "{\"DPClash\", \"CityE\", \"portland\"} -> {{\"Portland\", \
\"Oregon\", \"UnitedStates\"}, \"dflt\"}", 
           "Values" -> {{
             "name" -> "{Portland, Oregon, UnitedStates}", "desc" -> 
              "Portland (Oregon, USA)", "input" -> 
              "{\"DPClash\", \"CityE\", \"portland\"} -> {{\"Portland\", \
\"Oregon\", \"UnitedStates\"}}"}, {
             "name" -> "{Portland, Maine, UnitedStates}", "desc" -> 
              "Portland (Maine, USA)", "input" -> 
              "{\"DPClash\", \"CityE\", \"portland\"} -> {{\"Portland\", \
\"Maine\", \"UnitedStates\"}}"}, {
             "name" -> "{Portland, Texas, UnitedStates}", "desc" -> 
              "Portland (Texas, USA)", "input" -> 
              "{\"DPClash\", \"CityE\", \"portland\"} -> {{\"Portland\", \
\"Texas\", \"UnitedStates\"}}"}, {
             "name" -> "{Portland, Tennessee, UnitedStates}", "desc" -> 
              "Portland (Tennessee, USA)", "input" -> 
              "{\"DPClash\", \"CityE\", \"portland\"} -> {{\"Portland\", \
\"Tennessee\", \"UnitedStates\"}}"}, {
             "name" -> "{Portland, Indiana, UnitedStates}", "desc" -> 
              "Portland (Indiana, USA)", "input" -> 
              "{\"DPClash\", \"CityE\", \"portland\"} -> {{\"Portland\", \
\"Indiana\", \"UnitedStates\"}}"}, {
             "name" -> "{Portland, Connecticut, UnitedStates}", "desc" -> 
              "Portland (Connecticut, USA)", "input" -> 
              "{\"DPClash\", \"CityE\", \"portland\"} -> {{\"Portland\", \
\"Connecticut\", \"UnitedStates\"}}"}, {
             "name" -> "{Portland, Michigan, UnitedStates}", "desc" -> 
              "Portland (Michigan, USA)", "input" -> 
              "{\"DPClash\", \"CityE\", \"portland\"} -> {{\"Portland\", \
\"Michigan\", \"UnitedStates\"}}"}, {
             "name" -> "{Portland, NewYork, UnitedStates}", "desc" -> 
              "Portland (New York, USA)", "input" -> 
              "{\"DPClash\", \"CityE\", \"portland\"} -> {{\"Portland\", \
\"NewYork\", \"UnitedStates\"}}"}, {
             "name" -> "{Portland, Wisconsin, UnitedStates}", "desc" -> 
              "Portland (Dodge, Wisconsin, USA)", "input" -> 
              "{\"DPClash\", \"CityE\", \"portland\"} -> {{\"Portland\", \
\"Wisconsin\", \"UnitedStates\"}}"}, {
             "name" -> "{PortlandMonroe, Wisconsin, UnitedStates}", "desc" -> 
              "Portland (Monroe, Wisconsin, USA)", "input" -> 
              
              "{\"DPClash\", \"CityE\", \"portland\"} -> \
{{\"PortlandMonroe\", \"Wisconsin\", \"UnitedStates\"}}"}, {
             "name" -> "{Portland, NorthDakota, UnitedStates}", "desc" -> 
              "Portland (North Dakota, USA)", "input" -> 
              "{\"DPClash\", \"CityE\", \"portland\"} -> {{\"Portland\", \
\"NorthDakota\", \"UnitedStates\"}}"}, {
             "name" -> "{Portland, Arkansas, UnitedStates}", "desc" -> 
              "Portland (Arkansas, USA)", "input" -> 
              "{\"DPClash\", \"CityE\", \"portland\"} -> {{\"Portland\", \
\"Arkansas\", \"UnitedStates\"}}"}, {
             "name" -> "{Portland, Pennsylvania, UnitedStates}", "desc" -> 
              "Portland (Pennsylvania, USA)", "input" -> 
              "{\"DPClash\", \"CityE\", \"portland\"} -> {{\"Portland\", \
\"Pennsylvania\", \"UnitedStates\"}}"}, {
             "name" -> "{Portland, Colorado, UnitedStates}", "desc" -> 
              "Portland (Colorado, USA)", "input" -> 
              "{\"DPClash\", \"CityE\", \"portland\"} -> {{\"Portland\", \
\"Colorado\", \"UnitedStates\"}}"}, {
             "name" -> "{Portland, Iowa, UnitedStates}", "desc" -> 
              "Portland (Iowa, USA)", "input" -> 
              "{\"DPClash\", \"CityE\", \"portland\"} -> {{\"Portland\", \
\"Iowa\", \"UnitedStates\"}}"}}}}, "assumptions" -> {}, "open" -> {1, 2}, 
        "querystate" -> {
         "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
          1.138072`6.507714732016847, "Messages" -> {}}, "contextinfo" -> 
        Automatic, "version" -> 5|>,
       "LinguisticAssistantTemplate"], ",", "x"}], "]"}], 
    "[", "\"\<PersonsPerHousehold\>\"", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "35"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9475865354358807`*^9, 3.947586538292233*^9}, {
  3.9475870541224127`*^9, 3.947587067936553*^9}},
 CellLabel->
  "In[135]:=",ExpressionUUID->"d937932f-ea04-45be-8e25-574c5bd7216d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{"2.32`", "\"people\"", "people", "\"People\""},
    "Quantity"], ",", 
   TemplateBox[{"2.78`", "\"people\"", "people", "\"People\""},
    "Quantity"], ",", 
   TemplateBox[{"1.68`", "\"people\"", "people", "\"People\""},
    "Quantity"], ",", 
   TemplateBox[{"2.16`", "\"people\"", "people", "\"People\""},
    "Quantity"], ",", 
   TemplateBox[{"2.47`", "\"people\"", "people", "\"People\""},
    "Quantity"], ",", 
   TemplateBox[{"1.36`", "\"people\"", "people", "\"People\""},
    "Quantity"], ",", 
   TemplateBox[{"1.44`", "\"people\"", "people", "\"People\""},
    "Quantity"], ",", 
   TemplateBox[{"2.4`", "\"people\"", "people", "\"People\""},
    "Quantity"], ",", 
   RowBox[{"Missing", "[", "\<\"NotApplicable\"\>", "]"}], ",", 
   RowBox[{"Missing", "[", "\<\"NotApplicable\"\>", "]"}], ",", 
   TemplateBox[{"1.45`", "\"people\"", "people", "\"People\""},
    "Quantity"], ",", 
   TemplateBox[{"1.72`", "\"people\"", "people", "\"People\""},
    "Quantity"], ",", 
   TemplateBox[{"2.35`", "\"people\"", "people", "\"People\""},
    "Quantity"], ",", 
   TemplateBox[{"2.35`", "\"people\"", "people", "\"People\""},
    "Quantity"], ",", 
   TemplateBox[{"2.24`", "\"people\"", "people", "\"People\""},
    "Quantity"], ",", 
   TemplateBox[{"1.88`", "\"people\"", "people", "\"People\""},
    "Quantity"], ",", 
   TemplateBox[{"2.25`", "\"people\"", "people", "\"People\""},
    "Quantity"], ",", 
   TemplateBox[{"2.46`", "\"people\"", "people", "\"People\""},
    "Quantity"], ",", 
   TemplateBox[{"2.18`", "\"people\"", "people", "\"People\""},
    "Quantity"], ",", 
   TemplateBox[{"2.48`", "\"people\"", "people", "\"People\""},
    "Quantity"], ",", 
   TemplateBox[{"2.41`", "\"people\"", "people", "\"People\""},
    "Quantity"], ",", 
   TemplateBox[{"2.46`", "\"people\"", "people", "\"People\""},
    "Quantity"], ",", 
   TemplateBox[{"2.43`", "\"people\"", "people", "\"People\""},
    "Quantity"], ",", 
   TemplateBox[{"2.32`", "\"people\"", "people", "\"People\""},
    "Quantity"], ",", 
   TemplateBox[{"2.5`", "\"people\"", "people", "\"People\""},
    "Quantity"], ",", 
   TemplateBox[{"1.86`", "\"people\"", "people", "\"People\""},
    "Quantity"], ",", 
   RowBox[{"Missing", "[", "\<\"NotApplicable\"\>", "]"}], ",", 
   TemplateBox[{"2.73`", "\"people\"", "people", "\"People\""},
    "Quantity"], ",", 
   TemplateBox[{"2.61`", "\"people\"", "people", "\"People\""},
    "Quantity"], ",", 
   TemplateBox[{"2.38`", "\"people\"", "people", "\"People\""},
    "Quantity"], ",", 
   TemplateBox[{"1.73`", "\"people\"", "people", "\"People\""},
    "Quantity"], ",", 
   TemplateBox[{"2.87`", "\"people\"", "people", "\"People\""},
    "Quantity"], ",", 
   TemplateBox[{"2.97`", "\"people\"", "people", "\"People\""},
    "Quantity"], ",", 
   RowBox[{"Missing", "[", "\<\"NotApplicable\"\>", "]"}], ",", 
   TemplateBox[{"1.92`", "\"people\"", "people", "\"People\""},
    "Quantity"]}], "}"}]], "Output",
 CellChangeTimes->{
  3.947586555273603*^9, {3.947587060044073*^9, 3.947587070392022*^9}, 
   3.9483708053473682`*^9},
 CellLabel->
  "Out[135]=",ExpressionUUID->"7c501312-6e99-4d8a-a8f3-b9a34a0b0c77"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"Transpose", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Part", "[", 
         RowBox[{
          
          TemplateBox[<|
           "query" -> "zip codes in portland", "boxes" -> 
            RowBox[{"GeoEntities", "[", 
               RowBox[{
                 TemplateBox[{"\"Portland\"", 
                   RowBox[{"Entity", "[", 
                    RowBox[{"\"City\"", ",", 
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\"Portland\"", ",", "\"Oregon\"", ",", 
                    "\"UnitedStates\""}], "}"}]}], "]"}], 
                   "\"Entity[\\\"City\\\", {\\\"Portland\\\", \\\"Oregon\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""}, "Entity"], ",", " ", "\"ZIPCode\""}], 
               "]"}], "allassumptions" -> {{
              "type" -> "Clash", "word" -> "portland", "template" -> 
               "Assuming \"portland\" is a city${separator}Use as ${desc} \
instead", "count" -> "2", "pulldown" -> "false", "default" -> 
               "{\"C\", \"portland\"} -> {\"City\", \"dflt\"}", 
               "Values" -> {{
                 "name" -> "City", "desc" -> "a city", "input" -> 
                  "{\"C\", \"portland\"} -> {\"City\"}"}, {
                 "name" -> "AdministrativeDivision", "desc" -> 
                  "an administrative division", "input" -> 
                  "{\"C\", \"portland\"} -> {\"AdministrativeDivision\"}"}}}, \
{"type" -> "Clash", "word" -> "zip codes", "template" -> 
               "Assuming \"zip codes\" is referring to ZIP \
codes${separator}Use as ${desc} instead", "count" -> "2", "pulldown" -> 
               "false", "default" -> 
               "{\"C\", \"zip codes\"} -> {\"ZIPCodeData\", \"dflt\"}", 
               "Values" -> {{
                 "name" -> "ZIPCodeData", "desc" -> " referring to ZIP codes",
                   "input" -> 
                  "{\"C\", \"zip codes\"} -> {\"ZIPCodeData\"}"}, {
                 "name" -> "PostalCodeData", "desc" -> 
                  " referring to postal codes", "input" -> 
                  "{\"C\", \"zip codes\"} -> {\"PostalCodeData\"}"}}}, {
              "type" -> "SubCategory", "word" -> "portland", "template" -> 
               "Assuming Portland (Oregon, USA)${separator}Use ${desc} or \
${pulldown} instead", "count" -> "15", "pulldown" -> "true", "pulldownlabel" -> 
               "more >>", "pulldownlength" -> "13", "default" -> 
               "{\"DPClash\", \"CityE\", \"portland\"} -> {{\"Portland\", \
\"Oregon\", \"UnitedStates\"}, \"dflt\"}", 
               "Values" -> {{
                 "name" -> "{Portland, Oregon, UnitedStates}", "desc" -> 
                  "Portland (Oregon, USA)", "input" -> 
                  "{\"DPClash\", \"CityE\", \"portland\"} -> {{\"Portland\", \
\"Oregon\", \"UnitedStates\"}}"}, {
                 "name" -> "{Portland, Maine, UnitedStates}", "desc" -> 
                  "Portland (Maine, USA)", "input" -> 
                  "{\"DPClash\", \"CityE\", \"portland\"} -> {{\"Portland\", \
\"Maine\", \"UnitedStates\"}}"}, {
                 "name" -> "{Portland, Texas, UnitedStates}", "desc" -> 
                  "Portland (Texas, USA)", "input" -> 
                  "{\"DPClash\", \"CityE\", \"portland\"} -> {{\"Portland\", \
\"Texas\", \"UnitedStates\"}}"}, {
                 "name" -> "{Portland, Tennessee, UnitedStates}", "desc" -> 
                  "Portland (Tennessee, USA)", "input" -> 
                  "{\"DPClash\", \"CityE\", \"portland\"} -> {{\"Portland\", \
\"Tennessee\", \"UnitedStates\"}}"}, {
                 "name" -> "{Portland, Indiana, UnitedStates}", "desc" -> 
                  "Portland (Indiana, USA)", "input" -> 
                  "{\"DPClash\", \"CityE\", \"portland\"} -> {{\"Portland\", \
\"Indiana\", \"UnitedStates\"}}"}, {
                 "name" -> "{Portland, Connecticut, UnitedStates}", "desc" -> 
                  "Portland (Connecticut, USA)", "input" -> 
                  "{\"DPClash\", \"CityE\", \"portland\"} -> {{\"Portland\", \
\"Connecticut\", \"UnitedStates\"}}"}, {
                 "name" -> "{Portland, Michigan, UnitedStates}", "desc" -> 
                  "Portland (Michigan, USA)", "input" -> 
                  "{\"DPClash\", \"CityE\", \"portland\"} -> {{\"Portland\", \
\"Michigan\", \"UnitedStates\"}}"}, {
                 "name" -> "{Portland, NewYork, UnitedStates}", "desc" -> 
                  "Portland (New York, USA)", "input" -> 
                  "{\"DPClash\", \"CityE\", \"portland\"} -> {{\"Portland\", \
\"NewYork\", \"UnitedStates\"}}"}, {
                 "name" -> "{Portland, Wisconsin, UnitedStates}", "desc" -> 
                  "Portland (Dodge, Wisconsin, USA)", "input" -> 
                  "{\"DPClash\", \"CityE\", \"portland\"} -> {{\"Portland\", \
\"Wisconsin\", \"UnitedStates\"}}"}, {
                 "name" -> "{PortlandMonroe, Wisconsin, UnitedStates}", 
                  "desc" -> "Portland (Monroe, Wisconsin, USA)", "input" -> 
                  "{\"DPClash\", \"CityE\", \"portland\"} -> \
{{\"PortlandMonroe\", \"Wisconsin\", \"UnitedStates\"}}"}, {
                 "name" -> "{Portland, NorthDakota, UnitedStates}", "desc" -> 
                  "Portland (North Dakota, USA)", "input" -> 
                  "{\"DPClash\", \"CityE\", \"portland\"} -> {{\"Portland\", \
\"NorthDakota\", \"UnitedStates\"}}"}, {
                 "name" -> "{Portland, Arkansas, UnitedStates}", "desc" -> 
                  "Portland (Arkansas, USA)", "input" -> 
                  "{\"DPClash\", \"CityE\", \"portland\"} -> {{\"Portland\", \
\"Arkansas\", \"UnitedStates\"}}"}, {
                 "name" -> "{Portland, Pennsylvania, UnitedStates}", "desc" -> 
                  "Portland (Pennsylvania, USA)", "input" -> 
                  "{\"DPClash\", \"CityE\", \"portland\"} -> {{\"Portland\", \
\"Pennsylvania\", \"UnitedStates\"}}"}, {
                 "name" -> "{Portland, Colorado, UnitedStates}", "desc" -> 
                  "Portland (Colorado, USA)", "input" -> 
                  "{\"DPClash\", \"CityE\", \"portland\"} -> {{\"Portland\", \
\"Colorado\", \"UnitedStates\"}}"}, {
                 "name" -> "{Portland, Iowa, UnitedStates}", "desc" -> 
                  "Portland (Iowa, USA)", "input" -> 
                  "{\"DPClash\", \"CityE\", \"portland\"} -> {{\"Portland\", \
\"Iowa\", \"UnitedStates\"}}"}}}}, "assumptions" -> {}, "open" -> {1, 2}, 
            "querystate" -> {
             "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
              1.138072`6.507714732016847, "Messages" -> {}}, "contextinfo" -> 
            Automatic, "version" -> 5|>,
           "LinguisticAssistantTemplate"], ",", "x"}], "]"}], 
        "[", "\"\<AverageHouseValue\>\"", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "35"}], "}"}]}], "]"}], ",", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Part", "[", 
         RowBox[{
          
          TemplateBox[<|
           "query" -> "zip codes in portland", "boxes" -> 
            RowBox[{"GeoEntities", "[", 
               RowBox[{
                 TemplateBox[{"\"Portland\"", 
                   RowBox[{"Entity", "[", 
                    RowBox[{"\"City\"", ",", 
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\"Portland\"", ",", "\"Oregon\"", ",", 
                    "\"UnitedStates\""}], "}"}]}], "]"}], 
                   "\"Entity[\\\"City\\\", {\\\"Portland\\\", \\\"Oregon\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""}, "Entity"], ",", " ", "\"ZIPCode\""}], 
               "]"}], "allassumptions" -> {{
              "type" -> "Clash", "word" -> "portland", "template" -> 
               "Assuming \"portland\" is a city${separator}Use as ${desc} \
instead", "count" -> "2", "pulldown" -> "false", "default" -> 
               "{\"C\", \"portland\"} -> {\"City\", \"dflt\"}", 
               "Values" -> {{
                 "name" -> "City", "desc" -> "a city", "input" -> 
                  "{\"C\", \"portland\"} -> {\"City\"}"}, {
                 "name" -> "AdministrativeDivision", "desc" -> 
                  "an administrative division", "input" -> 
                  "{\"C\", \"portland\"} -> {\"AdministrativeDivision\"}"}}}, \
{"type" -> "Clash", "word" -> "zip codes", "template" -> 
               "Assuming \"zip codes\" is referring to ZIP \
codes${separator}Use as ${desc} instead", "count" -> "2", "pulldown" -> 
               "false", "default" -> 
               "{\"C\", \"zip codes\"} -> {\"ZIPCodeData\", \"dflt\"}", 
               "Values" -> {{
                 "name" -> "ZIPCodeData", "desc" -> " referring to ZIP codes",
                   "input" -> 
                  "{\"C\", \"zip codes\"} -> {\"ZIPCodeData\"}"}, {
                 "name" -> "PostalCodeData", "desc" -> 
                  " referring to postal codes", "input" -> 
                  "{\"C\", \"zip codes\"} -> {\"PostalCodeData\"}"}}}, {
              "type" -> "SubCategory", "word" -> "portland", "template" -> 
               "Assuming Portland (Oregon, USA)${separator}Use ${desc} or \
${pulldown} instead", "count" -> "15", "pulldown" -> "true", "pulldownlabel" -> 
               "more >>", "pulldownlength" -> "13", "default" -> 
               "{\"DPClash\", \"CityE\", \"portland\"} -> {{\"Portland\", \
\"Oregon\", \"UnitedStates\"}, \"dflt\"}", 
               "Values" -> {{
                 "name" -> "{Portland, Oregon, UnitedStates}", "desc" -> 
                  "Portland (Oregon, USA)", "input" -> 
                  "{\"DPClash\", \"CityE\", \"portland\"} -> {{\"Portland\", \
\"Oregon\", \"UnitedStates\"}}"}, {
                 "name" -> "{Portland, Maine, UnitedStates}", "desc" -> 
                  "Portland (Maine, USA)", "input" -> 
                  "{\"DPClash\", \"CityE\", \"portland\"} -> {{\"Portland\", \
\"Maine\", \"UnitedStates\"}}"}, {
                 "name" -> "{Portland, Texas, UnitedStates}", "desc" -> 
                  "Portland (Texas, USA)", "input" -> 
                  "{\"DPClash\", \"CityE\", \"portland\"} -> {{\"Portland\", \
\"Texas\", \"UnitedStates\"}}"}, {
                 "name" -> "{Portland, Tennessee, UnitedStates}", "desc" -> 
                  "Portland (Tennessee, USA)", "input" -> 
                  "{\"DPClash\", \"CityE\", \"portland\"} -> {{\"Portland\", \
\"Tennessee\", \"UnitedStates\"}}"}, {
                 "name" -> "{Portland, Indiana, UnitedStates}", "desc" -> 
                  "Portland (Indiana, USA)", "input" -> 
                  "{\"DPClash\", \"CityE\", \"portland\"} -> {{\"Portland\", \
\"Indiana\", \"UnitedStates\"}}"}, {
                 "name" -> "{Portland, Connecticut, UnitedStates}", "desc" -> 
                  "Portland (Connecticut, USA)", "input" -> 
                  "{\"DPClash\", \"CityE\", \"portland\"} -> {{\"Portland\", \
\"Connecticut\", \"UnitedStates\"}}"}, {
                 "name" -> "{Portland, Michigan, UnitedStates}", "desc" -> 
                  "Portland (Michigan, USA)", "input" -> 
                  "{\"DPClash\", \"CityE\", \"portland\"} -> {{\"Portland\", \
\"Michigan\", \"UnitedStates\"}}"}, {
                 "name" -> "{Portland, NewYork, UnitedStates}", "desc" -> 
                  "Portland (New York, USA)", "input" -> 
                  "{\"DPClash\", \"CityE\", \"portland\"} -> {{\"Portland\", \
\"NewYork\", \"UnitedStates\"}}"}, {
                 "name" -> "{Portland, Wisconsin, UnitedStates}", "desc" -> 
                  "Portland (Dodge, Wisconsin, USA)", "input" -> 
                  "{\"DPClash\", \"CityE\", \"portland\"} -> {{\"Portland\", \
\"Wisconsin\", \"UnitedStates\"}}"}, {
                 "name" -> "{PortlandMonroe, Wisconsin, UnitedStates}", 
                  "desc" -> "Portland (Monroe, Wisconsin, USA)", "input" -> 
                  "{\"DPClash\", \"CityE\", \"portland\"} -> \
{{\"PortlandMonroe\", \"Wisconsin\", \"UnitedStates\"}}"}, {
                 "name" -> "{Portland, NorthDakota, UnitedStates}", "desc" -> 
                  "Portland (North Dakota, USA)", "input" -> 
                  "{\"DPClash\", \"CityE\", \"portland\"} -> {{\"Portland\", \
\"NorthDakota\", \"UnitedStates\"}}"}, {
                 "name" -> "{Portland, Arkansas, UnitedStates}", "desc" -> 
                  "Portland (Arkansas, USA)", "input" -> 
                  "{\"DPClash\", \"CityE\", \"portland\"} -> {{\"Portland\", \
\"Arkansas\", \"UnitedStates\"}}"}, {
                 "name" -> "{Portland, Pennsylvania, UnitedStates}", "desc" -> 
                  "Portland (Pennsylvania, USA)", "input" -> 
                  "{\"DPClash\", \"CityE\", \"portland\"} -> {{\"Portland\", \
\"Pennsylvania\", \"UnitedStates\"}}"}, {
                 "name" -> "{Portland, Colorado, UnitedStates}", "desc" -> 
                  "Portland (Colorado, USA)", "input" -> 
                  "{\"DPClash\", \"CityE\", \"portland\"} -> {{\"Portland\", \
\"Colorado\", \"UnitedStates\"}}"}, {
                 "name" -> "{Portland, Iowa, UnitedStates}", "desc" -> 
                  "Portland (Iowa, USA)", "input" -> 
                  "{\"DPClash\", \"CityE\", \"portland\"} -> {{\"Portland\", \
\"Iowa\", \"UnitedStates\"}}"}}}}, "assumptions" -> {}, "open" -> {1, 2}, 
            "querystate" -> {
             "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
              1.138072`6.507714732016847, "Messages" -> {}}, "contextinfo" -> 
            Automatic, "version" -> 5|>,
           "LinguisticAssistantTemplate"], ",", "x"}], "]"}], 
        "[", "\"\<PersonsPerHousehold\>\"", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "35"}], "}"}]}], "]"}]}], "}"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.947587681113522*^9, 3.9475877005989*^9}, {
  3.947587751828051*^9, 3.947587762528472*^9}, {3.947587860683549*^9, 
  3.947587865435444*^9}},
 CellLabel->
  "In[136]:=",ExpressionUUID->"51bbed9d-42d4-4528-987b-b6c18efea355"],

Cell[BoxData[
 GraphicsBox[{{}, 
   InterpretationBox[{
     TagBox[
      TagBox[
       {RGBColor[0.24, 0.6, 0.8], PointSize[0.012833333333333334`], 
        AbsoluteThickness[2], PointBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQIJxkqO/Ye+asT0MzmA+CumKzjacl1fXGDLBuY7
JCk5PqwSWef+8Jc9iG9greToARZgBMtv+CjueBik/RAzmM/xRsERrJ3rO1h9
Q5mEozEYQOQ/vFeA8iHyGiUajq2vA3fItf4G8zN0FRzPngEBiHs4LFRR+ApT
5BzfgJS/hthvMFPZEeS6KpF/YP0dfYqOEJ9B1CfkiDqCpddB7J8QLONYCPYg
RH/BGQlHsHOvQ+RX/FaA+g/CN1AWQ9F/gUcFqh/CL/gohhJ+ClwyUPtZwPwT
jQrQ8PkLdt+PECWofayQ8M0UhYYvRP0NBTVo+EHMd1BRgdoPCZ8N7kKO30DG
fYXGT74I1Hx2SHhpKzuCQidwxz97AKibi04=
         "]]},
       Annotation[#, "Charting`Private`Tag#1"]& ],
      {"WolframDynamicHighlight", <|
       "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>}], 
     StyleBox[
      DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
        Slot["HighlightElements"], 
        Slot["LayoutOptions"], 
        Slot["Meta"], 
        Charting`HighlightActionFunction["DynamicHighlight", {{
           Annotation[{
             Directive[
              PointSize[0.012833333333333334`], 
              RGBColor[0.24, 0.6, 0.8], 
              AbsoluteThickness[2]], 
             Point[CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQIJxkqO/Ye+asT0MzmA+CumKzjacl1fXGDLBuY7
JCk5PqwSWef+8Jc9iG9greToARZgBMtv+CjueBik/RAzmM/xRsERrJ3rO1h9
Q5mEozEYQOQ/vFeA8iHyGiUajq2vA3fItf4G8zN0FRzPngEBiHs4LFRR+ApT
5BzfgJS/hthvMFPZEeS6KpF/YP0dfYqOEJ9B1CfkiDqCpddB7J8QLONYCPYg
RH/BGQlHsHOvQ+RX/FaA+g/CN1AWQ9F/gUcFqh/CL/gohhJ+ClwyUPtZwPwT
jQrQ8PkLdt+PECWofayQ8M0UhYYvRP0NBTVo+EHMd1BRgdoPCZ8N7kKO30DG
fYXGT74I1Hx2SHhpKzuCQidwxz97AKibi04=
              "]]}, "Charting`Private`Tag#1"]}}, <|
         "HighlightElements" -> <|
           "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
          "LayoutOptions" -> <|
           "PanelPlotLayout" -> <||>, 
            "PlotRange" -> {{289045.833333334, 801300.`7.}, {0, 2.97}}, 
            "Frame" -> {{False, False}, {False, False}}, 
            "AxesOrigin" -> {289045.833333334, 0}, 
            "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
            "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
            "DefaultStyle" -> {
              Directive[
               PointSize[0.012833333333333334`], 
               RGBColor[0.24, 0.6, 0.8], 
               AbsoluteThickness[2]]}, 
            "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& ), 
              "ScalingFunctions" -> {{Identity, Identity}, {
                Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
            False|>, 
          "Meta" -> <|
           "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
            ListPlot, "GroupHighlight" -> False|>|>]]& )[<|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
         "LayoutOptions" -> <|
          "PanelPlotLayout" -> <||>, 
           "PlotRange" -> {{289045.833333334, 801300.`7.}, {0, 2.97}}, 
           "Frame" -> {{False, False}, {False, False}}, 
           "AxesOrigin" -> {289045.833333334, 0}, 
           "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
           "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
           "DefaultStyle" -> {
             Directive[
              PointSize[0.012833333333333334`], 
              RGBColor[0.24, 0.6, 0.8], 
              AbsoluteThickness[2]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           ListPlot, "GroupHighlight" -> False|>|>],
       ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
        4.503599627370496*^15, -4.503599627370496*^15}}],
      Selectable->False]},
    Annotation[{{
       Annotation[{
         Directive[
          PointSize[0.012833333333333334`], 
          RGBColor[0.24, 0.6, 0.8], 
          AbsoluteThickness[2]], 
         Point[CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQIJxkqO/Ye+asT0MzmA+CumKzjacl1fXGDLBuY7
JCk5PqwSWef+8Jc9iG9greToARZgBMtv+CjueBik/RAzmM/xRsERrJ3rO1h9
Q5mEozEYQOQ/vFeA8iHyGiUajq2vA3fItf4G8zN0FRzPngEBiHs4LFRR+ApT
5BzfgJS/hthvMFPZEeS6KpF/YP0dfYqOEJ9B1CfkiDqCpddB7J8QLONYCPYg
RH/BGQlHsHOvQ+RX/FaA+g/CN1AWQ9F/gUcFqh/CL/gohhJ+ClwyUPtZwPwT
jQrQ8PkLdt+PECWofayQ8M0UhYYvRP0NBTVo+EHMd1BRgdoPCZ8N7kKO30DG
fYXGT74I1Hx2SHhpKzuCQidwxz97AKibi04=
          "]]}, "Charting`Private`Tag#1"]}}, <|
     "HighlightElements" -> <|
       "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
      "LayoutOptions" -> <|
       "PanelPlotLayout" -> <||>, 
        "PlotRange" -> {{289045.833333334, 801300.`7.}, {0, 2.97}}, 
        "Frame" -> {{False, False}, {False, False}}, 
        "AxesOrigin" -> {289045.833333334, 0}, 
        "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
        "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
          Directive[
           PointSize[0.012833333333333334`], 
           RGBColor[0.24, 0.6, 0.8], 
           AbsoluteThickness[2]]}, 
        "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), 
          "ScalingFunctions" -> {{Identity, Identity}, {
            Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
      "Meta" -> <|
       "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
        ListPlot, "GroupHighlight" -> False|>|>, 
     "DynamicHighlight"]], {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{289045.833333334, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.24, 0.6, 0.8], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.95, 0.627, 0.1425], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.455, 0.7, 0.21], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.578, 0.51, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.4, 0.64, 1.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[1., 0.75, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.8, 0.4, 0.76], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.637, 0.65, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> True, "IncludeHighlighting" -> "CurrentPoint", 
    "HighlightStyle" -> Automatic, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{289045.833333334, 801300.}, {0, 2.97}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.947587765872891*^9, 3.947587867954974*^9, 
  3.948370805714542*^9},
 CellLabel->
  "Out[136]=",ExpressionUUID->"c3562e97-4b1e-41d8-af9e-f5bd6688e5c2"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{808, 747},
WindowMargins->{{Automatic, 595}, {Automatic, 18}},
TaggingRules-><|"TryRealOnly" -> False|>,
FrontEndVersion->"14.2 for Mac OS X ARM (64-bit) (December 26, 2024)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"91017975-3cdc-4065-86b4-b32b23d1a5d0"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[576, 22, 730, 10, 84, "Chapter",ExpressionUUID->"7c6914ce-f26c-40f3-ab51-c6be96319572"],
Cell[1309, 34, 246, 7, 65, "Subtitle",ExpressionUUID->"cc26ccbc-35cf-487a-b4ec-eec16aae75a3"],
Cell[1558, 43, 156, 3, 65, "Subtitle",ExpressionUUID->"304598fe-4c66-4bf8-b7da-9a9a480f12fe"],
Cell[CellGroupData[{
Cell[1739, 50, 466, 13, 36, "Input",ExpressionUUID->"9d9ee833-cf35-44c1-9c4e-b450a15a20ec"],
Cell[2208, 65, 787, 12, 470, "Output",ExpressionUUID->"5779bad5-dd73-4e62-8253-b7a6a7e2e916"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3032, 82, 622, 17, 62, "Input",ExpressionUUID->"e2f747f6-b7e8-4ebc-8c84-91fae8e80c5c"],
Cell[3657, 101, 3073, 59, 470, "Output",ExpressionUUID->"6d0ac2d7-c765-4f05-8f9e-9d91c68626fb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6767, 165, 541, 15, 36, "Input",ExpressionUUID->"9474d18c-f378-4c91-bb7a-54817aa779ba"],
Cell[7311, 182, 2592, 37, 470, "Output",ExpressionUUID->"3702254c-7355-4697-99da-a4575fc4e752"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9940, 224, 512, 14, 36, "Input",ExpressionUUID->"14601e26-ae36-405c-aad3-dfba22c7a382"],
Cell[10455, 240, 2185, 31, 470, "Output",ExpressionUUID->"733a1cba-c9d8-4f76-91e0-3c6cfbba783b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12677, 276, 684, 18, 36, "Input",ExpressionUUID->"417bbf2d-1f32-4a86-a00b-e603392666bb"],
Cell[13364, 296, 1976, 39, 587, "Output",ExpressionUUID->"ede866b4-9eb3-4672-81cb-05251a966da8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[15377, 340, 617, 16, 113, "Input",ExpressionUUID->"07aea1a1-59f8-4e31-b6f4-6dedae05c5e1"],
Cell[15997, 358, 5467, 106, 509, "Output",ExpressionUUID->"65f07d01-8c06-4924-8929-80c94bf5fc8b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[21501, 469, 1190, 31, 87, "Input",ExpressionUUID->"f1cf1704-8b7b-447d-989f-123eb6b73da3"],
Cell[22694, 502, 160, 3, 41, "Output",ExpressionUUID->"0dce373c-d11c-4691-adff-1b9cc5816b2b"]
}, Open  ]],
Cell[22869, 508, 300, 7, 36, "Input",ExpressionUUID->"ea4b94b7-f35a-4f2f-9d75-1cf8287c4368"],
Cell[23172, 517, 289, 6, 36, "Input",ExpressionUUID->"691f90a7-d401-471d-81f2-9e48889c1494"],
Cell[CellGroupData[{
Cell[23486, 527, 1140, 29, 87, "Input",ExpressionUUID->"42c71d04-de1e-4117-a008-186989f90536"],
Cell[24629, 558, 255848, 9198, 509, "Output",ExpressionUUID->"d92a70f8-f287-401f-b1aa-d18d1ae98028"]
}, Open  ]],
Cell[280492, 9759, 203, 4, 36, "Input",ExpressionUUID->"0ebd774a-8c1c-44a9-9eb5-9b7026bade37"],
Cell[CellGroupData[{
Cell[280720, 9767, 641, 19, 62, "Input",ExpressionUUID->"0f610f52-dd87-4bb3-832b-0f08a7f91b2f"],
Cell[281364, 9788, 1931, 39, 453, "Output",ExpressionUUID->"65cff056-a454-4b31-b715-195cab7f559f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[283332, 9832, 629, 16, 62, "Input",ExpressionUUID->"6a3da825-b345-41fd-81c2-deca71c346de"],
Cell[283964, 9850, 6134, 130, 458, "Output",ExpressionUUID->"0a40b006-4b1a-4c46-b3da-ef0248df073b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[290135, 9985, 508, 11, 36, "Input",ExpressionUUID->"36a578a3-c1a8-4e9b-90ff-77ddd0d52995"],
Cell[290646, 9998, 55000, 902, 505, 761, 11, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"1bcccb59-d709-48f5-8203-ef985c41abe2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[345683, 10905, 933, 24, 113, "Input",ExpressionUUID->"740d84a5-5cd2-4ef3-bdae-6bb904963def"],
Cell[346619, 10931, 1951, 39, 588, "Output",ExpressionUUID->"3fb257b2-8b96-4ac8-86c3-64c6f3022d54"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[348619, 10976, 158, 3, 65, "Subtitle",ExpressionUUID->"e8430f9b-db35-45e8-ac1e-61ba8edc3982"],
Cell[CellGroupData[{
Cell[348802, 10983, 327, 7, 44, "Input",ExpressionUUID->"8af27645-a127-4203-92f6-c0cfba8de6b9"],
Cell[349132, 10992, 264, 5, 49, "Output",ExpressionUUID->"662a03b0-6a93-4dd5-92cb-cea32bc2fc4f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[349433, 11002, 448, 11, 44, "Input",ExpressionUUID->"1ba60157-7aca-4a09-8cbd-2486a69b7e6e"],
Cell[349884, 11015, 387, 9, 47, "Output",ExpressionUUID->"2bb44c60-ac6d-4965-8145-86874aef6e5a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[350308, 11029, 744, 17, 45, "Input",ExpressionUUID->"5a56e33f-a302-4f32-86f4-b66bfa1c9aec"],
Cell[351055, 11048, 284, 6, 46, "Output",ExpressionUUID->"ec46e87f-835b-4718-bb9c-89ea360d622c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[351376, 11059, 3411, 65, 99, "Input",ExpressionUUID->"399d2658-1737-4bdf-a2ed-45bc6e1c3527"],
Cell[354790, 11126, 192, 3, 41, "Output",ExpressionUUID->"c1e9fa2f-9cf4-458c-8a82-b0237e4bceec"]
}, Open  ]],
Cell[CellGroupData[{
Cell[355019, 11134, 1849, 38, 53, "Input",ExpressionUUID->"83a690d3-73fd-4509-82a7-4a11945c23bd"],
Cell[356871, 11174, 214, 3, 41, "Output",ExpressionUUID->"d9b1ef7f-431b-4f7c-985d-ed84aad99840"]
}, Open  ]],
Cell[CellGroupData[{
Cell[357122, 11182, 786, 16, 47, "Input",ExpressionUUID->"4c92040f-7689-4d9d-8aa9-be2da018fd29"],
Cell[357911, 11200, 622, 15, 48, "Output",ExpressionUUID->"4662351c-3f3b-495f-bd49-e34da70c9b52"]
}, Open  ]],
Cell[CellGroupData[{
Cell[358570, 11220, 731, 16, 44, "Input",ExpressionUUID->"6ca85eea-c918-4bc0-b067-50cd7fe2124b"],
Cell[359304, 11238, 287, 6, 49, "Output",ExpressionUUID->"eadc5544-fa15-4aaf-9fed-59fd31cc001f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[359628, 11249, 1781, 33, 46, "Input",ExpressionUUID->"63fa3ebc-1b63-4be6-b8c4-8d470e78b029"],
Cell[361412, 11284, 1231, 36, 155, "Output",ExpressionUUID->"15cf6da9-ff9a-42f0-af33-6e380e413407"]
}, Open  ]],
Cell[CellGroupData[{
Cell[362680, 11325, 322, 7, 36, "Input",ExpressionUUID->"19f3cb62-6849-4b74-a901-ac18690b4693"],
Cell[363005, 11334, 266, 6, 41, "Output",ExpressionUUID->"ebcfee9d-bbf9-4f48-a323-aca623566473"]
}, Open  ]],
Cell[CellGroupData[{
Cell[363308, 11345, 435, 11, 36, "Input",ExpressionUUID->"60a4627a-cd83-41b9-bdd3-7bd5afb91a6a"],
Cell[363746, 11358, 1744, 70, 389, "Output",ExpressionUUID->"90bab44a-def7-44ff-a5f5-5d33bbfc9ab3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[365527, 11433, 146788, 2415, 68, "Input",ExpressionUUID->"6698d5a6-3661-43bc-9ca9-af38d6f9860d"],
Cell[512318, 13850, 147863, 2431, 348, "Output",ExpressionUUID->"eb277e18-02c2-4fd5-9c95-6fbc944802c2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[660218, 16286, 542, 14, 36, "Input",ExpressionUUID->"71514968-1f0f-4769-84cb-aeaedc428d13"],
Cell[660763, 16302, 3827, 64, 433, "Output",ExpressionUUID->"b3b55d75-35d3-4fd7-9de3-6fbf403bd11c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[664627, 16371, 514, 14, 62, "Input",ExpressionUUID->"3914ffae-58d3-461a-8e58-e28de7c3139b"],
Cell[665144, 16387, 1861, 38, 670, "Output",ExpressionUUID->"ae60dab0-6599-48d8-8c1a-f2ecf329c06e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[667042, 16430, 514, 11, 36, "Input",ExpressionUUID->"8597b4a8-7394-4d23-8f5f-6254d2a62ab3"],
Cell[667559, 16443, 32538, 536, 561, "Output",ExpressionUUID->"65d4b213-ba90-4b1d-b4fe-2c964b55a446"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[700146, 16985, 175, 3, 65, "Subtitle",ExpressionUUID->"8a93c6d5-d638-4276-a691-8cb456fd4679"],
Cell[CellGroupData[{
Cell[700346, 16992, 2120, 40, 44, "Input",ExpressionUUID->"4207d543-9cec-4e6a-9865-eb49a1a96193"],
Cell[702469, 17034, 453, 10, 41, "Output",ExpressionUUID->"da879bc2-096f-476e-9c51-e4fd3ccd37e1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[702959, 17049, 6928, 123, 88, "Input",ExpressionUUID->"83932878-d959-404a-8c61-ac952093f77a"],
Cell[709890, 17174, 11312, 254, 704, "Output",ExpressionUUID->"36bd3fda-a04f-4634-bfc1-ac22d4d28e57"]
}, Open  ]],
Cell[CellGroupData[{
Cell[721239, 17433, 6678, 120, 88, "Input",ExpressionUUID->"aba23c4b-d18c-492e-9536-e1e91f709550"],
Cell[727920, 17555, 15068, 372, 321, "Output",ExpressionUUID->"f7fdce63-9418-4562-b436-f0769e545027"]
}, Open  ]],
Cell[CellGroupData[{
Cell[743025, 17932, 6682, 120, 88, "Input",ExpressionUUID->"d937932f-ea04-45be-8e25-574c5bd7216d"],
Cell[749710, 18054, 3210, 73, 294, "Output",ExpressionUUID->"7c501312-6e99-4d8a-a8f3-b9a34a0b0c77"]
}, Open  ]],
Cell[CellGroupData[{
Cell[752957, 18132, 14054, 246, 238, "Input",ExpressionUUID->"51bbed9d-42d4-4528-987b-b6c18efea355"],
Cell[767014, 18380, 9294, 219, 297, "Output",ExpressionUUID->"c3562e97-4b1e-41d8-af9e-f5bd6688e5c2"]
}, Open  ]]
}, Open  ]]
}
]
*)

