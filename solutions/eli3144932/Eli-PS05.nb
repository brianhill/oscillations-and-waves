(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Wolfram 14.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       154,          7]
NotebookDataLength[    385842,       7660]
NotebookOptionsPosition[    379135,       7534]
NotebookOutlinePosition[    379572,       7551]
CellTagsIndexPosition[    379529,       7548]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData["\[AliasDelimiter]"], "Input",
 CellChangeTimes->{
  3.9476759274216003`*^9},ExpressionUUID->"62507eb3-e38f-4626-89b6-\
059a39f765b3"],

Cell[CellGroupData[{

Cell["P5 2/2", "Title",
 CellChangeTimes->{{3.947503290117753*^9, 
  3.947503294485774*^9}},ExpressionUUID->"46ad13c3-f813-4a8f-920f-\
1b3232e94a41"],

Cell["Chapter 14", "Subtitle",
 CellChangeTimes->{{3.947503305579845*^9, 
  3.947503307754675*^9}},ExpressionUUID->"86d1617b-3980-4e0b-8a96-\
78f281084cd9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Circle", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}], ",", "r"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"r", ",", "1", ",", "5"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.947503314868082*^9, 3.9475033354008923`*^9}, {
  3.947503366448056*^9, 3.9475033874591923`*^9}},
 CellLabel->
  "In[859]:=",ExpressionUUID->"8a7a6320-acf2-4e2d-8166-97cd3ca2a8fc"],

Cell[BoxData[
 GraphicsBox[{CircleBox[{0, 0}, 1], CircleBox[{0, 0}, 2], 
   CircleBox[{0, 0}, 3], CircleBox[{0, 0}, 4], 
   CircleBox[{0, 0}, 5]}]], "Output",
 CellChangeTimes->{3.947503390099936*^9, 3.947504646504393*^9},
 CellLabel->
  "Out[859]=",ExpressionUUID->"4fad0571-2996-41ce-af5e-792642609542"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Style", "[", 
     RowBox[{
      RowBox[{"Circle", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", "r"}], "]"}], ",", 
      RowBox[{"RandomColor", "[", "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"r", ",", "1", ",", "10"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.9475034054196177`*^9, 3.947503457581081*^9}},
 CellLabel->
  "In[860]:=",ExpressionUUID->"1ca32b9f-7c6e-44a0-ab00-b9680112999f"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.013266910669172072`, 0.3462774401132538, 0.15746173158321897`],
     CircleBox[{0, 0}, 1]}, 
   {RGBColor[0.28861884701819673`, 0.02344832964870358, 0.9858920570401855], 
    CircleBox[{0, 0}, 2]}, 
   {RGBColor[0.5694016535952962, 0.7137272932376761, 0.7009847718102811], 
    CircleBox[{0, 0}, 3]}, 
   {RGBColor[0.0020205238304507045`, 0.326526848732285, 0.06748608288204738], 
    CircleBox[{0, 0}, 4]}, 
   {RGBColor[0.022239279877722673`, 0.37150567736759865`, 0.5575628050463926],
     CircleBox[{0, 0}, 5]}, 
   {RGBColor[0.7160194674897182, 0.5738543163408574, 0.6247755603732801], 
    CircleBox[{0, 0}, 6]}, 
   {RGBColor[0.6408068957762256, 0.7429324501749268, 0.4692615240861586], 
    CircleBox[{0, 0}, 7]}, 
   {RGBColor[0.18642556146739508`, 0.0129079505919516, 0.4767507610008326], 
    CircleBox[{0, 0}, 8]}, 
   {RGBColor[0.20360130016380262`, 0.7695683077712641, 0.7746060891566815], 
    CircleBox[{0, 0}, 9]}, 
   {RGBColor[0.8809843284828001, 0.08218386100643338, 0.28304972420967567`], 
    CircleBox[{0, 0}, 10]}}]], "Output",
 CellChangeTimes->{{3.947503435329607*^9, 3.9475034581827*^9}, 
   3.947504646560999*^9},
 CellLabel->
  "Out[860]=",ExpressionUUID->"1e35c610-ea60-4f49-98cc-690832e4400e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Circle", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "y"}], "}"}], ",", "1"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "1", ",", "10"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", "1", ",", "10"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.947503483952223*^9, 3.947503533964335*^9}},
 CellLabel->
  "In[861]:=",ExpressionUUID->"1587b94b-fb14-4336-b529-f7bcee4f39af"],

Cell[BoxData[
 GraphicsBox[{{CircleBox[{1, 1}, 1], CircleBox[{1, 2}, 1], 
    CircleBox[{1, 3}, 1], CircleBox[{1, 4}, 1], CircleBox[{1, 5}, 1], 
    CircleBox[{1, 6}, 1], CircleBox[{1, 7}, 1], CircleBox[{1, 8}, 1], 
    CircleBox[{1, 9}, 1], CircleBox[{1, 10}, 1]}, {CircleBox[{2, 1}, 1], 
    CircleBox[{2, 2}, 1], CircleBox[{2, 3}, 1], CircleBox[{2, 4}, 1], 
    CircleBox[{2, 5}, 1], CircleBox[{2, 6}, 1], CircleBox[{2, 7}, 1], 
    CircleBox[{2, 8}, 1], CircleBox[{2, 9}, 1], CircleBox[{2, 10}, 1]}, {
    CircleBox[{3, 1}, 1], CircleBox[{3, 2}, 1], CircleBox[{3, 3}, 1], 
    CircleBox[{3, 4}, 1], CircleBox[{3, 5}, 1], CircleBox[{3, 6}, 1], 
    CircleBox[{3, 7}, 1], CircleBox[{3, 8}, 1], CircleBox[{3, 9}, 1], 
    CircleBox[{3, 10}, 1]}, {CircleBox[{4, 1}, 1], CircleBox[{4, 2}, 1], 
    CircleBox[{4, 3}, 1], CircleBox[{4, 4}, 1], CircleBox[{4, 5}, 1], 
    CircleBox[{4, 6}, 1], CircleBox[{4, 7}, 1], CircleBox[{4, 8}, 1], 
    CircleBox[{4, 9}, 1], CircleBox[{4, 10}, 1]}, {CircleBox[{5, 1}, 1], 
    CircleBox[{5, 2}, 1], CircleBox[{5, 3}, 1], CircleBox[{5, 4}, 1], 
    CircleBox[{5, 5}, 1], CircleBox[{5, 6}, 1], CircleBox[{5, 7}, 1], 
    CircleBox[{5, 8}, 1], CircleBox[{5, 9}, 1], CircleBox[{5, 10}, 1]}, {
    CircleBox[{6, 1}, 1], CircleBox[{6, 2}, 1], CircleBox[{6, 3}, 1], 
    CircleBox[{6, 4}, 1], CircleBox[{6, 5}, 1], CircleBox[{6, 6}, 1], 
    CircleBox[{6, 7}, 1], CircleBox[{6, 8}, 1], CircleBox[{6, 9}, 1], 
    CircleBox[{6, 10}, 1]}, {CircleBox[{7, 1}, 1], CircleBox[{7, 2}, 1], 
    CircleBox[{7, 3}, 1], CircleBox[{7, 4}, 1], CircleBox[{7, 5}, 1], 
    CircleBox[{7, 6}, 1], CircleBox[{7, 7}, 1], CircleBox[{7, 8}, 1], 
    CircleBox[{7, 9}, 1], CircleBox[{7, 10}, 1]}, {CircleBox[{8, 1}, 1], 
    CircleBox[{8, 2}, 1], CircleBox[{8, 3}, 1], CircleBox[{8, 4}, 1], 
    CircleBox[{8, 5}, 1], CircleBox[{8, 6}, 1], CircleBox[{8, 7}, 1], 
    CircleBox[{8, 8}, 1], CircleBox[{8, 9}, 1], CircleBox[{8, 10}, 1]}, {
    CircleBox[{9, 1}, 1], CircleBox[{9, 2}, 1], CircleBox[{9, 3}, 1], 
    CircleBox[{9, 4}, 1], CircleBox[{9, 5}, 1], CircleBox[{9, 6}, 1], 
    CircleBox[{9, 7}, 1], CircleBox[{9, 8}, 1], CircleBox[{9, 9}, 1], 
    CircleBox[{9, 10}, 1]}, {CircleBox[{10, 1}, 1], CircleBox[{10, 2}, 1], 
    CircleBox[{10, 3}, 1], CircleBox[{10, 4}, 1], CircleBox[{10, 5}, 1], 
    CircleBox[{10, 6}, 1], CircleBox[{10, 7}, 1], CircleBox[{10, 8}, 1], 
    CircleBox[{10, 9}, 1], CircleBox[{10, 10}, 1]}}]], "Output",
 CellChangeTimes->{{3.9475035216228113`*^9, 3.9475035348190327`*^9}, 
   3.947504646574461*^9},
 CellLabel->
  "Out[861]=",ExpressionUUID->"e8f33b49-666c-4f45-9879-52bdd6ca3d9e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Point", "[", 
     RowBox[{"{", 
      RowBox[{"x", ",", "y"}], "}"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "1", ",", "10"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", "1", ",", "10"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.947503567078683*^9, 3.947503596456212*^9}},
 CellLabel->
  "In[862]:=",ExpressionUUID->"ebcc6e5e-9f4c-4f3d-83ec-470fa194bb13"],

Cell[BoxData[
 GraphicsBox[{{PointBox[{1, 1}], PointBox[{1, 2}], PointBox[{1, 3}], 
    PointBox[{1, 4}], PointBox[{1, 5}], PointBox[{1, 6}], PointBox[{1, 7}], 
    PointBox[{1, 8}], PointBox[{1, 9}], PointBox[{1, 10}]}, {PointBox[{2, 1}],
     PointBox[{2, 2}], PointBox[{2, 3}], PointBox[{2, 4}], PointBox[{2, 5}], 
    PointBox[{2, 6}], PointBox[{2, 7}], PointBox[{2, 8}], PointBox[{2, 9}], 
    PointBox[{2, 10}]}, {PointBox[{3, 1}], PointBox[{3, 2}], PointBox[{3, 3}],
     PointBox[{3, 4}], PointBox[{3, 5}], PointBox[{3, 6}], PointBox[{3, 7}], 
    PointBox[{3, 8}], PointBox[{3, 9}], PointBox[{3, 10}]}, {PointBox[{4, 1}],
     PointBox[{4, 2}], PointBox[{4, 3}], PointBox[{4, 4}], PointBox[{4, 5}], 
    PointBox[{4, 6}], PointBox[{4, 7}], PointBox[{4, 8}], PointBox[{4, 9}], 
    PointBox[{4, 10}]}, {PointBox[{5, 1}], PointBox[{5, 2}], PointBox[{5, 3}],
     PointBox[{5, 4}], PointBox[{5, 5}], PointBox[{5, 6}], PointBox[{5, 7}], 
    PointBox[{5, 8}], PointBox[{5, 9}], PointBox[{5, 10}]}, {PointBox[{6, 1}],
     PointBox[{6, 2}], PointBox[{6, 3}], PointBox[{6, 4}], PointBox[{6, 5}], 
    PointBox[{6, 6}], PointBox[{6, 7}], PointBox[{6, 8}], PointBox[{6, 9}], 
    PointBox[{6, 10}]}, {PointBox[{7, 1}], PointBox[{7, 2}], PointBox[{7, 3}],
     PointBox[{7, 4}], PointBox[{7, 5}], PointBox[{7, 6}], PointBox[{7, 7}], 
    PointBox[{7, 8}], PointBox[{7, 9}], PointBox[{7, 10}]}, {PointBox[{8, 1}],
     PointBox[{8, 2}], PointBox[{8, 3}], PointBox[{8, 4}], PointBox[{8, 5}], 
    PointBox[{8, 6}], PointBox[{8, 7}], PointBox[{8, 8}], PointBox[{8, 9}], 
    PointBox[{8, 10}]}, {PointBox[{9, 1}], PointBox[{9, 2}], PointBox[{9, 3}],
     PointBox[{9, 4}], PointBox[{9, 5}], PointBox[{9, 6}], PointBox[{9, 7}], 
    PointBox[{9, 8}], PointBox[{9, 9}], PointBox[{9, 10}]}, {
    PointBox[{10, 1}], PointBox[{10, 2}], PointBox[{10, 3}], 
    PointBox[{10, 4}], PointBox[{10, 5}], PointBox[{10, 6}], 
    PointBox[{10, 7}], PointBox[{10, 8}], PointBox[{10, 9}], 
    PointBox[{10, 10}]}}]], "Output",
 CellChangeTimes->{3.947503601702383*^9, 3.947504646609148*^9},
 CellLabel->
  "Out[862]=",ExpressionUUID->"d2eb2e5e-66a2-4ef3-8e57-4cbb8cb311fe"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Graphics", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Circle", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", "r"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"r", ",", "1", ",", "n"}], "}"}]}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "1", ",", "20", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.947503617222129*^9, 3.947503671246645*^9}},
 CellLabel->
  "In[863]:=",ExpressionUUID->"f95bcc6e-f41b-4b3f-a00b-4789a7affa64"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`n$$ = 1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`n$$], 1, 20, 1, ControlType -> Manipulator}}, 
    Typeset`size$$ = {360., {176.846833203125, 182.578766796875}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = True, 
    Typeset`keyframeActionsQ$$ = False, Typeset`keyframeList$$ = {}}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`n$$ = 1}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$, Typeset`keyframeActionsQ$$, 
        Typeset`keyframeList$$}, "Body" :> Graphics[
        Table[
         Circle[{0, 0}, $CellContext`r], {$CellContext`r, 
          1, $CellContext`n$$}]], 
      "Specifications" :> {{$CellContext`n$$, 1, 20, 1}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{403.1, {220.01725861816405`, 225.74919221191405`}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.947503672164085*^9, 3.947504646649334*^9},
 CellLabel->
  "Out[863]=",ExpressionUUID->"573993ed-a67e-437d-8aed-fa699648ac45"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics3D", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Style", "[", 
     RowBox[{
      RowBox[{"Sphere", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"RandomInteger", "[", 
          RowBox[{"10", ",", "3"}], "]"}], "}"}], ",", "1"}], "]"}], ",", 
      RowBox[{"RandomColor", "[", "]"}]}], "]"}], ",", "50"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.947503698974926*^9, 3.947503833668272*^9}, {
  3.9475038692790956`*^9, 3.9475039057221518`*^9}, {3.9475039437607203`*^9, 
  3.947503944059218*^9}, {3.9475039764156733`*^9, 3.9475039961911097`*^9}},
 CellLabel->
  "In[864]:=",ExpressionUUID->"4f481d9a-ed76-4900-8a48-39287bf31203"],

Cell[BoxData[
 Graphics3DBox[{
   {RGBColor[0.9349361513824797, 0.2709386716706321, 0.8011272199248556], 
    SphereBox[{{1, 6, 5}}, 1]}, 
   {RGBColor[0.09815646820702661, 0.05802588663727515, 0.8793833299134128], 
    SphereBox[{{5, 9, 4}}, 1]}, 
   {RGBColor[0.01591301352617558, 0.31969290510801973`, 0.24428305018488228`],
     SphereBox[{{5, 0, 4}}, 1]}, 
   {RGBColor[0.2943467823409489, 0.9606637406693304, 0.8461047496997067], 
    SphereBox[{{3, 2, 8}}, 1]}, 
   {RGBColor[0.2319587074374292, 0.9339507638907818, 0.08113137681716509], 
    SphereBox[{{0, 10, 1}}, 1]}, 
   {RGBColor[0.5605036224371442, 0.7087338316822858, 0.7251806092156194], 
    SphereBox[{{1, 2, 8}}, 1]}, 
   {RGBColor[0.3196235213158616, 0.30813737846079126`, 0.019529268102957076`],
     SphereBox[{{1, 1, 3}}, 1]}, 
   {RGBColor[0.28336277556568534`, 0.7009437175165556, 0.22852434286732803`], 
    SphereBox[{{5, 8, 10}}, 1]}, 
   {RGBColor[0.3795942993145547, 0.3271120435853536, 0.009869706542743995], 
    SphereBox[{{5, 2, 3}}, 1]}, 
   {RGBColor[0.9650127071804144, 0.6930301439922688, 0.20947985538055391`], 
    SphereBox[{{3, 6, 6}}, 1]}, 
   {RGBColor[0.6359856917666831, 0.6207461911026477, 0.3717675586209752], 
    SphereBox[{{0, 7, 8}}, 1]}, 
   {RGBColor[0.947898569094958, 0.9781339662851907, 0.3134774592076095], 
    SphereBox[{{1, 5, 2}}, 1]}, 
   {RGBColor[0.40940514195700395`, 0.6382313789640228, 0.5306956659816917], 
    SphereBox[{{3, 10, 7}}, 1]}, 
   {RGBColor[0.5173936613413863, 0.8669596925804297, 0.39997858002667375`], 
    SphereBox[{{7, 1, 5}}, 1]}, 
   {RGBColor[0.1773906365634812, 0.18366641942140793`, 0.00439424957607315], 
    SphereBox[{{1, 4, 1}}, 1]}, 
   {RGBColor[
    0.39649904639580447`, 0.056919399525854564`, 0.015518367922273901`], 
    SphereBox[{{7, 9, 4}}, 1]}, 
   {RGBColor[0.9864103984372692, 0.7115303962880151, 0.989448662106293], 
    SphereBox[{{6, 4, 5}}, 1]}, 
   {RGBColor[0.9213795705639913, 0.5417755948998235, 0.9417207997666133], 
    SphereBox[{{10, 3, 10}}, 1]}, 
   {RGBColor[0.3742379410114891, 0.3218868836804598, 0.06967341718746645], 
    SphereBox[{{1, 9, 8}}, 1]}, 
   {RGBColor[0.5953611340626828, 0.09670424777267361, 0.07932632803739215], 
    SphereBox[{{5, 5, 5}}, 1]}, 
   {RGBColor[0.8884947855434266, 0.2767674710247041, 0.9050166705861187], 
    SphereBox[{{3, 1, 10}}, 1]}, 
   {RGBColor[0.8597640109239468, 0.5141471714444099, 0.6309393653802053], 
    SphereBox[{{8, 4, 1}}, 1]}, 
   {RGBColor[0.8912593472017261, 0.06823348852554956, 0.6176066204739386], 
    SphereBox[{{3, 5, 10}}, 1]}, 
   {RGBColor[0.24401768176092387`, 0.6318845855710449, 0.7128101122666102], 
    SphereBox[{{5, 0, 3}}, 1]}, 
   {RGBColor[0.20126150737832815`, 0.4167521129940388, 0.14222998572034595`], 
    SphereBox[{{0, 9, 3}}, 1]}, 
   {RGBColor[0.3219322009746195, 0.5091110315611453, 0.20786032726063985`], 
    SphereBox[{{4, 5, 1}}, 1]}, 
   {RGBColor[0.14634063689414578`, 0.5535269789113921, 0.49451478894710377`], 
    SphereBox[{{8, 9, 8}}, 1]}, 
   {RGBColor[0.4209339672516159, 0.6850737245691634, 0.5710815336174182], 
    SphereBox[{{2, 1, 9}}, 1]}, 
   {RGBColor[0.20242504853444943`, 0.09283494504380196, 0.6766649501810562], 
    SphereBox[{{6, 2, 4}}, 1]}, 
   {RGBColor[0.5794904331635933, 0.43193498211788617`, 0.43936599546833577`], 
    SphereBox[{{7, 4, 4}}, 1]}, 
   {RGBColor[0.8490838276215107, 0.2616552319199308, 0.9800357450822703], 
    SphereBox[{{5, 10, 9}}, 1]}, 
   {RGBColor[0.21978105699599682`, 0.992330905549097, 0.8280894485292778], 
    SphereBox[{{8, 7, 2}}, 1]}, 
   {RGBColor[0.460392289340841, 0.9729155424263891, 0.6016099086628919], 
    SphereBox[{{4, 5, 3}}, 1]}, 
   {RGBColor[0.9655674322054646, 0.7626560670949132, 0.8139793680966094], 
    SphereBox[{{9, 3, 9}}, 1]}, 
   {RGBColor[0.18567094687871277`, 0.9898710358588438, 0.7326118531338421], 
    SphereBox[{{5, 5, 2}}, 1]}, 
   {RGBColor[0.5891142932165689, 0.32521499754963146`, 0.8523550869891656], 
    SphereBox[{{10, 3, 4}}, 1]}, 
   {RGBColor[0.7414377744510083, 0.6809693564099357, 0.03004621227358939], 
    SphereBox[{{10, 7, 5}}, 1]}, 
   {RGBColor[0.1609073567887418, 0.5391229808313236, 0.10014696449369542`], 
    SphereBox[{{6, 10, 3}}, 1]}, 
   {RGBColor[0.6918327969668534, 0.6792511837405659, 0.060775735942944165`], 
    SphereBox[{{7, 0, 0}}, 1]}, 
   {RGBColor[0.9672711998603822, 0.5412812177083666, 0.4144999805823124], 
    SphereBox[{{2, 10, 7}}, 1]}, 
   {RGBColor[0.8548256357485784, 0.11024916089039616`, 0.816985617016676], 
    SphereBox[{{8, 6, 2}}, 1]}, 
   {RGBColor[0.43413711960594825`, 0.20267861584747338`, 0.4803581227539995], 
    SphereBox[{{4, 5, 8}}, 1]}, 
   {RGBColor[0.6097615547513333, 0.9559353098920804, 0.7741212672045135], 
    SphereBox[{{3, 7, 2}}, 1]}, 
   {RGBColor[0.8117336221911691, 0.6861315536487085, 0.685609328191719], 
    SphereBox[{{2, 8, 6}}, 1]}, 
   {RGBColor[0.15032614595678906`, 0.03545479959527964, 0.5067003072573586], 
    SphereBox[{{1, 3, 7}}, 1]}, 
   {RGBColor[0.74342502687944, 0.8861168043889573, 0.7819046599612158], 
    SphereBox[{{4, 10, 1}}, 1]}, 
   {RGBColor[0.4544804636432085, 0.9067671254176313, 0.7733562020312066], 
    SphereBox[{{2, 8, 9}}, 1]}, 
   {RGBColor[0.7610110910323842, 0.25429371055259264`, 0.7925387836317996], 
    SphereBox[{{8, 2, 3}}, 1]}, 
   {RGBColor[0.3131077446237076, 0.20589486772198007`, 0.407306113622796], 
    SphereBox[{{5, 3, 2}}, 1]}, 
   {RGBColor[0.06518361929989314, 0.4722539478208614, 0.9414348636478691], 
    SphereBox[{{5, 1, 9}}, 1]}}]], "Output",
 CellChangeTimes->{{3.9475038248679647`*^9, 3.9475038341302633`*^9}, {
   3.947503872046268*^9, 3.947503906159734*^9}, 3.947503944650983*^9, {
   3.947503977125311*^9, 3.947503996698022*^9}, {3.947504027714724*^9, 
   3.94750403910598*^9}, 3.9475046467310257`*^9},
 CellLabel->
  "Out[864]=",ExpressionUUID->"a48274f1-c68a-467d-8630-58b1dcb41864"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"%827", ",", 
   RowBox[{"Axes", "\[Rule]", "True"}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", "Black"}]}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->
  "In[865]:=",ExpressionUUID->"c89663ad-c97a-469d-8286-4605d46ec252"],

Cell[BoxData[
 Graphics3DBox[{
   {RGBColor[0.8041124375855113, 0.6069689787379777, 0.7197786422112271], 
    SphereBox[{{3, 2, 2}}, 1]}, 
   {RGBColor[0.9390381286642904, 0.9249739573843845, 0.6220585013054336], 
    SphereBox[{{4, 8, 9}}, 1]}, 
   {RGBColor[0.6820893639549395, 0.09259357088260223, 0.3672498002000595], 
    SphereBox[{{4, 4, 2}}, 1]}, 
   {RGBColor[0.07498173368967609, 0.4854697811874944, 0.988668676676379], 
    SphereBox[{{8, 8, 9}}, 1]}, 
   {RGBColor[
    0.27177623203552304`, 0.35376989188959684`, 0.46391233085207206`], 
    SphereBox[{{2, 6, 4}}, 1]}, 
   {RGBColor[0.5296901047376075, 0.7622500790228335, 0.8749594355420629], 
    SphereBox[{{5, 10, 5}}, 1]}, 
   {RGBColor[0.02946447077351344, 0.7470769194372686, 0.764311991059788], 
    SphereBox[{{8, 10, 2}}, 1]}, 
   {RGBColor[0.5340204959495234, 0.5395800463304217, 0.7530578610253813], 
    SphereBox[{{1, 4, 6}}, 1]}, 
   {RGBColor[0.8442418178119255, 0.7578041144566809, 0.4132960237792458], 
    SphereBox[{{2, 4, 3}}, 1]}, 
   {RGBColor[0.6972708577920566, 0.8613174233711345, 0.22631149508666626`], 
    SphereBox[{{10, 4, 8}}, 1]}, 
   {RGBColor[
    0.45960900707814933`, 0.38551731899305763`, 0.43934459625374456`], 
    SphereBox[{{10, 9, 2}}, 1]}, 
   {RGBColor[0.2727034910558712, 0.011154678246278582`, 0.3465829490709411], 
    SphereBox[{{0, 7, 8}}, 1]}, 
   {RGBColor[0.4153198596681118, 0.2905772193033662, 0.6870598351596435], 
    SphereBox[{{10, 7, 1}}, 1]}, 
   {RGBColor[0.8240624114425592, 0.2847307572254669, 0.1813573261311041], 
    SphereBox[{{8, 7, 5}}, 1]}, 
   {RGBColor[0.48716594618647857`, 0.5198319536841689, 0.7719218369773255], 
    SphereBox[{{6, 4, 9}}, 1]}, 
   {RGBColor[0.7447725613530491, 0.9578068689048165, 0.8123470376223085], 
    SphereBox[{{10, 5, 6}}, 1]}, 
   {RGBColor[0.14954533641145296`, 0.57972441364125, 0.7407387512097008], 
    SphereBox[{{5, 6, 2}}, 1]}, 
   {RGBColor[0.5855702847332149, 0.7946120408811033, 0.3949323333387762], 
    SphereBox[{{0, 3, 4}}, 1]}, 
   {RGBColor[0.8547719642405762, 0.029305207787353238`, 0.07673953380582499], 
    SphereBox[{{3, 9, 5}}, 1]}, 
   {RGBColor[0.45476003008963706`, 0.21062309617393038`, 0.9059598103970099], 
    SphereBox[{{9, 1, 9}}, 1]}, 
   {RGBColor[0.3085546505846053, 0.19130084199322317`, 0.5513671861096732], 
    SphereBox[{{1, 5, 6}}, 1]}, 
   {RGBColor[0.11341598869219927`, 0.3964888952811252, 0.64327300373419], 
    SphereBox[{{5, 4, 9}}, 1]}, 
   {RGBColor[0.3344691875162076, 0.33057233380736983`, 0.07304045823016114], 
    SphereBox[{{1, 3, 9}}, 1]}, 
   {RGBColor[0.856008005523859, 0.29684319287653915`, 0.7514947344403735], 
    SphereBox[{{9, 2, 7}}, 1]}, 
   {RGBColor[0.7364075160431518, 0.1722271434615028, 0.7756543827224722], 
    SphereBox[{{6, 6, 1}}, 1]}, 
   {RGBColor[0.001750891490857276, 0.5582339873724849, 0.5658370668080794], 
    SphereBox[{{4, 7, 2}}, 1]}, 
   {RGBColor[0.5703927056549223, 0.34002680079851455`, 0.6276091089519573], 
    SphereBox[{{1, 4, 7}}, 1]}, 
   {RGBColor[0.4560329649534476, 0.379118739241987, 0.6424447229486772], 
    SphereBox[{{3, 10, 10}}, 1]}, 
   {RGBColor[0.4415192749791561, 0.8174138646463349, 0.01798781009666528], 
    SphereBox[{{8, 4, 6}}, 1]}, 
   {RGBColor[0.10227013428429621`, 0.899752085276373, 0.6914712553544478], 
    SphereBox[{{10, 7, 8}}, 1]}, 
   {RGBColor[0.36748578554836864`, 0.6587912032287191, 0.5043090262298935], 
    SphereBox[{{7, 4, 5}}, 1]}, 
   {RGBColor[0.16816202442797268`, 0.3547723669555942, 0.6532875410829371], 
    SphereBox[{{8, 7, 7}}, 1]}, 
   {RGBColor[0.10597684884655356`, 0.8296556683644178, 0.28169932661649355`], 
    SphereBox[{{2, 9, 7}}, 1]}, 
   {RGBColor[0.850585888431741, 0.7140202321762705, 0.7040837397625166], 
    SphereBox[{{2, 9, 2}}, 1]}, 
   {RGBColor[0.7344675820547026, 0.044386444663849334`, 0.9187324851931453], 
    SphereBox[{{2, 5, 7}}, 1]}, 
   {RGBColor[0.08375381421306538, 0.3659125284125597, 0.44548317502629176`], 
    SphereBox[{{9, 10, 1}}, 1]}, 
   {RGBColor[0.8671257706541067, 0.6403899717115109, 0.7378201102665045], 
    SphereBox[{{3, 6, 1}}, 1]}, 
   {RGBColor[0.7619083424725832, 0.8323919372904649, 0.8681575899309308], 
    SphereBox[{{7, 6, 5}}, 1]}, 
   {RGBColor[0.9971539469734916, 0.8769981866193752, 0.680450047026411], 
    SphereBox[{{8, 4, 0}}, 1]}, 
   {RGBColor[0.8941411233416499, 0.5508914549007553, 0.799227532450608], 
    SphereBox[{{1, 10, 0}}, 1]}, 
   {RGBColor[0.32243574780128825`, 0.45956111995334625`, 0.9515691202140586], 
    SphereBox[{{0, 0, 3}}, 1]}, 
   {RGBColor[0.6261334965956102, 0.0838877108567262, 0.28892881678003857`], 
    SphereBox[{{4, 1, 10}}, 1]}, 
   {RGBColor[0.6111890527129502, 0.8852200303602773, 0.7803042978602737], 
    SphereBox[{{3, 8, 4}}, 1]}, 
   {RGBColor[0.658166346195791, 0.47230365597078183`, 0.008926334671476077], 
    SphereBox[{{2, 3, 8}}, 1]}, 
   {RGBColor[0.12295398917500977`, 0.8397228845692228, 0.9433472176013831], 
    SphereBox[{{3, 3, 9}}, 1]}, 
   {RGBColor[0.8055569392728466, 0.33827981684371156`, 0.9620319833001434], 
    SphereBox[{{1, 2, 4}}, 1]}, 
   {RGBColor[0.7727273780869026, 0.6989864161397825, 0.6680084243154869], 
    SphereBox[{{6, 3, 7}}, 1]}, 
   {RGBColor[0.2464417350121435, 0.4653256724931141, 0.4392708787428945], 
    SphereBox[{{2, 2, 6}}, 1]}, 
   {RGBColor[0.7129827255339094, 0.3095188484325886, 0.9158769609084827], 
    SphereBox[{{5, 1, 10}}, 1]}, 
   {RGBColor[0.5974611066533411, 0.02142271804324425, 0.9275329028392787], 
    SphereBox[{{8, 8, 1}}, 1]}},
  Axes->True,
  AxesStyle->GrayLevel[0]]], "Output",
 CellChangeTimes->{3.947504045172806*^9, 3.947504646768405*^9},
 CellLabel->
  "Out[865]=",ExpressionUUID->"f97630c9-8f39-4d98-9964-ea4918eb8ed6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics3D", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Style", "[", 
     RowBox[{
      RowBox[{"Sphere", "[", 
       RowBox[{"{", 
        RowBox[{"x", ",", "y", ",", "z"}], "}"}], "]"}], ",", 
      RowBox[{"Hue", "[", "n", "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "1", ",", "22", ",", "2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", "1", ",", "22", ",", "2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"z", ",", "1", ",", "22", ",", "2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "0", ",", "1"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.947504094865918*^9, 3.9475045105300093`*^9}, {
  3.947504542516857*^9, 3.9475046006810617`*^9}},
 CellLabel->"In[84]:=",ExpressionUUID->"b7541833-01b1-43d4-ade9-5c9ec758e47c"],

Cell[BoxData[
 Graphics3DBox[{{{{
      {Hue[0], SphereBox[{1, 1, 1}]}, 
      {Hue[1], SphereBox[{1, 1, 1}]}}, {
      {Hue[0], SphereBox[{1, 1, 3}]}, 
      {Hue[1], SphereBox[{1, 1, 3}]}}, {
      {Hue[0], SphereBox[{1, 1, 5}]}, 
      {Hue[1], SphereBox[{1, 1, 5}]}}, {
      {Hue[0], SphereBox[{1, 1, 7}]}, 
      {Hue[1], SphereBox[{1, 1, 7}]}}, {
      {Hue[0], SphereBox[{1, 1, 9}]}, 
      {Hue[1], SphereBox[{1, 1, 9}]}}, {
      {Hue[0], SphereBox[{1, 1, 11}]}, 
      {Hue[1], SphereBox[{1, 1, 11}]}}, {
      {Hue[0], SphereBox[{1, 1, 13}]}, 
      {Hue[1], SphereBox[{1, 1, 13}]}}, {
      {Hue[0], SphereBox[{1, 1, 15}]}, 
      {Hue[1], SphereBox[{1, 1, 15}]}}, {
      {Hue[0], SphereBox[{1, 1, 17}]}, 
      {Hue[1], SphereBox[{1, 1, 17}]}}, {
      {Hue[0], SphereBox[{1, 1, 19}]}, 
      {Hue[1], SphereBox[{1, 1, 19}]}}, {
      {Hue[0], SphereBox[{1, 1, 21}]}, 
      {Hue[1], SphereBox[{1, 1, 21}]}}}, {{
      {Hue[0], SphereBox[{1, 3, 1}]}, 
      {Hue[1], SphereBox[{1, 3, 1}]}}, {
      {Hue[0], SphereBox[{1, 3, 3}]}, 
      {Hue[1], SphereBox[{1, 3, 3}]}}, {
      {Hue[0], SphereBox[{1, 3, 5}]}, 
      {Hue[1], SphereBox[{1, 3, 5}]}}, {
      {Hue[0], SphereBox[{1, 3, 7}]}, 
      {Hue[1], SphereBox[{1, 3, 7}]}}, {
      {Hue[0], SphereBox[{1, 3, 9}]}, 
      {Hue[1], SphereBox[{1, 3, 9}]}}, {
      {Hue[0], SphereBox[{1, 3, 11}]}, 
      {Hue[1], SphereBox[{1, 3, 11}]}}, {
      {Hue[0], SphereBox[{1, 3, 13}]}, 
      {Hue[1], SphereBox[{1, 3, 13}]}}, {
      {Hue[0], SphereBox[{1, 3, 15}]}, 
      {Hue[1], SphereBox[{1, 3, 15}]}}, {
      {Hue[0], SphereBox[{1, 3, 17}]}, 
      {Hue[1], SphereBox[{1, 3, 17}]}}, {
      {Hue[0], SphereBox[{1, 3, 19}]}, 
      {Hue[1], SphereBox[{1, 3, 19}]}}, {
      {Hue[0], SphereBox[{1, 3, 21}]}, 
      {Hue[1], SphereBox[{1, 3, 21}]}}}, {{
      {Hue[0], SphereBox[{1, 5, 1}]}, 
      {Hue[1], SphereBox[{1, 5, 1}]}}, {
      {Hue[0], SphereBox[{1, 5, 3}]}, 
      {Hue[1], SphereBox[{1, 5, 3}]}}, {
      {Hue[0], SphereBox[{1, 5, 5}]}, 
      {Hue[1], SphereBox[{1, 5, 5}]}}, {
      {Hue[0], SphereBox[{1, 5, 7}]}, 
      {Hue[1], SphereBox[{1, 5, 7}]}}, {
      {Hue[0], SphereBox[{1, 5, 9}]}, 
      {Hue[1], SphereBox[{1, 5, 9}]}}, {
      {Hue[0], SphereBox[{1, 5, 11}]}, 
      {Hue[1], SphereBox[{1, 5, 11}]}}, {
      {Hue[0], SphereBox[{1, 5, 13}]}, 
      {Hue[1], SphereBox[{1, 5, 13}]}}, {
      {Hue[0], SphereBox[{1, 5, 15}]}, 
      {Hue[1], SphereBox[{1, 5, 15}]}}, {
      {Hue[0], SphereBox[{1, 5, 17}]}, 
      {Hue[1], SphereBox[{1, 5, 17}]}}, {
      {Hue[0], SphereBox[{1, 5, 19}]}, 
      {Hue[1], SphereBox[{1, 5, 19}]}}, {
      {Hue[0], SphereBox[{1, 5, 21}]}, 
      {Hue[1], SphereBox[{1, 5, 21}]}}}, {{
      {Hue[0], SphereBox[{1, 7, 1}]}, 
      {Hue[1], SphereBox[{1, 7, 1}]}}, {
      {Hue[0], SphereBox[{1, 7, 3}]}, 
      {Hue[1], SphereBox[{1, 7, 3}]}}, {
      {Hue[0], SphereBox[{1, 7, 5}]}, 
      {Hue[1], SphereBox[{1, 7, 5}]}}, {
      {Hue[0], SphereBox[{1, 7, 7}]}, 
      {Hue[1], SphereBox[{1, 7, 7}]}}, {
      {Hue[0], SphereBox[{1, 7, 9}]}, 
      {Hue[1], SphereBox[{1, 7, 9}]}}, {
      {Hue[0], SphereBox[{1, 7, 11}]}, 
      {Hue[1], SphereBox[{1, 7, 11}]}}, {
      {Hue[0], SphereBox[{1, 7, 13}]}, 
      {Hue[1], SphereBox[{1, 7, 13}]}}, {
      {Hue[0], SphereBox[{1, 7, 15}]}, 
      {Hue[1], SphereBox[{1, 7, 15}]}}, {
      {Hue[0], SphereBox[{1, 7, 17}]}, 
      {Hue[1], SphereBox[{1, 7, 17}]}}, {
      {Hue[0], SphereBox[{1, 7, 19}]}, 
      {Hue[1], SphereBox[{1, 7, 19}]}}, {
      {Hue[0], SphereBox[{1, 7, 21}]}, 
      {Hue[1], SphereBox[{1, 7, 21}]}}}, {{
      {Hue[0], SphereBox[{1, 9, 1}]}, 
      {Hue[1], SphereBox[{1, 9, 1}]}}, {
      {Hue[0], SphereBox[{1, 9, 3}]}, 
      {Hue[1], SphereBox[{1, 9, 3}]}}, {
      {Hue[0], SphereBox[{1, 9, 5}]}, 
      {Hue[1], SphereBox[{1, 9, 5}]}}, {
      {Hue[0], SphereBox[{1, 9, 7}]}, 
      {Hue[1], SphereBox[{1, 9, 7}]}}, {
      {Hue[0], SphereBox[{1, 9, 9}]}, 
      {Hue[1], SphereBox[{1, 9, 9}]}}, {
      {Hue[0], SphereBox[{1, 9, 11}]}, 
      {Hue[1], SphereBox[{1, 9, 11}]}}, {
      {Hue[0], SphereBox[{1, 9, 13}]}, 
      {Hue[1], SphereBox[{1, 9, 13}]}}, {
      {Hue[0], SphereBox[{1, 9, 15}]}, 
      {Hue[1], SphereBox[{1, 9, 15}]}}, {
      {Hue[0], SphereBox[{1, 9, 17}]}, 
      {Hue[1], SphereBox[{1, 9, 17}]}}, {
      {Hue[0], SphereBox[{1, 9, 19}]}, 
      {Hue[1], SphereBox[{1, 9, 19}]}}, {
      {Hue[0], SphereBox[{1, 9, 21}]}, 
      {Hue[1], SphereBox[{1, 9, 21}]}}}, {{
      {Hue[0], SphereBox[{1, 11, 1}]}, 
      {Hue[1], SphereBox[{1, 11, 1}]}}, {
      {Hue[0], SphereBox[{1, 11, 3}]}, 
      {Hue[1], SphereBox[{1, 11, 3}]}}, {
      {Hue[0], SphereBox[{1, 11, 5}]}, 
      {Hue[1], SphereBox[{1, 11, 5}]}}, {
      {Hue[0], SphereBox[{1, 11, 7}]}, 
      {Hue[1], SphereBox[{1, 11, 7}]}}, {
      {Hue[0], SphereBox[{1, 11, 9}]}, 
      {Hue[1], SphereBox[{1, 11, 9}]}}, {
      {Hue[0], SphereBox[{1, 11, 11}]}, 
      {Hue[1], SphereBox[{1, 11, 11}]}}, {
      {Hue[0], SphereBox[{1, 11, 13}]}, 
      {Hue[1], SphereBox[{1, 11, 13}]}}, {
      {Hue[0], SphereBox[{1, 11, 15}]}, 
      {Hue[1], SphereBox[{1, 11, 15}]}}, {
      {Hue[0], SphereBox[{1, 11, 17}]}, 
      {Hue[1], SphereBox[{1, 11, 17}]}}, {
      {Hue[0], SphereBox[{1, 11, 19}]}, 
      {Hue[1], SphereBox[{1, 11, 19}]}}, {
      {Hue[0], SphereBox[{1, 11, 21}]}, 
      {Hue[1], SphereBox[{1, 11, 21}]}}}, {{
      {Hue[0], SphereBox[{1, 13, 1}]}, 
      {Hue[1], SphereBox[{1, 13, 1}]}}, {
      {Hue[0], SphereBox[{1, 13, 3}]}, 
      {Hue[1], SphereBox[{1, 13, 3}]}}, {
      {Hue[0], SphereBox[{1, 13, 5}]}, 
      {Hue[1], SphereBox[{1, 13, 5}]}}, {
      {Hue[0], SphereBox[{1, 13, 7}]}, 
      {Hue[1], SphereBox[{1, 13, 7}]}}, {
      {Hue[0], SphereBox[{1, 13, 9}]}, 
      {Hue[1], SphereBox[{1, 13, 9}]}}, {
      {Hue[0], SphereBox[{1, 13, 11}]}, 
      {Hue[1], SphereBox[{1, 13, 11}]}}, {
      {Hue[0], SphereBox[{1, 13, 13}]}, 
      {Hue[1], SphereBox[{1, 13, 13}]}}, {
      {Hue[0], SphereBox[{1, 13, 15}]}, 
      {Hue[1], SphereBox[{1, 13, 15}]}}, {
      {Hue[0], SphereBox[{1, 13, 17}]}, 
      {Hue[1], SphereBox[{1, 13, 17}]}}, {
      {Hue[0], SphereBox[{1, 13, 19}]}, 
      {Hue[1], SphereBox[{1, 13, 19}]}}, {
      {Hue[0], SphereBox[{1, 13, 21}]}, 
      {Hue[1], SphereBox[{1, 13, 21}]}}}, {{
      {Hue[0], SphereBox[{1, 15, 1}]}, 
      {Hue[1], SphereBox[{1, 15, 1}]}}, {
      {Hue[0], SphereBox[{1, 15, 3}]}, 
      {Hue[1], SphereBox[{1, 15, 3}]}}, {
      {Hue[0], SphereBox[{1, 15, 5}]}, 
      {Hue[1], SphereBox[{1, 15, 5}]}}, {
      {Hue[0], SphereBox[{1, 15, 7}]}, 
      {Hue[1], SphereBox[{1, 15, 7}]}}, {
      {Hue[0], SphereBox[{1, 15, 9}]}, 
      {Hue[1], SphereBox[{1, 15, 9}]}}, {
      {Hue[0], SphereBox[{1, 15, 11}]}, 
      {Hue[1], SphereBox[{1, 15, 11}]}}, {
      {Hue[0], SphereBox[{1, 15, 13}]}, 
      {Hue[1], SphereBox[{1, 15, 13}]}}, {
      {Hue[0], SphereBox[{1, 15, 15}]}, 
      {Hue[1], SphereBox[{1, 15, 15}]}}, {
      {Hue[0], SphereBox[{1, 15, 17}]}, 
      {Hue[1], SphereBox[{1, 15, 17}]}}, {
      {Hue[0], SphereBox[{1, 15, 19}]}, 
      {Hue[1], SphereBox[{1, 15, 19}]}}, {
      {Hue[0], SphereBox[{1, 15, 21}]}, 
      {Hue[1], SphereBox[{1, 15, 21}]}}}, {{
      {Hue[0], SphereBox[{1, 17, 1}]}, 
      {Hue[1], SphereBox[{1, 17, 1}]}}, {
      {Hue[0], SphereBox[{1, 17, 3}]}, 
      {Hue[1], SphereBox[{1, 17, 3}]}}, {
      {Hue[0], SphereBox[{1, 17, 5}]}, 
      {Hue[1], SphereBox[{1, 17, 5}]}}, {
      {Hue[0], SphereBox[{1, 17, 7}]}, 
      {Hue[1], SphereBox[{1, 17, 7}]}}, {
      {Hue[0], SphereBox[{1, 17, 9}]}, 
      {Hue[1], SphereBox[{1, 17, 9}]}}, {
      {Hue[0], SphereBox[{1, 17, 11}]}, 
      {Hue[1], SphereBox[{1, 17, 11}]}}, {
      {Hue[0], SphereBox[{1, 17, 13}]}, 
      {Hue[1], SphereBox[{1, 17, 13}]}}, {
      {Hue[0], SphereBox[{1, 17, 15}]}, 
      {Hue[1], SphereBox[{1, 17, 15}]}}, {
      {Hue[0], SphereBox[{1, 17, 17}]}, 
      {Hue[1], SphereBox[{1, 17, 17}]}}, {
      {Hue[0], SphereBox[{1, 17, 19}]}, 
      {Hue[1], SphereBox[{1, 17, 19}]}}, {
      {Hue[0], SphereBox[{1, 17, 21}]}, 
      {Hue[1], SphereBox[{1, 17, 21}]}}}, {{
      {Hue[0], SphereBox[{1, 19, 1}]}, 
      {Hue[1], SphereBox[{1, 19, 1}]}}, {
      {Hue[0], SphereBox[{1, 19, 3}]}, 
      {Hue[1], SphereBox[{1, 19, 3}]}}, {
      {Hue[0], SphereBox[{1, 19, 5}]}, 
      {Hue[1], SphereBox[{1, 19, 5}]}}, {
      {Hue[0], SphereBox[{1, 19, 7}]}, 
      {Hue[1], SphereBox[{1, 19, 7}]}}, {
      {Hue[0], SphereBox[{1, 19, 9}]}, 
      {Hue[1], SphereBox[{1, 19, 9}]}}, {
      {Hue[0], SphereBox[{1, 19, 11}]}, 
      {Hue[1], SphereBox[{1, 19, 11}]}}, {
      {Hue[0], SphereBox[{1, 19, 13}]}, 
      {Hue[1], SphereBox[{1, 19, 13}]}}, {
      {Hue[0], SphereBox[{1, 19, 15}]}, 
      {Hue[1], SphereBox[{1, 19, 15}]}}, {
      {Hue[0], SphereBox[{1, 19, 17}]}, 
      {Hue[1], SphereBox[{1, 19, 17}]}}, {
      {Hue[0], SphereBox[{1, 19, 19}]}, 
      {Hue[1], SphereBox[{1, 19, 19}]}}, {
      {Hue[0], SphereBox[{1, 19, 21}]}, 
      {Hue[1], SphereBox[{1, 19, 21}]}}}, {{
      {Hue[0], SphereBox[{1, 21, 1}]}, 
      {Hue[1], SphereBox[{1, 21, 1}]}}, {
      {Hue[0], SphereBox[{1, 21, 3}]}, 
      {Hue[1], SphereBox[{1, 21, 3}]}}, {
      {Hue[0], SphereBox[{1, 21, 5}]}, 
      {Hue[1], SphereBox[{1, 21, 5}]}}, {
      {Hue[0], SphereBox[{1, 21, 7}]}, 
      {Hue[1], SphereBox[{1, 21, 7}]}}, {
      {Hue[0], SphereBox[{1, 21, 9}]}, 
      {Hue[1], SphereBox[{1, 21, 9}]}}, {
      {Hue[0], SphereBox[{1, 21, 11}]}, 
      {Hue[1], SphereBox[{1, 21, 11}]}}, {
      {Hue[0], SphereBox[{1, 21, 13}]}, 
      {Hue[1], SphereBox[{1, 21, 13}]}}, {
      {Hue[0], SphereBox[{1, 21, 15}]}, 
      {Hue[1], SphereBox[{1, 21, 15}]}}, {
      {Hue[0], SphereBox[{1, 21, 17}]}, 
      {Hue[1], SphereBox[{1, 21, 17}]}}, {
      {Hue[0], SphereBox[{1, 21, 19}]}, 
      {Hue[1], SphereBox[{1, 21, 19}]}}, {
      {Hue[0], SphereBox[{1, 21, 21}]}, 
      {Hue[1], SphereBox[{1, 21, 21}]}}}}, {{{
      {Hue[0], SphereBox[{3, 1, 1}]}, 
      {Hue[1], SphereBox[{3, 1, 1}]}}, {
      {Hue[0], SphereBox[{3, 1, 3}]}, 
      {Hue[1], SphereBox[{3, 1, 3}]}}, {
      {Hue[0], SphereBox[{3, 1, 5}]}, 
      {Hue[1], SphereBox[{3, 1, 5}]}}, {
      {Hue[0], SphereBox[{3, 1, 7}]}, 
      {Hue[1], SphereBox[{3, 1, 7}]}}, {
      {Hue[0], SphereBox[{3, 1, 9}]}, 
      {Hue[1], SphereBox[{3, 1, 9}]}}, {
      {Hue[0], SphereBox[{3, 1, 11}]}, 
      {Hue[1], SphereBox[{3, 1, 11}]}}, {
      {Hue[0], SphereBox[{3, 1, 13}]}, 
      {Hue[1], SphereBox[{3, 1, 13}]}}, {
      {Hue[0], SphereBox[{3, 1, 15}]}, 
      {Hue[1], SphereBox[{3, 1, 15}]}}, {
      {Hue[0], SphereBox[{3, 1, 17}]}, 
      {Hue[1], SphereBox[{3, 1, 17}]}}, {
      {Hue[0], SphereBox[{3, 1, 19}]}, 
      {Hue[1], SphereBox[{3, 1, 19}]}}, {
      {Hue[0], SphereBox[{3, 1, 21}]}, 
      {Hue[1], SphereBox[{3, 1, 21}]}}}, {{
      {Hue[0], SphereBox[{3, 3, 1}]}, 
      {Hue[1], SphereBox[{3, 3, 1}]}}, {
      {Hue[0], SphereBox[{3, 3, 3}]}, 
      {Hue[1], SphereBox[{3, 3, 3}]}}, {
      {Hue[0], SphereBox[{3, 3, 5}]}, 
      {Hue[1], SphereBox[{3, 3, 5}]}}, {
      {Hue[0], SphereBox[{3, 3, 7}]}, 
      {Hue[1], SphereBox[{3, 3, 7}]}}, {
      {Hue[0], SphereBox[{3, 3, 9}]}, 
      {Hue[1], SphereBox[{3, 3, 9}]}}, {
      {Hue[0], SphereBox[{3, 3, 11}]}, 
      {Hue[1], SphereBox[{3, 3, 11}]}}, {
      {Hue[0], SphereBox[{3, 3, 13}]}, 
      {Hue[1], SphereBox[{3, 3, 13}]}}, {
      {Hue[0], SphereBox[{3, 3, 15}]}, 
      {Hue[1], SphereBox[{3, 3, 15}]}}, {
      {Hue[0], SphereBox[{3, 3, 17}]}, 
      {Hue[1], SphereBox[{3, 3, 17}]}}, {
      {Hue[0], SphereBox[{3, 3, 19}]}, 
      {Hue[1], SphereBox[{3, 3, 19}]}}, {
      {Hue[0], SphereBox[{3, 3, 21}]}, 
      {Hue[1], SphereBox[{3, 3, 21}]}}}, {{
      {Hue[0], SphereBox[{3, 5, 1}]}, 
      {Hue[1], SphereBox[{3, 5, 1}]}}, {
      {Hue[0], SphereBox[{3, 5, 3}]}, 
      {Hue[1], SphereBox[{3, 5, 3}]}}, {
      {Hue[0], SphereBox[{3, 5, 5}]}, 
      {Hue[1], SphereBox[{3, 5, 5}]}}, {
      {Hue[0], SphereBox[{3, 5, 7}]}, 
      {Hue[1], SphereBox[{3, 5, 7}]}}, {
      {Hue[0], SphereBox[{3, 5, 9}]}, 
      {Hue[1], SphereBox[{3, 5, 9}]}}, {
      {Hue[0], SphereBox[{3, 5, 11}]}, 
      {Hue[1], SphereBox[{3, 5, 11}]}}, {
      {Hue[0], SphereBox[{3, 5, 13}]}, 
      {Hue[1], SphereBox[{3, 5, 13}]}}, {
      {Hue[0], SphereBox[{3, 5, 15}]}, 
      {Hue[1], SphereBox[{3, 5, 15}]}}, {
      {Hue[0], SphereBox[{3, 5, 17}]}, 
      {Hue[1], SphereBox[{3, 5, 17}]}}, {
      {Hue[0], SphereBox[{3, 5, 19}]}, 
      {Hue[1], SphereBox[{3, 5, 19}]}}, {
      {Hue[0], SphereBox[{3, 5, 21}]}, 
      {Hue[1], SphereBox[{3, 5, 21}]}}}, {{
      {Hue[0], SphereBox[{3, 7, 1}]}, 
      {Hue[1], SphereBox[{3, 7, 1}]}}, {
      {Hue[0], SphereBox[{3, 7, 3}]}, 
      {Hue[1], SphereBox[{3, 7, 3}]}}, {
      {Hue[0], SphereBox[{3, 7, 5}]}, 
      {Hue[1], SphereBox[{3, 7, 5}]}}, {
      {Hue[0], SphereBox[{3, 7, 7}]}, 
      {Hue[1], SphereBox[{3, 7, 7}]}}, {
      {Hue[0], SphereBox[{3, 7, 9}]}, 
      {Hue[1], SphereBox[{3, 7, 9}]}}, {
      {Hue[0], SphereBox[{3, 7, 11}]}, 
      {Hue[1], SphereBox[{3, 7, 11}]}}, {
      {Hue[0], SphereBox[{3, 7, 13}]}, 
      {Hue[1], SphereBox[{3, 7, 13}]}}, {
      {Hue[0], SphereBox[{3, 7, 15}]}, 
      {Hue[1], SphereBox[{3, 7, 15}]}}, {
      {Hue[0], SphereBox[{3, 7, 17}]}, 
      {Hue[1], SphereBox[{3, 7, 17}]}}, {
      {Hue[0], SphereBox[{3, 7, 19}]}, 
      {Hue[1], SphereBox[{3, 7, 19}]}}, {
      {Hue[0], SphereBox[{3, 7, 21}]}, 
      {Hue[1], SphereBox[{3, 7, 21}]}}}, {{
      {Hue[0], SphereBox[{3, 9, 1}]}, 
      {Hue[1], SphereBox[{3, 9, 1}]}}, {
      {Hue[0], SphereBox[{3, 9, 3}]}, 
      {Hue[1], SphereBox[{3, 9, 3}]}}, {
      {Hue[0], SphereBox[{3, 9, 5}]}, 
      {Hue[1], SphereBox[{3, 9, 5}]}}, {
      {Hue[0], SphereBox[{3, 9, 7}]}, 
      {Hue[1], SphereBox[{3, 9, 7}]}}, {
      {Hue[0], SphereBox[{3, 9, 9}]}, 
      {Hue[1], SphereBox[{3, 9, 9}]}}, {
      {Hue[0], SphereBox[{3, 9, 11}]}, 
      {Hue[1], SphereBox[{3, 9, 11}]}}, {
      {Hue[0], SphereBox[{3, 9, 13}]}, 
      {Hue[1], SphereBox[{3, 9, 13}]}}, {
      {Hue[0], SphereBox[{3, 9, 15}]}, 
      {Hue[1], SphereBox[{3, 9, 15}]}}, {
      {Hue[0], SphereBox[{3, 9, 17}]}, 
      {Hue[1], SphereBox[{3, 9, 17}]}}, {
      {Hue[0], SphereBox[{3, 9, 19}]}, 
      {Hue[1], SphereBox[{3, 9, 19}]}}, {
      {Hue[0], SphereBox[{3, 9, 21}]}, 
      {Hue[1], SphereBox[{3, 9, 21}]}}}, {{
      {Hue[0], SphereBox[{3, 11, 1}]}, 
      {Hue[1], SphereBox[{3, 11, 1}]}}, {
      {Hue[0], SphereBox[{3, 11, 3}]}, 
      {Hue[1], SphereBox[{3, 11, 3}]}}, {
      {Hue[0], SphereBox[{3, 11, 5}]}, 
      {Hue[1], SphereBox[{3, 11, 5}]}}, {
      {Hue[0], SphereBox[{3, 11, 7}]}, 
      {Hue[1], SphereBox[{3, 11, 7}]}}, {
      {Hue[0], SphereBox[{3, 11, 9}]}, 
      {Hue[1], SphereBox[{3, 11, 9}]}}, {
      {Hue[0], SphereBox[{3, 11, 11}]}, 
      {Hue[1], SphereBox[{3, 11, 11}]}}, {
      {Hue[0], SphereBox[{3, 11, 13}]}, 
      {Hue[1], SphereBox[{3, 11, 13}]}}, {
      {Hue[0], SphereBox[{3, 11, 15}]}, 
      {Hue[1], SphereBox[{3, 11, 15}]}}, {
      {Hue[0], SphereBox[{3, 11, 17}]}, 
      {Hue[1], SphereBox[{3, 11, 17}]}}, {
      {Hue[0], SphereBox[{3, 11, 19}]}, 
      {Hue[1], SphereBox[{3, 11, 19}]}}, {
      {Hue[0], SphereBox[{3, 11, 21}]}, 
      {Hue[1], SphereBox[{3, 11, 21}]}}}, {{
      {Hue[0], SphereBox[{3, 13, 1}]}, 
      {Hue[1], SphereBox[{3, 13, 1}]}}, {
      {Hue[0], SphereBox[{3, 13, 3}]}, 
      {Hue[1], SphereBox[{3, 13, 3}]}}, {
      {Hue[0], SphereBox[{3, 13, 5}]}, 
      {Hue[1], SphereBox[{3, 13, 5}]}}, {
      {Hue[0], SphereBox[{3, 13, 7}]}, 
      {Hue[1], SphereBox[{3, 13, 7}]}}, {
      {Hue[0], SphereBox[{3, 13, 9}]}, 
      {Hue[1], SphereBox[{3, 13, 9}]}}, {
      {Hue[0], SphereBox[{3, 13, 11}]}, 
      {Hue[1], SphereBox[{3, 13, 11}]}}, {
      {Hue[0], SphereBox[{3, 13, 13}]}, 
      {Hue[1], SphereBox[{3, 13, 13}]}}, {
      {Hue[0], SphereBox[{3, 13, 15}]}, 
      {Hue[1], SphereBox[{3, 13, 15}]}}, {
      {Hue[0], SphereBox[{3, 13, 17}]}, 
      {Hue[1], SphereBox[{3, 13, 17}]}}, {
      {Hue[0], SphereBox[{3, 13, 19}]}, 
      {Hue[1], SphereBox[{3, 13, 19}]}}, {
      {Hue[0], SphereBox[{3, 13, 21}]}, 
      {Hue[1], SphereBox[{3, 13, 21}]}}}, {{
      {Hue[0], SphereBox[{3, 15, 1}]}, 
      {Hue[1], SphereBox[{3, 15, 1}]}}, {
      {Hue[0], SphereBox[{3, 15, 3}]}, 
      {Hue[1], SphereBox[{3, 15, 3}]}}, {
      {Hue[0], SphereBox[{3, 15, 5}]}, 
      {Hue[1], SphereBox[{3, 15, 5}]}}, {
      {Hue[0], SphereBox[{3, 15, 7}]}, 
      {Hue[1], SphereBox[{3, 15, 7}]}}, {
      {Hue[0], SphereBox[{3, 15, 9}]}, 
      {Hue[1], SphereBox[{3, 15, 9}]}}, {
      {Hue[0], SphereBox[{3, 15, 11}]}, 
      {Hue[1], SphereBox[{3, 15, 11}]}}, {
      {Hue[0], SphereBox[{3, 15, 13}]}, 
      {Hue[1], SphereBox[{3, 15, 13}]}}, {
      {Hue[0], SphereBox[{3, 15, 15}]}, 
      {Hue[1], SphereBox[{3, 15, 15}]}}, {
      {Hue[0], SphereBox[{3, 15, 17}]}, 
      {Hue[1], SphereBox[{3, 15, 17}]}}, {
      {Hue[0], SphereBox[{3, 15, 19}]}, 
      {Hue[1], SphereBox[{3, 15, 19}]}}, {
      {Hue[0], SphereBox[{3, 15, 21}]}, 
      {Hue[1], SphereBox[{3, 15, 21}]}}}, {{
      {Hue[0], SphereBox[{3, 17, 1}]}, 
      {Hue[1], SphereBox[{3, 17, 1}]}}, {
      {Hue[0], SphereBox[{3, 17, 3}]}, 
      {Hue[1], SphereBox[{3, 17, 3}]}}, {
      {Hue[0], SphereBox[{3, 17, 5}]}, 
      {Hue[1], SphereBox[{3, 17, 5}]}}, {
      {Hue[0], SphereBox[{3, 17, 7}]}, 
      {Hue[1], SphereBox[{3, 17, 7}]}}, {
      {Hue[0], SphereBox[{3, 17, 9}]}, 
      {Hue[1], SphereBox[{3, 17, 9}]}}, {
      {Hue[0], SphereBox[{3, 17, 11}]}, 
      {Hue[1], SphereBox[{3, 17, 11}]}}, {
      {Hue[0], SphereBox[{3, 17, 13}]}, 
      {Hue[1], SphereBox[{3, 17, 13}]}}, {
      {Hue[0], SphereBox[{3, 17, 15}]}, 
      {Hue[1], SphereBox[{3, 17, 15}]}}, {
      {Hue[0], SphereBox[{3, 17, 17}]}, 
      {Hue[1], SphereBox[{3, 17, 17}]}}, {
      {Hue[0], SphereBox[{3, 17, 19}]}, 
      {Hue[1], SphereBox[{3, 17, 19}]}}, {
      {Hue[0], SphereBox[{3, 17, 21}]}, 
      {Hue[1], SphereBox[{3, 17, 21}]}}}, {{
      {Hue[0], SphereBox[{3, 19, 1}]}, 
      {Hue[1], SphereBox[{3, 19, 1}]}}, {
      {Hue[0], SphereBox[{3, 19, 3}]}, 
      {Hue[1], SphereBox[{3, 19, 3}]}}, {
      {Hue[0], SphereBox[{3, 19, 5}]}, 
      {Hue[1], SphereBox[{3, 19, 5}]}}, {
      {Hue[0], SphereBox[{3, 19, 7}]}, 
      {Hue[1], SphereBox[{3, 19, 7}]}}, {
      {Hue[0], SphereBox[{3, 19, 9}]}, 
      {Hue[1], SphereBox[{3, 19, 9}]}}, {
      {Hue[0], SphereBox[{3, 19, 11}]}, 
      {Hue[1], SphereBox[{3, 19, 11}]}}, {
      {Hue[0], SphereBox[{3, 19, 13}]}, 
      {Hue[1], SphereBox[{3, 19, 13}]}}, {
      {Hue[0], SphereBox[{3, 19, 15}]}, 
      {Hue[1], SphereBox[{3, 19, 15}]}}, {
      {Hue[0], SphereBox[{3, 19, 17}]}, 
      {Hue[1], SphereBox[{3, 19, 17}]}}, {
      {Hue[0], SphereBox[{3, 19, 19}]}, 
      {Hue[1], SphereBox[{3, 19, 19}]}}, {
      {Hue[0], SphereBox[{3, 19, 21}]}, 
      {Hue[1], SphereBox[{3, 19, 21}]}}}, {{
      {Hue[0], SphereBox[{3, 21, 1}]}, 
      {Hue[1], SphereBox[{3, 21, 1}]}}, {
      {Hue[0], SphereBox[{3, 21, 3}]}, 
      {Hue[1], SphereBox[{3, 21, 3}]}}, {
      {Hue[0], SphereBox[{3, 21, 5}]}, 
      {Hue[1], SphereBox[{3, 21, 5}]}}, {
      {Hue[0], SphereBox[{3, 21, 7}]}, 
      {Hue[1], SphereBox[{3, 21, 7}]}}, {
      {Hue[0], SphereBox[{3, 21, 9}]}, 
      {Hue[1], SphereBox[{3, 21, 9}]}}, {
      {Hue[0], SphereBox[{3, 21, 11}]}, 
      {Hue[1], SphereBox[{3, 21, 11}]}}, {
      {Hue[0], SphereBox[{3, 21, 13}]}, 
      {Hue[1], SphereBox[{3, 21, 13}]}}, {
      {Hue[0], SphereBox[{3, 21, 15}]}, 
      {Hue[1], SphereBox[{3, 21, 15}]}}, {
      {Hue[0], SphereBox[{3, 21, 17}]}, 
      {Hue[1], SphereBox[{3, 21, 17}]}}, {
      {Hue[0], SphereBox[{3, 21, 19}]}, 
      {Hue[1], SphereBox[{3, 21, 19}]}}, {
      {Hue[0], SphereBox[{3, 21, 21}]}, 
      {Hue[1], SphereBox[{3, 21, 21}]}}}}, {{{
      {Hue[0], SphereBox[{5, 1, 1}]}, 
      {Hue[1], SphereBox[{5, 1, 1}]}}, {
      {Hue[0], SphereBox[{5, 1, 3}]}, 
      {Hue[1], SphereBox[{5, 1, 3}]}}, {
      {Hue[0], SphereBox[{5, 1, 5}]}, 
      {Hue[1], SphereBox[{5, 1, 5}]}}, {
      {Hue[0], SphereBox[{5, 1, 7}]}, 
      {Hue[1], SphereBox[{5, 1, 7}]}}, {
      {Hue[0], SphereBox[{5, 1, 9}]}, 
      {Hue[1], SphereBox[{5, 1, 9}]}}, {
      {Hue[0], SphereBox[{5, 1, 11}]}, 
      {Hue[1], SphereBox[{5, 1, 11}]}}, {
      {Hue[0], SphereBox[{5, 1, 13}]}, 
      {Hue[1], SphereBox[{5, 1, 13}]}}, {
      {Hue[0], SphereBox[{5, 1, 15}]}, 
      {Hue[1], SphereBox[{5, 1, 15}]}}, {
      {Hue[0], SphereBox[{5, 1, 17}]}, 
      {Hue[1], SphereBox[{5, 1, 17}]}}, {
      {Hue[0], SphereBox[{5, 1, 19}]}, 
      {Hue[1], SphereBox[{5, 1, 19}]}}, {
      {Hue[0], SphereBox[{5, 1, 21}]}, 
      {Hue[1], SphereBox[{5, 1, 21}]}}}, {{
      {Hue[0], SphereBox[{5, 3, 1}]}, 
      {Hue[1], SphereBox[{5, 3, 1}]}}, {
      {Hue[0], SphereBox[{5, 3, 3}]}, 
      {Hue[1], SphereBox[{5, 3, 3}]}}, {
      {Hue[0], SphereBox[{5, 3, 5}]}, 
      {Hue[1], SphereBox[{5, 3, 5}]}}, {
      {Hue[0], SphereBox[{5, 3, 7}]}, 
      {Hue[1], SphereBox[{5, 3, 7}]}}, {
      {Hue[0], SphereBox[{5, 3, 9}]}, 
      {Hue[1], SphereBox[{5, 3, 9}]}}, {
      {Hue[0], SphereBox[{5, 3, 11}]}, 
      {Hue[1], SphereBox[{5, 3, 11}]}}, {
      {Hue[0], SphereBox[{5, 3, 13}]}, 
      {Hue[1], SphereBox[{5, 3, 13}]}}, {
      {Hue[0], SphereBox[{5, 3, 15}]}, 
      {Hue[1], SphereBox[{5, 3, 15}]}}, {
      {Hue[0], SphereBox[{5, 3, 17}]}, 
      {Hue[1], SphereBox[{5, 3, 17}]}}, {
      {Hue[0], SphereBox[{5, 3, 19}]}, 
      {Hue[1], SphereBox[{5, 3, 19}]}}, {
      {Hue[0], SphereBox[{5, 3, 21}]}, 
      {Hue[1], SphereBox[{5, 3, 21}]}}}, {{
      {Hue[0], SphereBox[{5, 5, 1}]}, 
      {Hue[1], SphereBox[{5, 5, 1}]}}, {
      {Hue[0], SphereBox[{5, 5, 3}]}, 
      {Hue[1], SphereBox[{5, 5, 3}]}}, {
      {Hue[0], SphereBox[{5, 5, 5}]}, 
      {Hue[1], SphereBox[{5, 5, 5}]}}, {
      {Hue[0], SphereBox[{5, 5, 7}]}, 
      {Hue[1], SphereBox[{5, 5, 7}]}}, {
      {Hue[0], SphereBox[{5, 5, 9}]}, 
      {Hue[1], SphereBox[{5, 5, 9}]}}, {
      {Hue[0], SphereBox[{5, 5, 11}]}, 
      {Hue[1], SphereBox[{5, 5, 11}]}}, {
      {Hue[0], SphereBox[{5, 5, 13}]}, 
      {Hue[1], SphereBox[{5, 5, 13}]}}, {
      {Hue[0], SphereBox[{5, 5, 15}]}, 
      {Hue[1], SphereBox[{5, 5, 15}]}}, {
      {Hue[0], SphereBox[{5, 5, 17}]}, 
      {Hue[1], SphereBox[{5, 5, 17}]}}, {
      {Hue[0], SphereBox[{5, 5, 19}]}, 
      {Hue[1], SphereBox[{5, 5, 19}]}}, {
      {Hue[0], SphereBox[{5, 5, 21}]}, 
      {Hue[1], SphereBox[{5, 5, 21}]}}}, {{
      {Hue[0], SphereBox[{5, 7, 1}]}, 
      {Hue[1], SphereBox[{5, 7, 1}]}}, {
      {Hue[0], SphereBox[{5, 7, 3}]}, 
      {Hue[1], SphereBox[{5, 7, 3}]}}, {
      {Hue[0], SphereBox[{5, 7, 5}]}, 
      {Hue[1], SphereBox[{5, 7, 5}]}}, {
      {Hue[0], SphereBox[{5, 7, 7}]}, 
      {Hue[1], SphereBox[{5, 7, 7}]}}, {
      {Hue[0], SphereBox[{5, 7, 9}]}, 
      {Hue[1], SphereBox[{5, 7, 9}]}}, {
      {Hue[0], SphereBox[{5, 7, 11}]}, 
      {Hue[1], SphereBox[{5, 7, 11}]}}, {
      {Hue[0], SphereBox[{5, 7, 13}]}, 
      {Hue[1], SphereBox[{5, 7, 13}]}}, {
      {Hue[0], SphereBox[{5, 7, 15}]}, 
      {Hue[1], SphereBox[{5, 7, 15}]}}, {
      {Hue[0], SphereBox[{5, 7, 17}]}, 
      {Hue[1], SphereBox[{5, 7, 17}]}}, {
      {Hue[0], SphereBox[{5, 7, 19}]}, 
      {Hue[1], SphereBox[{5, 7, 19}]}}, {
      {Hue[0], SphereBox[{5, 7, 21}]}, 
      {Hue[1], SphereBox[{5, 7, 21}]}}}, {{
      {Hue[0], SphereBox[{5, 9, 1}]}, 
      {Hue[1], SphereBox[{5, 9, 1}]}}, {
      {Hue[0], SphereBox[{5, 9, 3}]}, 
      {Hue[1], SphereBox[{5, 9, 3}]}}, {
      {Hue[0], SphereBox[{5, 9, 5}]}, 
      {Hue[1], SphereBox[{5, 9, 5}]}}, {
      {Hue[0], SphereBox[{5, 9, 7}]}, 
      {Hue[1], SphereBox[{5, 9, 7}]}}, {
      {Hue[0], SphereBox[{5, 9, 9}]}, 
      {Hue[1], SphereBox[{5, 9, 9}]}}, {
      {Hue[0], SphereBox[{5, 9, 11}]}, 
      {Hue[1], SphereBox[{5, 9, 11}]}}, {
      {Hue[0], SphereBox[{5, 9, 13}]}, 
      {Hue[1], SphereBox[{5, 9, 13}]}}, {
      {Hue[0], SphereBox[{5, 9, 15}]}, 
      {Hue[1], SphereBox[{5, 9, 15}]}}, {
      {Hue[0], SphereBox[{5, 9, 17}]}, 
      {Hue[1], SphereBox[{5, 9, 17}]}}, {
      {Hue[0], SphereBox[{5, 9, 19}]}, 
      {Hue[1], SphereBox[{5, 9, 19}]}}, {
      {Hue[0], SphereBox[{5, 9, 21}]}, 
      {Hue[1], SphereBox[{5, 9, 21}]}}}, {{
      {Hue[0], SphereBox[{5, 11, 1}]}, 
      {Hue[1], SphereBox[{5, 11, 1}]}}, {
      {Hue[0], SphereBox[{5, 11, 3}]}, 
      {Hue[1], SphereBox[{5, 11, 3}]}}, {
      {Hue[0], SphereBox[{5, 11, 5}]}, 
      {Hue[1], SphereBox[{5, 11, 5}]}}, {
      {Hue[0], SphereBox[{5, 11, 7}]}, 
      {Hue[1], SphereBox[{5, 11, 7}]}}, {
      {Hue[0], SphereBox[{5, 11, 9}]}, 
      {Hue[1], SphereBox[{5, 11, 9}]}}, {
      {Hue[0], SphereBox[{5, 11, 11}]}, 
      {Hue[1], SphereBox[{5, 11, 11}]}}, {
      {Hue[0], SphereBox[{5, 11, 13}]}, 
      {Hue[1], SphereBox[{5, 11, 13}]}}, {
      {Hue[0], SphereBox[{5, 11, 15}]}, 
      {Hue[1], SphereBox[{5, 11, 15}]}}, {
      {Hue[0], SphereBox[{5, 11, 17}]}, 
      {Hue[1], SphereBox[{5, 11, 17}]}}, {
      {Hue[0], SphereBox[{5, 11, 19}]}, 
      {Hue[1], SphereBox[{5, 11, 19}]}}, {
      {Hue[0], SphereBox[{5, 11, 21}]}, 
      {Hue[1], SphereBox[{5, 11, 21}]}}}, {{
      {Hue[0], SphereBox[{5, 13, 1}]}, 
      {Hue[1], SphereBox[{5, 13, 1}]}}, {
      {Hue[0], SphereBox[{5, 13, 3}]}, 
      {Hue[1], SphereBox[{5, 13, 3}]}}, {
      {Hue[0], SphereBox[{5, 13, 5}]}, 
      {Hue[1], SphereBox[{5, 13, 5}]}}, {
      {Hue[0], SphereBox[{5, 13, 7}]}, 
      {Hue[1], SphereBox[{5, 13, 7}]}}, {
      {Hue[0], SphereBox[{5, 13, 9}]}, 
      {Hue[1], SphereBox[{5, 13, 9}]}}, {
      {Hue[0], SphereBox[{5, 13, 11}]}, 
      {Hue[1], SphereBox[{5, 13, 11}]}}, {
      {Hue[0], SphereBox[{5, 13, 13}]}, 
      {Hue[1], SphereBox[{5, 13, 13}]}}, {
      {Hue[0], SphereBox[{5, 13, 15}]}, 
      {Hue[1], SphereBox[{5, 13, 15}]}}, {
      {Hue[0], SphereBox[{5, 13, 17}]}, 
      {Hue[1], SphereBox[{5, 13, 17}]}}, {
      {Hue[0], SphereBox[{5, 13, 19}]}, 
      {Hue[1], SphereBox[{5, 13, 19}]}}, {
      {Hue[0], SphereBox[{5, 13, 21}]}, 
      {Hue[1], SphereBox[{5, 13, 21}]}}}, {{
      {Hue[0], SphereBox[{5, 15, 1}]}, 
      {Hue[1], SphereBox[{5, 15, 1}]}}, {
      {Hue[0], SphereBox[{5, 15, 3}]}, 
      {Hue[1], SphereBox[{5, 15, 3}]}}, {
      {Hue[0], SphereBox[{5, 15, 5}]}, 
      {Hue[1], SphereBox[{5, 15, 5}]}}, {
      {Hue[0], SphereBox[{5, 15, 7}]}, 
      {Hue[1], SphereBox[{5, 15, 7}]}}, {
      {Hue[0], SphereBox[{5, 15, 9}]}, 
      {Hue[1], SphereBox[{5, 15, 9}]}}, {
      {Hue[0], SphereBox[{5, 15, 11}]}, 
      {Hue[1], SphereBox[{5, 15, 11}]}}, {
      {Hue[0], SphereBox[{5, 15, 13}]}, 
      {Hue[1], SphereBox[{5, 15, 13}]}}, {
      {Hue[0], SphereBox[{5, 15, 15}]}, 
      {Hue[1], SphereBox[{5, 15, 15}]}}, {
      {Hue[0], SphereBox[{5, 15, 17}]}, 
      {Hue[1], SphereBox[{5, 15, 17}]}}, {
      {Hue[0], SphereBox[{5, 15, 19}]}, 
      {Hue[1], SphereBox[{5, 15, 19}]}}, {
      {Hue[0], SphereBox[{5, 15, 21}]}, 
      {Hue[1], SphereBox[{5, 15, 21}]}}}, {{
      {Hue[0], SphereBox[{5, 17, 1}]}, 
      {Hue[1], SphereBox[{5, 17, 1}]}}, {
      {Hue[0], SphereBox[{5, 17, 3}]}, 
      {Hue[1], SphereBox[{5, 17, 3}]}}, {
      {Hue[0], SphereBox[{5, 17, 5}]}, 
      {Hue[1], SphereBox[{5, 17, 5}]}}, {
      {Hue[0], SphereBox[{5, 17, 7}]}, 
      {Hue[1], SphereBox[{5, 17, 7}]}}, {
      {Hue[0], SphereBox[{5, 17, 9}]}, 
      {Hue[1], SphereBox[{5, 17, 9}]}}, {
      {Hue[0], SphereBox[{5, 17, 11}]}, 
      {Hue[1], SphereBox[{5, 17, 11}]}}, {
      {Hue[0], SphereBox[{5, 17, 13}]}, 
      {Hue[1], SphereBox[{5, 17, 13}]}}, {
      {Hue[0], SphereBox[{5, 17, 15}]}, 
      {Hue[1], SphereBox[{5, 17, 15}]}}, {
      {Hue[0], SphereBox[{5, 17, 17}]}, 
      {Hue[1], SphereBox[{5, 17, 17}]}}, {
      {Hue[0], SphereBox[{5, 17, 19}]}, 
      {Hue[1], SphereBox[{5, 17, 19}]}}, {
      {Hue[0], SphereBox[{5, 17, 21}]}, 
      {Hue[1], SphereBox[{5, 17, 21}]}}}, {{
      {Hue[0], SphereBox[{5, 19, 1}]}, 
      {Hue[1], SphereBox[{5, 19, 1}]}}, {
      {Hue[0], SphereBox[{5, 19, 3}]}, 
      {Hue[1], SphereBox[{5, 19, 3}]}}, {
      {Hue[0], SphereBox[{5, 19, 5}]}, 
      {Hue[1], SphereBox[{5, 19, 5}]}}, {
      {Hue[0], SphereBox[{5, 19, 7}]}, 
      {Hue[1], SphereBox[{5, 19, 7}]}}, {
      {Hue[0], SphereBox[{5, 19, 9}]}, 
      {Hue[1], SphereBox[{5, 19, 9}]}}, {
      {Hue[0], SphereBox[{5, 19, 11}]}, 
      {Hue[1], SphereBox[{5, 19, 11}]}}, {
      {Hue[0], SphereBox[{5, 19, 13}]}, 
      {Hue[1], SphereBox[{5, 19, 13}]}}, {
      {Hue[0], SphereBox[{5, 19, 15}]}, 
      {Hue[1], SphereBox[{5, 19, 15}]}}, {
      {Hue[0], SphereBox[{5, 19, 17}]}, 
      {Hue[1], SphereBox[{5, 19, 17}]}}, {
      {Hue[0], SphereBox[{5, 19, 19}]}, 
      {Hue[1], SphereBox[{5, 19, 19}]}}, {
      {Hue[0], SphereBox[{5, 19, 21}]}, 
      {Hue[1], SphereBox[{5, 19, 21}]}}}, {{
      {Hue[0], SphereBox[{5, 21, 1}]}, 
      {Hue[1], SphereBox[{5, 21, 1}]}}, {
      {Hue[0], SphereBox[{5, 21, 3}]}, 
      {Hue[1], SphereBox[{5, 21, 3}]}}, {
      {Hue[0], SphereBox[{5, 21, 5}]}, 
      {Hue[1], SphereBox[{5, 21, 5}]}}, {
      {Hue[0], SphereBox[{5, 21, 7}]}, 
      {Hue[1], SphereBox[{5, 21, 7}]}}, {
      {Hue[0], SphereBox[{5, 21, 9}]}, 
      {Hue[1], SphereBox[{5, 21, 9}]}}, {
      {Hue[0], SphereBox[{5, 21, 11}]}, 
      {Hue[1], SphereBox[{5, 21, 11}]}}, {
      {Hue[0], SphereBox[{5, 21, 13}]}, 
      {Hue[1], SphereBox[{5, 21, 13}]}}, {
      {Hue[0], SphereBox[{5, 21, 15}]}, 
      {Hue[1], SphereBox[{5, 21, 15}]}}, {
      {Hue[0], SphereBox[{5, 21, 17}]}, 
      {Hue[1], SphereBox[{5, 21, 17}]}}, {
      {Hue[0], SphereBox[{5, 21, 19}]}, 
      {Hue[1], SphereBox[{5, 21, 19}]}}, {
      {Hue[0], SphereBox[{5, 21, 21}]}, 
      {Hue[1], SphereBox[{5, 21, 21}]}}}}, {{{
      {Hue[0], SphereBox[{7, 1, 1}]}, 
      {Hue[1], SphereBox[{7, 1, 1}]}}, {
      {Hue[0], SphereBox[{7, 1, 3}]}, 
      {Hue[1], SphereBox[{7, 1, 3}]}}, {
      {Hue[0], SphereBox[{7, 1, 5}]}, 
      {Hue[1], SphereBox[{7, 1, 5}]}}, {
      {Hue[0], SphereBox[{7, 1, 7}]}, 
      {Hue[1], SphereBox[{7, 1, 7}]}}, {
      {Hue[0], SphereBox[{7, 1, 9}]}, 
      {Hue[1], SphereBox[{7, 1, 9}]}}, {
      {Hue[0], SphereBox[{7, 1, 11}]}, 
      {Hue[1], SphereBox[{7, 1, 11}]}}, {
      {Hue[0], SphereBox[{7, 1, 13}]}, 
      {Hue[1], SphereBox[{7, 1, 13}]}}, {
      {Hue[0], SphereBox[{7, 1, 15}]}, 
      {Hue[1], SphereBox[{7, 1, 15}]}}, {
      {Hue[0], SphereBox[{7, 1, 17}]}, 
      {Hue[1], SphereBox[{7, 1, 17}]}}, {
      {Hue[0], SphereBox[{7, 1, 19}]}, 
      {Hue[1], SphereBox[{7, 1, 19}]}}, {
      {Hue[0], SphereBox[{7, 1, 21}]}, 
      {Hue[1], SphereBox[{7, 1, 21}]}}}, {{
      {Hue[0], SphereBox[{7, 3, 1}]}, 
      {Hue[1], SphereBox[{7, 3, 1}]}}, {
      {Hue[0], SphereBox[{7, 3, 3}]}, 
      {Hue[1], SphereBox[{7, 3, 3}]}}, {
      {Hue[0], SphereBox[{7, 3, 5}]}, 
      {Hue[1], SphereBox[{7, 3, 5}]}}, {
      {Hue[0], SphereBox[{7, 3, 7}]}, 
      {Hue[1], SphereBox[{7, 3, 7}]}}, {
      {Hue[0], SphereBox[{7, 3, 9}]}, 
      {Hue[1], SphereBox[{7, 3, 9}]}}, {
      {Hue[0], SphereBox[{7, 3, 11}]}, 
      {Hue[1], SphereBox[{7, 3, 11}]}}, {
      {Hue[0], SphereBox[{7, 3, 13}]}, 
      {Hue[1], SphereBox[{7, 3, 13}]}}, {
      {Hue[0], SphereBox[{7, 3, 15}]}, 
      {Hue[1], SphereBox[{7, 3, 15}]}}, {
      {Hue[0], SphereBox[{7, 3, 17}]}, 
      {Hue[1], SphereBox[{7, 3, 17}]}}, {
      {Hue[0], SphereBox[{7, 3, 19}]}, 
      {Hue[1], SphereBox[{7, 3, 19}]}}, {
      {Hue[0], SphereBox[{7, 3, 21}]}, 
      {Hue[1], SphereBox[{7, 3, 21}]}}}, {{
      {Hue[0], SphereBox[{7, 5, 1}]}, 
      {Hue[1], SphereBox[{7, 5, 1}]}}, {
      {Hue[0], SphereBox[{7, 5, 3}]}, 
      {Hue[1], SphereBox[{7, 5, 3}]}}, {
      {Hue[0], SphereBox[{7, 5, 5}]}, 
      {Hue[1], SphereBox[{7, 5, 5}]}}, {
      {Hue[0], SphereBox[{7, 5, 7}]}, 
      {Hue[1], SphereBox[{7, 5, 7}]}}, {
      {Hue[0], SphereBox[{7, 5, 9}]}, 
      {Hue[1], SphereBox[{7, 5, 9}]}}, {
      {Hue[0], SphereBox[{7, 5, 11}]}, 
      {Hue[1], SphereBox[{7, 5, 11}]}}, {
      {Hue[0], SphereBox[{7, 5, 13}]}, 
      {Hue[1], SphereBox[{7, 5, 13}]}}, {
      {Hue[0], SphereBox[{7, 5, 15}]}, 
      {Hue[1], SphereBox[{7, 5, 15}]}}, {
      {Hue[0], SphereBox[{7, 5, 17}]}, 
      {Hue[1], SphereBox[{7, 5, 17}]}}, {
      {Hue[0], SphereBox[{7, 5, 19}]}, 
      {Hue[1], SphereBox[{7, 5, 19}]}}, {
      {Hue[0], SphereBox[{7, 5, 21}]}, 
      {Hue[1], SphereBox[{7, 5, 21}]}}}, {{
      {Hue[0], SphereBox[{7, 7, 1}]}, 
      {Hue[1], SphereBox[{7, 7, 1}]}}, {
      {Hue[0], SphereBox[{7, 7, 3}]}, 
      {Hue[1], SphereBox[{7, 7, 3}]}}, {
      {Hue[0], SphereBox[{7, 7, 5}]}, 
      {Hue[1], SphereBox[{7, 7, 5}]}}, {
      {Hue[0], SphereBox[{7, 7, 7}]}, 
      {Hue[1], SphereBox[{7, 7, 7}]}}, {
      {Hue[0], SphereBox[{7, 7, 9}]}, 
      {Hue[1], SphereBox[{7, 7, 9}]}}, {
      {Hue[0], SphereBox[{7, 7, 11}]}, 
      {Hue[1], SphereBox[{7, 7, 11}]}}, {
      {Hue[0], SphereBox[{7, 7, 13}]}, 
      {Hue[1], SphereBox[{7, 7, 13}]}}, {
      {Hue[0], SphereBox[{7, 7, 15}]}, 
      {Hue[1], SphereBox[{7, 7, 15}]}}, {
      {Hue[0], SphereBox[{7, 7, 17}]}, 
      {Hue[1], SphereBox[{7, 7, 17}]}}, {
      {Hue[0], SphereBox[{7, 7, 19}]}, 
      {Hue[1], SphereBox[{7, 7, 19}]}}, {
      {Hue[0], SphereBox[{7, 7, 21}]}, 
      {Hue[1], SphereBox[{7, 7, 21}]}}}, {{
      {Hue[0], SphereBox[{7, 9, 1}]}, 
      {Hue[1], SphereBox[{7, 9, 1}]}}, {
      {Hue[0], SphereBox[{7, 9, 3}]}, 
      {Hue[1], SphereBox[{7, 9, 3}]}}, {
      {Hue[0], SphereBox[{7, 9, 5}]}, 
      {Hue[1], SphereBox[{7, 9, 5}]}}, {
      {Hue[0], SphereBox[{7, 9, 7}]}, 
      {Hue[1], SphereBox[{7, 9, 7}]}}, {
      {Hue[0], SphereBox[{7, 9, 9}]}, 
      {Hue[1], SphereBox[{7, 9, 9}]}}, {
      {Hue[0], SphereBox[{7, 9, 11}]}, 
      {Hue[1], SphereBox[{7, 9, 11}]}}, {
      {Hue[0], SphereBox[{7, 9, 13}]}, 
      {Hue[1], SphereBox[{7, 9, 13}]}}, {
      {Hue[0], SphereBox[{7, 9, 15}]}, 
      {Hue[1], SphereBox[{7, 9, 15}]}}, {
      {Hue[0], SphereBox[{7, 9, 17}]}, 
      {Hue[1], SphereBox[{7, 9, 17}]}}, {
      {Hue[0], SphereBox[{7, 9, 19}]}, 
      {Hue[1], SphereBox[{7, 9, 19}]}}, {
      {Hue[0], SphereBox[{7, 9, 21}]}, 
      {Hue[1], SphereBox[{7, 9, 21}]}}}, {{
      {Hue[0], SphereBox[{7, 11, 1}]}, 
      {Hue[1], SphereBox[{7, 11, 1}]}}, {
      {Hue[0], SphereBox[{7, 11, 3}]}, 
      {Hue[1], SphereBox[{7, 11, 3}]}}, {
      {Hue[0], SphereBox[{7, 11, 5}]}, 
      {Hue[1], SphereBox[{7, 11, 5}]}}, {
      {Hue[0], SphereBox[{7, 11, 7}]}, 
      {Hue[1], SphereBox[{7, 11, 7}]}}, {
      {Hue[0], SphereBox[{7, 11, 9}]}, 
      {Hue[1], SphereBox[{7, 11, 9}]}}, {
      {Hue[0], SphereBox[{7, 11, 11}]}, 
      {Hue[1], SphereBox[{7, 11, 11}]}}, {
      {Hue[0], SphereBox[{7, 11, 13}]}, 
      {Hue[1], SphereBox[{7, 11, 13}]}}, {
      {Hue[0], SphereBox[{7, 11, 15}]}, 
      {Hue[1], SphereBox[{7, 11, 15}]}}, {
      {Hue[0], SphereBox[{7, 11, 17}]}, 
      {Hue[1], SphereBox[{7, 11, 17}]}}, {
      {Hue[0], SphereBox[{7, 11, 19}]}, 
      {Hue[1], SphereBox[{7, 11, 19}]}}, {
      {Hue[0], SphereBox[{7, 11, 21}]}, 
      {Hue[1], SphereBox[{7, 11, 21}]}}}, {{
      {Hue[0], SphereBox[{7, 13, 1}]}, 
      {Hue[1], SphereBox[{7, 13, 1}]}}, {
      {Hue[0], SphereBox[{7, 13, 3}]}, 
      {Hue[1], SphereBox[{7, 13, 3}]}}, {
      {Hue[0], SphereBox[{7, 13, 5}]}, 
      {Hue[1], SphereBox[{7, 13, 5}]}}, {
      {Hue[0], SphereBox[{7, 13, 7}]}, 
      {Hue[1], SphereBox[{7, 13, 7}]}}, {
      {Hue[0], SphereBox[{7, 13, 9}]}, 
      {Hue[1], SphereBox[{7, 13, 9}]}}, {
      {Hue[0], SphereBox[{7, 13, 11}]}, 
      {Hue[1], SphereBox[{7, 13, 11}]}}, {
      {Hue[0], SphereBox[{7, 13, 13}]}, 
      {Hue[1], SphereBox[{7, 13, 13}]}}, {
      {Hue[0], SphereBox[{7, 13, 15}]}, 
      {Hue[1], SphereBox[{7, 13, 15}]}}, {
      {Hue[0], SphereBox[{7, 13, 17}]}, 
      {Hue[1], SphereBox[{7, 13, 17}]}}, {
      {Hue[0], SphereBox[{7, 13, 19}]}, 
      {Hue[1], SphereBox[{7, 13, 19}]}}, {
      {Hue[0], SphereBox[{7, 13, 21}]}, 
      {Hue[1], SphereBox[{7, 13, 21}]}}}, {{
      {Hue[0], SphereBox[{7, 15, 1}]}, 
      {Hue[1], SphereBox[{7, 15, 1}]}}, {
      {Hue[0], SphereBox[{7, 15, 3}]}, 
      {Hue[1], SphereBox[{7, 15, 3}]}}, {
      {Hue[0], SphereBox[{7, 15, 5}]}, 
      {Hue[1], SphereBox[{7, 15, 5}]}}, {
      {Hue[0], SphereBox[{7, 15, 7}]}, 
      {Hue[1], SphereBox[{7, 15, 7}]}}, {
      {Hue[0], SphereBox[{7, 15, 9}]}, 
      {Hue[1], SphereBox[{7, 15, 9}]}}, {
      {Hue[0], SphereBox[{7, 15, 11}]}, 
      {Hue[1], SphereBox[{7, 15, 11}]}}, {
      {Hue[0], SphereBox[{7, 15, 13}]}, 
      {Hue[1], SphereBox[{7, 15, 13}]}}, {
      {Hue[0], SphereBox[{7, 15, 15}]}, 
      {Hue[1], SphereBox[{7, 15, 15}]}}, {
      {Hue[0], SphereBox[{7, 15, 17}]}, 
      {Hue[1], SphereBox[{7, 15, 17}]}}, {
      {Hue[0], SphereBox[{7, 15, 19}]}, 
      {Hue[1], SphereBox[{7, 15, 19}]}}, {
      {Hue[0], SphereBox[{7, 15, 21}]}, 
      {Hue[1], SphereBox[{7, 15, 21}]}}}, {{
      {Hue[0], SphereBox[{7, 17, 1}]}, 
      {Hue[1], SphereBox[{7, 17, 1}]}}, {
      {Hue[0], SphereBox[{7, 17, 3}]}, 
      {Hue[1], SphereBox[{7, 17, 3}]}}, {
      {Hue[0], SphereBox[{7, 17, 5}]}, 
      {Hue[1], SphereBox[{7, 17, 5}]}}, {
      {Hue[0], SphereBox[{7, 17, 7}]}, 
      {Hue[1], SphereBox[{7, 17, 7}]}}, {
      {Hue[0], SphereBox[{7, 17, 9}]}, 
      {Hue[1], SphereBox[{7, 17, 9}]}}, {
      {Hue[0], SphereBox[{7, 17, 11}]}, 
      {Hue[1], SphereBox[{7, 17, 11}]}}, {
      {Hue[0], SphereBox[{7, 17, 13}]}, 
      {Hue[1], SphereBox[{7, 17, 13}]}}, {
      {Hue[0], SphereBox[{7, 17, 15}]}, 
      {Hue[1], SphereBox[{7, 17, 15}]}}, {
      {Hue[0], SphereBox[{7, 17, 17}]}, 
      {Hue[1], SphereBox[{7, 17, 17}]}}, {
      {Hue[0], SphereBox[{7, 17, 19}]}, 
      {Hue[1], SphereBox[{7, 17, 19}]}}, {
      {Hue[0], SphereBox[{7, 17, 21}]}, 
      {Hue[1], SphereBox[{7, 17, 21}]}}}, {{
      {Hue[0], SphereBox[{7, 19, 1}]}, 
      {Hue[1], SphereBox[{7, 19, 1}]}}, {
      {Hue[0], SphereBox[{7, 19, 3}]}, 
      {Hue[1], SphereBox[{7, 19, 3}]}}, {
      {Hue[0], SphereBox[{7, 19, 5}]}, 
      {Hue[1], SphereBox[{7, 19, 5}]}}, {
      {Hue[0], SphereBox[{7, 19, 7}]}, 
      {Hue[1], SphereBox[{7, 19, 7}]}}, {
      {Hue[0], SphereBox[{7, 19, 9}]}, 
      {Hue[1], SphereBox[{7, 19, 9}]}}, {
      {Hue[0], SphereBox[{7, 19, 11}]}, 
      {Hue[1], SphereBox[{7, 19, 11}]}}, {
      {Hue[0], SphereBox[{7, 19, 13}]}, 
      {Hue[1], SphereBox[{7, 19, 13}]}}, {
      {Hue[0], SphereBox[{7, 19, 15}]}, 
      {Hue[1], SphereBox[{7, 19, 15}]}}, {
      {Hue[0], SphereBox[{7, 19, 17}]}, 
      {Hue[1], SphereBox[{7, 19, 17}]}}, {
      {Hue[0], SphereBox[{7, 19, 19}]}, 
      {Hue[1], SphereBox[{7, 19, 19}]}}, {
      {Hue[0], SphereBox[{7, 19, 21}]}, 
      {Hue[1], SphereBox[{7, 19, 21}]}}}, {{
      {Hue[0], SphereBox[{7, 21, 1}]}, 
      {Hue[1], SphereBox[{7, 21, 1}]}}, {
      {Hue[0], SphereBox[{7, 21, 3}]}, 
      {Hue[1], SphereBox[{7, 21, 3}]}}, {
      {Hue[0], SphereBox[{7, 21, 5}]}, 
      {Hue[1], SphereBox[{7, 21, 5}]}}, {
      {Hue[0], SphereBox[{7, 21, 7}]}, 
      {Hue[1], SphereBox[{7, 21, 7}]}}, {
      {Hue[0], SphereBox[{7, 21, 9}]}, 
      {Hue[1], SphereBox[{7, 21, 9}]}}, {
      {Hue[0], SphereBox[{7, 21, 11}]}, 
      {Hue[1], SphereBox[{7, 21, 11}]}}, {
      {Hue[0], SphereBox[{7, 21, 13}]}, 
      {Hue[1], SphereBox[{7, 21, 13}]}}, {
      {Hue[0], SphereBox[{7, 21, 15}]}, 
      {Hue[1], SphereBox[{7, 21, 15}]}}, {
      {Hue[0], SphereBox[{7, 21, 17}]}, 
      {Hue[1], SphereBox[{7, 21, 17}]}}, {
      {Hue[0], SphereBox[{7, 21, 19}]}, 
      {Hue[1], SphereBox[{7, 21, 19}]}}, {
      {Hue[0], SphereBox[{7, 21, 21}]}, 
      {Hue[1], SphereBox[{7, 21, 21}]}}}}, {{{
      {Hue[0], SphereBox[{9, 1, 1}]}, 
      {Hue[1], SphereBox[{9, 1, 1}]}}, {
      {Hue[0], SphereBox[{9, 1, 3}]}, 
      {Hue[1], SphereBox[{9, 1, 3}]}}, {
      {Hue[0], SphereBox[{9, 1, 5}]}, 
      {Hue[1], SphereBox[{9, 1, 5}]}}, {
      {Hue[0], SphereBox[{9, 1, 7}]}, 
      {Hue[1], SphereBox[{9, 1, 7}]}}, {
      {Hue[0], SphereBox[{9, 1, 9}]}, 
      {Hue[1], SphereBox[{9, 1, 9}]}}, {
      {Hue[0], SphereBox[{9, 1, 11}]}, 
      {Hue[1], SphereBox[{9, 1, 11}]}}, {
      {Hue[0], SphereBox[{9, 1, 13}]}, 
      {Hue[1], SphereBox[{9, 1, 13}]}}, {
      {Hue[0], SphereBox[{9, 1, 15}]}, 
      {Hue[1], SphereBox[{9, 1, 15}]}}, {
      {Hue[0], SphereBox[{9, 1, 17}]}, 
      {Hue[1], SphereBox[{9, 1, 17}]}}, {
      {Hue[0], SphereBox[{9, 1, 19}]}, 
      {Hue[1], SphereBox[{9, 1, 19}]}}, {
      {Hue[0], SphereBox[{9, 1, 21}]}, 
      {Hue[1], SphereBox[{9, 1, 21}]}}}, {{
      {Hue[0], SphereBox[{9, 3, 1}]}, 
      {Hue[1], SphereBox[{9, 3, 1}]}}, {
      {Hue[0], SphereBox[{9, 3, 3}]}, 
      {Hue[1], SphereBox[{9, 3, 3}]}}, {
      {Hue[0], SphereBox[{9, 3, 5}]}, 
      {Hue[1], SphereBox[{9, 3, 5}]}}, {
      {Hue[0], SphereBox[{9, 3, 7}]}, 
      {Hue[1], SphereBox[{9, 3, 7}]}}, {
      {Hue[0], SphereBox[{9, 3, 9}]}, 
      {Hue[1], SphereBox[{9, 3, 9}]}}, {
      {Hue[0], SphereBox[{9, 3, 11}]}, 
      {Hue[1], SphereBox[{9, 3, 11}]}}, {
      {Hue[0], SphereBox[{9, 3, 13}]}, 
      {Hue[1], SphereBox[{9, 3, 13}]}}, {
      {Hue[0], SphereBox[{9, 3, 15}]}, 
      {Hue[1], SphereBox[{9, 3, 15}]}}, {
      {Hue[0], SphereBox[{9, 3, 17}]}, 
      {Hue[1], SphereBox[{9, 3, 17}]}}, {
      {Hue[0], SphereBox[{9, 3, 19}]}, 
      {Hue[1], SphereBox[{9, 3, 19}]}}, {
      {Hue[0], SphereBox[{9, 3, 21}]}, 
      {Hue[1], SphereBox[{9, 3, 21}]}}}, {{
      {Hue[0], SphereBox[{9, 5, 1}]}, 
      {Hue[1], SphereBox[{9, 5, 1}]}}, {
      {Hue[0], SphereBox[{9, 5, 3}]}, 
      {Hue[1], SphereBox[{9, 5, 3}]}}, {
      {Hue[0], SphereBox[{9, 5, 5}]}, 
      {Hue[1], SphereBox[{9, 5, 5}]}}, {
      {Hue[0], SphereBox[{9, 5, 7}]}, 
      {Hue[1], SphereBox[{9, 5, 7}]}}, {
      {Hue[0], SphereBox[{9, 5, 9}]}, 
      {Hue[1], SphereBox[{9, 5, 9}]}}, {
      {Hue[0], SphereBox[{9, 5, 11}]}, 
      {Hue[1], SphereBox[{9, 5, 11}]}}, {
      {Hue[0], SphereBox[{9, 5, 13}]}, 
      {Hue[1], SphereBox[{9, 5, 13}]}}, {
      {Hue[0], SphereBox[{9, 5, 15}]}, 
      {Hue[1], SphereBox[{9, 5, 15}]}}, {
      {Hue[0], SphereBox[{9, 5, 17}]}, 
      {Hue[1], SphereBox[{9, 5, 17}]}}, {
      {Hue[0], SphereBox[{9, 5, 19}]}, 
      {Hue[1], SphereBox[{9, 5, 19}]}}, {
      {Hue[0], SphereBox[{9, 5, 21}]}, 
      {Hue[1], SphereBox[{9, 5, 21}]}}}, {{
      {Hue[0], SphereBox[{9, 7, 1}]}, 
      {Hue[1], SphereBox[{9, 7, 1}]}}, {
      {Hue[0], SphereBox[{9, 7, 3}]}, 
      {Hue[1], SphereBox[{9, 7, 3}]}}, {
      {Hue[0], SphereBox[{9, 7, 5}]}, 
      {Hue[1], SphereBox[{9, 7, 5}]}}, {
      {Hue[0], SphereBox[{9, 7, 7}]}, 
      {Hue[1], SphereBox[{9, 7, 7}]}}, {
      {Hue[0], SphereBox[{9, 7, 9}]}, 
      {Hue[1], SphereBox[{9, 7, 9}]}}, {
      {Hue[0], SphereBox[{9, 7, 11}]}, 
      {Hue[1], SphereBox[{9, 7, 11}]}}, {
      {Hue[0], SphereBox[{9, 7, 13}]}, 
      {Hue[1], SphereBox[{9, 7, 13}]}}, {
      {Hue[0], SphereBox[{9, 7, 15}]}, 
      {Hue[1], SphereBox[{9, 7, 15}]}}, {
      {Hue[0], SphereBox[{9, 7, 17}]}, 
      {Hue[1], SphereBox[{9, 7, 17}]}}, {
      {Hue[0], SphereBox[{9, 7, 19}]}, 
      {Hue[1], SphereBox[{9, 7, 19}]}}, {
      {Hue[0], SphereBox[{9, 7, 21}]}, 
      {Hue[1], SphereBox[{9, 7, 21}]}}}, {{
      {Hue[0], SphereBox[{9, 9, 1}]}, 
      {Hue[1], SphereBox[{9, 9, 1}]}}, {
      {Hue[0], SphereBox[{9, 9, 3}]}, 
      {Hue[1], SphereBox[{9, 9, 3}]}}, {
      {Hue[0], SphereBox[{9, 9, 5}]}, 
      {Hue[1], SphereBox[{9, 9, 5}]}}, {
      {Hue[0], SphereBox[{9, 9, 7}]}, 
      {Hue[1], SphereBox[{9, 9, 7}]}}, {
      {Hue[0], SphereBox[{9, 9, 9}]}, 
      {Hue[1], SphereBox[{9, 9, 9}]}}, {
      {Hue[0], SphereBox[{9, 9, 11}]}, 
      {Hue[1], SphereBox[{9, 9, 11}]}}, {
      {Hue[0], SphereBox[{9, 9, 13}]}, 
      {Hue[1], SphereBox[{9, 9, 13}]}}, {
      {Hue[0], SphereBox[{9, 9, 15}]}, 
      {Hue[1], SphereBox[{9, 9, 15}]}}, {
      {Hue[0], SphereBox[{9, 9, 17}]}, 
      {Hue[1], SphereBox[{9, 9, 17}]}}, {
      {Hue[0], SphereBox[{9, 9, 19}]}, 
      {Hue[1], SphereBox[{9, 9, 19}]}}, {
      {Hue[0], SphereBox[{9, 9, 21}]}, 
      {Hue[1], SphereBox[{9, 9, 21}]}}}, {{
      {Hue[0], SphereBox[{9, 11, 1}]}, 
      {Hue[1], SphereBox[{9, 11, 1}]}}, {
      {Hue[0], SphereBox[{9, 11, 3}]}, 
      {Hue[1], SphereBox[{9, 11, 3}]}}, {
      {Hue[0], SphereBox[{9, 11, 5}]}, 
      {Hue[1], SphereBox[{9, 11, 5}]}}, {
      {Hue[0], SphereBox[{9, 11, 7}]}, 
      {Hue[1], SphereBox[{9, 11, 7}]}}, {
      {Hue[0], SphereBox[{9, 11, 9}]}, 
      {Hue[1], SphereBox[{9, 11, 9}]}}, {
      {Hue[0], SphereBox[{9, 11, 11}]}, 
      {Hue[1], SphereBox[{9, 11, 11}]}}, {
      {Hue[0], SphereBox[{9, 11, 13}]}, 
      {Hue[1], SphereBox[{9, 11, 13}]}}, {
      {Hue[0], SphereBox[{9, 11, 15}]}, 
      {Hue[1], SphereBox[{9, 11, 15}]}}, {
      {Hue[0], SphereBox[{9, 11, 17}]}, 
      {Hue[1], SphereBox[{9, 11, 17}]}}, {
      {Hue[0], SphereBox[{9, 11, 19}]}, 
      {Hue[1], SphereBox[{9, 11, 19}]}}, {
      {Hue[0], SphereBox[{9, 11, 21}]}, 
      {Hue[1], SphereBox[{9, 11, 21}]}}}, {{
      {Hue[0], SphereBox[{9, 13, 1}]}, 
      {Hue[1], SphereBox[{9, 13, 1}]}}, {
      {Hue[0], SphereBox[{9, 13, 3}]}, 
      {Hue[1], SphereBox[{9, 13, 3}]}}, {
      {Hue[0], SphereBox[{9, 13, 5}]}, 
      {Hue[1], SphereBox[{9, 13, 5}]}}, {
      {Hue[0], SphereBox[{9, 13, 7}]}, 
      {Hue[1], SphereBox[{9, 13, 7}]}}, {
      {Hue[0], SphereBox[{9, 13, 9}]}, 
      {Hue[1], SphereBox[{9, 13, 9}]}}, {
      {Hue[0], SphereBox[{9, 13, 11}]}, 
      {Hue[1], SphereBox[{9, 13, 11}]}}, {
      {Hue[0], SphereBox[{9, 13, 13}]}, 
      {Hue[1], SphereBox[{9, 13, 13}]}}, {
      {Hue[0], SphereBox[{9, 13, 15}]}, 
      {Hue[1], SphereBox[{9, 13, 15}]}}, {
      {Hue[0], SphereBox[{9, 13, 17}]}, 
      {Hue[1], SphereBox[{9, 13, 17}]}}, {
      {Hue[0], SphereBox[{9, 13, 19}]}, 
      {Hue[1], SphereBox[{9, 13, 19}]}}, {
      {Hue[0], SphereBox[{9, 13, 21}]}, 
      {Hue[1], SphereBox[{9, 13, 21}]}}}, {{
      {Hue[0], SphereBox[{9, 15, 1}]}, 
      {Hue[1], SphereBox[{9, 15, 1}]}}, {
      {Hue[0], SphereBox[{9, 15, 3}]}, 
      {Hue[1], SphereBox[{9, 15, 3}]}}, {
      {Hue[0], SphereBox[{9, 15, 5}]}, 
      {Hue[1], SphereBox[{9, 15, 5}]}}, {
      {Hue[0], SphereBox[{9, 15, 7}]}, 
      {Hue[1], SphereBox[{9, 15, 7}]}}, {
      {Hue[0], SphereBox[{9, 15, 9}]}, 
      {Hue[1], SphereBox[{9, 15, 9}]}}, {
      {Hue[0], SphereBox[{9, 15, 11}]}, 
      {Hue[1], SphereBox[{9, 15, 11}]}}, {
      {Hue[0], SphereBox[{9, 15, 13}]}, 
      {Hue[1], SphereBox[{9, 15, 13}]}}, {
      {Hue[0], SphereBox[{9, 15, 15}]}, 
      {Hue[1], SphereBox[{9, 15, 15}]}}, {
      {Hue[0], SphereBox[{9, 15, 17}]}, 
      {Hue[1], SphereBox[{9, 15, 17}]}}, {
      {Hue[0], SphereBox[{9, 15, 19}]}, 
      {Hue[1], SphereBox[{9, 15, 19}]}}, {
      {Hue[0], SphereBox[{9, 15, 21}]}, 
      {Hue[1], SphereBox[{9, 15, 21}]}}}, {{
      {Hue[0], SphereBox[{9, 17, 1}]}, 
      {Hue[1], SphereBox[{9, 17, 1}]}}, {
      {Hue[0], SphereBox[{9, 17, 3}]}, 
      {Hue[1], SphereBox[{9, 17, 3}]}}, {
      {Hue[0], SphereBox[{9, 17, 5}]}, 
      {Hue[1], SphereBox[{9, 17, 5}]}}, {
      {Hue[0], SphereBox[{9, 17, 7}]}, 
      {Hue[1], SphereBox[{9, 17, 7}]}}, {
      {Hue[0], SphereBox[{9, 17, 9}]}, 
      {Hue[1], SphereBox[{9, 17, 9}]}}, {
      {Hue[0], SphereBox[{9, 17, 11}]}, 
      {Hue[1], SphereBox[{9, 17, 11}]}}, {
      {Hue[0], SphereBox[{9, 17, 13}]}, 
      {Hue[1], SphereBox[{9, 17, 13}]}}, {
      {Hue[0], SphereBox[{9, 17, 15}]}, 
      {Hue[1], SphereBox[{9, 17, 15}]}}, {
      {Hue[0], SphereBox[{9, 17, 17}]}, 
      {Hue[1], SphereBox[{9, 17, 17}]}}, {
      {Hue[0], SphereBox[{9, 17, 19}]}, 
      {Hue[1], SphereBox[{9, 17, 19}]}}, {
      {Hue[0], SphereBox[{9, 17, 21}]}, 
      {Hue[1], SphereBox[{9, 17, 21}]}}}, {{
      {Hue[0], SphereBox[{9, 19, 1}]}, 
      {Hue[1], SphereBox[{9, 19, 1}]}}, {
      {Hue[0], SphereBox[{9, 19, 3}]}, 
      {Hue[1], SphereBox[{9, 19, 3}]}}, {
      {Hue[0], SphereBox[{9, 19, 5}]}, 
      {Hue[1], SphereBox[{9, 19, 5}]}}, {
      {Hue[0], SphereBox[{9, 19, 7}]}, 
      {Hue[1], SphereBox[{9, 19, 7}]}}, {
      {Hue[0], SphereBox[{9, 19, 9}]}, 
      {Hue[1], SphereBox[{9, 19, 9}]}}, {
      {Hue[0], SphereBox[{9, 19, 11}]}, 
      {Hue[1], SphereBox[{9, 19, 11}]}}, {
      {Hue[0], SphereBox[{9, 19, 13}]}, 
      {Hue[1], SphereBox[{9, 19, 13}]}}, {
      {Hue[0], SphereBox[{9, 19, 15}]}, 
      {Hue[1], SphereBox[{9, 19, 15}]}}, {
      {Hue[0], SphereBox[{9, 19, 17}]}, 
      {Hue[1], SphereBox[{9, 19, 17}]}}, {
      {Hue[0], SphereBox[{9, 19, 19}]}, 
      {Hue[1], SphereBox[{9, 19, 19}]}}, {
      {Hue[0], SphereBox[{9, 19, 21}]}, 
      {Hue[1], SphereBox[{9, 19, 21}]}}}, {{
      {Hue[0], SphereBox[{9, 21, 1}]}, 
      {Hue[1], SphereBox[{9, 21, 1}]}}, {
      {Hue[0], SphereBox[{9, 21, 3}]}, 
      {Hue[1], SphereBox[{9, 21, 3}]}}, {
      {Hue[0], SphereBox[{9, 21, 5}]}, 
      {Hue[1], SphereBox[{9, 21, 5}]}}, {
      {Hue[0], SphereBox[{9, 21, 7}]}, 
      {Hue[1], SphereBox[{9, 21, 7}]}}, {
      {Hue[0], SphereBox[{9, 21, 9}]}, 
      {Hue[1], SphereBox[{9, 21, 9}]}}, {
      {Hue[0], SphereBox[{9, 21, 11}]}, 
      {Hue[1], SphereBox[{9, 21, 11}]}}, {
      {Hue[0], SphereBox[{9, 21, 13}]}, 
      {Hue[1], SphereBox[{9, 21, 13}]}}, {
      {Hue[0], SphereBox[{9, 21, 15}]}, 
      {Hue[1], SphereBox[{9, 21, 15}]}}, {
      {Hue[0], SphereBox[{9, 21, 17}]}, 
      {Hue[1], SphereBox[{9, 21, 17}]}}, {
      {Hue[0], SphereBox[{9, 21, 19}]}, 
      {Hue[1], SphereBox[{9, 21, 19}]}}, {
      {Hue[0], SphereBox[{9, 21, 21}]}, 
      {Hue[1], SphereBox[{9, 21, 21}]}}}}, {{{
      {Hue[0], SphereBox[{11, 1, 1}]}, 
      {Hue[1], SphereBox[{11, 1, 1}]}}, {
      {Hue[0], SphereBox[{11, 1, 3}]}, 
      {Hue[1], SphereBox[{11, 1, 3}]}}, {
      {Hue[0], SphereBox[{11, 1, 5}]}, 
      {Hue[1], SphereBox[{11, 1, 5}]}}, {
      {Hue[0], SphereBox[{11, 1, 7}]}, 
      {Hue[1], SphereBox[{11, 1, 7}]}}, {
      {Hue[0], SphereBox[{11, 1, 9}]}, 
      {Hue[1], SphereBox[{11, 1, 9}]}}, {
      {Hue[0], SphereBox[{11, 1, 11}]}, 
      {Hue[1], SphereBox[{11, 1, 11}]}}, {
      {Hue[0], SphereBox[{11, 1, 13}]}, 
      {Hue[1], SphereBox[{11, 1, 13}]}}, {
      {Hue[0], SphereBox[{11, 1, 15}]}, 
      {Hue[1], SphereBox[{11, 1, 15}]}}, {
      {Hue[0], SphereBox[{11, 1, 17}]}, 
      {Hue[1], SphereBox[{11, 1, 17}]}}, {
      {Hue[0], SphereBox[{11, 1, 19}]}, 
      {Hue[1], SphereBox[{11, 1, 19}]}}, {
      {Hue[0], SphereBox[{11, 1, 21}]}, 
      {Hue[1], SphereBox[{11, 1, 21}]}}}, {{
      {Hue[0], SphereBox[{11, 3, 1}]}, 
      {Hue[1], SphereBox[{11, 3, 1}]}}, {
      {Hue[0], SphereBox[{11, 3, 3}]}, 
      {Hue[1], SphereBox[{11, 3, 3}]}}, {
      {Hue[0], SphereBox[{11, 3, 5}]}, 
      {Hue[1], SphereBox[{11, 3, 5}]}}, {
      {Hue[0], SphereBox[{11, 3, 7}]}, 
      {Hue[1], SphereBox[{11, 3, 7}]}}, {
      {Hue[0], SphereBox[{11, 3, 9}]}, 
      {Hue[1], SphereBox[{11, 3, 9}]}}, {
      {Hue[0], SphereBox[{11, 3, 11}]}, 
      {Hue[1], SphereBox[{11, 3, 11}]}}, {
      {Hue[0], SphereBox[{11, 3, 13}]}, 
      {Hue[1], SphereBox[{11, 3, 13}]}}, {
      {Hue[0], SphereBox[{11, 3, 15}]}, 
      {Hue[1], SphereBox[{11, 3, 15}]}}, {
      {Hue[0], SphereBox[{11, 3, 17}]}, 
      {Hue[1], SphereBox[{11, 3, 17}]}}, {
      {Hue[0], SphereBox[{11, 3, 19}]}, 
      {Hue[1], SphereBox[{11, 3, 19}]}}, {
      {Hue[0], SphereBox[{11, 3, 21}]}, 
      {Hue[1], SphereBox[{11, 3, 21}]}}}, {{
      {Hue[0], SphereBox[{11, 5, 1}]}, 
      {Hue[1], SphereBox[{11, 5, 1}]}}, {
      {Hue[0], SphereBox[{11, 5, 3}]}, 
      {Hue[1], SphereBox[{11, 5, 3}]}}, {
      {Hue[0], SphereBox[{11, 5, 5}]}, 
      {Hue[1], SphereBox[{11, 5, 5}]}}, {
      {Hue[0], SphereBox[{11, 5, 7}]}, 
      {Hue[1], SphereBox[{11, 5, 7}]}}, {
      {Hue[0], SphereBox[{11, 5, 9}]}, 
      {Hue[1], SphereBox[{11, 5, 9}]}}, {
      {Hue[0], SphereBox[{11, 5, 11}]}, 
      {Hue[1], SphereBox[{11, 5, 11}]}}, {
      {Hue[0], SphereBox[{11, 5, 13}]}, 
      {Hue[1], SphereBox[{11, 5, 13}]}}, {
      {Hue[0], SphereBox[{11, 5, 15}]}, 
      {Hue[1], SphereBox[{11, 5, 15}]}}, {
      {Hue[0], SphereBox[{11, 5, 17}]}, 
      {Hue[1], SphereBox[{11, 5, 17}]}}, {
      {Hue[0], SphereBox[{11, 5, 19}]}, 
      {Hue[1], SphereBox[{11, 5, 19}]}}, {
      {Hue[0], SphereBox[{11, 5, 21}]}, 
      {Hue[1], SphereBox[{11, 5, 21}]}}}, {{
      {Hue[0], SphereBox[{11, 7, 1}]}, 
      {Hue[1], SphereBox[{11, 7, 1}]}}, {
      {Hue[0], SphereBox[{11, 7, 3}]}, 
      {Hue[1], SphereBox[{11, 7, 3}]}}, {
      {Hue[0], SphereBox[{11, 7, 5}]}, 
      {Hue[1], SphereBox[{11, 7, 5}]}}, {
      {Hue[0], SphereBox[{11, 7, 7}]}, 
      {Hue[1], SphereBox[{11, 7, 7}]}}, {
      {Hue[0], SphereBox[{11, 7, 9}]}, 
      {Hue[1], SphereBox[{11, 7, 9}]}}, {
      {Hue[0], SphereBox[{11, 7, 11}]}, 
      {Hue[1], SphereBox[{11, 7, 11}]}}, {
      {Hue[0], SphereBox[{11, 7, 13}]}, 
      {Hue[1], SphereBox[{11, 7, 13}]}}, {
      {Hue[0], SphereBox[{11, 7, 15}]}, 
      {Hue[1], SphereBox[{11, 7, 15}]}}, {
      {Hue[0], SphereBox[{11, 7, 17}]}, 
      {Hue[1], SphereBox[{11, 7, 17}]}}, {
      {Hue[0], SphereBox[{11, 7, 19}]}, 
      {Hue[1], SphereBox[{11, 7, 19}]}}, {
      {Hue[0], SphereBox[{11, 7, 21}]}, 
      {Hue[1], SphereBox[{11, 7, 21}]}}}, {{
      {Hue[0], SphereBox[{11, 9, 1}]}, 
      {Hue[1], SphereBox[{11, 9, 1}]}}, {
      {Hue[0], SphereBox[{11, 9, 3}]}, 
      {Hue[1], SphereBox[{11, 9, 3}]}}, {
      {Hue[0], SphereBox[{11, 9, 5}]}, 
      {Hue[1], SphereBox[{11, 9, 5}]}}, {
      {Hue[0], SphereBox[{11, 9, 7}]}, 
      {Hue[1], SphereBox[{11, 9, 7}]}}, {
      {Hue[0], SphereBox[{11, 9, 9}]}, 
      {Hue[1], SphereBox[{11, 9, 9}]}}, {
      {Hue[0], SphereBox[{11, 9, 11}]}, 
      {Hue[1], SphereBox[{11, 9, 11}]}}, {
      {Hue[0], SphereBox[{11, 9, 13}]}, 
      {Hue[1], SphereBox[{11, 9, 13}]}}, {
      {Hue[0], SphereBox[{11, 9, 15}]}, 
      {Hue[1], SphereBox[{11, 9, 15}]}}, {
      {Hue[0], SphereBox[{11, 9, 17}]}, 
      {Hue[1], SphereBox[{11, 9, 17}]}}, {
      {Hue[0], SphereBox[{11, 9, 19}]}, 
      {Hue[1], SphereBox[{11, 9, 19}]}}, {
      {Hue[0], SphereBox[{11, 9, 21}]}, 
      {Hue[1], SphereBox[{11, 9, 21}]}}}, {{
      {Hue[0], SphereBox[{11, 11, 1}]}, 
      {Hue[1], SphereBox[{11, 11, 1}]}}, {
      {Hue[0], SphereBox[{11, 11, 3}]}, 
      {Hue[1], SphereBox[{11, 11, 3}]}}, {
      {Hue[0], SphereBox[{11, 11, 5}]}, 
      {Hue[1], SphereBox[{11, 11, 5}]}}, {
      {Hue[0], SphereBox[{11, 11, 7}]}, 
      {Hue[1], SphereBox[{11, 11, 7}]}}, {
      {Hue[0], SphereBox[{11, 11, 9}]}, 
      {Hue[1], SphereBox[{11, 11, 9}]}}, {
      {Hue[0], SphereBox[{11, 11, 11}]}, 
      {Hue[1], SphereBox[{11, 11, 11}]}}, {
      {Hue[0], SphereBox[{11, 11, 13}]}, 
      {Hue[1], SphereBox[{11, 11, 13}]}}, {
      {Hue[0], SphereBox[{11, 11, 15}]}, 
      {Hue[1], SphereBox[{11, 11, 15}]}}, {
      {Hue[0], SphereBox[{11, 11, 17}]}, 
      {Hue[1], SphereBox[{11, 11, 17}]}}, {
      {Hue[0], SphereBox[{11, 11, 19}]}, 
      {Hue[1], SphereBox[{11, 11, 19}]}}, {
      {Hue[0], SphereBox[{11, 11, 21}]}, 
      {Hue[1], SphereBox[{11, 11, 21}]}}}, {{
      {Hue[0], SphereBox[{11, 13, 1}]}, 
      {Hue[1], SphereBox[{11, 13, 1}]}}, {
      {Hue[0], SphereBox[{11, 13, 3}]}, 
      {Hue[1], SphereBox[{11, 13, 3}]}}, {
      {Hue[0], SphereBox[{11, 13, 5}]}, 
      {Hue[1], SphereBox[{11, 13, 5}]}}, {
      {Hue[0], SphereBox[{11, 13, 7}]}, 
      {Hue[1], SphereBox[{11, 13, 7}]}}, {
      {Hue[0], SphereBox[{11, 13, 9}]}, 
      {Hue[1], SphereBox[{11, 13, 9}]}}, {
      {Hue[0], SphereBox[{11, 13, 11}]}, 
      {Hue[1], SphereBox[{11, 13, 11}]}}, {
      {Hue[0], SphereBox[{11, 13, 13}]}, 
      {Hue[1], SphereBox[{11, 13, 13}]}}, {
      {Hue[0], SphereBox[{11, 13, 15}]}, 
      {Hue[1], SphereBox[{11, 13, 15}]}}, {
      {Hue[0], SphereBox[{11, 13, 17}]}, 
      {Hue[1], SphereBox[{11, 13, 17}]}}, {
      {Hue[0], SphereBox[{11, 13, 19}]}, 
      {Hue[1], SphereBox[{11, 13, 19}]}}, {
      {Hue[0], SphereBox[{11, 13, 21}]}, 
      {Hue[1], SphereBox[{11, 13, 21}]}}}, {{
      {Hue[0], SphereBox[{11, 15, 1}]}, 
      {Hue[1], SphereBox[{11, 15, 1}]}}, {
      {Hue[0], SphereBox[{11, 15, 3}]}, 
      {Hue[1], SphereBox[{11, 15, 3}]}}, {
      {Hue[0], SphereBox[{11, 15, 5}]}, 
      {Hue[1], SphereBox[{11, 15, 5}]}}, {
      {Hue[0], SphereBox[{11, 15, 7}]}, 
      {Hue[1], SphereBox[{11, 15, 7}]}}, {
      {Hue[0], SphereBox[{11, 15, 9}]}, 
      {Hue[1], SphereBox[{11, 15, 9}]}}, {
      {Hue[0], SphereBox[{11, 15, 11}]}, 
      {Hue[1], SphereBox[{11, 15, 11}]}}, {
      {Hue[0], SphereBox[{11, 15, 13}]}, 
      {Hue[1], SphereBox[{11, 15, 13}]}}, {
      {Hue[0], SphereBox[{11, 15, 15}]}, 
      {Hue[1], SphereBox[{11, 15, 15}]}}, {
      {Hue[0], SphereBox[{11, 15, 17}]}, 
      {Hue[1], SphereBox[{11, 15, 17}]}}, {
      {Hue[0], SphereBox[{11, 15, 19}]}, 
      {Hue[1], SphereBox[{11, 15, 19}]}}, {
      {Hue[0], SphereBox[{11, 15, 21}]}, 
      {Hue[1], SphereBox[{11, 15, 21}]}}}, {{
      {Hue[0], SphereBox[{11, 17, 1}]}, 
      {Hue[1], SphereBox[{11, 17, 1}]}}, {
      {Hue[0], SphereBox[{11, 17, 3}]}, 
      {Hue[1], SphereBox[{11, 17, 3}]}}, {
      {Hue[0], SphereBox[{11, 17, 5}]}, 
      {Hue[1], SphereBox[{11, 17, 5}]}}, {
      {Hue[0], SphereBox[{11, 17, 7}]}, 
      {Hue[1], SphereBox[{11, 17, 7}]}}, {
      {Hue[0], SphereBox[{11, 17, 9}]}, 
      {Hue[1], SphereBox[{11, 17, 9}]}}, {
      {Hue[0], SphereBox[{11, 17, 11}]}, 
      {Hue[1], SphereBox[{11, 17, 11}]}}, {
      {Hue[0], SphereBox[{11, 17, 13}]}, 
      {Hue[1], SphereBox[{11, 17, 13}]}}, {
      {Hue[0], SphereBox[{11, 17, 15}]}, 
      {Hue[1], SphereBox[{11, 17, 15}]}}, {
      {Hue[0], SphereBox[{11, 17, 17}]}, 
      {Hue[1], SphereBox[{11, 17, 17}]}}, {
      {Hue[0], SphereBox[{11, 17, 19}]}, 
      {Hue[1], SphereBox[{11, 17, 19}]}}, {
      {Hue[0], SphereBox[{11, 17, 21}]}, 
      {Hue[1], SphereBox[{11, 17, 21}]}}}, {{
      {Hue[0], SphereBox[{11, 19, 1}]}, 
      {Hue[1], SphereBox[{11, 19, 1}]}}, {
      {Hue[0], SphereBox[{11, 19, 3}]}, 
      {Hue[1], SphereBox[{11, 19, 3}]}}, {
      {Hue[0], SphereBox[{11, 19, 5}]}, 
      {Hue[1], SphereBox[{11, 19, 5}]}}, {
      {Hue[0], SphereBox[{11, 19, 7}]}, 
      {Hue[1], SphereBox[{11, 19, 7}]}}, {
      {Hue[0], SphereBox[{11, 19, 9}]}, 
      {Hue[1], SphereBox[{11, 19, 9}]}}, {
      {Hue[0], SphereBox[{11, 19, 11}]}, 
      {Hue[1], SphereBox[{11, 19, 11}]}}, {
      {Hue[0], SphereBox[{11, 19, 13}]}, 
      {Hue[1], SphereBox[{11, 19, 13}]}}, {
      {Hue[0], SphereBox[{11, 19, 15}]}, 
      {Hue[1], SphereBox[{11, 19, 15}]}}, {
      {Hue[0], SphereBox[{11, 19, 17}]}, 
      {Hue[1], SphereBox[{11, 19, 17}]}}, {
      {Hue[0], SphereBox[{11, 19, 19}]}, 
      {Hue[1], SphereBox[{11, 19, 19}]}}, {
      {Hue[0], SphereBox[{11, 19, 21}]}, 
      {Hue[1], SphereBox[{11, 19, 21}]}}}, {{
      {Hue[0], SphereBox[{11, 21, 1}]}, 
      {Hue[1], SphereBox[{11, 21, 1}]}}, {
      {Hue[0], SphereBox[{11, 21, 3}]}, 
      {Hue[1], SphereBox[{11, 21, 3}]}}, {
      {Hue[0], SphereBox[{11, 21, 5}]}, 
      {Hue[1], SphereBox[{11, 21, 5}]}}, {
      {Hue[0], SphereBox[{11, 21, 7}]}, 
      {Hue[1], SphereBox[{11, 21, 7}]}}, {
      {Hue[0], SphereBox[{11, 21, 9}]}, 
      {Hue[1], SphereBox[{11, 21, 9}]}}, {
      {Hue[0], SphereBox[{11, 21, 11}]}, 
      {Hue[1], SphereBox[{11, 21, 11}]}}, {
      {Hue[0], SphereBox[{11, 21, 13}]}, 
      {Hue[1], SphereBox[{11, 21, 13}]}}, {
      {Hue[0], SphereBox[{11, 21, 15}]}, 
      {Hue[1], SphereBox[{11, 21, 15}]}}, {
      {Hue[0], SphereBox[{11, 21, 17}]}, 
      {Hue[1], SphereBox[{11, 21, 17}]}}, {
      {Hue[0], SphereBox[{11, 21, 19}]}, 
      {Hue[1], SphereBox[{11, 21, 19}]}}, {
      {Hue[0], SphereBox[{11, 21, 21}]}, 
      {Hue[1], SphereBox[{11, 21, 21}]}}}}, {{{
      {Hue[0], SphereBox[{13, 1, 1}]}, 
      {Hue[1], SphereBox[{13, 1, 1}]}}, {
      {Hue[0], SphereBox[{13, 1, 3}]}, 
      {Hue[1], SphereBox[{13, 1, 3}]}}, {
      {Hue[0], SphereBox[{13, 1, 5}]}, 
      {Hue[1], SphereBox[{13, 1, 5}]}}, {
      {Hue[0], SphereBox[{13, 1, 7}]}, 
      {Hue[1], SphereBox[{13, 1, 7}]}}, {
      {Hue[0], SphereBox[{13, 1, 9}]}, 
      {Hue[1], SphereBox[{13, 1, 9}]}}, {
      {Hue[0], SphereBox[{13, 1, 11}]}, 
      {Hue[1], SphereBox[{13, 1, 11}]}}, {
      {Hue[0], SphereBox[{13, 1, 13}]}, 
      {Hue[1], SphereBox[{13, 1, 13}]}}, {
      {Hue[0], SphereBox[{13, 1, 15}]}, 
      {Hue[1], SphereBox[{13, 1, 15}]}}, {
      {Hue[0], SphereBox[{13, 1, 17}]}, 
      {Hue[1], SphereBox[{13, 1, 17}]}}, {
      {Hue[0], SphereBox[{13, 1, 19}]}, 
      {Hue[1], SphereBox[{13, 1, 19}]}}, {
      {Hue[0], SphereBox[{13, 1, 21}]}, 
      {Hue[1], SphereBox[{13, 1, 21}]}}}, {{
      {Hue[0], SphereBox[{13, 3, 1}]}, 
      {Hue[1], SphereBox[{13, 3, 1}]}}, {
      {Hue[0], SphereBox[{13, 3, 3}]}, 
      {Hue[1], SphereBox[{13, 3, 3}]}}, {
      {Hue[0], SphereBox[{13, 3, 5}]}, 
      {Hue[1], SphereBox[{13, 3, 5}]}}, {
      {Hue[0], SphereBox[{13, 3, 7}]}, 
      {Hue[1], SphereBox[{13, 3, 7}]}}, {
      {Hue[0], SphereBox[{13, 3, 9}]}, 
      {Hue[1], SphereBox[{13, 3, 9}]}}, {
      {Hue[0], SphereBox[{13, 3, 11}]}, 
      {Hue[1], SphereBox[{13, 3, 11}]}}, {
      {Hue[0], SphereBox[{13, 3, 13}]}, 
      {Hue[1], SphereBox[{13, 3, 13}]}}, {
      {Hue[0], SphereBox[{13, 3, 15}]}, 
      {Hue[1], SphereBox[{13, 3, 15}]}}, {
      {Hue[0], SphereBox[{13, 3, 17}]}, 
      {Hue[1], SphereBox[{13, 3, 17}]}}, {
      {Hue[0], SphereBox[{13, 3, 19}]}, 
      {Hue[1], SphereBox[{13, 3, 19}]}}, {
      {Hue[0], SphereBox[{13, 3, 21}]}, 
      {Hue[1], SphereBox[{13, 3, 21}]}}}, {{
      {Hue[0], SphereBox[{13, 5, 1}]}, 
      {Hue[1], SphereBox[{13, 5, 1}]}}, {
      {Hue[0], SphereBox[{13, 5, 3}]}, 
      {Hue[1], SphereBox[{13, 5, 3}]}}, {
      {Hue[0], SphereBox[{13, 5, 5}]}, 
      {Hue[1], SphereBox[{13, 5, 5}]}}, {
      {Hue[0], SphereBox[{13, 5, 7}]}, 
      {Hue[1], SphereBox[{13, 5, 7}]}}, {
      {Hue[0], SphereBox[{13, 5, 9}]}, 
      {Hue[1], SphereBox[{13, 5, 9}]}}, {
      {Hue[0], SphereBox[{13, 5, 11}]}, 
      {Hue[1], SphereBox[{13, 5, 11}]}}, {
      {Hue[0], SphereBox[{13, 5, 13}]}, 
      {Hue[1], SphereBox[{13, 5, 13}]}}, {
      {Hue[0], SphereBox[{13, 5, 15}]}, 
      {Hue[1], SphereBox[{13, 5, 15}]}}, {
      {Hue[0], SphereBox[{13, 5, 17}]}, 
      {Hue[1], SphereBox[{13, 5, 17}]}}, {
      {Hue[0], SphereBox[{13, 5, 19}]}, 
      {Hue[1], SphereBox[{13, 5, 19}]}}, {
      {Hue[0], SphereBox[{13, 5, 21}]}, 
      {Hue[1], SphereBox[{13, 5, 21}]}}}, {{
      {Hue[0], SphereBox[{13, 7, 1}]}, 
      {Hue[1], SphereBox[{13, 7, 1}]}}, {
      {Hue[0], SphereBox[{13, 7, 3}]}, 
      {Hue[1], SphereBox[{13, 7, 3}]}}, {
      {Hue[0], SphereBox[{13, 7, 5}]}, 
      {Hue[1], SphereBox[{13, 7, 5}]}}, {
      {Hue[0], SphereBox[{13, 7, 7}]}, 
      {Hue[1], SphereBox[{13, 7, 7}]}}, {
      {Hue[0], SphereBox[{13, 7, 9}]}, 
      {Hue[1], SphereBox[{13, 7, 9}]}}, {
      {Hue[0], SphereBox[{13, 7, 11}]}, 
      {Hue[1], SphereBox[{13, 7, 11}]}}, {
      {Hue[0], SphereBox[{13, 7, 13}]}, 
      {Hue[1], SphereBox[{13, 7, 13}]}}, {
      {Hue[0], SphereBox[{13, 7, 15}]}, 
      {Hue[1], SphereBox[{13, 7, 15}]}}, {
      {Hue[0], SphereBox[{13, 7, 17}]}, 
      {Hue[1], SphereBox[{13, 7, 17}]}}, {
      {Hue[0], SphereBox[{13, 7, 19}]}, 
      {Hue[1], SphereBox[{13, 7, 19}]}}, {
      {Hue[0], SphereBox[{13, 7, 21}]}, 
      {Hue[1], SphereBox[{13, 7, 21}]}}}, {{
      {Hue[0], SphereBox[{13, 9, 1}]}, 
      {Hue[1], SphereBox[{13, 9, 1}]}}, {
      {Hue[0], SphereBox[{13, 9, 3}]}, 
      {Hue[1], SphereBox[{13, 9, 3}]}}, {
      {Hue[0], SphereBox[{13, 9, 5}]}, 
      {Hue[1], SphereBox[{13, 9, 5}]}}, {
      {Hue[0], SphereBox[{13, 9, 7}]}, 
      {Hue[1], SphereBox[{13, 9, 7}]}}, {
      {Hue[0], SphereBox[{13, 9, 9}]}, 
      {Hue[1], SphereBox[{13, 9, 9}]}}, {
      {Hue[0], SphereBox[{13, 9, 11}]}, 
      {Hue[1], SphereBox[{13, 9, 11}]}}, {
      {Hue[0], SphereBox[{13, 9, 13}]}, 
      {Hue[1], SphereBox[{13, 9, 13}]}}, {
      {Hue[0], SphereBox[{13, 9, 15}]}, 
      {Hue[1], SphereBox[{13, 9, 15}]}}, {
      {Hue[0], SphereBox[{13, 9, 17}]}, 
      {Hue[1], SphereBox[{13, 9, 17}]}}, {
      {Hue[0], SphereBox[{13, 9, 19}]}, 
      {Hue[1], SphereBox[{13, 9, 19}]}}, {
      {Hue[0], SphereBox[{13, 9, 21}]}, 
      {Hue[1], SphereBox[{13, 9, 21}]}}}, {{
      {Hue[0], SphereBox[{13, 11, 1}]}, 
      {Hue[1], SphereBox[{13, 11, 1}]}}, {
      {Hue[0], SphereBox[{13, 11, 3}]}, 
      {Hue[1], SphereBox[{13, 11, 3}]}}, {
      {Hue[0], SphereBox[{13, 11, 5}]}, 
      {Hue[1], SphereBox[{13, 11, 5}]}}, {
      {Hue[0], SphereBox[{13, 11, 7}]}, 
      {Hue[1], SphereBox[{13, 11, 7}]}}, {
      {Hue[0], SphereBox[{13, 11, 9}]}, 
      {Hue[1], SphereBox[{13, 11, 9}]}}, {
      {Hue[0], SphereBox[{13, 11, 11}]}, 
      {Hue[1], SphereBox[{13, 11, 11}]}}, {
      {Hue[0], SphereBox[{13, 11, 13}]}, 
      {Hue[1], SphereBox[{13, 11, 13}]}}, {
      {Hue[0], SphereBox[{13, 11, 15}]}, 
      {Hue[1], SphereBox[{13, 11, 15}]}}, {
      {Hue[0], SphereBox[{13, 11, 17}]}, 
      {Hue[1], SphereBox[{13, 11, 17}]}}, {
      {Hue[0], SphereBox[{13, 11, 19}]}, 
      {Hue[1], SphereBox[{13, 11, 19}]}}, {
      {Hue[0], SphereBox[{13, 11, 21}]}, 
      {Hue[1], SphereBox[{13, 11, 21}]}}}, {{
      {Hue[0], SphereBox[{13, 13, 1}]}, 
      {Hue[1], SphereBox[{13, 13, 1}]}}, {
      {Hue[0], SphereBox[{13, 13, 3}]}, 
      {Hue[1], SphereBox[{13, 13, 3}]}}, {
      {Hue[0], SphereBox[{13, 13, 5}]}, 
      {Hue[1], SphereBox[{13, 13, 5}]}}, {
      {Hue[0], SphereBox[{13, 13, 7}]}, 
      {Hue[1], SphereBox[{13, 13, 7}]}}, {
      {Hue[0], SphereBox[{13, 13, 9}]}, 
      {Hue[1], SphereBox[{13, 13, 9}]}}, {
      {Hue[0], SphereBox[{13, 13, 11}]}, 
      {Hue[1], SphereBox[{13, 13, 11}]}}, {
      {Hue[0], SphereBox[{13, 13, 13}]}, 
      {Hue[1], SphereBox[{13, 13, 13}]}}, {
      {Hue[0], SphereBox[{13, 13, 15}]}, 
      {Hue[1], SphereBox[{13, 13, 15}]}}, {
      {Hue[0], SphereBox[{13, 13, 17}]}, 
      {Hue[1], SphereBox[{13, 13, 17}]}}, {
      {Hue[0], SphereBox[{13, 13, 19}]}, 
      {Hue[1], SphereBox[{13, 13, 19}]}}, {
      {Hue[0], SphereBox[{13, 13, 21}]}, 
      {Hue[1], SphereBox[{13, 13, 21}]}}}, {{
      {Hue[0], SphereBox[{13, 15, 1}]}, 
      {Hue[1], SphereBox[{13, 15, 1}]}}, {
      {Hue[0], SphereBox[{13, 15, 3}]}, 
      {Hue[1], SphereBox[{13, 15, 3}]}}, {
      {Hue[0], SphereBox[{13, 15, 5}]}, 
      {Hue[1], SphereBox[{13, 15, 5}]}}, {
      {Hue[0], SphereBox[{13, 15, 7}]}, 
      {Hue[1], SphereBox[{13, 15, 7}]}}, {
      {Hue[0], SphereBox[{13, 15, 9}]}, 
      {Hue[1], SphereBox[{13, 15, 9}]}}, {
      {Hue[0], SphereBox[{13, 15, 11}]}, 
      {Hue[1], SphereBox[{13, 15, 11}]}}, {
      {Hue[0], SphereBox[{13, 15, 13}]}, 
      {Hue[1], SphereBox[{13, 15, 13}]}}, {
      {Hue[0], SphereBox[{13, 15, 15}]}, 
      {Hue[1], SphereBox[{13, 15, 15}]}}, {
      {Hue[0], SphereBox[{13, 15, 17}]}, 
      {Hue[1], SphereBox[{13, 15, 17}]}}, {
      {Hue[0], SphereBox[{13, 15, 19}]}, 
      {Hue[1], SphereBox[{13, 15, 19}]}}, {
      {Hue[0], SphereBox[{13, 15, 21}]}, 
      {Hue[1], SphereBox[{13, 15, 21}]}}}, {{
      {Hue[0], SphereBox[{13, 17, 1}]}, 
      {Hue[1], SphereBox[{13, 17, 1}]}}, {
      {Hue[0], SphereBox[{13, 17, 3}]}, 
      {Hue[1], SphereBox[{13, 17, 3}]}}, {
      {Hue[0], SphereBox[{13, 17, 5}]}, 
      {Hue[1], SphereBox[{13, 17, 5}]}}, {
      {Hue[0], SphereBox[{13, 17, 7}]}, 
      {Hue[1], SphereBox[{13, 17, 7}]}}, {
      {Hue[0], SphereBox[{13, 17, 9}]}, 
      {Hue[1], SphereBox[{13, 17, 9}]}}, {
      {Hue[0], SphereBox[{13, 17, 11}]}, 
      {Hue[1], SphereBox[{13, 17, 11}]}}, {
      {Hue[0], SphereBox[{13, 17, 13}]}, 
      {Hue[1], SphereBox[{13, 17, 13}]}}, {
      {Hue[0], SphereBox[{13, 17, 15}]}, 
      {Hue[1], SphereBox[{13, 17, 15}]}}, {
      {Hue[0], SphereBox[{13, 17, 17}]}, 
      {Hue[1], SphereBox[{13, 17, 17}]}}, {
      {Hue[0], SphereBox[{13, 17, 19}]}, 
      {Hue[1], SphereBox[{13, 17, 19}]}}, {
      {Hue[0], SphereBox[{13, 17, 21}]}, 
      {Hue[1], SphereBox[{13, 17, 21}]}}}, {{
      {Hue[0], SphereBox[{13, 19, 1}]}, 
      {Hue[1], SphereBox[{13, 19, 1}]}}, {
      {Hue[0], SphereBox[{13, 19, 3}]}, 
      {Hue[1], SphereBox[{13, 19, 3}]}}, {
      {Hue[0], SphereBox[{13, 19, 5}]}, 
      {Hue[1], SphereBox[{13, 19, 5}]}}, {
      {Hue[0], SphereBox[{13, 19, 7}]}, 
      {Hue[1], SphereBox[{13, 19, 7}]}}, {
      {Hue[0], SphereBox[{13, 19, 9}]}, 
      {Hue[1], SphereBox[{13, 19, 9}]}}, {
      {Hue[0], SphereBox[{13, 19, 11}]}, 
      {Hue[1], SphereBox[{13, 19, 11}]}}, {
      {Hue[0], SphereBox[{13, 19, 13}]}, 
      {Hue[1], SphereBox[{13, 19, 13}]}}, {
      {Hue[0], SphereBox[{13, 19, 15}]}, 
      {Hue[1], SphereBox[{13, 19, 15}]}}, {
      {Hue[0], SphereBox[{13, 19, 17}]}, 
      {Hue[1], SphereBox[{13, 19, 17}]}}, {
      {Hue[0], SphereBox[{13, 19, 19}]}, 
      {Hue[1], SphereBox[{13, 19, 19}]}}, {
      {Hue[0], SphereBox[{13, 19, 21}]}, 
      {Hue[1], SphereBox[{13, 19, 21}]}}}, {{
      {Hue[0], SphereBox[{13, 21, 1}]}, 
      {Hue[1], SphereBox[{13, 21, 1}]}}, {
      {Hue[0], SphereBox[{13, 21, 3}]}, 
      {Hue[1], SphereBox[{13, 21, 3}]}}, {
      {Hue[0], SphereBox[{13, 21, 5}]}, 
      {Hue[1], SphereBox[{13, 21, 5}]}}, {
      {Hue[0], SphereBox[{13, 21, 7}]}, 
      {Hue[1], SphereBox[{13, 21, 7}]}}, {
      {Hue[0], SphereBox[{13, 21, 9}]}, 
      {Hue[1], SphereBox[{13, 21, 9}]}}, {
      {Hue[0], SphereBox[{13, 21, 11}]}, 
      {Hue[1], SphereBox[{13, 21, 11}]}}, {
      {Hue[0], SphereBox[{13, 21, 13}]}, 
      {Hue[1], SphereBox[{13, 21, 13}]}}, {
      {Hue[0], SphereBox[{13, 21, 15}]}, 
      {Hue[1], SphereBox[{13, 21, 15}]}}, {
      {Hue[0], SphereBox[{13, 21, 17}]}, 
      {Hue[1], SphereBox[{13, 21, 17}]}}, {
      {Hue[0], SphereBox[{13, 21, 19}]}, 
      {Hue[1], SphereBox[{13, 21, 19}]}}, {
      {Hue[0], SphereBox[{13, 21, 21}]}, 
      {Hue[1], SphereBox[{13, 21, 21}]}}}}, {{{
      {Hue[0], SphereBox[{15, 1, 1}]}, 
      {Hue[1], SphereBox[{15, 1, 1}]}}, {
      {Hue[0], SphereBox[{15, 1, 3}]}, 
      {Hue[1], SphereBox[{15, 1, 3}]}}, {
      {Hue[0], SphereBox[{15, 1, 5}]}, 
      {Hue[1], SphereBox[{15, 1, 5}]}}, {
      {Hue[0], SphereBox[{15, 1, 7}]}, 
      {Hue[1], SphereBox[{15, 1, 7}]}}, {
      {Hue[0], SphereBox[{15, 1, 9}]}, 
      {Hue[1], SphereBox[{15, 1, 9}]}}, {
      {Hue[0], SphereBox[{15, 1, 11}]}, 
      {Hue[1], SphereBox[{15, 1, 11}]}}, {
      {Hue[0], SphereBox[{15, 1, 13}]}, 
      {Hue[1], SphereBox[{15, 1, 13}]}}, {
      {Hue[0], SphereBox[{15, 1, 15}]}, 
      {Hue[1], SphereBox[{15, 1, 15}]}}, {
      {Hue[0], SphereBox[{15, 1, 17}]}, 
      {Hue[1], SphereBox[{15, 1, 17}]}}, {
      {Hue[0], SphereBox[{15, 1, 19}]}, 
      {Hue[1], SphereBox[{15, 1, 19}]}}, {
      {Hue[0], SphereBox[{15, 1, 21}]}, 
      {Hue[1], SphereBox[{15, 1, 21}]}}}, {{
      {Hue[0], SphereBox[{15, 3, 1}]}, 
      {Hue[1], SphereBox[{15, 3, 1}]}}, {
      {Hue[0], SphereBox[{15, 3, 3}]}, 
      {Hue[1], SphereBox[{15, 3, 3}]}}, {
      {Hue[0], SphereBox[{15, 3, 5}]}, 
      {Hue[1], SphereBox[{15, 3, 5}]}}, {
      {Hue[0], SphereBox[{15, 3, 7}]}, 
      {Hue[1], SphereBox[{15, 3, 7}]}}, {
      {Hue[0], SphereBox[{15, 3, 9}]}, 
      {Hue[1], SphereBox[{15, 3, 9}]}}, {
      {Hue[0], SphereBox[{15, 3, 11}]}, 
      {Hue[1], SphereBox[{15, 3, 11}]}}, {
      {Hue[0], SphereBox[{15, 3, 13}]}, 
      {Hue[1], SphereBox[{15, 3, 13}]}}, {
      {Hue[0], SphereBox[{15, 3, 15}]}, 
      {Hue[1], SphereBox[{15, 3, 15}]}}, {
      {Hue[0], SphereBox[{15, 3, 17}]}, 
      {Hue[1], SphereBox[{15, 3, 17}]}}, {
      {Hue[0], SphereBox[{15, 3, 19}]}, 
      {Hue[1], SphereBox[{15, 3, 19}]}}, {
      {Hue[0], SphereBox[{15, 3, 21}]}, 
      {Hue[1], SphereBox[{15, 3, 21}]}}}, {{
      {Hue[0], SphereBox[{15, 5, 1}]}, 
      {Hue[1], SphereBox[{15, 5, 1}]}}, {
      {Hue[0], SphereBox[{15, 5, 3}]}, 
      {Hue[1], SphereBox[{15, 5, 3}]}}, {
      {Hue[0], SphereBox[{15, 5, 5}]}, 
      {Hue[1], SphereBox[{15, 5, 5}]}}, {
      {Hue[0], SphereBox[{15, 5, 7}]}, 
      {Hue[1], SphereBox[{15, 5, 7}]}}, {
      {Hue[0], SphereBox[{15, 5, 9}]}, 
      {Hue[1], SphereBox[{15, 5, 9}]}}, {
      {Hue[0], SphereBox[{15, 5, 11}]}, 
      {Hue[1], SphereBox[{15, 5, 11}]}}, {
      {Hue[0], SphereBox[{15, 5, 13}]}, 
      {Hue[1], SphereBox[{15, 5, 13}]}}, {
      {Hue[0], SphereBox[{15, 5, 15}]}, 
      {Hue[1], SphereBox[{15, 5, 15}]}}, {
      {Hue[0], SphereBox[{15, 5, 17}]}, 
      {Hue[1], SphereBox[{15, 5, 17}]}}, {
      {Hue[0], SphereBox[{15, 5, 19}]}, 
      {Hue[1], SphereBox[{15, 5, 19}]}}, {
      {Hue[0], SphereBox[{15, 5, 21}]}, 
      {Hue[1], SphereBox[{15, 5, 21}]}}}, {{
      {Hue[0], SphereBox[{15, 7, 1}]}, 
      {Hue[1], SphereBox[{15, 7, 1}]}}, {
      {Hue[0], SphereBox[{15, 7, 3}]}, 
      {Hue[1], SphereBox[{15, 7, 3}]}}, {
      {Hue[0], SphereBox[{15, 7, 5}]}, 
      {Hue[1], SphereBox[{15, 7, 5}]}}, {
      {Hue[0], SphereBox[{15, 7, 7}]}, 
      {Hue[1], SphereBox[{15, 7, 7}]}}, {
      {Hue[0], SphereBox[{15, 7, 9}]}, 
      {Hue[1], SphereBox[{15, 7, 9}]}}, {
      {Hue[0], SphereBox[{15, 7, 11}]}, 
      {Hue[1], SphereBox[{15, 7, 11}]}}, {
      {Hue[0], SphereBox[{15, 7, 13}]}, 
      {Hue[1], SphereBox[{15, 7, 13}]}}, {
      {Hue[0], SphereBox[{15, 7, 15}]}, 
      {Hue[1], SphereBox[{15, 7, 15}]}}, {
      {Hue[0], SphereBox[{15, 7, 17}]}, 
      {Hue[1], SphereBox[{15, 7, 17}]}}, {
      {Hue[0], SphereBox[{15, 7, 19}]}, 
      {Hue[1], SphereBox[{15, 7, 19}]}}, {
      {Hue[0], SphereBox[{15, 7, 21}]}, 
      {Hue[1], SphereBox[{15, 7, 21}]}}}, {{
      {Hue[0], SphereBox[{15, 9, 1}]}, 
      {Hue[1], SphereBox[{15, 9, 1}]}}, {
      {Hue[0], SphereBox[{15, 9, 3}]}, 
      {Hue[1], SphereBox[{15, 9, 3}]}}, {
      {Hue[0], SphereBox[{15, 9, 5}]}, 
      {Hue[1], SphereBox[{15, 9, 5}]}}, {
      {Hue[0], SphereBox[{15, 9, 7}]}, 
      {Hue[1], SphereBox[{15, 9, 7}]}}, {
      {Hue[0], SphereBox[{15, 9, 9}]}, 
      {Hue[1], SphereBox[{15, 9, 9}]}}, {
      {Hue[0], SphereBox[{15, 9, 11}]}, 
      {Hue[1], SphereBox[{15, 9, 11}]}}, {
      {Hue[0], SphereBox[{15, 9, 13}]}, 
      {Hue[1], SphereBox[{15, 9, 13}]}}, {
      {Hue[0], SphereBox[{15, 9, 15}]}, 
      {Hue[1], SphereBox[{15, 9, 15}]}}, {
      {Hue[0], SphereBox[{15, 9, 17}]}, 
      {Hue[1], SphereBox[{15, 9, 17}]}}, {
      {Hue[0], SphereBox[{15, 9, 19}]}, 
      {Hue[1], SphereBox[{15, 9, 19}]}}, {
      {Hue[0], SphereBox[{15, 9, 21}]}, 
      {Hue[1], SphereBox[{15, 9, 21}]}}}, {{
      {Hue[0], SphereBox[{15, 11, 1}]}, 
      {Hue[1], SphereBox[{15, 11, 1}]}}, {
      {Hue[0], SphereBox[{15, 11, 3}]}, 
      {Hue[1], SphereBox[{15, 11, 3}]}}, {
      {Hue[0], SphereBox[{15, 11, 5}]}, 
      {Hue[1], SphereBox[{15, 11, 5}]}}, {
      {Hue[0], SphereBox[{15, 11, 7}]}, 
      {Hue[1], SphereBox[{15, 11, 7}]}}, {
      {Hue[0], SphereBox[{15, 11, 9}]}, 
      {Hue[1], SphereBox[{15, 11, 9}]}}, {
      {Hue[0], SphereBox[{15, 11, 11}]}, 
      {Hue[1], SphereBox[{15, 11, 11}]}}, {
      {Hue[0], SphereBox[{15, 11, 13}]}, 
      {Hue[1], SphereBox[{15, 11, 13}]}}, {
      {Hue[0], SphereBox[{15, 11, 15}]}, 
      {Hue[1], SphereBox[{15, 11, 15}]}}, {
      {Hue[0], SphereBox[{15, 11, 17}]}, 
      {Hue[1], SphereBox[{15, 11, 17}]}}, {
      {Hue[0], SphereBox[{15, 11, 19}]}, 
      {Hue[1], SphereBox[{15, 11, 19}]}}, {
      {Hue[0], SphereBox[{15, 11, 21}]}, 
      {Hue[1], SphereBox[{15, 11, 21}]}}}, {{
      {Hue[0], SphereBox[{15, 13, 1}]}, 
      {Hue[1], SphereBox[{15, 13, 1}]}}, {
      {Hue[0], SphereBox[{15, 13, 3}]}, 
      {Hue[1], SphereBox[{15, 13, 3}]}}, {
      {Hue[0], SphereBox[{15, 13, 5}]}, 
      {Hue[1], SphereBox[{15, 13, 5}]}}, {
      {Hue[0], SphereBox[{15, 13, 7}]}, 
      {Hue[1], SphereBox[{15, 13, 7}]}}, {
      {Hue[0], SphereBox[{15, 13, 9}]}, 
      {Hue[1], SphereBox[{15, 13, 9}]}}, {
      {Hue[0], SphereBox[{15, 13, 11}]}, 
      {Hue[1], SphereBox[{15, 13, 11}]}}, {
      {Hue[0], SphereBox[{15, 13, 13}]}, 
      {Hue[1], SphereBox[{15, 13, 13}]}}, {
      {Hue[0], SphereBox[{15, 13, 15}]}, 
      {Hue[1], SphereBox[{15, 13, 15}]}}, {
      {Hue[0], SphereBox[{15, 13, 17}]}, 
      {Hue[1], SphereBox[{15, 13, 17}]}}, {
      {Hue[0], SphereBox[{15, 13, 19}]}, 
      {Hue[1], SphereBox[{15, 13, 19}]}}, {
      {Hue[0], SphereBox[{15, 13, 21}]}, 
      {Hue[1], SphereBox[{15, 13, 21}]}}}, {{
      {Hue[0], SphereBox[{15, 15, 1}]}, 
      {Hue[1], SphereBox[{15, 15, 1}]}}, {
      {Hue[0], SphereBox[{15, 15, 3}]}, 
      {Hue[1], SphereBox[{15, 15, 3}]}}, {
      {Hue[0], SphereBox[{15, 15, 5}]}, 
      {Hue[1], SphereBox[{15, 15, 5}]}}, {
      {Hue[0], SphereBox[{15, 15, 7}]}, 
      {Hue[1], SphereBox[{15, 15, 7}]}}, {
      {Hue[0], SphereBox[{15, 15, 9}]}, 
      {Hue[1], SphereBox[{15, 15, 9}]}}, {
      {Hue[0], SphereBox[{15, 15, 11}]}, 
      {Hue[1], SphereBox[{15, 15, 11}]}}, {
      {Hue[0], SphereBox[{15, 15, 13}]}, 
      {Hue[1], SphereBox[{15, 15, 13}]}}, {
      {Hue[0], SphereBox[{15, 15, 15}]}, 
      {Hue[1], SphereBox[{15, 15, 15}]}}, {
      {Hue[0], SphereBox[{15, 15, 17}]}, 
      {Hue[1], SphereBox[{15, 15, 17}]}}, {
      {Hue[0], SphereBox[{15, 15, 19}]}, 
      {Hue[1], SphereBox[{15, 15, 19}]}}, {
      {Hue[0], SphereBox[{15, 15, 21}]}, 
      {Hue[1], SphereBox[{15, 15, 21}]}}}, {{
      {Hue[0], SphereBox[{15, 17, 1}]}, 
      {Hue[1], SphereBox[{15, 17, 1}]}}, {
      {Hue[0], SphereBox[{15, 17, 3}]}, 
      {Hue[1], SphereBox[{15, 17, 3}]}}, {
      {Hue[0], SphereBox[{15, 17, 5}]}, 
      {Hue[1], SphereBox[{15, 17, 5}]}}, {
      {Hue[0], SphereBox[{15, 17, 7}]}, 
      {Hue[1], SphereBox[{15, 17, 7}]}}, {
      {Hue[0], SphereBox[{15, 17, 9}]}, 
      {Hue[1], SphereBox[{15, 17, 9}]}}, {
      {Hue[0], SphereBox[{15, 17, 11}]}, 
      {Hue[1], SphereBox[{15, 17, 11}]}}, {
      {Hue[0], SphereBox[{15, 17, 13}]}, 
      {Hue[1], SphereBox[{15, 17, 13}]}}, {
      {Hue[0], SphereBox[{15, 17, 15}]}, 
      {Hue[1], SphereBox[{15, 17, 15}]}}, {
      {Hue[0], SphereBox[{15, 17, 17}]}, 
      {Hue[1], SphereBox[{15, 17, 17}]}}, {
      {Hue[0], SphereBox[{15, 17, 19}]}, 
      {Hue[1], SphereBox[{15, 17, 19}]}}, {
      {Hue[0], SphereBox[{15, 17, 21}]}, 
      {Hue[1], SphereBox[{15, 17, 21}]}}}, {{
      {Hue[0], SphereBox[{15, 19, 1}]}, 
      {Hue[1], SphereBox[{15, 19, 1}]}}, {
      {Hue[0], SphereBox[{15, 19, 3}]}, 
      {Hue[1], SphereBox[{15, 19, 3}]}}, {
      {Hue[0], SphereBox[{15, 19, 5}]}, 
      {Hue[1], SphereBox[{15, 19, 5}]}}, {
      {Hue[0], SphereBox[{15, 19, 7}]}, 
      {Hue[1], SphereBox[{15, 19, 7}]}}, {
      {Hue[0], SphereBox[{15, 19, 9}]}, 
      {Hue[1], SphereBox[{15, 19, 9}]}}, {
      {Hue[0], SphereBox[{15, 19, 11}]}, 
      {Hue[1], SphereBox[{15, 19, 11}]}}, {
      {Hue[0], SphereBox[{15, 19, 13}]}, 
      {Hue[1], SphereBox[{15, 19, 13}]}}, {
      {Hue[0], SphereBox[{15, 19, 15}]}, 
      {Hue[1], SphereBox[{15, 19, 15}]}}, {
      {Hue[0], SphereBox[{15, 19, 17}]}, 
      {Hue[1], SphereBox[{15, 19, 17}]}}, {
      {Hue[0], SphereBox[{15, 19, 19}]}, 
      {Hue[1], SphereBox[{15, 19, 19}]}}, {
      {Hue[0], SphereBox[{15, 19, 21}]}, 
      {Hue[1], SphereBox[{15, 19, 21}]}}}, {{
      {Hue[0], SphereBox[{15, 21, 1}]}, 
      {Hue[1], SphereBox[{15, 21, 1}]}}, {
      {Hue[0], SphereBox[{15, 21, 3}]}, 
      {Hue[1], SphereBox[{15, 21, 3}]}}, {
      {Hue[0], SphereBox[{15, 21, 5}]}, 
      {Hue[1], SphereBox[{15, 21, 5}]}}, {
      {Hue[0], SphereBox[{15, 21, 7}]}, 
      {Hue[1], SphereBox[{15, 21, 7}]}}, {
      {Hue[0], SphereBox[{15, 21, 9}]}, 
      {Hue[1], SphereBox[{15, 21, 9}]}}, {
      {Hue[0], SphereBox[{15, 21, 11}]}, 
      {Hue[1], SphereBox[{15, 21, 11}]}}, {
      {Hue[0], SphereBox[{15, 21, 13}]}, 
      {Hue[1], SphereBox[{15, 21, 13}]}}, {
      {Hue[0], SphereBox[{15, 21, 15}]}, 
      {Hue[1], SphereBox[{15, 21, 15}]}}, {
      {Hue[0], SphereBox[{15, 21, 17}]}, 
      {Hue[1], SphereBox[{15, 21, 17}]}}, {
      {Hue[0], SphereBox[{15, 21, 19}]}, 
      {Hue[1], SphereBox[{15, 21, 19}]}}, {
      {Hue[0], SphereBox[{15, 21, 21}]}, 
      {Hue[1], SphereBox[{15, 21, 21}]}}}}, {{{
      {Hue[0], SphereBox[{17, 1, 1}]}, 
      {Hue[1], SphereBox[{17, 1, 1}]}}, {
      {Hue[0], SphereBox[{17, 1, 3}]}, 
      {Hue[1], SphereBox[{17, 1, 3}]}}, {
      {Hue[0], SphereBox[{17, 1, 5}]}, 
      {Hue[1], SphereBox[{17, 1, 5}]}}, {
      {Hue[0], SphereBox[{17, 1, 7}]}, 
      {Hue[1], SphereBox[{17, 1, 7}]}}, {
      {Hue[0], SphereBox[{17, 1, 9}]}, 
      {Hue[1], SphereBox[{17, 1, 9}]}}, {
      {Hue[0], SphereBox[{17, 1, 11}]}, 
      {Hue[1], SphereBox[{17, 1, 11}]}}, {
      {Hue[0], SphereBox[{17, 1, 13}]}, 
      {Hue[1], SphereBox[{17, 1, 13}]}}, {
      {Hue[0], SphereBox[{17, 1, 15}]}, 
      {Hue[1], SphereBox[{17, 1, 15}]}}, {
      {Hue[0], SphereBox[{17, 1, 17}]}, 
      {Hue[1], SphereBox[{17, 1, 17}]}}, {
      {Hue[0], SphereBox[{17, 1, 19}]}, 
      {Hue[1], SphereBox[{17, 1, 19}]}}, {
      {Hue[0], SphereBox[{17, 1, 21}]}, 
      {Hue[1], SphereBox[{17, 1, 21}]}}}, {{
      {Hue[0], SphereBox[{17, 3, 1}]}, 
      {Hue[1], SphereBox[{17, 3, 1}]}}, {
      {Hue[0], SphereBox[{17, 3, 3}]}, 
      {Hue[1], SphereBox[{17, 3, 3}]}}, {
      {Hue[0], SphereBox[{17, 3, 5}]}, 
      {Hue[1], SphereBox[{17, 3, 5}]}}, {
      {Hue[0], SphereBox[{17, 3, 7}]}, 
      {Hue[1], SphereBox[{17, 3, 7}]}}, {
      {Hue[0], SphereBox[{17, 3, 9}]}, 
      {Hue[1], SphereBox[{17, 3, 9}]}}, {
      {Hue[0], SphereBox[{17, 3, 11}]}, 
      {Hue[1], SphereBox[{17, 3, 11}]}}, {
      {Hue[0], SphereBox[{17, 3, 13}]}, 
      {Hue[1], SphereBox[{17, 3, 13}]}}, {
      {Hue[0], SphereBox[{17, 3, 15}]}, 
      {Hue[1], SphereBox[{17, 3, 15}]}}, {
      {Hue[0], SphereBox[{17, 3, 17}]}, 
      {Hue[1], SphereBox[{17, 3, 17}]}}, {
      {Hue[0], SphereBox[{17, 3, 19}]}, 
      {Hue[1], SphereBox[{17, 3, 19}]}}, {
      {Hue[0], SphereBox[{17, 3, 21}]}, 
      {Hue[1], SphereBox[{17, 3, 21}]}}}, {{
      {Hue[0], SphereBox[{17, 5, 1}]}, 
      {Hue[1], SphereBox[{17, 5, 1}]}}, {
      {Hue[0], SphereBox[{17, 5, 3}]}, 
      {Hue[1], SphereBox[{17, 5, 3}]}}, {
      {Hue[0], SphereBox[{17, 5, 5}]}, 
      {Hue[1], SphereBox[{17, 5, 5}]}}, {
      {Hue[0], SphereBox[{17, 5, 7}]}, 
      {Hue[1], SphereBox[{17, 5, 7}]}}, {
      {Hue[0], SphereBox[{17, 5, 9}]}, 
      {Hue[1], SphereBox[{17, 5, 9}]}}, {
      {Hue[0], SphereBox[{17, 5, 11}]}, 
      {Hue[1], SphereBox[{17, 5, 11}]}}, {
      {Hue[0], SphereBox[{17, 5, 13}]}, 
      {Hue[1], SphereBox[{17, 5, 13}]}}, {
      {Hue[0], SphereBox[{17, 5, 15}]}, 
      {Hue[1], SphereBox[{17, 5, 15}]}}, {
      {Hue[0], SphereBox[{17, 5, 17}]}, 
      {Hue[1], SphereBox[{17, 5, 17}]}}, {
      {Hue[0], SphereBox[{17, 5, 19}]}, 
      {Hue[1], SphereBox[{17, 5, 19}]}}, {
      {Hue[0], SphereBox[{17, 5, 21}]}, 
      {Hue[1], SphereBox[{17, 5, 21}]}}}, {{
      {Hue[0], SphereBox[{17, 7, 1}]}, 
      {Hue[1], SphereBox[{17, 7, 1}]}}, {
      {Hue[0], SphereBox[{17, 7, 3}]}, 
      {Hue[1], SphereBox[{17, 7, 3}]}}, {
      {Hue[0], SphereBox[{17, 7, 5}]}, 
      {Hue[1], SphereBox[{17, 7, 5}]}}, {
      {Hue[0], SphereBox[{17, 7, 7}]}, 
      {Hue[1], SphereBox[{17, 7, 7}]}}, {
      {Hue[0], SphereBox[{17, 7, 9}]}, 
      {Hue[1], SphereBox[{17, 7, 9}]}}, {
      {Hue[0], SphereBox[{17, 7, 11}]}, 
      {Hue[1], SphereBox[{17, 7, 11}]}}, {
      {Hue[0], SphereBox[{17, 7, 13}]}, 
      {Hue[1], SphereBox[{17, 7, 13}]}}, {
      {Hue[0], SphereBox[{17, 7, 15}]}, 
      {Hue[1], SphereBox[{17, 7, 15}]}}, {
      {Hue[0], SphereBox[{17, 7, 17}]}, 
      {Hue[1], SphereBox[{17, 7, 17}]}}, {
      {Hue[0], SphereBox[{17, 7, 19}]}, 
      {Hue[1], SphereBox[{17, 7, 19}]}}, {
      {Hue[0], SphereBox[{17, 7, 21}]}, 
      {Hue[1], SphereBox[{17, 7, 21}]}}}, {{
      {Hue[0], SphereBox[{17, 9, 1}]}, 
      {Hue[1], SphereBox[{17, 9, 1}]}}, {
      {Hue[0], SphereBox[{17, 9, 3}]}, 
      {Hue[1], SphereBox[{17, 9, 3}]}}, {
      {Hue[0], SphereBox[{17, 9, 5}]}, 
      {Hue[1], SphereBox[{17, 9, 5}]}}, {
      {Hue[0], SphereBox[{17, 9, 7}]}, 
      {Hue[1], SphereBox[{17, 9, 7}]}}, {
      {Hue[0], SphereBox[{17, 9, 9}]}, 
      {Hue[1], SphereBox[{17, 9, 9}]}}, {
      {Hue[0], SphereBox[{17, 9, 11}]}, 
      {Hue[1], SphereBox[{17, 9, 11}]}}, {
      {Hue[0], SphereBox[{17, 9, 13}]}, 
      {Hue[1], SphereBox[{17, 9, 13}]}}, {
      {Hue[0], SphereBox[{17, 9, 15}]}, 
      {Hue[1], SphereBox[{17, 9, 15}]}}, {
      {Hue[0], SphereBox[{17, 9, 17}]}, 
      {Hue[1], SphereBox[{17, 9, 17}]}}, {
      {Hue[0], SphereBox[{17, 9, 19}]}, 
      {Hue[1], SphereBox[{17, 9, 19}]}}, {
      {Hue[0], SphereBox[{17, 9, 21}]}, 
      {Hue[1], SphereBox[{17, 9, 21}]}}}, {{
      {Hue[0], SphereBox[{17, 11, 1}]}, 
      {Hue[1], SphereBox[{17, 11, 1}]}}, {
      {Hue[0], SphereBox[{17, 11, 3}]}, 
      {Hue[1], SphereBox[{17, 11, 3}]}}, {
      {Hue[0], SphereBox[{17, 11, 5}]}, 
      {Hue[1], SphereBox[{17, 11, 5}]}}, {
      {Hue[0], SphereBox[{17, 11, 7}]}, 
      {Hue[1], SphereBox[{17, 11, 7}]}}, {
      {Hue[0], SphereBox[{17, 11, 9}]}, 
      {Hue[1], SphereBox[{17, 11, 9}]}}, {
      {Hue[0], SphereBox[{17, 11, 11}]}, 
      {Hue[1], SphereBox[{17, 11, 11}]}}, {
      {Hue[0], SphereBox[{17, 11, 13}]}, 
      {Hue[1], SphereBox[{17, 11, 13}]}}, {
      {Hue[0], SphereBox[{17, 11, 15}]}, 
      {Hue[1], SphereBox[{17, 11, 15}]}}, {
      {Hue[0], SphereBox[{17, 11, 17}]}, 
      {Hue[1], SphereBox[{17, 11, 17}]}}, {
      {Hue[0], SphereBox[{17, 11, 19}]}, 
      {Hue[1], SphereBox[{17, 11, 19}]}}, {
      {Hue[0], SphereBox[{17, 11, 21}]}, 
      {Hue[1], SphereBox[{17, 11, 21}]}}}, {{
      {Hue[0], SphereBox[{17, 13, 1}]}, 
      {Hue[1], SphereBox[{17, 13, 1}]}}, {
      {Hue[0], SphereBox[{17, 13, 3}]}, 
      {Hue[1], SphereBox[{17, 13, 3}]}}, {
      {Hue[0], SphereBox[{17, 13, 5}]}, 
      {Hue[1], SphereBox[{17, 13, 5}]}}, {
      {Hue[0], SphereBox[{17, 13, 7}]}, 
      {Hue[1], SphereBox[{17, 13, 7}]}}, {
      {Hue[0], SphereBox[{17, 13, 9}]}, 
      {Hue[1], SphereBox[{17, 13, 9}]}}, {
      {Hue[0], SphereBox[{17, 13, 11}]}, 
      {Hue[1], SphereBox[{17, 13, 11}]}}, {
      {Hue[0], SphereBox[{17, 13, 13}]}, 
      {Hue[1], SphereBox[{17, 13, 13}]}}, {
      {Hue[0], SphereBox[{17, 13, 15}]}, 
      {Hue[1], SphereBox[{17, 13, 15}]}}, {
      {Hue[0], SphereBox[{17, 13, 17}]}, 
      {Hue[1], SphereBox[{17, 13, 17}]}}, {
      {Hue[0], SphereBox[{17, 13, 19}]}, 
      {Hue[1], SphereBox[{17, 13, 19}]}}, {
      {Hue[0], SphereBox[{17, 13, 21}]}, 
      {Hue[1], SphereBox[{17, 13, 21}]}}}, {{
      {Hue[0], SphereBox[{17, 15, 1}]}, 
      {Hue[1], SphereBox[{17, 15, 1}]}}, {
      {Hue[0], SphereBox[{17, 15, 3}]}, 
      {Hue[1], SphereBox[{17, 15, 3}]}}, {
      {Hue[0], SphereBox[{17, 15, 5}]}, 
      {Hue[1], SphereBox[{17, 15, 5}]}}, {
      {Hue[0], SphereBox[{17, 15, 7}]}, 
      {Hue[1], SphereBox[{17, 15, 7}]}}, {
      {Hue[0], SphereBox[{17, 15, 9}]}, 
      {Hue[1], SphereBox[{17, 15, 9}]}}, {
      {Hue[0], SphereBox[{17, 15, 11}]}, 
      {Hue[1], SphereBox[{17, 15, 11}]}}, {
      {Hue[0], SphereBox[{17, 15, 13}]}, 
      {Hue[1], SphereBox[{17, 15, 13}]}}, {
      {Hue[0], SphereBox[{17, 15, 15}]}, 
      {Hue[1], SphereBox[{17, 15, 15}]}}, {
      {Hue[0], SphereBox[{17, 15, 17}]}, 
      {Hue[1], SphereBox[{17, 15, 17}]}}, {
      {Hue[0], SphereBox[{17, 15, 19}]}, 
      {Hue[1], SphereBox[{17, 15, 19}]}}, {
      {Hue[0], SphereBox[{17, 15, 21}]}, 
      {Hue[1], SphereBox[{17, 15, 21}]}}}, {{
      {Hue[0], SphereBox[{17, 17, 1}]}, 
      {Hue[1], SphereBox[{17, 17, 1}]}}, {
      {Hue[0], SphereBox[{17, 17, 3}]}, 
      {Hue[1], SphereBox[{17, 17, 3}]}}, {
      {Hue[0], SphereBox[{17, 17, 5}]}, 
      {Hue[1], SphereBox[{17, 17, 5}]}}, {
      {Hue[0], SphereBox[{17, 17, 7}]}, 
      {Hue[1], SphereBox[{17, 17, 7}]}}, {
      {Hue[0], SphereBox[{17, 17, 9}]}, 
      {Hue[1], SphereBox[{17, 17, 9}]}}, {
      {Hue[0], SphereBox[{17, 17, 11}]}, 
      {Hue[1], SphereBox[{17, 17, 11}]}}, {
      {Hue[0], SphereBox[{17, 17, 13}]}, 
      {Hue[1], SphereBox[{17, 17, 13}]}}, {
      {Hue[0], SphereBox[{17, 17, 15}]}, 
      {Hue[1], SphereBox[{17, 17, 15}]}}, {
      {Hue[0], SphereBox[{17, 17, 17}]}, 
      {Hue[1], SphereBox[{17, 17, 17}]}}, {
      {Hue[0], SphereBox[{17, 17, 19}]}, 
      {Hue[1], SphereBox[{17, 17, 19}]}}, {
      {Hue[0], SphereBox[{17, 17, 21}]}, 
      {Hue[1], SphereBox[{17, 17, 21}]}}}, {{
      {Hue[0], SphereBox[{17, 19, 1}]}, 
      {Hue[1], SphereBox[{17, 19, 1}]}}, {
      {Hue[0], SphereBox[{17, 19, 3}]}, 
      {Hue[1], SphereBox[{17, 19, 3}]}}, {
      {Hue[0], SphereBox[{17, 19, 5}]}, 
      {Hue[1], SphereBox[{17, 19, 5}]}}, {
      {Hue[0], SphereBox[{17, 19, 7}]}, 
      {Hue[1], SphereBox[{17, 19, 7}]}}, {
      {Hue[0], SphereBox[{17, 19, 9}]}, 
      {Hue[1], SphereBox[{17, 19, 9}]}}, {
      {Hue[0], SphereBox[{17, 19, 11}]}, 
      {Hue[1], SphereBox[{17, 19, 11}]}}, {
      {Hue[0], SphereBox[{17, 19, 13}]}, 
      {Hue[1], SphereBox[{17, 19, 13}]}}, {
      {Hue[0], SphereBox[{17, 19, 15}]}, 
      {Hue[1], SphereBox[{17, 19, 15}]}}, {
      {Hue[0], SphereBox[{17, 19, 17}]}, 
      {Hue[1], SphereBox[{17, 19, 17}]}}, {
      {Hue[0], SphereBox[{17, 19, 19}]}, 
      {Hue[1], SphereBox[{17, 19, 19}]}}, {
      {Hue[0], SphereBox[{17, 19, 21}]}, 
      {Hue[1], SphereBox[{17, 19, 21}]}}}, {{
      {Hue[0], SphereBox[{17, 21, 1}]}, 
      {Hue[1], SphereBox[{17, 21, 1}]}}, {
      {Hue[0], SphereBox[{17, 21, 3}]}, 
      {Hue[1], SphereBox[{17, 21, 3}]}}, {
      {Hue[0], SphereBox[{17, 21, 5}]}, 
      {Hue[1], SphereBox[{17, 21, 5}]}}, {
      {Hue[0], SphereBox[{17, 21, 7}]}, 
      {Hue[1], SphereBox[{17, 21, 7}]}}, {
      {Hue[0], SphereBox[{17, 21, 9}]}, 
      {Hue[1], SphereBox[{17, 21, 9}]}}, {
      {Hue[0], SphereBox[{17, 21, 11}]}, 
      {Hue[1], SphereBox[{17, 21, 11}]}}, {
      {Hue[0], SphereBox[{17, 21, 13}]}, 
      {Hue[1], SphereBox[{17, 21, 13}]}}, {
      {Hue[0], SphereBox[{17, 21, 15}]}, 
      {Hue[1], SphereBox[{17, 21, 15}]}}, {
      {Hue[0], SphereBox[{17, 21, 17}]}, 
      {Hue[1], SphereBox[{17, 21, 17}]}}, {
      {Hue[0], SphereBox[{17, 21, 19}]}, 
      {Hue[1], SphereBox[{17, 21, 19}]}}, {
      {Hue[0], SphereBox[{17, 21, 21}]}, 
      {Hue[1], SphereBox[{17, 21, 21}]}}}}, {{{
      {Hue[0], SphereBox[{19, 1, 1}]}, 
      {Hue[1], SphereBox[{19, 1, 1}]}}, {
      {Hue[0], SphereBox[{19, 1, 3}]}, 
      {Hue[1], SphereBox[{19, 1, 3}]}}, {
      {Hue[0], SphereBox[{19, 1, 5}]}, 
      {Hue[1], SphereBox[{19, 1, 5}]}}, {
      {Hue[0], SphereBox[{19, 1, 7}]}, 
      {Hue[1], SphereBox[{19, 1, 7}]}}, {
      {Hue[0], SphereBox[{19, 1, 9}]}, 
      {Hue[1], SphereBox[{19, 1, 9}]}}, {
      {Hue[0], SphereBox[{19, 1, 11}]}, 
      {Hue[1], SphereBox[{19, 1, 11}]}}, {
      {Hue[0], SphereBox[{19, 1, 13}]}, 
      {Hue[1], SphereBox[{19, 1, 13}]}}, {
      {Hue[0], SphereBox[{19, 1, 15}]}, 
      {Hue[1], SphereBox[{19, 1, 15}]}}, {
      {Hue[0], SphereBox[{19, 1, 17}]}, 
      {Hue[1], SphereBox[{19, 1, 17}]}}, {
      {Hue[0], SphereBox[{19, 1, 19}]}, 
      {Hue[1], SphereBox[{19, 1, 19}]}}, {
      {Hue[0], SphereBox[{19, 1, 21}]}, 
      {Hue[1], SphereBox[{19, 1, 21}]}}}, {{
      {Hue[0], SphereBox[{19, 3, 1}]}, 
      {Hue[1], SphereBox[{19, 3, 1}]}}, {
      {Hue[0], SphereBox[{19, 3, 3}]}, 
      {Hue[1], SphereBox[{19, 3, 3}]}}, {
      {Hue[0], SphereBox[{19, 3, 5}]}, 
      {Hue[1], SphereBox[{19, 3, 5}]}}, {
      {Hue[0], SphereBox[{19, 3, 7}]}, 
      {Hue[1], SphereBox[{19, 3, 7}]}}, {
      {Hue[0], SphereBox[{19, 3, 9}]}, 
      {Hue[1], SphereBox[{19, 3, 9}]}}, {
      {Hue[0], SphereBox[{19, 3, 11}]}, 
      {Hue[1], SphereBox[{19, 3, 11}]}}, {
      {Hue[0], SphereBox[{19, 3, 13}]}, 
      {Hue[1], SphereBox[{19, 3, 13}]}}, {
      {Hue[0], SphereBox[{19, 3, 15}]}, 
      {Hue[1], SphereBox[{19, 3, 15}]}}, {
      {Hue[0], SphereBox[{19, 3, 17}]}, 
      {Hue[1], SphereBox[{19, 3, 17}]}}, {
      {Hue[0], SphereBox[{19, 3, 19}]}, 
      {Hue[1], SphereBox[{19, 3, 19}]}}, {
      {Hue[0], SphereBox[{19, 3, 21}]}, 
      {Hue[1], SphereBox[{19, 3, 21}]}}}, {{
      {Hue[0], SphereBox[{19, 5, 1}]}, 
      {Hue[1], SphereBox[{19, 5, 1}]}}, {
      {Hue[0], SphereBox[{19, 5, 3}]}, 
      {Hue[1], SphereBox[{19, 5, 3}]}}, {
      {Hue[0], SphereBox[{19, 5, 5}]}, 
      {Hue[1], SphereBox[{19, 5, 5}]}}, {
      {Hue[0], SphereBox[{19, 5, 7}]}, 
      {Hue[1], SphereBox[{19, 5, 7}]}}, {
      {Hue[0], SphereBox[{19, 5, 9}]}, 
      {Hue[1], SphereBox[{19, 5, 9}]}}, {
      {Hue[0], SphereBox[{19, 5, 11}]}, 
      {Hue[1], SphereBox[{19, 5, 11}]}}, {
      {Hue[0], SphereBox[{19, 5, 13}]}, 
      {Hue[1], SphereBox[{19, 5, 13}]}}, {
      {Hue[0], SphereBox[{19, 5, 15}]}, 
      {Hue[1], SphereBox[{19, 5, 15}]}}, {
      {Hue[0], SphereBox[{19, 5, 17}]}, 
      {Hue[1], SphereBox[{19, 5, 17}]}}, {
      {Hue[0], SphereBox[{19, 5, 19}]}, 
      {Hue[1], SphereBox[{19, 5, 19}]}}, {
      {Hue[0], SphereBox[{19, 5, 21}]}, 
      {Hue[1], SphereBox[{19, 5, 21}]}}}, {{
      {Hue[0], SphereBox[{19, 7, 1}]}, 
      {Hue[1], SphereBox[{19, 7, 1}]}}, {
      {Hue[0], SphereBox[{19, 7, 3}]}, 
      {Hue[1], SphereBox[{19, 7, 3}]}}, {
      {Hue[0], SphereBox[{19, 7, 5}]}, 
      {Hue[1], SphereBox[{19, 7, 5}]}}, {
      {Hue[0], SphereBox[{19, 7, 7}]}, 
      {Hue[1], SphereBox[{19, 7, 7}]}}, {
      {Hue[0], SphereBox[{19, 7, 9}]}, 
      {Hue[1], SphereBox[{19, 7, 9}]}}, {
      {Hue[0], SphereBox[{19, 7, 11}]}, 
      {Hue[1], SphereBox[{19, 7, 11}]}}, {
      {Hue[0], SphereBox[{19, 7, 13}]}, 
      {Hue[1], SphereBox[{19, 7, 13}]}}, {
      {Hue[0], SphereBox[{19, 7, 15}]}, 
      {Hue[1], SphereBox[{19, 7, 15}]}}, {
      {Hue[0], SphereBox[{19, 7, 17}]}, 
      {Hue[1], SphereBox[{19, 7, 17}]}}, {
      {Hue[0], SphereBox[{19, 7, 19}]}, 
      {Hue[1], SphereBox[{19, 7, 19}]}}, {
      {Hue[0], SphereBox[{19, 7, 21}]}, 
      {Hue[1], SphereBox[{19, 7, 21}]}}}, {{
      {Hue[0], SphereBox[{19, 9, 1}]}, 
      {Hue[1], SphereBox[{19, 9, 1}]}}, {
      {Hue[0], SphereBox[{19, 9, 3}]}, 
      {Hue[1], SphereBox[{19, 9, 3}]}}, {
      {Hue[0], SphereBox[{19, 9, 5}]}, 
      {Hue[1], SphereBox[{19, 9, 5}]}}, {
      {Hue[0], SphereBox[{19, 9, 7}]}, 
      {Hue[1], SphereBox[{19, 9, 7}]}}, {
      {Hue[0], SphereBox[{19, 9, 9}]}, 
      {Hue[1], SphereBox[{19, 9, 9}]}}, {
      {Hue[0], SphereBox[{19, 9, 11}]}, 
      {Hue[1], SphereBox[{19, 9, 11}]}}, {
      {Hue[0], SphereBox[{19, 9, 13}]}, 
      {Hue[1], SphereBox[{19, 9, 13}]}}, {
      {Hue[0], SphereBox[{19, 9, 15}]}, 
      {Hue[1], SphereBox[{19, 9, 15}]}}, {
      {Hue[0], SphereBox[{19, 9, 17}]}, 
      {Hue[1], SphereBox[{19, 9, 17}]}}, {
      {Hue[0], SphereBox[{19, 9, 19}]}, 
      {Hue[1], SphereBox[{19, 9, 19}]}}, {
      {Hue[0], SphereBox[{19, 9, 21}]}, 
      {Hue[1], SphereBox[{19, 9, 21}]}}}, {{
      {Hue[0], SphereBox[{19, 11, 1}]}, 
      {Hue[1], SphereBox[{19, 11, 1}]}}, {
      {Hue[0], SphereBox[{19, 11, 3}]}, 
      {Hue[1], SphereBox[{19, 11, 3}]}}, {
      {Hue[0], SphereBox[{19, 11, 5}]}, 
      {Hue[1], SphereBox[{19, 11, 5}]}}, {
      {Hue[0], SphereBox[{19, 11, 7}]}, 
      {Hue[1], SphereBox[{19, 11, 7}]}}, {
      {Hue[0], SphereBox[{19, 11, 9}]}, 
      {Hue[1], SphereBox[{19, 11, 9}]}}, {
      {Hue[0], SphereBox[{19, 11, 11}]}, 
      {Hue[1], SphereBox[{19, 11, 11}]}}, {
      {Hue[0], SphereBox[{19, 11, 13}]}, 
      {Hue[1], SphereBox[{19, 11, 13}]}}, {
      {Hue[0], SphereBox[{19, 11, 15}]}, 
      {Hue[1], SphereBox[{19, 11, 15}]}}, {
      {Hue[0], SphereBox[{19, 11, 17}]}, 
      {Hue[1], SphereBox[{19, 11, 17}]}}, {
      {Hue[0], SphereBox[{19, 11, 19}]}, 
      {Hue[1], SphereBox[{19, 11, 19}]}}, {
      {Hue[0], SphereBox[{19, 11, 21}]}, 
      {Hue[1], SphereBox[{19, 11, 21}]}}}, {{
      {Hue[0], SphereBox[{19, 13, 1}]}, 
      {Hue[1], SphereBox[{19, 13, 1}]}}, {
      {Hue[0], SphereBox[{19, 13, 3}]}, 
      {Hue[1], SphereBox[{19, 13, 3}]}}, {
      {Hue[0], SphereBox[{19, 13, 5}]}, 
      {Hue[1], SphereBox[{19, 13, 5}]}}, {
      {Hue[0], SphereBox[{19, 13, 7}]}, 
      {Hue[1], SphereBox[{19, 13, 7}]}}, {
      {Hue[0], SphereBox[{19, 13, 9}]}, 
      {Hue[1], SphereBox[{19, 13, 9}]}}, {
      {Hue[0], SphereBox[{19, 13, 11}]}, 
      {Hue[1], SphereBox[{19, 13, 11}]}}, {
      {Hue[0], SphereBox[{19, 13, 13}]}, 
      {Hue[1], SphereBox[{19, 13, 13}]}}, {
      {Hue[0], SphereBox[{19, 13, 15}]}, 
      {Hue[1], SphereBox[{19, 13, 15}]}}, {
      {Hue[0], SphereBox[{19, 13, 17}]}, 
      {Hue[1], SphereBox[{19, 13, 17}]}}, {
      {Hue[0], SphereBox[{19, 13, 19}]}, 
      {Hue[1], SphereBox[{19, 13, 19}]}}, {
      {Hue[0], SphereBox[{19, 13, 21}]}, 
      {Hue[1], SphereBox[{19, 13, 21}]}}}, {{
      {Hue[0], SphereBox[{19, 15, 1}]}, 
      {Hue[1], SphereBox[{19, 15, 1}]}}, {
      {Hue[0], SphereBox[{19, 15, 3}]}, 
      {Hue[1], SphereBox[{19, 15, 3}]}}, {
      {Hue[0], SphereBox[{19, 15, 5}]}, 
      {Hue[1], SphereBox[{19, 15, 5}]}}, {
      {Hue[0], SphereBox[{19, 15, 7}]}, 
      {Hue[1], SphereBox[{19, 15, 7}]}}, {
      {Hue[0], SphereBox[{19, 15, 9}]}, 
      {Hue[1], SphereBox[{19, 15, 9}]}}, {
      {Hue[0], SphereBox[{19, 15, 11}]}, 
      {Hue[1], SphereBox[{19, 15, 11}]}}, {
      {Hue[0], SphereBox[{19, 15, 13}]}, 
      {Hue[1], SphereBox[{19, 15, 13}]}}, {
      {Hue[0], SphereBox[{19, 15, 15}]}, 
      {Hue[1], SphereBox[{19, 15, 15}]}}, {
      {Hue[0], SphereBox[{19, 15, 17}]}, 
      {Hue[1], SphereBox[{19, 15, 17}]}}, {
      {Hue[0], SphereBox[{19, 15, 19}]}, 
      {Hue[1], SphereBox[{19, 15, 19}]}}, {
      {Hue[0], SphereBox[{19, 15, 21}]}, 
      {Hue[1], SphereBox[{19, 15, 21}]}}}, {{
      {Hue[0], SphereBox[{19, 17, 1}]}, 
      {Hue[1], SphereBox[{19, 17, 1}]}}, {
      {Hue[0], SphereBox[{19, 17, 3}]}, 
      {Hue[1], SphereBox[{19, 17, 3}]}}, {
      {Hue[0], SphereBox[{19, 17, 5}]}, 
      {Hue[1], SphereBox[{19, 17, 5}]}}, {
      {Hue[0], SphereBox[{19, 17, 7}]}, 
      {Hue[1], SphereBox[{19, 17, 7}]}}, {
      {Hue[0], SphereBox[{19, 17, 9}]}, 
      {Hue[1], SphereBox[{19, 17, 9}]}}, {
      {Hue[0], SphereBox[{19, 17, 11}]}, 
      {Hue[1], SphereBox[{19, 17, 11}]}}, {
      {Hue[0], SphereBox[{19, 17, 13}]}, 
      {Hue[1], SphereBox[{19, 17, 13}]}}, {
      {Hue[0], SphereBox[{19, 17, 15}]}, 
      {Hue[1], SphereBox[{19, 17, 15}]}}, {
      {Hue[0], SphereBox[{19, 17, 17}]}, 
      {Hue[1], SphereBox[{19, 17, 17}]}}, {
      {Hue[0], SphereBox[{19, 17, 19}]}, 
      {Hue[1], SphereBox[{19, 17, 19}]}}, {
      {Hue[0], SphereBox[{19, 17, 21}]}, 
      {Hue[1], SphereBox[{19, 17, 21}]}}}, {{
      {Hue[0], SphereBox[{19, 19, 1}]}, 
      {Hue[1], SphereBox[{19, 19, 1}]}}, {
      {Hue[0], SphereBox[{19, 19, 3}]}, 
      {Hue[1], SphereBox[{19, 19, 3}]}}, {
      {Hue[0], SphereBox[{19, 19, 5}]}, 
      {Hue[1], SphereBox[{19, 19, 5}]}}, {
      {Hue[0], SphereBox[{19, 19, 7}]}, 
      {Hue[1], SphereBox[{19, 19, 7}]}}, {
      {Hue[0], SphereBox[{19, 19, 9}]}, 
      {Hue[1], SphereBox[{19, 19, 9}]}}, {
      {Hue[0], SphereBox[{19, 19, 11}]}, 
      {Hue[1], SphereBox[{19, 19, 11}]}}, {
      {Hue[0], SphereBox[{19, 19, 13}]}, 
      {Hue[1], SphereBox[{19, 19, 13}]}}, {
      {Hue[0], SphereBox[{19, 19, 15}]}, 
      {Hue[1], SphereBox[{19, 19, 15}]}}, {
      {Hue[0], SphereBox[{19, 19, 17}]}, 
      {Hue[1], SphereBox[{19, 19, 17}]}}, {
      {Hue[0], SphereBox[{19, 19, 19}]}, 
      {Hue[1], SphereBox[{19, 19, 19}]}}, {
      {Hue[0], SphereBox[{19, 19, 21}]}, 
      {Hue[1], SphereBox[{19, 19, 21}]}}}, {{
      {Hue[0], SphereBox[{19, 21, 1}]}, 
      {Hue[1], SphereBox[{19, 21, 1}]}}, {
      {Hue[0], SphereBox[{19, 21, 3}]}, 
      {Hue[1], SphereBox[{19, 21, 3}]}}, {
      {Hue[0], SphereBox[{19, 21, 5}]}, 
      {Hue[1], SphereBox[{19, 21, 5}]}}, {
      {Hue[0], SphereBox[{19, 21, 7}]}, 
      {Hue[1], SphereBox[{19, 21, 7}]}}, {
      {Hue[0], SphereBox[{19, 21, 9}]}, 
      {Hue[1], SphereBox[{19, 21, 9}]}}, {
      {Hue[0], SphereBox[{19, 21, 11}]}, 
      {Hue[1], SphereBox[{19, 21, 11}]}}, {
      {Hue[0], SphereBox[{19, 21, 13}]}, 
      {Hue[1], SphereBox[{19, 21, 13}]}}, {
      {Hue[0], SphereBox[{19, 21, 15}]}, 
      {Hue[1], SphereBox[{19, 21, 15}]}}, {
      {Hue[0], SphereBox[{19, 21, 17}]}, 
      {Hue[1], SphereBox[{19, 21, 17}]}}, {
      {Hue[0], SphereBox[{19, 21, 19}]}, 
      {Hue[1], SphereBox[{19, 21, 19}]}}, {
      {Hue[0], SphereBox[{19, 21, 21}]}, 
      {Hue[1], SphereBox[{19, 21, 21}]}}}}, {{{
      {Hue[0], SphereBox[{21, 1, 1}]}, 
      {Hue[1], SphereBox[{21, 1, 1}]}}, {
      {Hue[0], SphereBox[{21, 1, 3}]}, 
      {Hue[1], SphereBox[{21, 1, 3}]}}, {
      {Hue[0], SphereBox[{21, 1, 5}]}, 
      {Hue[1], SphereBox[{21, 1, 5}]}}, {
      {Hue[0], SphereBox[{21, 1, 7}]}, 
      {Hue[1], SphereBox[{21, 1, 7}]}}, {
      {Hue[0], SphereBox[{21, 1, 9}]}, 
      {Hue[1], SphereBox[{21, 1, 9}]}}, {
      {Hue[0], SphereBox[{21, 1, 11}]}, 
      {Hue[1], SphereBox[{21, 1, 11}]}}, {
      {Hue[0], SphereBox[{21, 1, 13}]}, 
      {Hue[1], SphereBox[{21, 1, 13}]}}, {
      {Hue[0], SphereBox[{21, 1, 15}]}, 
      {Hue[1], SphereBox[{21, 1, 15}]}}, {
      {Hue[0], SphereBox[{21, 1, 17}]}, 
      {Hue[1], SphereBox[{21, 1, 17}]}}, {
      {Hue[0], SphereBox[{21, 1, 19}]}, 
      {Hue[1], SphereBox[{21, 1, 19}]}}, {
      {Hue[0], SphereBox[{21, 1, 21}]}, 
      {Hue[1], SphereBox[{21, 1, 21}]}}}, {{
      {Hue[0], SphereBox[{21, 3, 1}]}, 
      {Hue[1], SphereBox[{21, 3, 1}]}}, {
      {Hue[0], SphereBox[{21, 3, 3}]}, 
      {Hue[1], SphereBox[{21, 3, 3}]}}, {
      {Hue[0], SphereBox[{21, 3, 5}]}, 
      {Hue[1], SphereBox[{21, 3, 5}]}}, {
      {Hue[0], SphereBox[{21, 3, 7}]}, 
      {Hue[1], SphereBox[{21, 3, 7}]}}, {
      {Hue[0], SphereBox[{21, 3, 9}]}, 
      {Hue[1], SphereBox[{21, 3, 9}]}}, {
      {Hue[0], SphereBox[{21, 3, 11}]}, 
      {Hue[1], SphereBox[{21, 3, 11}]}}, {
      {Hue[0], SphereBox[{21, 3, 13}]}, 
      {Hue[1], SphereBox[{21, 3, 13}]}}, {
      {Hue[0], SphereBox[{21, 3, 15}]}, 
      {Hue[1], SphereBox[{21, 3, 15}]}}, {
      {Hue[0], SphereBox[{21, 3, 17}]}, 
      {Hue[1], SphereBox[{21, 3, 17}]}}, {
      {Hue[0], SphereBox[{21, 3, 19}]}, 
      {Hue[1], SphereBox[{21, 3, 19}]}}, {
      {Hue[0], SphereBox[{21, 3, 21}]}, 
      {Hue[1], SphereBox[{21, 3, 21}]}}}, {{
      {Hue[0], SphereBox[{21, 5, 1}]}, 
      {Hue[1], SphereBox[{21, 5, 1}]}}, {
      {Hue[0], SphereBox[{21, 5, 3}]}, 
      {Hue[1], SphereBox[{21, 5, 3}]}}, {
      {Hue[0], SphereBox[{21, 5, 5}]}, 
      {Hue[1], SphereBox[{21, 5, 5}]}}, {
      {Hue[0], SphereBox[{21, 5, 7}]}, 
      {Hue[1], SphereBox[{21, 5, 7}]}}, {
      {Hue[0], SphereBox[{21, 5, 9}]}, 
      {Hue[1], SphereBox[{21, 5, 9}]}}, {
      {Hue[0], SphereBox[{21, 5, 11}]}, 
      {Hue[1], SphereBox[{21, 5, 11}]}}, {
      {Hue[0], SphereBox[{21, 5, 13}]}, 
      {Hue[1], SphereBox[{21, 5, 13}]}}, {
      {Hue[0], SphereBox[{21, 5, 15}]}, 
      {Hue[1], SphereBox[{21, 5, 15}]}}, {
      {Hue[0], SphereBox[{21, 5, 17}]}, 
      {Hue[1], SphereBox[{21, 5, 17}]}}, {
      {Hue[0], SphereBox[{21, 5, 19}]}, 
      {Hue[1], SphereBox[{21, 5, 19}]}}, {
      {Hue[0], SphereBox[{21, 5, 21}]}, 
      {Hue[1], SphereBox[{21, 5, 21}]}}}, {{
      {Hue[0], SphereBox[{21, 7, 1}]}, 
      {Hue[1], SphereBox[{21, 7, 1}]}}, {
      {Hue[0], SphereBox[{21, 7, 3}]}, 
      {Hue[1], SphereBox[{21, 7, 3}]}}, {
      {Hue[0], SphereBox[{21, 7, 5}]}, 
      {Hue[1], SphereBox[{21, 7, 5}]}}, {
      {Hue[0], SphereBox[{21, 7, 7}]}, 
      {Hue[1], SphereBox[{21, 7, 7}]}}, {
      {Hue[0], SphereBox[{21, 7, 9}]}, 
      {Hue[1], SphereBox[{21, 7, 9}]}}, {
      {Hue[0], SphereBox[{21, 7, 11}]}, 
      {Hue[1], SphereBox[{21, 7, 11}]}}, {
      {Hue[0], SphereBox[{21, 7, 13}]}, 
      {Hue[1], SphereBox[{21, 7, 13}]}}, {
      {Hue[0], SphereBox[{21, 7, 15}]}, 
      {Hue[1], SphereBox[{21, 7, 15}]}}, {
      {Hue[0], SphereBox[{21, 7, 17}]}, 
      {Hue[1], SphereBox[{21, 7, 17}]}}, {
      {Hue[0], SphereBox[{21, 7, 19}]}, 
      {Hue[1], SphereBox[{21, 7, 19}]}}, {
      {Hue[0], SphereBox[{21, 7, 21}]}, 
      {Hue[1], SphereBox[{21, 7, 21}]}}}, {{
      {Hue[0], SphereBox[{21, 9, 1}]}, 
      {Hue[1], SphereBox[{21, 9, 1}]}}, {
      {Hue[0], SphereBox[{21, 9, 3}]}, 
      {Hue[1], SphereBox[{21, 9, 3}]}}, {
      {Hue[0], SphereBox[{21, 9, 5}]}, 
      {Hue[1], SphereBox[{21, 9, 5}]}}, {
      {Hue[0], SphereBox[{21, 9, 7}]}, 
      {Hue[1], SphereBox[{21, 9, 7}]}}, {
      {Hue[0], SphereBox[{21, 9, 9}]}, 
      {Hue[1], SphereBox[{21, 9, 9}]}}, {
      {Hue[0], SphereBox[{21, 9, 11}]}, 
      {Hue[1], SphereBox[{21, 9, 11}]}}, {
      {Hue[0], SphereBox[{21, 9, 13}]}, 
      {Hue[1], SphereBox[{21, 9, 13}]}}, {
      {Hue[0], SphereBox[{21, 9, 15}]}, 
      {Hue[1], SphereBox[{21, 9, 15}]}}, {
      {Hue[0], SphereBox[{21, 9, 17}]}, 
      {Hue[1], SphereBox[{21, 9, 17}]}}, {
      {Hue[0], SphereBox[{21, 9, 19}]}, 
      {Hue[1], SphereBox[{21, 9, 19}]}}, {
      {Hue[0], SphereBox[{21, 9, 21}]}, 
      {Hue[1], SphereBox[{21, 9, 21}]}}}, {{
      {Hue[0], SphereBox[{21, 11, 1}]}, 
      {Hue[1], SphereBox[{21, 11, 1}]}}, {
      {Hue[0], SphereBox[{21, 11, 3}]}, 
      {Hue[1], SphereBox[{21, 11, 3}]}}, {
      {Hue[0], SphereBox[{21, 11, 5}]}, 
      {Hue[1], SphereBox[{21, 11, 5}]}}, {
      {Hue[0], SphereBox[{21, 11, 7}]}, 
      {Hue[1], SphereBox[{21, 11, 7}]}}, {
      {Hue[0], SphereBox[{21, 11, 9}]}, 
      {Hue[1], SphereBox[{21, 11, 9}]}}, {
      {Hue[0], SphereBox[{21, 11, 11}]}, 
      {Hue[1], SphereBox[{21, 11, 11}]}}, {
      {Hue[0], SphereBox[{21, 11, 13}]}, 
      {Hue[1], SphereBox[{21, 11, 13}]}}, {
      {Hue[0], SphereBox[{21, 11, 15}]}, 
      {Hue[1], SphereBox[{21, 11, 15}]}}, {
      {Hue[0], SphereBox[{21, 11, 17}]}, 
      {Hue[1], SphereBox[{21, 11, 17}]}}, {
      {Hue[0], SphereBox[{21, 11, 19}]}, 
      {Hue[1], SphereBox[{21, 11, 19}]}}, {
      {Hue[0], SphereBox[{21, 11, 21}]}, 
      {Hue[1], SphereBox[{21, 11, 21}]}}}, {{
      {Hue[0], SphereBox[{21, 13, 1}]}, 
      {Hue[1], SphereBox[{21, 13, 1}]}}, {
      {Hue[0], SphereBox[{21, 13, 3}]}, 
      {Hue[1], SphereBox[{21, 13, 3}]}}, {
      {Hue[0], SphereBox[{21, 13, 5}]}, 
      {Hue[1], SphereBox[{21, 13, 5}]}}, {
      {Hue[0], SphereBox[{21, 13, 7}]}, 
      {Hue[1], SphereBox[{21, 13, 7}]}}, {
      {Hue[0], SphereBox[{21, 13, 9}]}, 
      {Hue[1], SphereBox[{21, 13, 9}]}}, {
      {Hue[0], SphereBox[{21, 13, 11}]}, 
      {Hue[1], SphereBox[{21, 13, 11}]}}, {
      {Hue[0], SphereBox[{21, 13, 13}]}, 
      {Hue[1], SphereBox[{21, 13, 13}]}}, {
      {Hue[0], SphereBox[{21, 13, 15}]}, 
      {Hue[1], SphereBox[{21, 13, 15}]}}, {
      {Hue[0], SphereBox[{21, 13, 17}]}, 
      {Hue[1], SphereBox[{21, 13, 17}]}}, {
      {Hue[0], SphereBox[{21, 13, 19}]}, 
      {Hue[1], SphereBox[{21, 13, 19}]}}, {
      {Hue[0], SphereBox[{21, 13, 21}]}, 
      {Hue[1], SphereBox[{21, 13, 21}]}}}, {{
      {Hue[0], SphereBox[{21, 15, 1}]}, 
      {Hue[1], SphereBox[{21, 15, 1}]}}, {
      {Hue[0], SphereBox[{21, 15, 3}]}, 
      {Hue[1], SphereBox[{21, 15, 3}]}}, {
      {Hue[0], SphereBox[{21, 15, 5}]}, 
      {Hue[1], SphereBox[{21, 15, 5}]}}, {
      {Hue[0], SphereBox[{21, 15, 7}]}, 
      {Hue[1], SphereBox[{21, 15, 7}]}}, {
      {Hue[0], SphereBox[{21, 15, 9}]}, 
      {Hue[1], SphereBox[{21, 15, 9}]}}, {
      {Hue[0], SphereBox[{21, 15, 11}]}, 
      {Hue[1], SphereBox[{21, 15, 11}]}}, {
      {Hue[0], SphereBox[{21, 15, 13}]}, 
      {Hue[1], SphereBox[{21, 15, 13}]}}, {
      {Hue[0], SphereBox[{21, 15, 15}]}, 
      {Hue[1], SphereBox[{21, 15, 15}]}}, {
      {Hue[0], SphereBox[{21, 15, 17}]}, 
      {Hue[1], SphereBox[{21, 15, 17}]}}, {
      {Hue[0], SphereBox[{21, 15, 19}]}, 
      {Hue[1], SphereBox[{21, 15, 19}]}}, {
      {Hue[0], SphereBox[{21, 15, 21}]}, 
      {Hue[1], SphereBox[{21, 15, 21}]}}}, {{
      {Hue[0], SphereBox[{21, 17, 1}]}, 
      {Hue[1], SphereBox[{21, 17, 1}]}}, {
      {Hue[0], SphereBox[{21, 17, 3}]}, 
      {Hue[1], SphereBox[{21, 17, 3}]}}, {
      {Hue[0], SphereBox[{21, 17, 5}]}, 
      {Hue[1], SphereBox[{21, 17, 5}]}}, {
      {Hue[0], SphereBox[{21, 17, 7}]}, 
      {Hue[1], SphereBox[{21, 17, 7}]}}, {
      {Hue[0], SphereBox[{21, 17, 9}]}, 
      {Hue[1], SphereBox[{21, 17, 9}]}}, {
      {Hue[0], SphereBox[{21, 17, 11}]}, 
      {Hue[1], SphereBox[{21, 17, 11}]}}, {
      {Hue[0], SphereBox[{21, 17, 13}]}, 
      {Hue[1], SphereBox[{21, 17, 13}]}}, {
      {Hue[0], SphereBox[{21, 17, 15}]}, 
      {Hue[1], SphereBox[{21, 17, 15}]}}, {
      {Hue[0], SphereBox[{21, 17, 17}]}, 
      {Hue[1], SphereBox[{21, 17, 17}]}}, {
      {Hue[0], SphereBox[{21, 17, 19}]}, 
      {Hue[1], SphereBox[{21, 17, 19}]}}, {
      {Hue[0], SphereBox[{21, 17, 21}]}, 
      {Hue[1], SphereBox[{21, 17, 21}]}}}, {{
      {Hue[0], SphereBox[{21, 19, 1}]}, 
      {Hue[1], SphereBox[{21, 19, 1}]}}, {
      {Hue[0], SphereBox[{21, 19, 3}]}, 
      {Hue[1], SphereBox[{21, 19, 3}]}}, {
      {Hue[0], SphereBox[{21, 19, 5}]}, 
      {Hue[1], SphereBox[{21, 19, 5}]}}, {
      {Hue[0], SphereBox[{21, 19, 7}]}, 
      {Hue[1], SphereBox[{21, 19, 7}]}}, {
      {Hue[0], SphereBox[{21, 19, 9}]}, 
      {Hue[1], SphereBox[{21, 19, 9}]}}, {
      {Hue[0], SphereBox[{21, 19, 11}]}, 
      {Hue[1], SphereBox[{21, 19, 11}]}}, {
      {Hue[0], SphereBox[{21, 19, 13}]}, 
      {Hue[1], SphereBox[{21, 19, 13}]}}, {
      {Hue[0], SphereBox[{21, 19, 15}]}, 
      {Hue[1], SphereBox[{21, 19, 15}]}}, {
      {Hue[0], SphereBox[{21, 19, 17}]}, 
      {Hue[1], SphereBox[{21, 19, 17}]}}, {
      {Hue[0], SphereBox[{21, 19, 19}]}, 
      {Hue[1], SphereBox[{21, 19, 19}]}}, {
      {Hue[0], SphereBox[{21, 19, 21}]}, 
      {Hue[1], SphereBox[{21, 19, 21}]}}}, {{
      {Hue[0], SphereBox[{21, 21, 1}]}, 
      {Hue[1], SphereBox[{21, 21, 1}]}}, {
      {Hue[0], SphereBox[{21, 21, 3}]}, 
      {Hue[1], SphereBox[{21, 21, 3}]}}, {
      {Hue[0], SphereBox[{21, 21, 5}]}, 
      {Hue[1], SphereBox[{21, 21, 5}]}}, {
      {Hue[0], SphereBox[{21, 21, 7}]}, 
      {Hue[1], SphereBox[{21, 21, 7}]}}, {
      {Hue[0], SphereBox[{21, 21, 9}]}, 
      {Hue[1], SphereBox[{21, 21, 9}]}}, {
      {Hue[0], SphereBox[{21, 21, 11}]}, 
      {Hue[1], SphereBox[{21, 21, 11}]}}, {
      {Hue[0], SphereBox[{21, 21, 13}]}, 
      {Hue[1], SphereBox[{21, 21, 13}]}}, {
      {Hue[0], SphereBox[{21, 21, 15}]}, 
      {Hue[1], SphereBox[{21, 21, 15}]}}, {
      {Hue[0], SphereBox[{21, 21, 17}]}, 
      {Hue[1], SphereBox[{21, 21, 17}]}}, {
      {Hue[0], SphereBox[{21, 21, 19}]}, 
      {Hue[1], SphereBox[{21, 21, 19}]}}, {
      {Hue[0], SphereBox[{21, 21, 21}]}, 
      {Hue[1], SphereBox[{21, 21, 21}]}}}}}]], "Output",
 CellChangeTimes->{{3.947504188035392*^9, 3.947504235512743*^9}, {
   3.947504269777972*^9, 3.9475043027257147`*^9}, {3.9475043768183203`*^9, 
   3.947504462488474*^9}, {3.947504526437714*^9, 3.947504601689179*^9}, 
   3.947504647265326*^9, 3.9477936238300867`*^9},
 CellLabel->"Out[84]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
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
HglKVRTCtQqbQr3Dn4OjBdcQgq4Q5YPkpaes5viXmoYAJYFVnju6EPZ7rruO
oc/DTtgPWRwSsZvrWG2xtQ78KPf2LdLrOK/fwHXJdp+3eAIhW0+yExy+s3g8
CRITvm2vvzNp91rIOYX5J1gX9o5QPIWM9R1Y03XSirT3y6W9fd+RpN4hi41d
X3gO5PazU8A+nCS1HY0rYXlhnhEDwBrQAiDxmMkWx7NDnt5MCK5M+7e4zXem
gzDTEkOI2ynSS0W18j4fJe3HqJeuZzheShX+gyzONATZYZ7UbXnCanYxbg/j
49KdasYnq3gBsrWKKx2QN1qWNjOsxuseqmgUYwYux1uc8g0u20POO8prXvfg
cVfT3dEpraQ5ZPEQVCAeor6f379LukIaR1s+9mGIpVuc7qHTsomoUvNeWoML
zt5qcazKix7W4h4vuXsou73H4nZnucVzGBTHTIvwNdKkY1LD8hW/O8V73GTx
xHTgrDzJSHW5YDAlbpS0UW2uvPRn2rVreaiQdvie24jf14hreer7uU5VG56z
2vl7qrngZA51SnxP8NWPMt+yg2eDs45/j/JkcfIB8VKD69DSEpSLBxmgfIdV
t6L840zgsxi8z763dVYJCwQfg6/PB8R3dEwJVQqZScdWaY+5zrHOBueZAsng
/aUkgKqLAW0azvrYwrlBNC0/zU5zwjMhzkpejrB4TJbKK2daHOeK50DxQM1D
luEVj7Po3aetmXIbWJTnavLquOK0Mg8yr9HNB7jemyxW0WjTogq9h8iED1ms
pE43LSx3DJtawAWBgKCC8TW6Bd7De0BpXkUD0GElYNn3Wpz7Las/3/LUNvVN
8ddtTvVpB/MVUQCNCQ9LMxkWWe1xHwAtScGY75juUTOKbQ+Xs5z3AmPuJ+rS
jQSE4EMV0NaHU0hOmjz5nlnP1giL9eDgPjkZUIvqVVZtLkR2p2lbudvJXNkz
B3jDrr8+TISSnybv/DUuV3WQizy4lWUYJ0mGt2NLynle/hqZ4g4HCqJslziG
XGs58zbybzD1ODLPKIvZpl2WD6Epru07yKp7Uq5PZNxF4n0yrm3DHJJIE758
j1wjd5SFo6vKSb3g7KqqZh6RlvZY7LE8J7abSN5MuqtFGL+BGW22zH/wzlvn
0FqBR5V7wjUy6jlLzwrs6UBZanH0JJAHiYfjuIzgHbHqA4dYrUd9fE3WRwj1
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
s65STnirunKosnqEivCxlbfq/giZ/5z2TtXCv+DkIUhsVomf2b1eAs8g5/2C
tt/E13EY6YrxBRXeRDXcaSLv7g7PUGY7P4MvNacTKlcvRnhG/WKGu3txNicn
MBXVlBoT94v4txYM1v4S5P6A+caj0B1Tg5WOoXDha1aY001ljbAwQd7gFdXh
7ISVXc7E/4Kf0RESv4PaqgRODli6ZUF8kg8tgYnpbHolqA3G/hh171nqISPj
SgQTgsdRRCz+KeZ1P+eqk9Vs67q3O6w345ggPLbYdnFQ4lTmZqNCNOaL/Q+R
OHz0XsoGnuFLS7dKZtDSBBnplTdeKpq7P1W5o+mVO4o0iTnBVc02J0ep/gO3
BBf7qpW9oPMzuIhSWFT4mMXm7OlvzGFOc0yE+QsLwjy+a5w5iVffk7PijnGh
X86ej4WGzrMkVj270nb7beobLewrNrtNfO45cxOFPQgSI0oVwm/Epwv4Uzja
jrjwHfcVTimV0ctIqBmB69TD5i2B1eYB/kdtHmrZrjy+V4uHRea9jfdlWpDh
WvO2xj9aeY/KVJlzt7TJoupzJ770rqA4Qqt6prtPYo9r7KqV5ywwYeUO4SFH
TH3RleiGlSOqQNi5gosj5qbKbSxR9cq6ov6L64VHwDciKrvBvFQlJB9GBgN8
DoOurMT+WjSlgp0O40dg67DdyeaF4g3m13sdNs+g6R4G1srDzw/4+9Pm3L69
nM1y8yt3BMnBysDNwhRgMkeDmLeE/8ssHfrdPyzZl+a5BAWmOTZgpHVJWo30
7QuTFeMlbK1jKQ64K+EeF1lj9zfVyfMCHTko1bO/CjuNsnCfcIqn+Vn1sFDy
aav5mQM6c7cpJdcjbBNQhnc4jucrbzSnvZ2IvmUh4hAhSkd4WaEwnN+Zt47O
qdaiqWEZhuBxMXl2N78Sm+nSuFrVlFYEZVvG36tPwyRK+aw1XnXzDjXlGRXJ
uoVHv2IpYRhbTPcJwsCTVWAW6+t784QfvgF7w2v4WKwaYI28pNcZBi+ezaK4
zPCyckNFpb10Q00apl4QDmRCas0y71uoyB+2Sv4Ls2DtXd7ICzegXhanrbgv
k4bcmogwy9Oue3FqbYypqq8MxoSYfjh/wrCxI+sgfjd/vsg1qiNchGZlP5nq
m98NayvsVI6YF/1rGX/m9C+o1C/OAFO+AEMRexzDUKlbeLkJXOCOMM2Xw6Ze
+dvU/myc+WVq+Ly48Erh7zTnmyhQOGvpPoZqOp8H61Mnk7Pm9XFoO/bGdVGR
wr76VvY6nFJMPcQaeZZgS/CxT7iUcJz/4PI8ZCUZtcMauSeEl1ZzXhKeLYud
b2VjxocpJyzdUiuZbyc5Vh3os4Ic2/n8YLoHsQ47PWNORtlgJc1yY1y3Htme
J17KDXjqjSZsJ1wrzHXSFVecX1L5ofUCrg1sAK5BwDD20ZyAQGnfm58BzlLf
8HqBeQ33H6Vq4CbtBf1SU2h1bJhLse0xK/DwX3DKEBtOil42aw1WhRh7e/jd
juCDRIxYZ2UjsU/NoXQQOSxkjPftuY8astucjbaVQ8TqVT7osmFFL42ra8cz
4gqbtE69AAe7oFOvWqMZ56iXt01ZsfaGLNa+ONEwsYUcJewGoYQwsGpdiIli
VxNRALqNgAAuB7tiY7D/53QBonhiao6ErWGBld0ejphDW5QG/8QcXaqmAnWe
mHDo4olp/BmJvE4Ti/FDdE1YO7iLa60kpgpLN9W8XdXcuPYE0l3WAKSbah7u
j+f7V5mzUI5x6B+aXwYiAN235hvxN+a9GVQ3f5vLuoVzuIYeskeTDs45zBQm
vomfQew2xBwvCPc52bwRk4rmK60gq1ZfhIzc4IaMnAp4mPcE/j2f73EuJ5YO
u4IK5izgiaoi1E6OSH2H08WwbzKvP2eMm5S1kztiRkC1vGiG3VMzsufB7ho0
KBz4W8OBv2ciiG42bwc73xKgoyU7B+hc/wkXI7x8u/pDtYd4GkEybGo/BbDf
ykSfGkbPMYGAzodI7kfzitV287qas79iBUxwZfEncvzLKiocxnaeEv0ivocJ
hj6pkQOSCw9xMaGUwtPsoSgqf3L18OSZivsrSs/UpJXqBVdVh7lgBgv4Ddut
vPVXFn7WhJ3tm1pE4DUd2wWHERTrhPkNIkfMuxzWOiPrqj+oFawYwcb9XBxZ
JgIK7D8IA2HZs7koOrzLmpU9h0fArrDMvNeqiu1nzG8Vh7V9Fab1dRC4sKk6
MGPoJ6na26hv+I55cXyRaf6X1DlNFQp8tSgqXRXbl/BxK63r28IUmk/JVmg9
degIpyN0Lywxw9kxVXdB2qbzavv7FMdOipBOiJWB5l2eY95uUMrb3U2xY5yw
JegnnNRYzhXPXWh+J4HK7RmXhWSWgYnMAhmqtKc8nhzzGvPSnuYtJ4X5/ezs
VlX2zlnRy10HffWyxuwy4BssrRrRfcHHyaLvtLIiPwQcsMopHQoSPhy+LmdG
YWYbuarMqrSyLZigtJ9Sp6DbOYEWXl6VsTupOMoMKiOoWB4KsInCXZ4cU7fg
+L6hcF7Br0cF+YonllfJMMquuo/hsfCFqs5DzivwuBeDlYzh6BHSYf9FKHHG
SmwcedJXT2jeZWNgg1uq1e57h+P6MvMKmDihOqbTflvCOf2CBpzMu/zIAc5J
wM3xJtzsn4PIlZA4S214yJyvjNh/pvlm+4Z565Ll/Ak7hg3ANpVNhx3MaKKz
KrbntvoDpvCj1Xux56YKecLVMybonoX2stIb8RRsvP8RYm/B746bX5rw7+rt
hNup5p5ycVAUuPSV5meBCRTIJuu6ppfD7PJIPj8nQFDXlvU8zKbW3iIAQmJm
bqCILeE98A0wGZW+4HfmcmqC+Gy1smcTuYYRUjOguDE9Z7ZgeVWKWMvRQlXE
481LCb1qkBvM8gM+C7vYo3FFWsl2FaLgTmus9SkZMAIjHB4mrKq5Kg23VS5o
+MUXN2330uy8T4XtRhch9sqeKLNo0z2KHlJ5RS6GPWfCe0SIxWof5iNIKCg8
0Fd8fTJ+PSVMYrKVVTNM6EWzogSQZ9XVdAiW+QO/MoDsZgYPBOOaFr8hjPwJ
fkSJAnUerBb+qo7mXThyDxQqapGV0fsU7GNNtuJ1TigNt4WU0BwhowYgyt3D
rF4wB/lkFlt9Hv+/LPwbv4d57qfgc1NVxV2mup7LWm9wAqVdbR7oI0yawd/v
o2SbmGj3THdlpV9yxqf4+Nuax+6M272l958S5XyINa+4L7fGivte8wBc1Xbl
3WC4W8wtEjHgQk4chnzayvuN3Rrb0gEAC/I21/Q6WWGPlFO/2xr6Wli86HBw
UwaLyu14LwwGTmKOlSlFVQcwxCNUxZP4ahzr+xc3GR0yJ7JgGWGtU63EFMCX
QLO/iWt0QQ2CBwWFm3rRiOyLCa/r49KkCw9V6cPhf7SlTrNB0SbwJ9ZKnHW8
D57g7srXDK3+xJP0R0HCeX2+friH2b5s7nBUDJsW/7SEdh09mt4R+ESSP/J+
7enu1TNWXo2EzyiX9yMl4PWw+cHjzDOniU01bweGNckP64qFRdS4h5+Dmi3B
mi0L4QWWV/0dBOUR3+MzDqFax6uetOYF/DLgKWplBCt2YJSw7py23ZwVWnY6
VAF+f1xg+zcXAMZzdntCx9xsXoSEw4DzgLOBzQmoRjutPguEbN/iTp8c/D4t
m8Jpayi6q+auGh0EB5P34nRbYpYNsXSdmNfcW4OZQpvvMxXw+ibWOaJp1dyx
fIhYYFPK8KvmjuU+jo9XRlid1PNOCcqyKY6H04En3cTX3jW/0DgGbXFGYpxD
o2Dao9OMehU010espLmS4spt+MK0DcP4EAvAyygNhH+PN6eaQ+hbzC9NO8rv
fsfSTUbhOvWWcHLvX/CzYU11CosqwDvM+a7nLGUWW2KP41jGUzX6aNLJ7qm9
OpSCUDZTh3nFOzjYwxGpnCeyHXQfzp3NYuI+37NoQyv2/WOVL7q3ioEeFIdu
QNP6/EnObnMcSbqDeXFcuSChxZz1QiM5x34T1B9SELnmZX4tpL/VPOEHtf7M
nESGbQznBSXz7uJnecZvDfWx9nQMWcjHT+TXCVHzFZUI1gNPeqMpsu8XdF9R
+hYro3N8jfLcWDRVoD4sGwD9f/NJPa6CfsKgD1p57e6PJmvulqwZUnhcS947
gWfuNAfPwHKFmuFZtyVQ7/ok5NsL5v2SV1u5n8ICiZNtDTDZ9nRlSw6RVcJ+
DX9fI4QyQvhzAZGfbiUbDtv9sDihtGvCYJ+n4uInAlkoMgxahoplV60d67GC
a6Rae85WYa29NYTX/YpbQ45R5nCyG/iotc2nw1J6MM6jfv+xPBLsYauV96vf
a421PCgO9lVSXlvCTS4XJtYr5iOs2gg+QnAtmNBK6uNuK/vLwonkfS8+D4P9
IgxRtFdt8TkUT9SWOyiAt8xRExBUh6fS88qejh94zGwOTfT7W83v9RKRR8lF
LD/MUUiYRZZ3mLsyNZDJK3wvoAt95Ygeo4S7qs1j2Mq2YSx52v9uPgvmixPr
GktdplKvSYgWm6vCDwFqc/aswpD3qCMPGItjsRNdWOGt4V/bg9kIMYfvwIlh
Lt8jxpqOse9RtrebMud9g/EKda4i+S4u2WpzKuR5yqNa/mGbkwcqSvf0QCTE
F4nr6JXaOiEVcbUyfmgvYiq/5+CxwAh0dPJ41IqL2+q3A0Lzc4gM3j6ZMhaB
e481tot6P8jhgyAHyEbH4Toqfr6V1a1vKdfzNNUeJJl9z89j+CLGYUxwKXA3
L1pxyVhriKwvT91oYJFjOEtMQc4zL7CLryJrzArs6cqQc+aW+KH5dSHC3EIk
0/m8k+aQE5jOPWVnf1pjA7jnCGeGiFRHEsxSVthhboVzLUUjke86OPxT4fzL
5j3MRY1/ozbjE1Z2kKvV7loC8bVvorzWG1IcMW84g1ndYt6l9EklEMte9GJ4
77PyihRx03Ik04vmtz3OMb/8WZ+BvNdg8sDDXJK8gIjnkyvPg3swxlBO0Cx4
g7wkL9j8SY4aX59X3JTHp2fw2xR6hD1UqfjVlO0sU2czL7F9Z6nJYHjEUGjC
EGM6IGwbb4WP4P9/SGk2yFWxNQI8KJ8yzYiq3rPy0rwc7I7fQZFPWZm1RoiP
rfaAJb9zCrbarDNHo9O5teZ0LkPAt5ca9LklgmhmugOCnWhDvc/KewFfsgSM
CWJ42bx3RAaMqR74dPBiMyiOzda8b8THxpZz54LW5n1JtGkeoBRWU0/EH+qk
yv2jwMg6QVR/vuWwbuV0xNLuwjZbQ029PGbj3AWv9IJ52QbD2cbhKYPfxCZb
8f2VP/yaOqACnNiuQrrgK+7kTB9nCBAaIlYLspizgOBej+oY/KkwqC9a2fVC
EHlV4SK9cU1wN7I4YeUXmPfhGsO/Q9+2cGzHsqkJzZNV42Ixrk+ivtY7RegA
AWPO0ms9annDdBiI5fXByaAR6mzkkHKa/Sjz4uMsa2xWpbw/c/6RZter4eaq
sKu3t58ffcUVQZWfNZW1Gmvtp41tC1POvlvK2T8RFaE1OISeKXjYza8TtW26
Zdd2dUvtlM7ENYvdXNtSZh0biWpmm/DyaZxfEl8NOaM9nObr5vV2+Es4r3Vh
Li+FCDynfiKIwFyFY8lLwcoGVM85VT3jqp3uaQp3UnqaosoV0Yrdr8KKiEg5
iUus7VSBrWNlewevIigPVletXGoBbDTP/sVlgNo2n+Xb1ppfBnjKysJ4YZa9
f9UsN/Lxo6ivIQyohDnU/LB9inoKoapYU0eyqCC+ynRaHphMcIk5XeUV6vRC
KicWF44ub/WA4f+LivkThOe18F+jrmylhP5hjZTWuDA3BU8DE7vHnBUH/cYu
NYJDy7taqP69jqJiDZyQ94HhO7eYH+QRcajMBic62/zWt0MU5YfZNJnH1zXr
P/FXAuac5ipBrW/jNNqybl5NkvlZsD8oAeFnchWwqo+aexZMda6VLStzug5W
h5y6asoHgjYpw7/XHGQHAOJLlXuZZ+lu9rzBKnzpZ5zOXFOGvkc4e6mlc07D
mWFKt/csuKVvmmNU5kdptjAUF1EEoZ92MOXEXzR3DMOMvWs/Dh8Txu00P7rb
vA4jXA9eI2wl0k76pr4tk/ltj1ANFYjCGE9QPpB55eGQII55mbKWPiDzMqGS
xe4/V//vrL9Yvb3hteb30WHt4Obu59qK8CnrxOvqDeGb5IAEWalvki+aX5Wb
V4c/Nd8YaZncGXsFMeVoUpnlYYrzVnNaGcatQhSRptwR+wVdvoHKgEhL5WGM
CQ5wjnm3dRy211vaAauxbAtOcyt/p61PLHNh2fFaTrmGKWYwlLaspCYS6zmK
AHECTOMBB9toJhmBNSLVYh+E/sEEb+MbkDyDrsvTIB6CySyx5neq78Nj3gyO
JmeyCtOOt3Zyhkp45rXPerU7cVV6pH4WKn5strQVc6Gig8GCYAZ3cTHwnmH2
awn9gUHh4VPVAkbRGxZwrpUd77aZX1/xljmp7jgefiLoVg6Zw+w3tbWdn3Dl
laltxilTErtv2DU+o6Tg49RTCT+R93vWyisUEHlsV469ZwNpVegTqltLljLF
NouAZIYYLLF3jFLdL/BLsL8IlpafUA9RESFj1ax07IShrjTHkqkD06vUGuz6
MrZzlppVxUsLWsEpTf8xa1OUznOHU0spp1An9gviHhodUM1kY3rqwmSxkCS8
ILwPwuzZ1tgIeYt5+/sd/FkPVCOdZl5QwC0U1LuNekwz7dGUNLYrKqC1Zh5H
NspdMkeT9k3b5PVcNfGN5ll52co282Yzb+LjB4LXetO814yAp/Cs8Daqd/86
kbWtuNNBDJsXNYU/FAzzjMsaTkeP8Ocw+3VCa31WnVay4RAbZ/ZHA+yXDPCg
lfeqL+PzMFURWmvFblbYehTcOIiB/I7ARlKl7XrzkoNoNhg3tm0Yczy3IBP4
m3BUV/JeveEw71u4gjB2OPxmtX35mox6o+xgvIe9d3AC4swdqvzNxkGDQkPn
Z//X/zq/qvr3wqgAKpKrGcW8KJHWkH2/KHWenmjebxKLhKi/K2LqcQoZi6Od
cDEFutES+LT6DlhKeyKvwIEgIkG8gzRLjkbD93zIZ8f4/MawNUE5YJ85ZiwH
cWJbwp4CZ6RgSKzkFSlb1Hlr5nB6KHjJ7iMtHU6TQlVwOJ3Vm7Neqt0T0ArG
KYJn9xrBU7WauVZe86f2LISMxRxW39QSIkeJr+cEZ1IAR6ysnaZN0xshHzV2
S4o17y6wKPF60f/o8mKwIeY1GOzeMKd19v+fY64EPjyvjrg1pmpq6ayVPBtl
FWdyaQKdYJiIVVQ+U707L5+Jrjqc78NOL7oqfo9dcI65p9G0xJaR5WGInpfv
V+TlhUtXXh7KP4//Fl01p89fwOSegLr7Kd77zfveqpb9AMc9wjxXD+OZGFWq
Gs+UsMEJ+zbO/MrMRznP4eYAKYxtFUW/y7xhh2r6St5/HJ4NCv0V59+vXMn2
iy8+v6xyLfOrkGblZZed31y5ms3VcWpa9bvl5uBPZfyEUl9nfkku3JE2mwXm
7aPUWnI0nwN1gVNoxj/FRgsVvE60zkuCpj5vxf2qYXobrbxcFUObRVHsMPcV
Aong0DvN0uk0JZSwLMtF2WxryDAvizPIO/7A84w1Z1xK8XC+GmrN6+Sl+2nS
VLWfYp2wy6p8jMdqB4JDfco8p431h33cE9zV3cGwxlrzO/5ghhk7LCa42lMK
PD/a7qJ8ld/D76Hi8N/fJ+vtk1qujTO/FGGIOTxDFW+s3QtCpwwqgmBZLT5y
n5U8x/Vcxv3WJbm8euaHwVq7IpfDGYl+eMAcfUA0ile9a6TyuKP+JVUT8Pxh
5hVgFfaf4jyUroeWw9KnmqfrsfXKel80v67oXv4b1rHYvI+sGOWYR26x5MWx
R9yAhtsX6jj15zh/yAKBxDm+d7PVGl4wSUjrNvWtUSpDVfBXOH945xyJNMIa
SfUiz83Bw5Fq+XNwwrPMWTYT+LH7KRJ8FI4EzkZYB9F6T5nTXOFQQ1mqclpH
Kie1FVcI/v3v55dUjmtL9fe3K6eF93xofinF/Or3IKjerD0m8ujnUVoktYtB
k1ITYtKoYjaHs3uBnxWBVefzz/m1xziVW4Jsbw2GJrSnwKr7zG8tzAGqSymm
DWklYnkaz4b2Yg8U2YO2r2Z40abbiqT1XkpzkT8NI91EgU8x180xXMtqR7rq
1hRCFbdh0IcxXGrSpLV34IFBS+ps7+f4DeOiprSEZHn/8M+cLCreeoc1Xih4
1MpbGM5CupFJVoeR5vl6rNx+fkwh6KdGJtliI5O4xiTrk64SxGat6pyqITJ3
QV0SInVggUiVxY+iHMSArfPjTlvJWj8n0nrf4kqXnLS+J6pIcJbYoIQE7oyy
696lXcfLk89xFFgp2PL95rW6seYXUiJvoFaoEboLXOzgVLBTAnIKV/ZxCgaW
AsuplyJlxJ+Z96j9Go/9JswWu4lgtUpTqP/cXs4Owhxifu3nLMRbmO3/DArz
nXmnUnh9bEDIGYjm+4T5/bMqeQjj0xU7p95PA7Oeag5yVk8QefD91kgUPEN3
tb1yRQsqd7W8cldvVTHXh5W7+t48HsoRgVB2KP74ynVdV703Iv5vNPHOhnCe
hPMx9dizaYPL+RzneGl4zwLbDqPBPo1NiXWwyEHtk1CjPI8XPSWFVlGH7rVS
s9YQeZ2LA6h+h6r/xekKUSzKk1S7VziCj8xL0Xj8bgoUf8dW9J513WIIi1HZ
ZAcAS82ae5R+qwlR7Pfh2Id4HLv6CPP2iVOpIzPNSaOzzBr6xGBqYmyttMZy
dVPCWZ+Ghk2ycQhXOHiR9Gerltu/oQ8FlhKxCGz5IXOiN0Y2zbyot8C4FSwO
zkow1TxQn8xHYWJLrWS+dsFjD/fKVZOpU9jPmF+oCHngID+Ecr2Tk4lNZgYl
ZO0m8yvsH8pm9BRVRzPKAS/av8mCrZ65MtiIin6LOPtXw2sTw1gXULg7Ob6T
FL5o6yr+sfbeEs6t7anCkNfe4aVgqirqYjuGed4Wh/8rLe4Hp4tqETypwPeA
OWMf0x5dmzZJBaqkhGkgWN6AYVabfXVaFJdnjXn8O4+PGGverV3N/VW9fbvy
Um9WXmp15XGWVR5qR+WtTlX/dtZA7wbmPpThXUoRSnRD9blb2ttzJv4tHAIZ
Oqzh9Sx6Ym7ncLCI8+OM67U7rA3c/vDwiBFhN1Mzy2HmsRCE9AHXs34qkFFt
STvipWFBMXuoPux3Jn9CSgpV4RwR7R6w8pIjnVkhTSwwnGeHFTd9Fvd9L+Lz
x8Y2jaLbFz6pdFdFBJbT7TFVEYgmWmkWzM9lbaF+X5BMlad7lp9ZZ37LaDOu
GrYnEk2T/othmjeTOUCFGym1H5SQqtdb2ahiEVfmDq6e+Gp588lczeNG0hlW
LEe1Kjqfy89O5+/rtW5x1rKSftCsHPcmNoz0WsRZaM08y/ntXVzWPCBd1vwg
FxwJDzgwKOqL1jWKRjXEzSaCxMCEzV8fp58UCGY2iX+Hzew1vx8WSinCz/dx
Wm21sn6O8z3Mx8JEbzLntWdoIZX2rcW75Q9MzJ/xHP8t5rcbKO0NI5qfzVMV
GEIF4XxjU45BqQvnNvOrKpZTTLA/HBtF5N5Reak1VTz0RuWlFlbeZnPlpY5V
Xkr8pp70VKouQpE/oDYg7Linirluq2Kwu6ufiTzQLTGAIOkTYvb06rKRJvQS
lnwuHRq66f5SIazjZjMwqHWeuBOF/iQX4lPzo7w2TMjoOb4PX/ehcOT/h7M3
ffayurZGZ+1N34MmOUlMjonp6r331Ft18+HWrbof8ifcP8FP5+Qk0ZjG2EUl
sU1so0ZaARsEBAUB6XGjSCc9grSyUVREQY3RiAp611hrjDXXep5no++bKrLd
ze95VjPnXHPNOceYY6XY2S+Fpkj6Yd1x1qlATDDMI+lvmDAbEV2wbZzNNqt5
ipYnEb306m7Y/bjCPJU0shMhLzdzmrMops3qlecxhBfiNMpDClu9mNN4wtqN
Dd+zgRsbNg+j4xSl39YcssoaXl5KcxiG6ljxO4gAlPXOQuqe4kqX/BNMH4Zn
bI3+mCS3TFtIervInTHMVt3N0MwrpU07yldeYwPTVTOTGBOJBbJdIFpYVjj1
Mj/KfuMgWGUO0NtiVQOL1L9ifM7zd+H0ZlqN3y8rGbRXn2d1HJq5K2CdcF7s
5wJdm43q8GhQL+cUWLGSyfKvsZIof0L0kX5LcVNZL85CWB4o4CLrxgrvstye
2ttTTsjtKfeY027KIXkiWJyHg7WYESzNQ+B/Df9WhP/eH35WFm58rujo2KoJ
O1buDorVreEj14aPw7MrHRfM4Kb098TKD+8Ma+7gLmB2B7MTMziH6zZy9k5P
OzZzw0MUcW48wNXC3zWL11UztCMJjSWqxlTDNddq6Ph6LlGfeQQez4SjrvJI
pVuP8p1Xxh38fZwfrim6Tiq1KzqioHKXAgDZBbsvLZB1csb2KawIO6RMswRB
+fMdwqKOzjK+xfz4gdl6lN+/bAO1NxxcyfX+PMMUZlQyGWqJ6+VVlrNvlOMx
alES5b6EZz7NVRUBxbZCdmM28eW4ufvMETSSW2zMavO6P2g1Dpu3OMwa5j44
c1G9w1dMzFMYUkHAi9qbZunNtabSm1S1+Rtz7xSWAofSMzZw64qDVrauGJfT
/QozNOt7F3FnhOB/25xF/pxjaj81hxcQO8WZfS+jhLH415jnWrpINaWuJYnG
VZwmlgDn6VSrwc/auO3mXe2KHEwsGUpB2/GtRMzWYHFWBp/m8WBl7gm+yq3B
ZDwcfJ7VwXzsszZpAa6nI4s5C3eFpZ8S3zM1iuyd4Rm3BL9JQde/mlcuRMQe
3JkfRzl/x+q4o4DzmJoKhhRyE15FrkkzdCYXBfo0mUvchJ7pIrmbgqZqUh3Q
c5PEhDHuipNVrYvYVvBuVn1XZGi742dwaRzVanQPqSyt7CHLMIGJD30V41P9
SsYHdm66eT5D+HHJO/Hjgp/KuywrW8T/tN68s+H71uxs+O85hY5XlrnlqzjJ
LyOJlX+AxYDa3sdNggwrj6xqlZetarZO2R3T6uyCKZalAApg4XMnrdXYWdf7
U8bg1H9GSVU6UXkmjBiHKEG0ia/6woqv+jZzYf49fwbfe555c1dIiwoAMNgj
aTJR8o7jsa+b8v/CuEsnsTc4O57lIyF0e6zVsLrSw39QuBaZqhOT7VEVlWaH
/UFoG+YSxzP8+LJ4WImS+/h3mOqN5r1w8Tsc73CooKASOeV+G/jD6GD0xnrD
BEJC5GdrsDeLg22YE2zN/PAV9mdV+DmeOc28ZFXmFg43vR7O+VsZv4+1IQ4/
x07x9a7w3PuDDYJdUgoQ47+e44LjKKDAe+ZUmEc4F8jlz+WVDI5ifq9VpDbh
dy/EE6S8Oa80D71M4pbKQ8GQ3+drILL0xnoLDsY+jqC8C2IlhKxWLENm5700
c0t9REbF1Zts3iboegrhu1xJUQ2F5106s5v7g2YnmZjO3Fv/fVzvZRyV6j8O
cu9fTbKYSlxG5YRZCRXfbt62fI9VzQ1HFJywWA9YG1WxwIpAgqGI97v08tSZ
0CqBhyMM6wPpx+9wNMDabTBHzGI9Gum+xBwzrpM5RtlOPAI290XOCn/7T27L
qbQY4p8oM/7qqCryu4PWznZjxHdYJ3N1DxzN4CUr2S98HrYEJvcGfuwRq+nj
d3LkzWT/29EynoqzFZ72dXOazN2UVWz1bO7bUQqTKqo2mreWD/+vlOrBPNvx
UfRPc7FmWRvf/yer291NM29p/Zgpog5J/0kcxqN8jmg24IHfwv3GZ+eZN/nY
Yl7bgZPhNata4WVY8YlggbYHi4GY9OJgmZ4LHtHOYJkEL36JS/kMx/4oZUj+
LizwJ054BI2HgcGhpqTfEqzI0riBWKEHwpseDX6W8nxi7sAqCf0Du/cvq8nt
IbX4DAF1ltgux0RbDxvPO0eV/9/O50JsYcSWckOfa0PX3kjDSZHvizsj35vM
my28Zk6yhjev4Vsh8dh3mEfmdeNCCOWFt0OE/8bvleqQexbWG4we0UbF8M/4
yjJV7LDJMn27fxLfUWZcBK4uoKktKPk75qxumMvL5l3YoOSiq1Md7zX5hE25
b8o85X1klAesGzQaNhgnD2RbtStij5kTnzMv2q4y2yfZhh27nc9fYs6n+rJ5
J4gimw8T2htpZkZXbdqxTf3WpqHnDS9u2R2moOyEVtpPsHj8DPEglSVBZWGG
p1obdrugncWfZ3VZjuzbHK4yDoQdVmfxBb/FdD5IEpL4b8fkprM6viGQOBwF
bFrLRb/HnNR4vnhwnWP/HB+D9YSSwvo2M/l4xCTu3aMcsXD/i/icJaaE50/i
z5rJTnhbd3GhxNwAPdplzk9e1i3AHr0arAMy+ciRrWCe7PXwMwVSlBaEfMNc
K3+gPMh8q+uyWI82oigcxetLJL+SSevMk0rLw1BwOUQDkCe5iZPT1HK9oiKk
ZSB8P5eTkQfGYxLg/i+muNKh6IaXsRmMaQvHsDiNq6dw4j/gn07Dj6fH64kc
H0gjFHQiN+x9c57FE5SPfRQ1ASPnWVWWFeVGSZ9nuMmP8tmCSfHs60cpJ6sw
q0qA2ovqqAT4xszJ5k0ToYhHrM4MY5YkgGiRt5ce61Fzyuen0sJSxr9fgnKj
m4WNKHmeIYuPmyPMl5hfrctr9WJzNplH08rnjsqb+f6uzDZTej2xnnNUJp2R
+J4qpoAl2MDXX2EF93FvSVzBPP7YOKIPuWrXmdeA3W3edhZaKsDuUstoo/DE
VfEMXsEZanZzzbtqLaAgvGgD5+2Fmf80juuzOEUBEcoaGyUtsQPwl+HJ/jKN
e2gjZ58AIr+Iw8P3V3NjVnI4WBkhqlWqoJws5HgAbo7wTJBzfD3LdrPcEAeS
/Eaxk8CY6KCJdE/BCuxjJWRZWnRy9OiEWR5/XsqAXRymoIOYCmTwIFeI/lMm
xoaqQca3mIMfiUd2/o/hGVW1ItimyWFEuoFBPB8wlbJ+Ec/ET7gpb1omZYjm
/RZzVuuiMont0F6Pw1Ghvm4xL1E4VicBKsFyxy2TvqdmamOqIjYdBjdzfcvy
dCzWEU74l6rCSmRqmy1zkVcZzLXc8sf40S+4/kFSZ26uzdOlXZe8gk925KVw
OFbwJQfNMZX/MBd3JrTD4FLW5XwJ7akD8cmmecGD/RV/fjVFGnO9K300c8ou
MQfB4lB4Pj5xfZQ5se9iI5abJ64ha8qHaSodSes4id7zdIvA5w7w3XCSuhit
M0JwXJ4S3GQYkiu503AhplnNaF1OiXD71G5mfGbKFehAKHusCpQcs/6SdDzZ
1Ua0kpeYlSppsGJXpCGXhPol/PHyON1fR89QCcyHubgIS6vqADKNUkeY3ac4
ZFUddHJ3XJBhWCWAeRk/Tgcjt0XAHe4lRo+AIFkSlL0vfN2bTFCV3DxjbVKB
m0yJg2EZK3gd5QSHENTvX2mlBhUL9y4XerE5KHKrORNwpAjZG6WnzI48HUb1
cBjdGkrkLCsz+N+J+yFThFlC8R40h+8qeoGbg/gC8Fyl8XVZ1+10D1fxFvOA
+UmKGAPlrFcbU3VtKN05rHqJA8e7XuWzfkO/LVhRpLz2F//2cdolbAkOAS+A
/W+6I1Tl98dWPlKVXUvmaGgcfXnHVk7prCmZPbiVzH7EPB//39bqt8yGy6Nz
5voP5nGDOeZZlT6rySG2xxXcGe3WDqu7LildjZWGP/WseS7sRC1bGQKrcatW
HMftjZ5/VylBkXtPlQa/iyNQ7l1Rsbs5A7y9TEiXIkt6i7CRu6OpasYF1pk3
qVlodRPsjoT7sELh/mXewQJnGnyKywpjqXw7axVjzW9CN47P6Ebc1cSAAL8G
rphKO8r8eglLriv9JnSydTzHDZUfvxih5qCeCD3PC0bk2eDP7A1GpWBFGF7s
kXgDXuXrb8XbbovuNXwH2Ha41MLXI3A315wAc785REhAjzLTKngujpgvwz7i
eXMAnkOCzpLbfszrF3VNx2MfSZMlXmBcZ8QMLs9ka8fCYVtwphykbExUHDyq
TtwbnlY9kYoiQddfoARhYEssQ+ToGX2tylLcx7eLDYWp6jgqZUSOmceVyiLt
8LT+D8hj9L9lVoZMhFRBGRATeccyQbIaIp7lmqwyRXm+H9UR1gKnBlzEEpGO
rzfyZ9dajUaHeMCuQy95lY0r1UxLH7Ccms5XYYiFqkSI3e2JhnxwdKb7zeOw
n5jnuXQ/PWmM46USARzrsIW4A15TzODPcZY3xfP4z+a4eu0JZgL1/AslB6eF
SgbEabGDIy0EmVnHsZn0dq/VXWdWmhd6qATrpDldwOfm2XWopVInLyaZYXZ9
dDYt2pkbuCtY+dLBl6LeYEIxjm3x48M1F5XDauvm7ND8eiJfwIRWy5uSuGN5
uJQ8FpT1jqC09wVTMy+Ymk3hZ8eslVUfUTAjlNQBUNzIjPCglZzbys3JN7iO
P5vMHVpU7JBSwsJmlljkN+JKxiO6swwI5gZXK2j0HCuuOv8WR9lv3i/haS6c
oLmwt7BQEH34hbrzQOPK0Pb75h0cdlkmNkh1c+Pj/txs7bYLJaoddkdpedjq
L8yRw3tNmNCx1erdylV72uoYsIh8VEwVpjYR3mpXIp62pqBTy6ZoTPz/wX2b
uOB4PIyKl8OMjHuNRVc6RGC2P5mnoe8xsS+iSul7mXD9DqtJYRGLncWVh5GB
Se4CoDP/nIvWlXw+YjUx7PPcTRwmR83tpOPqR+eMwWZrA85v4Lb9xRxQf1+c
x/3R1NzHn93Fv1GaTijshylVEGIVB+zh1ihlx0RjEGDc0cdk4S3B9Bg/zA1c
s5UUo9JyfqqUzaCMf8Rjn/QUugqTruKsbuGIWSAgWvzsut9vbVp8zOxK8x4j
Kt9ZbY5CLUsfijRqiy7gYDAsm4K/8gzQpj/96RczkUYPRmZeUFM8t4t/JcXf
kjH9mLv5omVUId2Er0drA9cBvlczuTYx7WD8Ha4NqjgpwdNN+D/ec9rIBTq8
Kvc5zmnuDNOZHKaxKAz/snziJtKR14uNw1KtVSRrWHS3V3MUusjQVqbcQ3JO
FZKGOX2NA64L474fszR/tdrtKmtMIELPURxV9HPWPM6j+gNlJhVDvIcCg1lA
dZqGDs4UL9nA5NNjqbLxbQNzRW1ghqCJRxR2rSlRej0pXbxYt9n/Ga0Npnm5
OX+RQNXYZ1wfBCp/xAbkgc1E7POsDb5sJlgJJs/XVm1+CSbfa05z9wwnc5JL
dtIEOaxnMzpT1d3CRYR2wW2BTYTmlVB5ppLDAx6JtkdMNQ+Z88TjCngjZwm3
BBfk9dx8jPCQOT5cqcRT8ZmAyY/LsyvxhUf42a2cHYRjC3+uAqW3qu26s5rl
/5OpPfAp2B8VQ8gWYbZ3mXMAihiAxPhZnzXj6eYFIth7nDb38jNPWrsDgEo6
BtrTN4Ly4u6EZPnCYIdA6/F8sEXbRo/OJL94JmRNAOmG9aX5/W5O7RzmmDGe
89F9zOa4ofE3mzunS8wpWPC+MrnWTCd+CNH6KNqm5g3odW7UC+CSDdP67yiG
vzDFFbCcRUiLbPVDczyrj1PHsBnH4k3ta9mfPc4tKas/IdA3mufaF3DYELoy
3/4ytwnvWGrOL9FnOY9jqef3qPg9xlEyC8B3UlRQvjVU+QoV+Udk3czLkgXq
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
waS4C3CayxTUE1azLaeaiRVxV5eZ08ri7x7j556hLJZptXfMiaMrDOrIzoYw
pYDA14BtvD6abgz7kqiaB7hSt3LoZYr/IXOC9yetgoTnHVnMny+glCjPL+BN
n9Uk0bClSnYrv/+RMQXR0XxacxAQ6GlKGCRtjhDBDu0X/whcLqgerJDsLaYo
e1tWL8yzzOTQE4/uH1eEDqpeUC4GMjzLnLJ+izllvSqpZHuxE2WnjQXstLEj
eEuvBOMzEL4fh96frVZjVdmqGZvKFzZYK7cZ5oELx8VRj5W3XWI1HPg+zgs/
X8dd2svV1umoXcK7oedlTl9ZP3kJyueL0jnG9i+PRvHXXPUD5q1wztRtLGH4
1lidBNloSoIMz0kQyMCMYJVmg8DWkvZPT5+rUv7/5KuW4sf3xFGUJbmCtSxS
pduoiq/tFa4FRgFl/k/++RzLXEkJpzmks4XS3+sLIKQgVS78Jb7pNqtZ1P5m
3uL6DfPQWJCsifO7W4nUxgg/xq9LY/Szn5sDAGZwYIusRScb2Z56Im/yuAzP
XGfedfVpygt8jW3WjZ/9NMmmaGWVRm0yvGxOclBCZ5ldCh/9VfS9kGn6OUcL
ewQtUOhEphQjgnlcaZnboRdDDnbgWXMg+DOcMPR7GncHE4SyHjbHl75HAf7Y
vlKzasm4MvoL0iyqRvF1+cX4jHlfwSFB/GCWcE524d2fMucDXGGC7KQs/irz
pqI6OPAZYd1h5ZdxqvDjoHSwS8rkq5XGOmbykdE/Gr7/x5Ah5+UmL2H+l1F6
y+v4J+ZZ/HNcJ2x4mdrMRbye84OKrTcnQRUiGPZCOFnVYBy07hbjnyXxU962
meFUlnxh9kaG5d591/PVhVnCIaL+wYLJPpcGnklwCdJL6b5hmecXNnR6WNOl
wbZj4E+kvUqG6evZZGNL4K5ALWeaF2FAyHHwQuDh8yLw9ro5P8b75vwYkGCo
41UKVo2PunOXVXmNqkmSkkzLKCUQ/C/MKddSpm9atFFTzSuj/8KhvGT12Xws
ScXEh7vrAmob1UEzO3LiHzhZLMB88xbKXfDOlKEZMhCncqoJHRInjyPsBNeL
V/VhReBQhfPwSWZZG5uqagReuxNA+HvxNnMF/2Si+Y2kTDGtsZrlWswG26xm
ONhgjgx/hs9RwH2ftfPBNLDn7Wt9mM//U3f+XrRaCfM+LmPe4cvIZ/8LBRBC
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
hVY7xU249TfDWv2RTgyLkpmRV5zJtEe5SbjeFvLpuA0wwhnCmAST36L8zVkO
/Nog/ww9Dor1EfQ8bfsxrANhnveLtfrdLmZ2Ys2ekzwr5DJZVGwPzSZi5imV
1IeYgouxR1z1iM4hMeQkjFqjSzVC+q2a76PBdqHSHRAr7Wec9Hn9HtHkJb7Z
e2GQAy2J6Aypt4kZ6vNeMXwzdHCRjExprqjPrIaYpROv6COxfvgpyTmbm/CT
GOZmva9WJ0bI56QE+Vwopm936XAX6JNtlGYmZFek2BGi/eMT1Yk/tvboaImf
HCHqeFG/tkrMXI0Qv8lBAFuS9+xWaqRwSjO2vU3MZWR8tMBhawFxd03f9osm
F/80DOc2qWPgOFRmI5zJqlDPL9Ua0TAppHtueLxNuo6MKHGYI1UP+1OTcTeY
qn9abRE/rNwPuDPf11mGt3tIjGbn3bgq7QMJzpklR9V++Myw9sMo9OTqq56s
v1K6VnVSdrQQBxoDVGdYDxZKeZ4K6h2W+6gQzTmu1i3EA65XiAl03Wi7PiuF
wHfmSE689pT+9rjOmWIVHk+K8XuXJwh0GZJ9kpU8EddZQq73iXX+WFTIyAUx
gNaH+gh79XMMQCqgLPxeLlYhjKFBlAkmKwPpPsvG2v0zNDfGJUjnW5IDVzBU
nLNf1yEclbRVZJkUrAL0HabAOnEdOw3SuVqMpxgHHY7kxVKv2ifGhjQaWoHY
4SCd5yXvEHJQb4EwPyKOt+glWX590YKOH+uc4q7OWu10aM6SV+JhndJVUu/j
d0qsgtmhyDoKENkFMc07HAVKg43dWRE8cxMXczDnQalXBO8Jl9gbDgwWINJj
pC4gHDZfjFcWUzwkjV6j3m9sop2BJGADgsE3o7s7IDqB7LxHjOR0Pp+0k5GT
PqR5rjFzoa9wMj5rb6WEaIRsTkm47kF9it1ilg+1qwmuSRWDzNKd2yoGTiIr
iQdc8Wg7IKZemlRTaqbPBTVjYB+LM0dnA59fJ3lTvYZsWlhIgsLOikGm/eEG
ecIO9FNdmXck3waI01wltVZ6jUTgTE0/3LDyVC7m0rTqHvPS4XCarGPwgBRs
yE/qov9A/31CUlCGwUXWyxKQwgCj5cYm1rpl4qzGJjZTZxvfo4YxpO+Dixan
6EmUGOd0Zo/o098lxIZ1BYsEOxhhpZfEdIspVQYXyeS0L0gBwvoTEkqTVuk6
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
4ld/YoO5qfrITcUddsdPySf+P0fUJx8=\
\>", "ImageResolution" -> \
72.],ExpressionUUID->"7621fc60-d002-452b-a460-8250abf30b75"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Graphics", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Circle", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"t", " ", "x"}], ",", "0"}], "}"}], ",", "x"}], "]"}], ",", 
      
      RowBox[{"{", 
       RowBox[{"x", ",", "1", ",", "10"}], "}"}]}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", 
     RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.947504307618311*^9, 3.9475043141383543`*^9}, {
   3.947504613298977*^9, 3.947504626095045*^9}, {3.947504672170405*^9, 
   3.947504775661503*^9}, {3.947504846730258*^9, 3.94750485299588*^9}, {
   3.947504887296858*^9, 3.947504932460269*^9}, 3.9475049640033073`*^9},
 CellLabel->
  "In[873]:=",ExpressionUUID->"7ac2acf3-e4fb-4c94-9309-e4fa1a0767e1"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`t$$ = -2., Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`t$$], -2, 2, ControlType -> Manipulator}}, 
    Typeset`size$$ = {360., {123.36821251346984`, 129.1001461072198}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = True, 
    Typeset`keyframeActionsQ$$ = False, Typeset`keyframeList$$ = {}}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`t$$ = -2}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$, Typeset`keyframeActionsQ$$, 
        Typeset`keyframeList$$}, "Body" :> Graphics[
        Table[
         Circle[{$CellContext`t$$ $CellContext`x, 
           0}, $CellContext`x], {$CellContext`x, 1, 10}]], 
      "Specifications" :> {{$CellContext`t$$, -2, 2}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{403.1, {166.53863792850888`, 172.27057152225888`}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.947504314609624*^9, {3.9475043485642767`*^9, 3.9475043514853477`*^9}, {
   3.947504627730001*^9, 3.947504647295416*^9}, 3.947504776868631*^9, {
   3.947504849953734*^9, 3.947504853395611*^9}, {3.947504911951797*^9, 
   3.947504933131878*^9}, 3.9475049659763527`*^9},
 CellLabel->
  "Out[873]=",ExpressionUUID->"9c114281-2805-43e5-b1aa-38f5d2718fdd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"RegularPolygon", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "y"}], "}"}], ",", "0.5", ",", "6"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "1", ",", "5"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", "1", ",", "5"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.947504992015346*^9, 3.947505126127001*^9}, {
  3.9475051618539677`*^9, 3.947505193120819*^9}},
 CellLabel->
  "In[882]:=",ExpressionUUID->"41b555c8-fe18-4e4e-8b1e-97bbaddb8056"],

Cell[BoxData[
 GraphicsBox[{{
    InterpretationBox[
     PolygonBox[{{1.25, 0.5669872981077807}, {1.5, 1.}, {1.25, 
      1.4330127018922192`}, {0.75, 1.4330127018922192`}, {0.5, 1.}, {
      0.7499999999999998, 0.5669872981077808}}],
     RegularPolygon[{1, 1}, 0.5, 6]], 
    InterpretationBox[
     PolygonBox[{{1.25, 1.5669872981077808`}, {1.5, 2.}, {1.25, 
      2.433012701892219}, {0.75, 2.433012701892219}, {0.5, 2.}, {
      0.7499999999999998, 1.5669872981077808`}}],
     RegularPolygon[{1, 2}, 0.5, 6]], 
    InterpretationBox[
     PolygonBox[{{1.25, 2.566987298107781}, {1.5, 3.}, {1.25, 
      3.433012701892219}, {0.75, 3.433012701892219}, {0.5, 3.}, {
      0.7499999999999998, 2.566987298107781}}],
     RegularPolygon[{1, 3}, 0.5, 6]], 
    InterpretationBox[
     PolygonBox[{{1.25, 3.566987298107781}, {1.5, 4.}, {1.25, 
      4.43301270189222}, {0.75, 4.43301270189222}, {0.5, 4.}, {
      0.7499999999999998, 3.566987298107781}}],
     RegularPolygon[{1, 4}, 0.5, 6]], 
    InterpretationBox[
     PolygonBox[{{1.25, 4.56698729810778}, {1.5, 5.}, {1.25, 
      5.43301270189222}, {0.75, 5.43301270189222}, {0.5, 5.}, {
      0.7499999999999998, 4.566987298107781}}],
     RegularPolygon[{1, 5}, 0.5, 6]]}, {
    InterpretationBox[
     PolygonBox[{{2.25, 0.5669872981077807}, {2.5, 1.}, {2.25, 
      1.4330127018922192`}, {1.75, 1.4330127018922192`}, {1.5, 1.}, {
      1.7499999999999998`, 0.5669872981077808}}],
     RegularPolygon[{2, 1}, 0.5, 6]], 
    InterpretationBox[
     PolygonBox[{{2.25, 1.5669872981077808`}, {2.5, 2.}, {2.25, 
      2.433012701892219}, {1.75, 2.433012701892219}, {1.5, 2.}, {
      1.7499999999999998`, 1.5669872981077808`}}],
     RegularPolygon[{2, 2}, 0.5, 6]], 
    InterpretationBox[
     PolygonBox[{{2.25, 2.566987298107781}, {2.5, 3.}, {2.25, 
      3.433012701892219}, {1.75, 3.433012701892219}, {1.5, 3.}, {
      1.7499999999999998`, 2.566987298107781}}],
     RegularPolygon[{2, 3}, 0.5, 6]], 
    InterpretationBox[
     PolygonBox[{{2.25, 3.566987298107781}, {2.5, 4.}, {2.25, 
      4.43301270189222}, {1.75, 4.43301270189222}, {1.5, 4.}, {
      1.7499999999999998`, 3.566987298107781}}],
     RegularPolygon[{2, 4}, 0.5, 6]], 
    InterpretationBox[
     PolygonBox[{{2.25, 4.56698729810778}, {2.5, 5.}, {2.25, 
      5.43301270189222}, {1.75, 5.43301270189222}, {1.5, 5.}, {
      1.7499999999999998`, 4.566987298107781}}],
     RegularPolygon[{2, 5}, 0.5, 6]]}, {
    InterpretationBox[
     PolygonBox[{{3.25, 0.5669872981077807}, {3.5, 1.}, {3.25, 
      1.4330127018922192`}, {2.75, 1.4330127018922192`}, {2.5, 1.}, {2.75, 
      0.5669872981077808}}],
     RegularPolygon[{3, 1}, 0.5, 6]], 
    InterpretationBox[
     PolygonBox[{{3.25, 1.5669872981077808`}, {3.5, 2.}, {3.25, 
      2.433012701892219}, {2.75, 2.433012701892219}, {2.5, 2.}, {2.75, 
      1.5669872981077808`}}],
     RegularPolygon[{3, 2}, 0.5, 6]], 
    InterpretationBox[
     PolygonBox[{{3.25, 2.566987298107781}, {3.5, 3.}, {3.25, 
      3.433012701892219}, {2.75, 3.433012701892219}, {2.5, 3.}, {2.75, 
      2.566987298107781}}],
     RegularPolygon[{3, 3}, 0.5, 6]], 
    InterpretationBox[
     PolygonBox[{{3.25, 3.566987298107781}, {3.5, 4.}, {3.25, 
      4.43301270189222}, {2.75, 4.43301270189222}, {2.5, 4.}, {2.75, 
      3.566987298107781}}],
     RegularPolygon[{3, 4}, 0.5, 6]], 
    InterpretationBox[
     PolygonBox[{{3.25, 4.56698729810778}, {3.5, 5.}, {3.25, 
      5.43301270189222}, {2.75, 5.43301270189222}, {2.5, 5.}, {2.75, 
      4.566987298107781}}],
     RegularPolygon[{3, 5}, 0.5, 6]]}, {
    InterpretationBox[
     PolygonBox[{{4.25, 0.5669872981077807}, {4.5, 1.}, {4.25, 
      1.4330127018922192`}, {3.75, 1.4330127018922192`}, {3.5, 1.}, {3.75, 
      0.5669872981077808}}],
     RegularPolygon[{4, 1}, 0.5, 6]], 
    InterpretationBox[
     PolygonBox[{{4.25, 1.5669872981077808`}, {4.5, 2.}, {4.25, 
      2.433012701892219}, {3.75, 2.433012701892219}, {3.5, 2.}, {3.75, 
      1.5669872981077808`}}],
     RegularPolygon[{4, 2}, 0.5, 6]], 
    InterpretationBox[
     PolygonBox[{{4.25, 2.566987298107781}, {4.5, 3.}, {4.25, 
      3.433012701892219}, {3.75, 3.433012701892219}, {3.5, 3.}, {3.75, 
      2.566987298107781}}],
     RegularPolygon[{4, 3}, 0.5, 6]], 
    InterpretationBox[
     PolygonBox[{{4.25, 3.566987298107781}, {4.5, 4.}, {4.25, 
      4.43301270189222}, {3.75, 4.43301270189222}, {3.5, 4.}, {3.75, 
      3.566987298107781}}],
     RegularPolygon[{4, 4}, 0.5, 6]], 
    InterpretationBox[
     PolygonBox[{{4.25, 4.56698729810778}, {4.5, 5.}, {4.25, 
      5.43301270189222}, {3.75, 5.43301270189222}, {3.5, 5.}, {3.75, 
      4.566987298107781}}],
     RegularPolygon[{4, 5}, 0.5, 6]]}, {
    InterpretationBox[
     PolygonBox[{{5.25, 0.5669872981077807}, {5.5, 1.}, {5.25, 
      1.4330127018922192`}, {4.75, 1.4330127018922192`}, {4.5, 1.}, {4.75, 
      0.5669872981077808}}],
     RegularPolygon[{5, 1}, 0.5, 6]], 
    InterpretationBox[
     PolygonBox[{{5.25, 1.5669872981077808`}, {5.5, 2.}, {5.25, 
      2.433012701892219}, {4.75, 2.433012701892219}, {4.5, 2.}, {4.75, 
      1.5669872981077808`}}],
     RegularPolygon[{5, 2}, 0.5, 6]], 
    InterpretationBox[
     PolygonBox[{{5.25, 2.566987298107781}, {5.5, 3.}, {5.25, 
      3.433012701892219}, {4.75, 3.433012701892219}, {4.5, 3.}, {4.75, 
      2.566987298107781}}],
     RegularPolygon[{5, 3}, 0.5, 6]], 
    InterpretationBox[
     PolygonBox[{{5.25, 3.566987298107781}, {5.5, 4.}, {5.25, 
      4.43301270189222}, {4.75, 4.43301270189222}, {4.5, 4.}, {4.75, 
      3.566987298107781}}],
     RegularPolygon[{5, 4}, 0.5, 6]], 
    InterpretationBox[
     PolygonBox[{{5.25, 4.56698729810778}, {5.5, 5.}, {5.25, 
      5.43301270189222}, {4.75, 5.43301270189222}, {4.5, 5.}, {4.75, 
      4.566987298107781}}],
     RegularPolygon[{5, 5}, 0.5, 6]]}}]], "Output",
 CellChangeTimes->{{3.947505087365509*^9, 3.9475051265246897`*^9}, {
  3.947505164670794*^9, 3.947505193575816*^9}},
 CellLabel->
  "Out[882]=",ExpressionUUID->"0690e756-1617-4328-bc24-409c655d68ee"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics3D", "[", 
  RowBox[{"Line", "[", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"RandomInteger", "[", 
      RowBox[{"50", ",", "3"}], "]"}], ",", "50"}], "]"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.947505225397324*^9, 3.9475053045553207`*^9}, {
  3.947505367138781*^9, 3.947505367288248*^9}, {3.947505412607418*^9, 
  3.947505432585656*^9}},
 CellLabel->
  "In[892]:=",ExpressionUUID->"f0e3b51e-8bf9-462d-8ba5-987992be8e0e"],

Cell[BoxData[
 Graphics3DBox[
  Line3DBox[{{35, 26, 37}, {36, 38, 14}, {19, 24, 18}, {45, 5, 23}, {24, 1, 
   49}, {33, 26, 25}, {3, 23, 42}, {9, 2, 32}, {35, 14, 10}, {42, 49, 8}, {34,
    23, 28}, {40, 20, 13}, {13, 25, 10}, {38, 15, 38}, {48, 33, 31}, {26, 4, 
   33}, {47, 19, 44}, {42, 14, 11}, {50, 41, 34}, {2, 41, 6}, {17, 34, 8}, {
   14, 15, 17}, {11, 28, 45}, {30, 44, 11}, {29, 21, 24}, {34, 5, 25}, {15, 
   35, 5}, {3, 21, 7}, {3, 38, 27}, {32, 8, 22}, {39, 4, 47}, {17, 37, 33}, {
   39, 20, 7}, {13, 28, 32}, {7, 14, 10}, {25, 2, 44}, {45, 3, 0}, {12, 14, 
   25}, {8, 29, 35}, {17, 14, 48}, {10, 3, 48}, {8, 4, 18}, {3, 27, 34}, {31, 
   5, 2}, {32, 7, 42}, {47, 29, 49}, {34, 48, 7}, {25, 50, 24}, {7, 46, 38}, {
   45, 4, 29}}]]], "Output",
 CellChangeTimes->{
  3.947505367771224*^9, {3.9475054189517736`*^9, 3.947505433384951*^9}},
 CellLabel->
  "Out[892]=",ExpressionUUID->"d170b6bd-bc4f-4d23-92b7-de5691a9b12d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Graphics3D", "[", 
    RowBox[{"Style", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Icosahedron", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "s"}], "]"}], ",", 
        RowBox[{"Dodecahedron", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}], ",", "1"}], "]"}]}], "}"}], ",", 
      RowBox[{"Opacity", "[", "0.5", "]"}]}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"s", ",", "1", ",", "2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9475054859167233`*^9, 3.947505632704322*^9}},
 CellLabel->
  "In[894]:=",ExpressionUUID->"3a2abd4b-87ff-4077-b495-71496c3c0e97"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`s$$ = 1.536, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`s$$], 1, 2, ControlType -> Manipulator}}, 
    Typeset`size$$ = {360., {177.134033203125, 182.865966796875}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = True, 
    Typeset`keyframeActionsQ$$ = False, Typeset`keyframeList$$ = {}}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`s$$ = 1}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$, Typeset`keyframeActionsQ$$, 
        Typeset`keyframeList$$}, "Body" :> Graphics3D[
        Style[{
          Icosahedron[{0, 0, 0}, $CellContext`s$$], 
          Dodecahedron[{0, 0}, 1]}, 
         Opacity[0.5]]], "Specifications" :> {{$CellContext`s$$, 1, 2}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{403.1, {220.30445861816406`, 226.03639221191406`}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.947505621441008*^9, 3.9475056332157307`*^9}},
 CellLabel->
  "Out[894]=",ExpressionUUID->"f3c174a8-886f-40f1-acab-e5e5e4153513"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Chapter 17", "Subtitle",
 CellChangeTimes->{{3.947676276899531*^9, 3.9476762804635572`*^9}, {
  3.947793666254076*^9, 
  3.947793666726657*^9}},ExpressionUUID->"4fefffd0-ae79-4f22-b3f8-\
819126f33a03"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"UnitConvert", "[", 
  RowBox[{
   TemplateBox[<|
    "query" -> "4.5 lbs", "boxes" -> 
     TemplateBox[{"4.5", "\"lb\"", "pounds", "\"Pounds\""}, "Quantity", 
       SyntaxForm -> Mod], 
     "allassumptions" -> {{
       "type" -> "Unit", "word" -> "lbs", "template" -> 
        "Assuming pounds\[Hyphen]mass for \"lbs\"${separator}Use ${desc} or \
${pulldown} instead", "count" -> "4", "pulldown" -> "true", "pulldownlabel" -> 
        "more >>", "pulldownlength" -> "2", "default" -> 
        "\"UnitClash\" -> {\"lbs\", {\"Pounds\", \"dflt\"}}", 
        "Values" -> {{
          "name" -> "Pounds", "desc" -> "pounds\[Hyphen]mass", "input" -> 
           "\"UnitClash\" -> {\"lbs\", {\"Pounds\"}}"}, {
          "name" -> "TroyPounds", "desc" -> "troy pounds", "input" -> 
           "\"UnitClash\" -> {\"lbs\", {\"TroyPounds\"}}"}, {
          "name" -> "ApothecariesPounds", "desc" -> "apothecaries' pounds", 
           "input" -> 
           "\"UnitClash\" -> {\"lbs\", {\"ApothecariesPounds\"}}"}, {
          "name" -> "PoundsForce", "desc" -> "pounds\[Hyphen]force", "input" -> 
           "\"UnitClash\" -> {\"lbs\", {\"PoundsForce\"}}"}}}}, 
     "assumptions" -> {}, "open" -> {1, 2}, 
     "querystate" -> {
      "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
       0.544221`6.18732028949935, "Messages" -> {}}, "contextinfo" -> 
     Automatic, "version" -> 5|>,
    "LinguisticAssistantTemplate"], ",", "\"\<Kilograms\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.94779370469907*^9, 3.9477937669284477`*^9}},
 CellLabel->"In[85]:=",ExpressionUUID->"b20ab2cb-69d3-4072-8ed4-dbbad364f219"],

Cell[BoxData[
 TemplateBox[{"2.0411656650000003`", "\"kg\"", "kilograms", "\"Kilograms\""},
  "Quantity"]], "Output",
 CellChangeTimes->{3.947793767430654*^9},
 CellLabel->"Out[85]=",ExpressionUUID->"97b6581b-42d5-47f6-b371-db34eff8b509"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"UnitConvert", "[", 
  RowBox[{
   TemplateBox[<|"query" -> "60.25 mph", "boxes" -> TemplateBox[{"60.25", 
        RowBox[{
         "\"mi\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
          "\"h\""}], "miles per hour", 
        FractionBox["\"Miles\"", "\"Hours\""]}, "Quantity", SyntaxForm -> 
       Mod], "allassumptions" -> {{
       "type" -> "Unit", "word" -> "mph", "template" -> 
        "Assuming miles per hour for \"mph\"${separator}Use ${desc} instead", 
        "count" -> "2", "pulldown" -> "false", "default" -> 
        "\"UnitClash\" -> {\"mph\", {\"MilesPerHour\", \"dflt\"}}", 
        "Values" -> {{
          "name" -> "MilesPerHour", "desc" -> "miles per hour", "input" -> 
           "\"UnitClash\" -> {\"mph\", {\"MilesPerHour\"}}"}, {
          "name" -> "Milliphots", "desc" -> "milliphots", "input" -> 
           "\"UnitClash\" -> {\"mph\", {\"Milliphots\"}}"}}}}, 
     "assumptions" -> {}, "open" -> {1, 2}, 
     "querystate" -> {
      "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
       0.641038`6.2584287682584065, "Messages" -> {}}, "contextinfo" -> 
     Automatic, "version" -> 5|>,
    "LinguisticAssistantTemplate"], ",", " ", "\"\<Kilometers/hour\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.9477937759440393`*^9, 3.9477938251075277`*^9}},
 CellLabel->"In[87]:=",ExpressionUUID->"4f514274-43b6-4cb4-828f-8db78cc85dd7"],

Cell[BoxData[
 TemplateBox[{"96.96297600000001`", 
   RowBox[{
    "\"km\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", "\"h\""}], 
   "kilometers per hour", 
   FractionBox["\"Kilometers\"", "\"Hours\""]},
  "Quantity"]], "Output",
 CellChangeTimes->{{3.9477938188176394`*^9, 3.947793826292221*^9}},
 CellLabel->"Out[87]=",ExpressionUUID->"6972eb5d-d597-42f3-b153-9fe562b08a4b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"UnitConvert", "[", 
  RowBox[{
   RowBox[{
    TemplateBox[<|
     "query" -> "Entity[\"Building\", \"EiffelTower::5h9w8\"]", "boxes" -> 
      TemplateBox[{"\"Eiffel Tower\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"Building\"", ",", "\"EiffelTower::5h9w8\""}], "]"}], 
         "\"Entity[\\\"Building\\\", \\\"EiffelTower::5h9w8\\\"]\"", 
         "\"building\""}, "Entity"], "allassumptions" -> {}, 
      "assumptions" -> {}, "open" -> {1, 2}, 
      "querystate" -> {
       "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
        1.027688`6.463406278928818, "Messages" -> {}}, "contextinfo" -> 
      Automatic, "version" -> 5|>,
     "LinguisticAssistantTemplate"], "[", "\"\<Height\>\"", "]"}], ",", 
   "\"\<Miles\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.9477938453794203`*^9, 3.9477939167344913`*^9}, {
  3.947794489121681*^9, 3.947794489191368*^9}},
 CellLabel->"In[97]:=",ExpressionUUID->"81aa52cd-0ff8-41ee-8a19-533e985642b7"],

Cell[BoxData[
 TemplateBox[{"0.20505249343832022`", "\"mi\"", "miles", "\"Miles\""},
  "Quantity"]], "Output",
 CellChangeTimes->{
  3.947793853136551*^9, {3.947793889773114*^9, 3.947793917446197*^9}, 
   3.9477944923500338`*^9},
 CellLabel->"Out[97]=",ExpressionUUID->"79ab99df-e241-4b53-b073-5df16f5b1792"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   TemplateBox[<|
    "query" -> "Mount Everest", "boxes" -> TemplateBox[{"\"Mount Everest\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"Mountain\"", ",", "\"MountEverest\""}], "]"}], 
        "\"Entity[\\\"Mountain\\\", \\\"MountEverest\\\"]\"", "\"mountain\""},
        "Entity"], "allassumptions" -> {}, "assumptions" -> {}, 
     "open" -> {1, 2}, 
     "querystate" -> {
      "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
       0.746316`6.324467745899194, "Messages" -> {}}, "contextinfo" -> 
     Automatic, "version" -> 5|>,
    "LinguisticAssistantTemplate"], "[", "\"\<Elevation\>\"", "]"}], "/", 
  RowBox[{
   TemplateBox[<|
    "query" -> "Eiffel Tower", "boxes" -> TemplateBox[{"\"Eiffel Tower\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"Building\"", ",", "\"EiffelTower::5h9w8\""}], "]"}], 
        "\"Entity[\\\"Building\\\", \\\"EiffelTower::5h9w8\\\"]\"", 
        "\"building\""}, "Entity"], 
     "allassumptions" -> {{
       "type" -> "Clash", "word" -> "Eiffel Tower", "template" -> 
        "Assuming \"Eiffel Tower\" is a structure${separator}Use as ${desc} \
instead", "count" -> "2", "pulldown" -> "false", "default" -> 
        "{\"C\", \"Eiffel Tower\"} -> {\"Building\", \"dflt\"}", 
        "Values" -> {{
          "name" -> "Building", "desc" -> "a structure", "input" -> 
           "{\"C\", \"Eiffel Tower\"} -> {\"Building\"}"}, {
          "name" -> "Word", "desc" -> "a word", "input" -> 
           "{\"C\", \"Eiffel Tower\"} -> {\"Word\"}"}}}, {
       "type" -> "SubCategory", "word" -> "Eiffel Tower", "template" -> 
        "Assuming Eiffel Tower${separator}Use ${desc} instead", "count" -> 
        "2", "pulldown" -> "false", "default" -> 
        "{\"DPClash\", \"BuildingE\", \"Eiffel Tower\"} -> \
{\"EiffelTower::5h9w8\", \"dflt\"}", 
        "Values" -> {{
          "name" -> "EiffelTower::5h9w8", "desc" -> "Eiffel Tower", "input" -> 
           "{\"DPClash\", \"BuildingE\", \"Eiffel Tower\"} -> \
{\"EiffelTower::5h9w8\"}"}, {
          "name" -> "EiffelBuilding::q6v42", "desc" -> "Eiffel Building", 
           "input" -> 
           "{\"DPClash\", \"BuildingE\", \"Eiffel Tower\"} -> \
{\"EiffelBuilding::q6v42\"}"}}}}, "assumptions" -> {}, "open" -> {1, 2}, 
     "querystate" -> {
      "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
       0.74668`6.324679512299837, "Messages" -> {}}, "contextinfo" -> 
     Automatic, "version" -> 5|>,
    "LinguisticAssistantTemplate"], "[", "\"\<Height\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.948238459342792*^9, 3.948238521234864*^9}},
 CellLabel->
  "In[319]:=",ExpressionUUID->"f1681d20-3626-4d33-b1d5-009bc3ed77cb"],

Cell[BoxData["26.81472727272727`"], "Output",
 CellChangeTimes->{3.94823847446769*^9, 3.948238522304154*^9},
 CellLabel->
  "Out[319]=",ExpressionUUID->"45654082-9ef0-44c5-ac46-ff7118eeabf2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   TemplateBox[<|"query" -> "Earth", "boxes" -> TemplateBox[{"\"Earth\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"Planet\"", ",", "\"Earth\""}], "]"}], 
        "\"Entity[\\\"Planet\\\", \\\"Earth\\\"]\"", "\"planet\""}, "Entity"],
      "allassumptions" -> {{
       "type" -> "Clash", "word" -> "Earth", "template" -> 
        "Assuming \"Earth\" is a planet${separator}Use as ${desc} or ${desc} \
instead", "count" -> "3", "pulldown" -> "false", "default" -> 
        "{\"C\", \"Earth\"} -> {\"Planet\", \"dflt\"}", 
        "Values" -> {{
          "name" -> "Planet", "desc" -> "a planet", "input" -> 
           "{\"C\", \"Earth\"} -> {{\"Planet\", \"a planet\"}}"}, {
          "name" -> "CommonMaterial", "desc" -> "a general material", "input" -> 
           "{\"C\", \"Earth\"} -> {\"CommonMaterial\"}"}, {
          "name" -> "Word", "desc" -> "a word", "input" -> 
           "{\"C\", \"Earth\"} -> {\"Word\"}"}}}}, "assumptions" -> {}, 
     "open" -> {1, 2}, 
     "querystate" -> {
      "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
       0.585663`6.219192781287968, "Messages" -> {}}, "contextinfo" -> 
     Automatic, "version" -> 5|>,
    "LinguisticAssistantTemplate"], "[", "\"\<Mass\>\"", "]"}], "/", 
  RowBox[{
   TemplateBox[<|"query" -> "Moon", "boxes" -> TemplateBox[{"\"Moon\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PlanetaryMoon\"", ",", "\"Moon\""}], "]"}], 
        "\"Entity[\\\"PlanetaryMoon\\\", \\\"Moon\\\"]\"", 
        "\"planetary moon\""}, "Entity"], 
     "allassumptions" -> {{
       "type" -> "Clash", "word" -> "Moon", "template" -> 
        "Assuming \"Moon\" is referring to planetary moons${separator}Use as \
${desc} or ${desc} instead", "count" -> "3", "pulldown" -> "false", "default" -> 
        "{\"C\", \"Moon\"} -> {\"PlanetaryMoon\", \"dflt\"}", 
        "Values" -> {{
          "name" -> "PlanetaryMoon", "desc" -> 
           " referring to planetary moons", "input" -> 
           "{\"C\", \"Moon\"} -> {\"PlanetaryMoon\"}"}, {
          "name" -> "Surname", "desc" -> "a surname", "input" -> 
           "{\"C\", \"Moon\"} -> {\"Surname\"}"}, {
          "name" -> "CourseAppsWord", "desc" -> " referring to a course app", 
           "input" -> "{\"C\", \"Moon\"} -> {\"CourseAppsWord\"}"}}}}, 
     "assumptions" -> {}, "open" -> {1, 2}, 
     "querystate" -> {
      "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
       0.562098`6.201357033529154, "Messages" -> {}}, "contextinfo" -> 
     Automatic, "version" -> 5|>,
    "LinguisticAssistantTemplate"], "[", "\"\<Mass\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.9482386226307373`*^9, 3.948238655301105*^9}},
 CellLabel->
  "In[322]:=",ExpressionUUID->"d53de2ca-8f54-4911-8b73-b5fc627e1023"],

Cell[BoxData["81.2997656645660290825`3.6756537838193837"], "Output",
 CellChangeTimes->{3.948238656822619*^9},
 CellLabel->
  "Out[322]=",ExpressionUUID->"77a5d0ae-71ea-4fa8-86a3-56ab81a89315"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CurrencyConvert", "[", 
  RowBox[{
   TemplateBox[{"2500.", 
     RowBox[{
       FormBox["\"\[Yen]\"", TraditionalForm], "\[VeryThinSpace]"}], 
     "Japanese yen", "\"Yen\""},
    "QuantityPrefix"], ",", 
   TemplateBox[<|"query" -> "us dollars", "boxes" -> TemplateBox[{
        InterpretationBox["\[InvisibleSpace]", 1], 
        RowBox[{
          FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
        "US dollars", "\"USDollars\""}, "QuantityPrefix", SyntaxForm -> Mod], 
     "allassumptions" -> {}, "assumptions" -> {}, "open" -> {1, 2}, 
     "querystate" -> {
      "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
       0.567694`6.2056592976550435, "Messages" -> {}}, "contextinfo" -> 
     Automatic, "version" -> 5|>,
    "LinguisticAssistantTemplate"]}], "]"}]], "Input",
 CellChangeTimes->{{3.948238661650955*^9, 3.9482386997126226`*^9}},
 CellLabel->
  "In[323]:=",ExpressionUUID->"a5f97597-7da6-40a0-8552-6ff21f50d2ce"],

Cell[BoxData[
 TemplateBox[{
   InterpretationBox[
    TagBox[
     InterpretationBox[
      StyleBox["\"16.44\"", ShowStringCharacters -> False], 16.44149888306856,
       AutoDelete -> True], 
     NumberForm[#, {Infinity, 2}, DigitBlock -> 3, NumberSeparator -> 
      "\[ThinSpace]"]& ], 16.44149888306856, Selectable -> False], 
   RowBox[{
     FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], "US dollars", 
   "\"USDollars\""},
  "QuantityPrefix"]], "Output",
 CellChangeTimes->{3.948238701227642*^9},
 CellLabel->
  "Out[323]=",ExpressionUUID->"078a2bb4-e47b-40b8-af4b-486caab1b9d6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"UnitConvert", "[", 
  RowBox[{
   RowBox[{"Plus", "[", 
    RowBox[{
     TemplateBox[<|
      "query" -> "35 ounces", "boxes" -> 
       TemplateBox[{"35", "\"oz\"", "ounces", "\"Ounces\""}, "Quantity", 
         SyntaxForm -> Mod], 
       "allassumptions" -> {{
         "type" -> "Unit", "word" -> "ounces", "template" -> 
          "Assuming avoirdupois ounces for \"ounces\"${separator}Use ${desc} \
or ${pulldown} instead", "count" -> "8", "pulldown" -> "true", 
          "pulldownlabel" -> "more >>", "pulldownlength" -> "6", "default" -> 
          "\"UnitClash\" -> {\"ounces\", {\"Ounces\", \"dflt\"}}", 
          "Values" -> {{
            "name" -> "Ounces", "desc" -> "avoirdupois ounces", "input" -> 
             "\"UnitClash\" -> {\"ounces\", {\"Ounces\"}}"}, {
            "name" -> "FluidOunces", "desc" -> "US fluid ounces", "input" -> 
             "\"UnitClash\" -> {\"ounces\", {\"FluidOunces\"}}"}, {
            "name" -> "FluidOuncesUK", "desc" -> "UK fluid ounces", "input" -> 
             "\"UnitClash\" -> {\"ounces\", {\"FluidOuncesUK\"}}"}, {
            "name" -> "OuncesForce", "desc" -> "ounces\[Hyphen]force", 
             "input" -> "\"UnitClash\" -> {\"ounces\", {\"OuncesForce\"}}"}, {
            "name" -> "TroyOunces", "desc" -> "troy ounces", "input" -> 
             "\"UnitClash\" -> {\"ounces\", {\"TroyOunces\"}}"}, {
            "name" -> "OuncesForcePerSquareInch", "desc" -> 
             "ounces of force per square inch", "input" -> 
             "\"UnitClash\" -> {\"ounces\", \
{\"OuncesForcePerSquareInch\"}}"}, {
            "name" -> "ApothecariesOunces", "desc" -> "apothecaries' ounces", 
             "input" -> 
             "\"UnitClash\" -> {\"ounces\", {\"ApothecariesOunces\"}}"}, {
            "name" -> "TowerOunces", "desc" -> "tower ounces", "input" -> 
             "\"UnitClash\" -> {\"ounces\", {\"TowerOunces\"}}"}}}}, 
       "assumptions" -> {}, "open" -> {1, 2}, 
       "querystate" -> {
        "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
         0.669252`6.277134671207264, "Messages" -> {}}, "contextinfo" -> 
       Automatic, "version" -> 5|>,
      "LinguisticAssistantTemplate"], ",", 
     TemplateBox[<|
      "query" -> "0.25 tons", "boxes" -> 
       TemplateBox[{"0.25", "\"sh tn\"", "short tons", "\"ShortTons\""}, 
         "Quantity", SyntaxForm -> Mod], 
       "allassumptions" -> {{
         "type" -> "Unit", "word" -> "tons", "template" -> 
          "Assuming short tons for \"tons\"${separator}Use ${desc} or \
${pulldown} instead", "count" -> "13", "pulldown" -> "true", "pulldownlabel" -> 
          "more >>", "pulldownlength" -> "11", "default" -> 
          "\"UnitClash\" -> {\"tons\", {\"ShortTons\", \"dflt\"}}", 
          "Values" -> {{
            "name" -> "ShortTons", "desc" -> "short tons", "input" -> 
             "\"UnitClash\" -> {\"tons\", {\"ShortTons\"}}"}, {
            "name" -> "LongTons", "desc" -> "long tons", "input" -> 
             "\"UnitClash\" -> {\"tons\", {\"LongTons\"}}"}, {
            "name" -> "MetricTons", "desc" -> "metric tons", "input" -> 
             "\"UnitClash\" -> {\"tons\", {\"MetricTons\"}}"}, {
            "name" -> "ShortTonsForce", "desc" -> "short tons\[Hyphen]force", 
             "input" -> 
             "\"UnitClash\" -> {\"tons\", {\"ShortTonsForce\"}}"}, {
            "name" -> "TonsOfTNT", "desc" -> "tons of TNT", "input" -> 
             "\"UnitClash\" -> {\"tons\", {\"TonsOfTNT\"}}"}, {
            "name" -> "DisplacementTons", "desc" -> "displacement tons", 
             "input" -> 
             "\"UnitClash\" -> {\"tons\", {\"DisplacementTons\"}}"}, {
            "name" -> "LongTonsForce", "desc" -> "long tons\[Hyphen]force", 
             "input" -> "\"UnitClash\" -> {\"tons\", {\"LongTonsForce\"}}"}, {
            "name" -> "MetricTonsForce", "desc" -> 
             "metric tons\[Hyphen]force", "input" -> 
             "\"UnitClash\" -> {\"tons\", {\"MetricTonsForce\"}}"}, {
            "name" -> "ShortTonsForcePerSquareInch", "desc" -> 
             "short tons\[Hyphen]force per square inch", "input" -> 
             "\"UnitClash\" -> {\"tons\", \
{\"ShortTonsForcePerSquareInch\"}}"}, {
            "name" -> "LongTonsForcePerSquareInch", "desc" -> 
             "long tons\[Hyphen]force per square inch", "input" -> 
             "\"UnitClash\" -> {\"tons\", \
{\"LongTonsForcePerSquareInch\"}}"}, {
            "name" -> "TonsOfRefrigeration", "desc" -> 
             "US commercial tons of refrigeration", "input" -> 
             "\"UnitClash\" -> {\"tons\", {\"TonsOfRefrigeration\"}}"}, {
            "name" -> "TonsOfRefrigerationUK", "desc" -> 
             "UK commercial tons of refrigeration (power)", "input" -> 
             "\"UnitClash\" -> {\"tons\", {\"TonsOfRefrigerationUK\"}}"}, {
            "name" -> "JapaneseTonsOfRefrigeration", "desc" -> 
             "Japanese tons of refrigeration", "input" -> 
             "\"UnitClash\" -> {\"tons\", \
{\"JapaneseTonsOfRefrigeration\"}}"}}}}, "assumptions" -> {}, 
       "open" -> {1, 2}, 
       "querystate" -> {
        "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
         0.574888`6.211128236933785, "Messages" -> {}}, "contextinfo" -> 
       Automatic, "version" -> 5|>,
      "LinguisticAssistantTemplate"], ",", 
     TemplateBox[<|
      "query" -> "45 lbs", "boxes" -> 
       TemplateBox[{"45", "\"lb\"", "pounds", "\"Pounds\""}, "Quantity", 
         SyntaxForm -> Mod], 
       "allassumptions" -> {{
         "type" -> "Unit", "word" -> "lbs", "template" -> 
          "Assuming pounds\[Hyphen]mass for \"lbs\"${separator}Use ${desc} or \
${pulldown} instead", "count" -> "4", "pulldown" -> "true", "pulldownlabel" -> 
          "more >>", "pulldownlength" -> "2", "default" -> 
          "\"UnitClash\" -> {\"lbs\", {\"Pounds\", \"dflt\"}}", 
          "Values" -> {{
            "name" -> "Pounds", "desc" -> "pounds\[Hyphen]mass", "input" -> 
             "\"UnitClash\" -> {\"lbs\", {\"Pounds\"}}"}, {
            "name" -> "TroyPounds", "desc" -> "troy pounds", "input" -> 
             "\"UnitClash\" -> {\"lbs\", {\"TroyPounds\"}}"}, {
            "name" -> "ApothecariesPounds", "desc" -> "apothecaries' pounds", 
             "input" -> 
             "\"UnitClash\" -> {\"lbs\", {\"ApothecariesPounds\"}}"}, {
            "name" -> "PoundsForce", "desc" -> "pounds\[Hyphen]force", 
             "input" -> "\"UnitClash\" -> {\"lbs\", {\"PoundsForce\"}}"}}}}, 
       "assumptions" -> {}, "open" -> {1, 2}, 
       "querystate" -> {
        "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
         0.593093`6.224667791784388, "Messages" -> {}}, "contextinfo" -> 
       Automatic, "version" -> 5|>,
      "LinguisticAssistantTemplate"], ",", 
     TemplateBox[<|
      "query" -> "9 stones", "boxes" -> 
       TemplateBox[{"9", "\"stone\"", "stone", "\"Stones\""}, "Quantity", 
         SyntaxForm -> Mod], 
       "allassumptions" -> {{
         "type" -> "Unit", "word" -> "stones", "template" -> 
          "Assuming UK stone for \"stones\"${separator}Use ${desc} or ${desc} \
instead", "count" -> "3", "pulldown" -> "false", "default" -> 
          "\"UnitClash\" -> {\"stones\", {\"Stones\", \"dflt\"}}", 
          "Values" -> {{
            "name" -> "Stones", "desc" -> "UK stone", "input" -> 
             "\"UnitClash\" -> {\"stones\", {\"Stones\"}}"}, {
            "name" -> "StonesForce", "desc" -> "stone\[Hyphen]force", "input" -> 
             "\"UnitClash\" -> {\"stones\", {\"StonesForce\"}}"}, {
            "name" -> "CustomaryStones", "desc" -> "customary stones", 
             "input" -> 
             "\"UnitClash\" -> {\"stones\", {\"CustomaryStones\"}}"}}}}, 
       "assumptions" -> {}, "open" -> {1, 2}, 
       "querystate" -> {
        "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
         1.132808`6.505701300882265, "Messages" -> {}}, "contextinfo" -> 
       Automatic, "version" -> 5|>,
      "LinguisticAssistantTemplate"]}], "]"}], ",", 
   TemplateBox[<|"query" -> "kg", "boxes" -> TemplateBox[{
        InterpretationBox["\[InvisibleSpace]", 1], "\"kg\"", "kilograms", 
        "\"Kilograms\""}, "Quantity", SyntaxForm -> Mod], 
     "allassumptions" -> {{
       "type" -> "Clash", "word" -> "kg", "template" -> 
        "Assuming \"kg\" is a unit${separator}Use as ${desc} instead", 
        "count" -> "2", "pulldown" -> "false", "default" -> 
        "{\"C\", \"kg\"} -> {\"Unit\", \"dflt\"}", 
        "Values" -> {{
          "name" -> "Unit", "desc" -> "a unit", "input" -> 
           "{\"C\", \"kg\"} -> {\"Unit\"}"}, {
          "name" -> "Word", "desc" -> "a word", "input" -> 
           "{\"C\", \"kg\"} -> {\"Word\"}"}}}, {
       "type" -> "Unit", "word" -> "kg", "template" -> 
        "Assuming kilograms for \"kg\"${separator}Use ${desc} instead", 
        "count" -> "2", "pulldown" -> "false", "default" -> 
        "\"UnitClash\" -> {\"kg\", {\"Kilograms\", \"dflt\"}}", 
        "Values" -> {{
          "name" -> "Kilograms", "desc" -> "kilograms", "input" -> 
           "\"UnitClash\" -> {\"kg\", {\"Kilograms\"}}"}, {
          "name" -> "KilogramsForce", "desc" -> "kilograms\[Hyphen]force", 
           "input" -> "\"UnitClash\" -> {\"kg\", {\"KilogramsForce\"}}"}}}}, 
     "assumptions" -> {}, "open" -> {1, 2}, 
     "querystate" -> {
      "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
       0.552194`6.193636676891126, "Messages" -> {}}, "contextinfo" -> 
     Automatic, "version" -> 5|>,
    "LinguisticAssistantTemplate"]}], "]"}]], "Input",
 CellChangeTimes->{{3.948238719672653*^9, 3.9482388204042187`*^9}, 
   3.9482391390777693`*^9},
 CellLabel->
  "In[329]:=",ExpressionUUID->"9436c7eb-d7e8-4bc5-8ade-cb90b1b81c2e"],

Cell[BoxData[
 TemplateBox[{"305.352713579375`", "\"kg\"", "kilograms", "\"Kilograms\""},
  "Quantity"]], "Output",
 CellChangeTimes->{3.948239139662924*^9},
 CellLabel->
  "Out[329]=",ExpressionUUID->"272c636d-f350-4acf-8682-f80170f70444"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"UnitConvert", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      TemplateBox[<|"query" -> "Mars", "boxes" -> TemplateBox[{"\"Mars\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"Planet\"", ",", "\"Mars\""}], "]"}], 
           "\"Entity[\\\"Planet\\\", \\\"Mars\\\"]\"", "\"planet\""}, 
          "Entity"], 
        "allassumptions" -> {{
          "type" -> "Clash", "word" -> "Mars", "template" -> 
           "Assuming \"Mars\" is a planet${separator}Use as ${desc} or \
${desc} or ${desc} instead", "count" -> "4", "pulldown" -> "false", "default" -> 
           "{\"C\", \"Mars\"} -> {\"Planet\", \"dflt\"}", 
           "Values" -> {{
             "name" -> "Planet", "desc" -> "a planet", "input" -> 
              "{\"C\", \"Mars\"} -> {{\"Planet\", \"a planet\"}}"}, {
             "name" -> "Mythology", "desc" -> "a mythological figure", 
              "input" -> "{\"C\", \"Mars\"} -> {\"Mythology\"}"}, {
             "name" -> "Company", "desc" -> "a company", "input" -> 
              "{\"C\", \"Mars\"} -> {\"Company\"}"}, {
             "name" -> "GivenName", "desc" -> "a given name", "input" -> 
              "{\"C\", \"Mars\"} -> {\"GivenName\"}"}}}}, "assumptions" -> {},
         "open" -> {1, 2}, 
        "querystate" -> {
         "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
          0.591417`6.223438797453543, "Messages" -> {}}, "contextinfo" -> 
        Automatic, "version" -> 5|>,
       "LinguisticAssistantTemplate"], "[", "\"\<DistanceFromEarth\>\"", 
      "]"}], ",", 
     RowBox[{
      TemplateBox[<|"query" -> "Venus", "boxes" -> TemplateBox[{"\"Venus\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"Planet\"", ",", "\"Venus\""}], "]"}], 
           "\"Entity[\\\"Planet\\\", \\\"Venus\\\"]\"", "\"planet\""}, 
          "Entity"], 
        "allassumptions" -> {{
          "type" -> "Clash", "word" -> "Venus", "template" -> 
           "Assuming \"Venus\" is a planet${separator}Use as ${desc} or \
${desc} or ${desc} or ${desc} or ${desc} instead", "count" -> "6", "pulldown" -> 
           "false", "default" -> 
           "{\"C\", \"Venus\"} -> {\"Planet\", \"dflt\"}", 
           "Values" -> {{
             "name" -> "Planet", "desc" -> "a planet", "input" -> 
              "{\"C\", \"Venus\"} -> {{\"Planet\", \"a planet\"}}"}, {
             "name" -> "TaxonomicSpecies", "desc" -> 
              "a species specification", "input" -> 
              "{\"C\", \"Venus\"} -> {\"TaxonomicSpecies\"}"}, {
             "name" -> "Mythology", "desc" -> "a mythological figure", 
              "input" -> "{\"C\", \"Venus\"} -> {\"Mythology\"}"}, {
             "name" -> "GivenName", "desc" -> "a given name", "input" -> 
              "{\"C\", \"Venus\"} -> {\"GivenName\"}"}, {
             "name" -> "Mineral", "desc" -> "a mineral", "input" -> 
              "{\"C\", \"Venus\"} -> {\"Mineral\"}"}, {
             "name" -> "Movie", "desc" -> "a movie", "input" -> 
              "{\"C\", \"Venus\"} -> {\"Movie\"}"}}}}, "assumptions" -> {}, 
        "open" -> {1, 2}, 
        "querystate" -> {
         "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
          0.593668`6.225088633633143, "Messages" -> {}}, "contextinfo" -> 
        Automatic, "version" -> 5|>,
       "LinguisticAssistantTemplate"], "[", "\"\<DistanceFromEarth\>\"", 
      "]"}], ",", 
     RowBox[{
      TemplateBox[<|
       "query" -> "Mercury", "boxes" -> TemplateBox[{"\"Mercury\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"Planet\"", ",", "\"Mercury\""}], "]"}], 
           "\"Entity[\\\"Planet\\\", \\\"Mercury\\\"]\"", "\"planet\""}, 
          "Entity"], 
        "allassumptions" -> {{
          "type" -> "Clash", "word" -> "Mercury", "template" -> 
           "Assuming \"Mercury\" is a planet${separator}Use as ${desc} or \
${desc} or ${desc} or ${desc} or ${desc} instead", "count" -> "6", "pulldown" -> 
           "false", "default" -> 
           "{\"C\", \"Mercury\"} -> {\"Planet\", \"dflt\"}", 
           "Values" -> {{
             "name" -> "Planet", "desc" -> "a planet", "input" -> 
              "{\"C\", \"Mercury\"} -> {{\"Planet\", \"a planet\"}}"}, {
             "name" -> "Element", "desc" -> "a chemical element", "input" -> 
              "{\"C\", \"Mercury\"} -> {\"Element\"}"}, {
             "name" -> "MannedSpaceMissionClass", "desc" -> 
              " referring to manned space missions", "input" -> 
              "{\"C\", \"Mercury\"} -> {\"MannedSpaceMissionClass\"}"}, {
             "name" -> "AutomobileDivision", "desc" -> 
              "a division of an automobile manufacturer", "input" -> 
              "{\"C\", \"Mercury\"} -> {\"AutomobileDivision\"}"}, {
             "name" -> "Mythology", "desc" -> "a mythological figure", 
              "input" -> "{\"C\", \"Mercury\"} -> {\"Mythology\"}"}, {
             "name" -> "Periodical", "desc" -> "a periodical", "input" -> 
              "{\"C\", \"Mercury\"} -> {\"Periodical\"}"}}}}, 
        "assumptions" -> {
         "{\"C\", \"Mercury\"} -> {{\"Planet\", \"a planet\"}}"}, 
        "open" -> {1, 2}, 
        "querystate" -> {
         "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
          1.331167`6.57577753629513, "Messages" -> {}}, "contextinfo" -> 
        Automatic, "version" -> 5|>,
       "LinguisticAssistantTemplate"], "[", "\"\<DistanceFromEarth\>\"", 
      "]"}], ",", 
     RowBox[{
      TemplateBox[<|
       "query" -> "Jupiter", "boxes" -> TemplateBox[{"\"Jupiter\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"Planet\"", ",", "\"Jupiter\""}], "]"}], 
           "\"Entity[\\\"Planet\\\", \\\"Jupiter\\\"]\"", "\"planet\""}, 
          "Entity"], 
        "allassumptions" -> {{
          "type" -> "Clash", "word" -> "Jupiter", "template" -> 
           "Assuming \"Jupiter\" is a planet${separator}Use as ${desc} or \
${desc} or ${desc} instead", "count" -> "4", "pulldown" -> "false", "default" -> 
           "{\"C\", \"Jupiter\"} -> {\"Planet\", \"dflt\"}", 
           "Values" -> {{
             "name" -> "Planet", "desc" -> "a planet", "input" -> 
              "{\"C\", \"Jupiter\"} -> {{\"Planet\", \"a planet\"}}"}, {
             "name" -> "Mythology", "desc" -> "a mythological figure", 
              "input" -> "{\"C\", \"Jupiter\"} -> {\"Mythology\"}"}, {
             "name" -> "GivenName", "desc" -> "a given name", "input" -> 
              "{\"C\", \"Jupiter\"} -> {\"GivenName\"}"}, {
             "name" -> "FictionalCharacter", "desc" -> 
              " referring to a fictional character", "input" -> 
              "{\"C\", \"Jupiter\"} -> {\"FictionalCharacter\"}"}}}}, 
        "assumptions" -> {}, "open" -> {1, 2}, 
        "querystate" -> {
         "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
          0.605407`6.233592431662278, "Messages" -> {}}, "contextinfo" -> 
        Automatic, "version" -> 5|>,
       "LinguisticAssistantTemplate"], "[", "\"\<DistanceFromEarth\>\"", 
      "]"}], ",", 
     RowBox[{
      TemplateBox[<|"query" -> "Saturn", "boxes" -> TemplateBox[{"\"Saturn\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"Planet\"", ",", "\"Saturn\""}], "]"}], 
           "\"Entity[\\\"Planet\\\", \\\"Saturn\\\"]\"", "\"planet\""}, 
          "Entity"], 
        "allassumptions" -> {{
          "type" -> "Clash", "word" -> "Saturn", "template" -> 
           "Assuming \"Saturn\" is a planet${separator}Use as ${desc} or \
${desc} or ${desc} or ${desc} instead", "count" -> "5", "pulldown" -> "false",
            "default" -> "{\"C\", \"Saturn\"} -> {\"Planet\", \"dflt\"}", 
           "Values" -> {{
             "name" -> "Planet", "desc" -> "a planet", "input" -> 
              "{\"C\", \"Saturn\"} -> {{\"Planet\", \"a planet\"}}"}, {
             "name" -> "GivenName", "desc" -> "a given name", "input" -> 
              "{\"C\", \"Saturn\"} -> {\"GivenName\"}"}, {
             "name" -> "RetailLocationClass", "desc" -> "an auto dealership", 
              "input" -> 
              "{\"C\", \"Saturn\"} -> {{\"RetailLocationClass\", \"an auto \
dealership\"}}"}, {
             "name" -> "Mythology", "desc" -> "a mythological figure", 
              "input" -> "{\"C\", \"Saturn\"} -> {\"Mythology\"}"}, {
             "name" -> "AutomobileDivision", "desc" -> 
              "a division of an automobile manufacturer", "input" -> 
              "{\"C\", \"Saturn\"} -> {\"AutomobileDivision\"}"}}}}, 
        "assumptions" -> {}, "open" -> {1, 2}, 
        "querystate" -> {
         "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
          0.557633`6.197893460332391, "Messages" -> {}}, "contextinfo" -> 
        Automatic, "version" -> 5|>,
       "LinguisticAssistantTemplate"], "[", "\"\<DistanceFromEarth\>\"", 
      "]"}], ",", 
     RowBox[{
      TemplateBox[<|"query" -> "Uranus", "boxes" -> TemplateBox[{"\"Uranus\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"Planet\"", ",", "\"Uranus\""}], "]"}], 
           "\"Entity[\\\"Planet\\\", \\\"Uranus\\\"]\"", "\"planet\""}, 
          "Entity"], 
        "allassumptions" -> {{
          "type" -> "Clash", "word" -> "Uranus", "template" -> 
           "Assuming \"Uranus\" is a planet${separator}Use as ${desc} or \
${desc} or ${desc} or ${desc} instead", "count" -> "5", "pulldown" -> "false",
            "default" -> "{\"C\", \"Uranus\"} -> {\"Planet\", \"dflt\"}", 
           "Values" -> {{
             "name" -> "Planet", "desc" -> "a planet", "input" -> 
              "{\"C\", \"Uranus\"} -> {{\"Planet\", \"a planet\"}}"}, {
             "name" -> "MaterialClass", "desc" -> "a class of materials", 
              "input" -> "{\"C\", \"Uranus\"} -> {\"MaterialClass\"}"}, {
             "name" -> "Mythology", "desc" -> "a mythological figure", 
              "input" -> "{\"C\", \"Uranus\"} -> {\"Mythology\"}"}, {
             "name" -> "GivenName", "desc" -> "a given name", "input" -> 
              "{\"C\", \"Uranus\"} -> {\"GivenName\"}"}, {
             "name" -> "Movie", "desc" -> "a movie", "input" -> 
              "{\"C\", \"Uranus\"} -> {\"Movie\"}"}}}}, "assumptions" -> {}, 
        "open" -> {1, 2}, 
        "querystate" -> {
         "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
          0.568831`6.206528249927385, "Messages" -> {}}, "contextinfo" -> 
        Automatic, "version" -> 5|>,
       "LinguisticAssistantTemplate"], "[", "\"\<DistanceFromEarth\>\"", 
      "]"}], ",", 
     RowBox[{
      TemplateBox[<|
       "query" -> "Neptune", "boxes" -> TemplateBox[{"\"Neptune\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"Planet\"", ",", "\"Neptune\""}], "]"}], 
           "\"Entity[\\\"Planet\\\", \\\"Neptune\\\"]\"", "\"planet\""}, 
          "Entity"], 
        "allassumptions" -> {{
          "type" -> "Clash", "word" -> "Neptune", "template" -> 
           "Assuming \"Neptune\" is a planet${separator}Use as ${desc} or \
${desc} instead", "count" -> "3", "pulldown" -> "false", "default" -> 
           "{\"C\", \"Neptune\"} -> {\"Planet\", \"dflt\"}", 
           "Values" -> {{
             "name" -> "Planet", "desc" -> "a planet", "input" -> 
              "{\"C\", \"Neptune\"} -> {{\"Planet\", \"a planet\"}}"}, {
             "name" -> "Mythology", "desc" -> "a mythological figure", 
              "input" -> "{\"C\", \"Neptune\"} -> {\"Mythology\"}"}, {
             "name" -> "GivenName", "desc" -> "a given name", "input" -> 
              "{\"C\", \"Neptune\"} -> {\"GivenName\"}"}}}}, 
        "assumptions" -> {}, "open" -> {1, 2}, 
        "querystate" -> {
         "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
          0.580931`6.215669545681821, "Messages" -> {}}, "contextinfo" -> 
        Automatic, "version" -> 5|>,
       "LinguisticAssistantTemplate"], "[", "\"\<DistanceFromEarth\>\"", 
      "]"}]}], "}"}], ",", 
   TemplateBox[<|"query" -> "Light minutes", "boxes" -> TemplateBox[{
        InterpretationBox["\[InvisibleSpace]", 1], "\"light minutes\"", 
        "light minutes", "\"LightMinutes\""}, "Quantity", SyntaxForm -> Mod], 
     "allassumptions" -> {}, "assumptions" -> {}, "open" -> {1, 2}, 
     "querystate" -> {
      "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
       0.784659`6.346225953943927, "Messages" -> {}}, "contextinfo" -> 
     Automatic, "version" -> 5|>,
    "LinguisticAssistantTemplate"]}], "]"}]], "Input",
 CellChangeTimes->{{3.9482400081960773`*^9, 3.948240047165861*^9}, {
  3.9482400819064407`*^9, 3.948240087392591*^9}, {3.948240135661797*^9, 
  3.948240300578738*^9}},
 CellLabel->
  "In[358]:=",ExpressionUUID->"678665dd-b24b-45b4-a66b-5c00c67766a0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{
    "6.121042990182039`", "\"light minutes\"", "light minutes", 
     "\"LightMinutes\""},
    "Quantity"], ",", 
   TemplateBox[{
    "3.7485625266781413`", "\"light minutes\"", "light minutes", 
     "\"LightMinutes\""},
    "Quantity"], ",", 
   TemplateBox[{
    "11.506081293184385`", "\"light minutes\"", "light minutes", 
     "\"LightMinutes\""},
    "Quantity"], ",", 
   TemplateBox[{
    "39.04394305020896`", "\"light minutes\"", "light minutes", 
     "\"LightMinutes\""},
    "Quantity"], ",", 
   TemplateBox[{
    "87.29340272346741`", "\"light minutes\"", "light minutes", 
     "\"LightMinutes\""},
    "Quantity"], ",", 
   TemplateBox[{
    "162.27103391115375`", "\"light minutes\"", "light minutes", 
     "\"LightMinutes\""},
    "Quantity"], ",", 
   TemplateBox[{
    "255.2450116848238`", "\"light minutes\"", "light minutes", 
     "\"LightMinutes\""},
    "Quantity"]}], "}"}]], "Output",
 CellChangeTimes->{
  3.9482400878135853`*^9, {3.948240303214342*^9, 3.948240323992833*^9}},
 CellLabel->
  "Out[358]=",ExpressionUUID->"62482ddc-e623-4cff-b95c-c4e359df657b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Rotate", "[", 
  RowBox[{"\"\<hello\>\"", ",", 
   RowBox[{"180", " ", "Degree"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.948239173561365*^9, 3.9482391906770782`*^9}},
 CellLabel->
  "In[331]:=",ExpressionUUID->"6843c086-211e-446a-8f1b-c18c0bfe02e6"],

Cell[BoxData[
 RotationBox["\<\"hello\"\>",
  BoxRotation->3.141592653589793]], "Output",
 CellChangeTimes->{{3.948239180495594*^9, 3.948239191367763*^9}},
 CellLabel->
  "Out[331]=",ExpressionUUID->"482c85b9-0b9b-4b34-961f-3d61e1f3d40f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"Rotate", "[", 
    RowBox[{"\"\<A\>\"", ",", 
     RowBox[{"x", " ", "Degree"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "360", ",", "30"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.94823921077107*^9, 3.948239237175844*^9}},
 CellLabel->
  "In[332]:=",ExpressionUUID->"34f334c3-6728-4e4d-81f0-5ca71f2ad018"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RotationBox["\<\"A\"\>",
    BoxRotation->0.], ",", 
   RotationBox["\<\"A\"\>",
    BoxRotation->0.5235987755982988], ",", 
   RotationBox["\<\"A\"\>",
    BoxRotation->1.0471975511965976`], ",", 
   RotationBox["\<\"A\"\>",
    BoxRotation->1.5707963267948966`], ",", 
   RotationBox["\<\"A\"\>",
    BoxRotation->2.0943951023931953`], ",", 
   RotationBox["\<\"A\"\>",
    BoxRotation->2.6179938779914944`], ",", 
   RotationBox["\<\"A\"\>",
    BoxRotation->3.141592653589793], ",", 
   RotationBox["\<\"A\"\>",
    BoxRotation->3.6651914291880923`], ",", 
   RotationBox["\<\"A\"\>",
    BoxRotation->4.1887902047863905`], ",", 
   RotationBox["\<\"A\"\>",
    BoxRotation->4.71238898038469], ",", 
   RotationBox["\<\"A\"\>",
    BoxRotation->5.235987755982989], ",", 
   RotationBox["\<\"A\"\>",
    BoxRotation->5.759586531581287], ",", 
   RotationBox["\<\"A\"\>",
    BoxRotation->6.283185307179586]}], "}"}]], "Output",
 CellChangeTimes->{3.948239243542253*^9},
 CellLabel->
  "Out[332]=",ExpressionUUID->"9ce75a0f-4279-409a-9d10-02e1ccc55bcd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Rotate", "[", 
    RowBox[{
     RowBox[{
      TemplateBox[<|
       "query" -> "cat", "boxes" -> TemplateBox[{"\"domestic cat\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"TaxonomicSpecies\"", ",", "\"FelisCatus::ddvt3\""}], 
             "]"}], "\"Entity[\\\"TaxonomicSpecies\\\", \\\"FelisCatus::ddvt3\
\\\"]\"", "\"species specification\""}, "Entity"], 
        "allassumptions" -> {{
          "type" -> "Clash", "word" -> "cat", "template" -> 
           "Assuming \"cat\" is a species specification${separator}Use as \
${desc} or ${desc} or ${desc} or ${desc} instead", "count" -> "5", "pulldown" -> 
           "false", "default" -> 
           "{\"C\", \"cat\"} -> {\"TaxonomicSpecies\", \"dflt\"}", 
           "Values" -> {{
             "name" -> "TaxonomicSpecies", "desc" -> 
              "a species specification", "input" -> 
              "{\"C\", \"cat\"} -> {\"TaxonomicSpecies\"}"}, {
             "name" -> "CatBreedClass", "desc" -> " referring to cat breeds", 
              "input" -> "{\"C\", \"cat\"} -> {\"CatBreedClass\"}"}, {
             "name" -> "Financial", "desc" -> "a financial entity", "input" -> 
              "{\"C\", \"cat\"} -> {\"Financial\"}"}, {
             "name" -> "Sound", "desc" -> " referring to sound data", "input" -> 
              "{\"C\", \"cat\"} -> {\"Sound\"}"}, {
             "name" -> "Word", "desc" -> "a word", "input" -> 
              "{\"C\", \"cat\"} -> {\"Word\"}"}}}}, "assumptions" -> {}, 
        "open" -> {1, 2}, 
        "querystate" -> {
         "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
          0.651877`6.265710651711652, "Messages" -> {}}, "contextinfo" -> 
        Automatic, "version" -> 5|>,
       "LinguisticAssistantTemplate"], "[", "\"\<Image\>\"", "]"}], ",", 
     RowBox[{"x", " ", "Degree"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "180"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9482392527803164`*^9, 3.948239315766575*^9}},
 CellLabel->
  "In[334]:=",ExpressionUUID->"e49f7d15-7e64-40c2-9332-b9cb7a322e60"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`x$$ = 0., Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`x$$], 0, 180, ControlType -> Manipulator}}, 
    Typeset`size$$ = {150., {47.134033203125, 52.865966796875}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = True, 
    Typeset`keyframeActionsQ$$ = False, Typeset`keyframeList$$ = {}}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`x$$ = 0}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$, Typeset`keyframeActionsQ$$, 
        Typeset`keyframeList$$}, "Body" :> Rotate[
        Entity["TaxonomicSpecies", "FelisCatus::ddvt3"][
        "Image"], $CellContext`x$$ Degree], 
      "Specifications" :> {{$CellContext`x$$, 0, 180}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{
      242.36671875000002`, {90.30445861816406, 96.03639221191406}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.9482393040374603`*^9, 3.948239316372143*^9}},
 CellLabel->
  "Out[334]=",ExpressionUUID->"238c8394-4924-49ef-9129-34d77bff6c23"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics", "[", 
  RowBox[{"Line", "[", 
   RowBox[{"AnglePath", "[", 
    RowBox[{
     RowBox[{"Range", "[", "180", " ", "]"}], "Degree"}], "]"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.948239348399879*^9, 3.948239476107271*^9}, {
  3.94823951498188*^9, 3.94823953406315*^9}, {3.948239607615334*^9, 
  3.9482396145896273`*^9}, {3.948239666722437*^9, 3.948239671062746*^9}},
 CellLabel->
  "In[349]:=",ExpressionUUID->"ea3347ff-2217-45a5-9744-6609603ac9ce"],

Cell[BoxData[
 GraphicsBox[LineBox[CompressedData["
1:eJxdlQs0Vukext2Kotz2t2/f/lyrUWaIId30PRyapCQn0wXRKGFCQpomoTCm
qKhIM0JFipJQlCJKU4QQRca1kpTkUoqcfSzrrDPttfba67ee/b7v3v/L89f8
ycdui5SEhEQef//3+fV1IGswvvhLr1it+Xdd+ZYYcd3yMPPS4TFxpcMGn7Tm
bLGjOCTifJ8sEtdbh0vblol/ikj2iKpRxDG3DElFy3ox4VDQvKlMFbHzkjaV
eXaIBXYJzhv3UZibHOEb0f5WPDQUcT90qhDzNlc8NhkYEh8cHC58t1QNOZHS
mZ3fSWDf206LfdEaSFt7xlKhfhLYnG2EXo4mdhV0NWW4KuBdh3+z134tZK2o
c7V5qow1b2ZatL3RQlGUdvebEgG26By51dephcvmWqN3SxjMPbK/2stFC0c3
yKe1JYkmWBOE4cHQdQc1ULDTUMasVR2WCxLuSPVqQvfRAYnmVRyMXfqN/Ru0
kFwn473LkcZ+yVjXqG+0Icr2H5m8jUBebcLwmUotRJ7zSDIZVJpgTWyae1sU
16aAfb8se3ETGjifV61ddWAqkgNvL1l4icOWExd02l3kcc5Ta0V9Dj3BilDZ
RPVONhWAGw1swQcVdDTI2mb1qSB9eNQ3tZvEsuMPBvauVsGyMDej3/JZ/H3U
tOtNtCouxO673hQsQripSnikNwnV0j/iOiLV4G7/+buz1iwyJnRrr876Ih01
yLy6KDJLYtFgGqI3dZcGBtI3xqfkkVj0g8HxoHYN9GfvFaQOqyCl2vCYpK4G
7uj47Fx5SQnr35k7fa8o+ooZKNaN1hvIqeJOX5XHnRoB/FY93OzXRMI9t6HH
5RwB/6UXX/jEs/gzpe7tOpKcYA4GGS3WOtEMnnYXqiQ9FyK30udmQpAIAfPY
npr7NCb7jMySltRA9tNAvYXlBHZ/cSvyrlCHTblD+nNpFdStidWqe83B+h9M
o/SKbsBwA4H1XiX2xRSJXPc5kY8aaBh9eOOSNJuE4YXJQqlwIab6DNif1GLQ
kJ9w4iMjhPSeo8u+cCL0ygY+1KmlYDTpzEt7d3UovIueMW1IFZV1v8vbOKvB
6VBQbLS9Cp51nj/++BoL19qiguXzCHwSF+pe0afwtspyRdZsGo6je6tDD5Pw
vCZgSkdZ1HbaJB53ZfDIYablez4vP8q1TJddI0Lrz5ZVv5wlIevZmxwxoIb2
VP0NF61UoeMgWVZdxuGGvsOWKAdVmKRK5Xwso2GzwK3EoYbE9+NM4oW5r7qu
FQu9CX16gSWxwoSF+sT6MNVTSl1p/P7n89Jz4tXQTeiKfvFURenorGVVphyC
twv7rDgC4sa4eqeVNJwjZU5uGaZQfj7ok70FheL46Dk1QSx0NmpoarmwuG1n
LS1I5M+Rnn7QskuEe5aZStmnCdxUTpFbzOdvteCo0fkEVfw9fM1ZI5mBUVne
2K5WEmnb04v/WkPh0R2d/pccixdCE82LlxhYjes0DqQldRzaI8I6pWs9ya0E
8jn/J1meIrS3JColNKjiqcxB/WN8vWx/le7lbkPh4ThTaPxwp79QwMLrknOF
njcLyVf1tGwXBR//ALPPf4kw0jcUN/VbAkt/2yWW3sDhyMqXnk3NBEpcux7G
eNATTCN/go2PzCiT38vA3MXbZciRQy1hP//BBQHOJro1r48UQT3HIm35VAK5
FyO2trUyyC5cJc2GUsgaZwpdls6nfSsYxG48b5j9jRAHYgp/Tb1M4r2XYako
UwQ529Yuf2kCGkO6lVo5LDKHc8MVO0lcf6m4rPI1hRltYXba+QyMq1qI9iIW
Fyf0K1ez2gaPirD09Ymx63y+lKY1WTjw6xnXpIE8AYXD5V+y50ymEbBDJ1zr
JIN3wSlPhjSFiLo96brdv0loTMkOtPESIXacCfw2lsoGDzEIz36uX/6JwrPE
45Fj9jTa3zZn6s1iAGYLaTabw9r3a9kHhgI8czjt63ufw/p/MI1GQdfBRdoM
Qq7FWpr/yiBN5/Xv/8qlEHJpx70lJiKk//SYCFxPIDkprCdyihDWCheylRdS
WBDj7mZkTsN2nBlUnPQrlS4QwnugWG7IUQCT8qgk+RIOtnt7VB97C7BUcCjq
+xIafXL29VcX876hKhly+guDC05lATXtJHao+PspLxLBv+5q/e54Aoc2rU43
G2Bg35MUHOdPQ91gfsUC3h+GPxmORk2hQS9puJX4nAP7o+VRj1ACCsPH4ltl
hNg7tavAOJFCzit5Wf8QGj0LJeNM02gckxzMOuzEwZ3ynVGRR2A0VebZrQwh
skvGwi4rUnA7F9O1yoevJ6XcrUf5eh5YsaAnZ0yIpA15a27w9TytdFpb3Rsh
To8zid0FUmGTAmmkjDMNpQn98tmrZh38++YL2h8PNgmxJ+cslzCdgolfhcvs
UBorBHmX6CwarGtmfYoOh9t9M0zP3SKQIVso9WinEOTTgSk3YilM0+gxvnma
5vvMcMtrQ/67uB1/acZx6Nlp8fneBQLXGvRTNuexKHeb4Qs7Gs0B6orPCQYH
58kfn2/F93+0XL7Eew64+HmwdZTA0LPnPXMzGCy6frLL4iONJZV2PgtJFu7m
x/qtxgS4pagv9XMpB/2Koi86yiQq1s/tjS2lUZxzuHzxcxp6ZhKFafHCCeb9
eYItnTa7N9ylUGfYaWxXTaMrqOap+AiFk4cj+rsrOWz1trKqlRdgbVNHhVoO
g/6Yp9ctRvh959Ul925mERBZ6RQQLsCrceb9LqDc2WuARKN4QK0/ncbIldJn
1eo05t0ozTTaw2Fjru2rTR0EPigar7DVYieY/h8HSeupxf4pgEGCxetzXhxO
vpujcUCegs7pzR4Z2TRCpaPfbOf73KA9p3f5HxxkBrdv5RjeH+a32F2+zqBP
YYPS/CEaL90/6uWXsqAn9IAEZfniCiHOnbKUucb766cDg2E/T2Kgl1yjtOwm
iTOCjT+srOX92Ol4HiUiIWSe5Ha10Mh7cXaNjzuNsfufgvNncdBuTviQ1MfP
m3FmIeqe3y3dQ2PVja1SJTEsirw9HEtoAYo+OgfPvCmEsrbC/kNGfJ+9qn+b
P5+BwTiT+Pi+zToyi0Pa3pEfnV+Q8K5a3UgW0fC8veDK4QgK/eUN2369wsff
L7wqM0+AwFlzPSh+XraHpthLBvHzuVpm8hUpDuJdcR8NJgsgGmcWs44Ep6zk
47lTQq29QF4I48aQQwF8vBN3vq9vHGZhxlYTgoc0779HpgzMYOE4592pP2cK
cOhu8h9+d4X4tknFc9s2GosWx4wId/Pzud88cd0JARq1N93Xt+EwcOrR6OL3
FLRnvn1crMxg0obD9cF8vSk/aBJ3JnBQ/yHqSWAIBdnazzdf8r7eQ/qN+ATy
/9vd6SZ9g/ezHa7VmE1h2701gzEPaJiHDq00uUViW13/y8E7HOJcIp9V9pNI
DVw9x4mfp3INjo9620ic+M7W1Jifpw/q/59pEF/p/wFbd+tL
   "]]]], "Output",
 CellChangeTimes->{{3.948239390104432*^9, 3.948239476489204*^9}, {
   3.94823951576466*^9, 3.948239534574185*^9}, 3.948239615059906*^9, 
   3.948239671532688*^9},
 CellLabel->
  "Out[349]=",ExpressionUUID->"98d164c4-09a2-4e15-94a1-c6fe6f137945"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Graphics", "[", 
    RowBox[{"Line", "[", 
     RowBox[{"AnglePath", "[", 
      RowBox[{"Table", "[", 
       RowBox[{"theta", ",", "100"}], "]"}], "]"}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"theta", ",", "0", ",", "360"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9482396493216343`*^9, 3.9482397549811363`*^9}},
 CellLabel->
  "In[350]:=",ExpressionUUID->"7b00852b-2ea6-49fb-ad5c-e4831ea0e688"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`theta$$ = 102.5, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`theta$$], 0, 360, ControlType -> Manipulator}}, 
    Typeset`size$$ = {360., {176.84565335467332`, 182.57758694842332`}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = True, 
    Typeset`keyframeActionsQ$$ = False, Typeset`keyframeList$$ = {}}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`theta$$ = 0}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$, Typeset`keyframeActionsQ$$, 
        Typeset`keyframeList$$}, "Body" :> Graphics[
        Line[
         AnglePath[
          Table[$CellContext`theta$$, 100]]]], 
      "Specifications" :> {{$CellContext`theta$$, 0, 360}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{403.1, {220.01607876971238`, 225.74801236346238`}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.948239654281665*^9, 3.948239663511339*^9}, 
   3.948239755885477*^9},
 CellLabel->
  "Out[350]=",ExpressionUUID->"7360bf27-0d76-4e87-87b9-4cb55b092862"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics", "[", 
  RowBox[{"Line", "[", 
   RowBox[{"AnglePath", "[", 
    RowBox[{
     RowBox[{"IntegerDigits", "[", 
      RowBox[{"2", "^", "10000"}], " ", "]"}], "30", " ", "Degree"}], "]"}], 
   "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.948239776161034*^9, 3.9482398490075283`*^9}, {
  3.948239883184875*^9, 3.948239901607293*^9}},
 CellLabel->
  "In[355]:=",ExpressionUUID->"1a300bf0-60e5-4025-b56f-a4c04f727e53"],

Cell[BoxData[
 GraphicsBox[LineBox[CompressedData["
1:eJxcnXV8VcfTxnEnWASChTgJxF3unasJBCnu0ALF3Yq7u0uguLsElxwgQHD3
4O7u9u7ss31/h/QfPt8+s7Ozs3qPpVzzzjX/zpYlS5a0/Fmy8L+Z/1tTpf7j
vtueGX/J/24Z63pX6BF//YOxzpyNZz50uJz6Vf3/JbBL/Sn5k3GFYpTLTmsy
6csUv1NcU/r9kfoIBYz1JOfUXIs575r/Ihc1lZxXe6z0ukr3VPqfkrNqTr9x
Xi2X4iD5b2GtoPw3GwXLf/MpPRvNzpu/yeleRbSdKp4A+f8dtN6SXxkrSi6q
HfiJ9oYqXSbpz2J7A5W+Uf6P26kRSl+o7P0Vl/+Nc2lm5b+6jLegNl3V76b0
2z+hq+7QPh+Z39TRe78xSOLn1FdKRx5/pc7zknk0LoCf1J+Zylf6jV+nyn+6
+O81K45KQn/nVv7lP+S5t7gqv0eV/6Xqa6r645Tinir+4ir+h0WRXxeV745K
d1D56KF4lMx/MW2XGi/jFE9Q/u/LfwppX4uiP99Lzq/y9cv4VOnab5xbG6zy
m6649zHkb6Mqf/eEnrP/v/11Zb/0JPS5Sp+lxm2U4t7IV2qXn8j3ZcnfUp2/
Sz+pLlXA+THwU+9K/V3qhcvnxx3wfJv6xgvj9rjidFXe8TDXezbVOdockJGe
Q7vSvHpgvmmPU10Ud9i0wmVEpe+pxRVvu8Llc2klfmMHzSDrz6+tlZxPS5Kc
W+t7aO9Zj8jsigtpSxVPUZw4rt+ShE4fUytJf3m0e2OZf6YOkFxAO9aS43md
uq9UOZdOLYtqjf8Gv1Y8eM3zJ7a/Fqe2kuPaSesi83wnNUxyMc11PPyDXbQn
ihsr+07KPldQ5NkCNUto9a/A30ZZfyntcPMD5stbbhhnLVp+6GJZN83tJ/T+
it+0RjwXzVXHrTGW0d5PQPy+0r+b1uAI2jtH6fcPM+fWvJRuVfoCpX9Wuia5
lLZyC+c/i3ZV8R+qPnBxbVsrcA0Zr6O2Q7UnUHJRrblq72pp76yVUvGVV/p4
pZslF9a+HVf5U3oPpRuU/3bKP8o7a7uV7ii5uLbwKvd/Nq1XIOfTSRt8FePF
Qeljle6g8jtAsZPir5u5ve9T/1D5NW3B+Fuo2v9iM3iA4l7K/yKVv6fj0T6w
q3ZlHLiz4ueHkN/Oyr6Cyned37iQYlcth+LzUWivJsvn13KpfDSS8eTQPFQ+
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
r22i+QOgO6b9Xl6yo4mOdQMP8+L9y0QFejEXBov9z6+bjoU++zfdTLn6gbPz
8yXdzNTzJ8n3nobxeemOmW7mMsn3ouYo/ZvUc2gbvFG++CfmLFpFuV+a6bVD
PfneleSDJjqeC5ym6ttduqMYbw6ayVvPuTSj8t/JgzmftuA3zqb9lM+/mGlL
ifVifHxKnaD4WgH2n10rPBqcovT+mfTHI/WcXxvG+lsTOb1HeySL38MVH+lY
/N63XQNfHYnz5cx3dWX5fsre9hB6LZkvE7m8Jpmv4Uqv+QD6bdUfTlehb/DW
cxbtdCZ9rTpfvNrrJ9+bG6POJ1NtPL4/pN5Q56sHf9SU7+UNVnrvBOj9fXF+
eR7LD/7dSj04Cfsvv9zYf1J6/GVVPqk6yp9Q55eYv+rI9/IeKt21KvRdJ3De
aJp7qXwfFtf/jVS9bC5+D9TY4Sz0kVUC5XuzGedxXtycVpHjp6pK75QEfdwx
+M/pFSjf4zx2HPX7JbN9Tsp7EtdDzi6y8HikxFO4HrLnAl+nKwIW9m9vgbdd
QTz5L/B6U4h6Xwfneirfw6NpSi+g9GBV3nwb5bee1rMTLb0J+0HP5Ht7NNwV
+0vvT9B3lMZ6u+KLfG+PejbAejotV5RgF1remNdTA41y4fhd6XIz7Bf9fKvx
e16KDVTfVc/xlLs8ONgT+82egiv4PTQa9xj5e5+LuRwFP0B8M7/ze11l6HkX
7AfWZxxPSTJ2xv7x9iriD+mq55LUmvVlRMXS8dyQH+sPiEYehV5f6Q2VPrIj
ygcc4Tw4/n95R6VLFvV7XQVHuyI/lR8zO1NUGexvSx+z/xJUsSD2p3KXoHco
pGdXKplJj1D++ip/3h1RX78rzI5gEc/MQ+DT7fRcmPa2QftutOTxlZe2p2N9
/WLGeCt7XM8FKddRrK8hFhf5Hm6A0jsqve5JrMcXFsr3QOluO6z3oZtRn+Rl
Jso5X8deZro85nd9itILc/wPTOQ8H+O1Tmfovpsj5Xja3EHPxahpO9gvjMV4
lvy3me46gKfl4/3JRM+TMb7TV/N+baLW6+E/20rwqcawj1um59zkmEl/nql8
2jo9u1DoGt4vTfRpNvIfsF7PxenURtivW4/xNbQY4js3B8/hTSus5xIU1R3t
0UbAPrqXnsvSdGfYL6uK58qClG5XuuQHYv9oD+7B/paZqXcnPBd3juuPMFOF
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
tMYhigeI72nAvV/g90s+a7C+zFB6stL/H7H6cYY=
   "]]]], "Output",
 CellChangeTimes->{{3.948239823265634*^9, 3.948239838882937*^9}, {
  3.9482398846887703`*^9, 3.948239904096547*^9}},
 CellLabel->
  "Out[355]=",ExpressionUUID->"a1ee7faf-a86a-416f-b9b6-282e63111968"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{Full, Full},
WindowMargins->{{116, Automatic}, {Automatic, 4}},
TaggingRules-><|"TryRealOnly" -> False|>,
FrontEndVersion->"14.1 for Mac OS X x86 (64-bit) (July 16, 2024)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"b586fd61-5855-4fe7-99a4-0a809c15fef0"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[554, 20, 147, 3, 29, "Input",ExpressionUUID->"62507eb3-e38f-4626-89b6-059a39f765b3"],
Cell[CellGroupData[{
Cell[726, 27, 149, 3, 96, "Title",ExpressionUUID->"46ad13c3-f813-4a8f-920f-1b3232e94a41"],
Cell[878, 32, 156, 3, 52, "Subtitle",ExpressionUUID->"86d1617b-3980-4e0b-8a96-78f281084cd9"],
Cell[CellGroupData[{
Cell[1059, 39, 496, 13, 29, "Input",ExpressionUUID->"8a7a6320-acf2-4e2d-8166-97cd3ca2a8fc"],
Cell[1558, 54, 305, 6, 376, "Output",ExpressionUUID->"4fad0571-2996-41ce-af5e-792642609542"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1900, 65, 551, 15, 29, "Input",ExpressionUUID->"1ca32b9f-7c6e-44a0-ab00-b9680112999f"],
Cell[2454, 82, 1268, 25, 376, "Output",ExpressionUUID->"1e35c610-ea60-4f49-98cc-690832e4400e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3759, 112, 516, 14, 29, "Input",ExpressionUUID->"1587b94b-fb14-4336-b529-f7bcee4f39af"],
Cell[4278, 128, 2624, 38, 376, "Output",ExpressionUUID->"e8f33b49-666c-4f45-9879-52bdd6ca3d9e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6939, 171, 487, 13, 29, "Input",ExpressionUUID->"ebcc6e5e-9f4c-4f3d-83ec-470fa194bb13"],
Cell[7429, 186, 2157, 30, 376, "Output",ExpressionUUID->"d2eb2e5e-66a2-4ef3-8e57-4cbb8cb311fe"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9623, 221, 590, 16, 29, "Input",ExpressionUUID->"f95bcc6e-f41b-4b3f-a00b-4789a7affa64"],
Cell[10216, 239, 1884, 38, 462, "Output",ExpressionUUID->"573993ed-a67e-437d-8aed-fa699648ac45"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12137, 282, 696, 17, 29, "Input",ExpressionUUID->"4f481d9a-ed76-4900-8a48-39287bf31203"],
Cell[12836, 301, 5884, 108, 407, "Output",ExpressionUUID->"a48274f1-c68a-467d-8630-58b1dcb41864"]
}, Open  ]],
Cell[CellGroupData[{
Cell[18757, 414, 275, 7, 29, "Input",ExpressionUUID->"c89663ad-c97a-469d-8286-4605d46ec252"],
Cell[19035, 423, 5717, 108, 407, "Output",ExpressionUUID->"f97630c9-8f39-4d98-9964-ea4918eb8ed6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[24789, 536, 822, 20, 29, "Input",ExpressionUUID->"b7541833-01b1-43d4-ade9-5c9ec758e47c"],
Cell[25614, 558, 256784, 5051, 408, 111142, 2663, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"7621fc60-d002-452b-a460-8250abf30b75"]
}, Open  ]],
Cell[CellGroupData[{
Cell[282435, 5614, 860, 22, 29, "Input",ExpressionUUID->"7ac2acf3-e4fb-4c94-9309-e4fa1a0767e1"],
Cell[283298, 5638, 2129, 42, 355, "Output",ExpressionUUID->"9c114281-2805-43e5-b1aa-38f5d2718fdd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[285464, 5685, 585, 15, 29, "Input",ExpressionUUID->"41b555c8-fe18-4e4e-8b1e-97bbaddb8056"],
Cell[286052, 5702, 6045, 130, 367, "Output",ExpressionUUID->"0690e756-1617-4328-bc24-409c655d68ee"]
}, Open  ]],
Cell[CellGroupData[{
Cell[292134, 5837, 476, 12, 29, "Input",ExpressionUUID->"f0e3b51e-8bf9-462d-8ba5-987992be8e0e"],
Cell[292613, 5851, 935, 15, 411, "Output",ExpressionUUID->"d170b6bd-bc4f-4d23-92b7-de5691a9b12d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[293585, 5871, 774, 21, 29, "Input",ExpressionUUID->"3a2abd4b-87ff-4077-b495-71496c3c0e97"],
Cell[294362, 5894, 1902, 38, 463, "Output",ExpressionUUID->"f3c174a8-886f-40f1-acab-e5e5e4153513"]
}, Open  ]],
Cell[CellGroupData[{
Cell[296301, 5937, 207, 4, 52, "Subtitle",ExpressionUUID->"4fefffd0-ae79-4f22-b3f8-819126f33a03"],
Cell[CellGroupData[{
Cell[296533, 5945, 1643, 31, 36, "Input",ExpressionUUID->"b20ab2cb-69d3-4072-8ed4-dbbad364f219"],
Cell[298179, 5978, 238, 4, 35, "Output",ExpressionUUID->"97b6581b-42d5-47f6-b371-db34eff8b509"]
}, Open  ]],
Cell[CellGroupData[{
Cell[298454, 5987, 1410, 26, 37, "Input",ExpressionUUID->"4f514274-43b6-4cb4-828f-8db78cc85dd7"],
Cell[299867, 6015, 387, 8, 33, "Output",ExpressionUUID->"6972eb5d-d597-42f3-b153-9fe562b08a4b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[300291, 6028, 991, 20, 37, "Input",ExpressionUUID->"81aa52cd-0ff8-41ee-8a19-533e985642b7"],
Cell[301285, 6050, 308, 6, 33, "Output",ExpressionUUID->"79ab99df-e241-4b53-b073-5df16f5b1792"]
}, Open  ]],
Cell[CellGroupData[{
Cell[301630, 6061, 2701, 52, 36, "Input",ExpressionUUID->"f1681d20-3626-4d33-b1d5-009bc3ed77cb"],
Cell[304334, 6115, 191, 3, 33, "Output",ExpressionUUID->"45654082-9ef0-44c5-ac46-ff7118eeabf2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[304562, 6123, 2792, 52, 36, "Input",ExpressionUUID->"d53de2ca-8f54-4911-8b73-b5fc627e1023"],
Cell[307357, 6177, 193, 3, 33, "Output",ExpressionUUID->"77a5d0ae-71ea-4fa8-86a3-56ab81a89315"]
}, Open  ]],
Cell[CellGroupData[{
Cell[307587, 6185, 978, 21, 37, "Input",ExpressionUUID->"a5f97597-7da6-40a0-8552-6ff21f50d2ce"],
Cell[308568, 6208, 600, 15, 34, "Output",ExpressionUUID->"078a2bb4-e47b-40b8-af4b-486caab1b9d6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[309205, 6228, 9748, 175, 39, "Input",ExpressionUUID->"9436c7eb-d7e8-4bc5-8ade-cb90b1b81c2e"],
Cell[318956, 6405, 240, 5, 35, "Output",ExpressionUUID->"272c636d-f350-4acf-8682-f80170f70444"]
}, Open  ]],
Cell[CellGroupData[{
Cell[319233, 6415, 12677, 231, 99, "Input",ExpressionUUID->"678665dd-b24b-45b4-a66b-5c00c67766a0"],
Cell[331913, 6648, 1149, 34, 35, "Output",ExpressionUUID->"62482ddc-e623-4cff-b95c-c4e359df657b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[333099, 6687, 276, 6, 29, "Input",ExpressionUUID->"6843c086-211e-446a-8f1b-c18c0bfe02e6"],
Cell[333378, 6695, 238, 5, 33, "Output",ExpressionUUID->"482c85b9-0b9b-4b34-961f-3d61e1f3d40f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[333653, 6705, 399, 10, 29, "Input",ExpressionUUID->"34f334c3-6728-4e4d-81f0-5ca71f2ad018"],
Cell[334055, 6717, 1098, 31, 33, "Output",ExpressionUUID->"9ce75a0f-4279-409a-9d10-02e1ccc55bcd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[335190, 6753, 2134, 41, 37, "Input",ExpressionUUID->"e49f7d15-7e64-40c2-9332-b9cb7a322e60"],
Cell[337327, 6796, 1891, 38, 203, "Output",ExpressionUUID->"238c8394-4924-49ef-9129-34d77bff6c23"]
}, Open  ]],
Cell[CellGroupData[{
Cell[339255, 6839, 492, 11, 29, "Input",ExpressionUUID->"ea3347ff-2217-45a5-9744-6609603ac9ce"],
Cell[339750, 6852, 3845, 65, 380, "Output",ExpressionUUID->"98d164c4-09a2-4e15-94a1-c6fe6f137945"]
}, Open  ]],
Cell[CellGroupData[{
Cell[343632, 6922, 482, 12, 29, "Input",ExpressionUUID->"7b00852b-2ea6-49fb-ad5c-e4831ea0e688"],
Cell[344117, 6936, 1907, 39, 462, "Output",ExpressionUUID->"7360bf27-0d76-4e87-87b9-4cb55b092862"]
}, Open  ]],
Cell[CellGroupData[{
Cell[346061, 6980, 448, 11, 29, "Input",ExpressionUUID->"1a300bf0-60e5-4025-b56f-a4c04f727e53"],
Cell[346512, 6993, 32583, 536, 449, "Output",ExpressionUUID->"a1ee7faf-a86a-416f-b9b6-282e63111968"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

