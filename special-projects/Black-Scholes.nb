(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Wolfram 14.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       154,          7]
NotebookDataLength[     62610,       1233]
NotebookOptionsPosition[     60426,       1182]
NotebookOutlinePosition[     60879,       1200]
CellTagsIndexPosition[     60836,       1197]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["The Black Scholes Formula", "Title",
 CellChangeTimes->{{3.9540724228576527`*^9, 
  3.954072427696946*^9}},ExpressionUUID->"caf729c5-3aa1-48fb-981c-\
8c262a12d69d"],

Cell[CellGroupData[{

Cell["What Are Options?", "Section",
 CellChangeTimes->{{3.95407270036539*^9, 
  3.954072705756456*^9}},ExpressionUUID->"1762628b-ccfc-4f6b-be4a-\
026e202525fa"],

Cell["\<\
\tOptions are contracts that allow one to buy or sell a security or assets a \
set price. Their are two main classes of options: calls and puts. A call \
allows the person who buys the contract to buy the security or asset, and a \
put allows the person who buys to contract to sell the security or asset. So \
for example, if I buy a put on Apple shares with a given \
\[OpenCurlyDoubleQuote]strike price,\[CloseCurlyDoubleQuote] I\
\[CloseCurlyQuote]ve bought the contractual right to sell those shares at \
that given price.
\tTheir are many types of options contracts, but the two most common are \
called European Options and American Options. If I\[CloseCurlyQuote]ve bought \
a European option, I can only buy or sell the given security or asset on the \
maturity date. So for example, if I\[CloseCurlyQuote]ve bought a European put \
on Apple shares with a strike price of $200 and a maturity date of May 2nd, I \
can only exercise the right to sell the shares on May 2nd. If I had bought an \
American put on Apple shares with a strike price of $200 and a maturity date \
of May 2nd, I could exercise the right to sell the share at $200 any time \
before May 2nd.\
\>", "Text",
 CellChangeTimes->{{3.9540725205014477`*^9, 3.9540726814399433`*^9}, {
  3.95407271682096*^9, 
  3.954072918264179*^9}},ExpressionUUID->"c31ede2a-ec95-4096-9d52-\
b39b3ee9b314"]
}, Open  ]],

Cell[CellGroupData[{

Cell["What is the Black-Scholes model?", "Section",
 CellChangeTimes->{{3.954072932728651*^9, 3.954072939626025*^9}, {
  3.954073233132988*^9, 
  3.954073236161214*^9}},ExpressionUUID->"d1944593-b895-4208-9803-\
140208a3d4f2"],

Cell["\<\
\tThe Black-Scholes model is the most popular model for the evaluation of an \
option contract\[CloseCurlyQuote]s value. It it specifically designed to \
value European options. Because American options can be exercised at any time \
before the maturity date, the evaluation of their value is much more \
complicated. To value American options, people generally use the \
Bjerksund-Stensland model. However, because the Bjerksund-Stensland model is \
so much more complex, the Black-Shcoles model is can also used to provide a \
lose approximation of American option\[CloseCurlyQuote]s values.\
\>", "Text",
 CellChangeTimes->{{3.954072952801619*^9, 3.9540729787219887`*^9}, {
  3.954073141407943*^9, 
  3.954073501044252*^9}},ExpressionUUID->"9173c321-331e-40cf-a02b-\
6fe27a262213"]
}, Open  ]],

Cell[CellGroupData[{

Cell["The Formula", "Section",
 CellChangeTimes->{{3.954073510721981*^9, 3.954073512759295*^9}, {
  3.9540735950064096`*^9, 
  3.954073601140649*^9}},ExpressionUUID->"d7788ccd-ef61-4e28-a2aa-\
1f92a364deb7"],

Cell[TextData[{
 "  ",
 Cell[BoxData[
  StyleBox[
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJzsnQe41FTXtv3sDewFCxbsvYsidlQsiIhiVxBQVEARFUVRsPeC2AtWLFhR
RNTX8trBXrD3huW1K4qa/7339+38e/ZJZpJJpp3z3Ne1xTOTSTKZlLXXetZa
y/Qa2K3vjDPMMMORs//3P916HrPFoEE9j9113v/+sduAI/sdNKBP784DBvc5
qM+g9r1m+u+LS/zPDDNM++/yM//3/wMhhBBCCCGEEEIIIYQQQgghhBBCCCGE
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGE
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCiArw
5JNPBiNGjAjuueeeWu+KEEIIIYQQIgNPPfVUsOyyywYzzDBDsNxyywXPPvts
rXdJCCGEEEIIUSZdu3Y1tr0dd911V613SQghhBBCCFEGb7zxRrDSSiuFtv3i
iy8evPXWW7XeLSGEEEIIIUQZoLefZZZZQvu+Y8eOwSeffFLr3RJCCCGEEEKU
wRlnnFGgzTnooINqvUtCiP+D+Td6uXfeeafWu1I3fPTRR8EjjzwSPPDAA7Xe
FSFaNOTucX96++23a70rdcMHH3wQPP/888H7779f610RLZxdd921wL4fN25c
rXdJCPFfbrjhhmCNNdYIllpqqWDdddcNfv3111rvUs35+eefg1VXXTVYeuml
ja7w0UcfrfUuCdHi+P777029Pa5D7k/YESIIPv3002CttdYyxwUtxMsvv1zr
XRItlM8//zzYZJNNQtt+xRVXDO6///5a75YQLZ5Ro0YFq6++urkueVZcfPHF
td6luuGAAw4I71lzzDFHcOONN9Z6l4RoURx11FHBIossYq7BZZZZJrj33ntr
vUt1AfOeHXfcMbw/4Yt4/PHHa71bos558MEHg/POOy8499xzg4kTJwYvvvhi
wfufffZZ8Nxzz5n3hwwZEkyYMCF44YUXCpZhLkkcDRt+ypQpwdixY4MVVlgh
PBc33HBD8xn7PuPvv/+u5tesCH/88Ufw7rvvmhr/9913X3D77bcHt912m7kn
/fvf/zbxtKQQc7v++uuDf/3rXxXcY9GSId5tbfu55547GDhwYK13qa7gXtep
U6fwvrXooosG11xzTa13KxLqF6AjOvnkk83vyr2Hv7nPYgsUg3sTy3/77bdV
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
1aTNF47SbCY5huUQ9RszsOtF86BHjx6x5xM14CqNq58kVl5tsIlsDfp6HLXE
9VNzb89aJxh9T9xc0tWJ8XzKS6OFz8PXBmWpf4+POi6Wn+b5GZVbxnqzxIpr
bd9H1b9H355G54c2x36WGGJetXeYX0blgCSNF44ePbrgc+gO8tIOifJwfe5Z
a9HjR46zi7k/ubqOPn365PQNovvHZ6l/z3ke1S8J30nS2hXUfY3q2ce1XAp8
u+hr/M9eeumlsZ9x85btKKUDKoeo+vf4qrM8a9AjxeX2lNN/9rrrrgv9nVHz
zCx9Ufz99vs+2lEsZ0I0Fmiw/DmtHRdddFFFt00+BvprO9clhl5NsEeo1UV+
WKm+srUYxEMrkVeTFPd5R+58Vh566KHY+KNb954aanmBbenHqMiFKjenCq27
b0MzZp999tgYtA96kKi69zvssEOTZakHkrQmSK3te/LX/HsJNkGauZQ7p8TG
yKP3DOAn9Y83dlBUn2Dsdp6j7De/FXM6f25KTiav48/k37yeuyIZHG83/zOP
WrrkfHAdR92fbEyJfPYsOkUffGh+D41y7EIL8e8oLTj3haR9KNDeR9WV9es0
Yhdz7vtxE3L/3Tx09EzF9DZRekdiM3lTif61cfMpe49IC/rOOP8R80y3L1ZW
iJn72yAHuxp+XVEdmG+7Nd/cUW4+ZRKwk9zrImvNgHLgPhb1vetppOnHmCfo
jd3nTh71McixivMZzDLLLOZf/Ex33XVXDt/gf8Ev528TPWi5PZfcGv3uILaf
tFYiPjs7r3WHP59G+0hdHHRNSep619q+f/bZZ5t8J+LNaXKZXQ0X3yWv+vL0
HPP3jd7DUbXc8Okzv2b7zAWJ97i2JNcFv7d9n3/pTV+LWvgtFeZl1o7FP4Od
lRWu3zjb6n/+539CWzXPfg5R9iF+lXJrDKKPiapnznWVtJ5nlN2HTxn72IVe
h8xF2F9Xg4fNjx8aTRP3sFL59X4tT+YW9KvLG/Kv/e+Vpv9FFOjryRv018tr
5daB5/jbXI+o+2kekH8W1XuS+at6UzUvsCGjziWecZWoRUu9affc4h5RrR7V
LtRfwGeKDqAeB8ef+2Qt4Bq39y18V+iX84A4rV/Pxh3YUXn3O6Wmm7sNdNR+
D8GkEA+Img+TW5vUz049Cf/z2JCu34S5kH3uYUMmqT1Wa/s+ykeeJicBrerS
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
QBPywgsvmHpz6F39ge0Z9To9V/BNZwE90CyzzFKgAcqrt0q9wTGjRhD9dpj/
TZw4sVnkD4v6h75aboyRek70QKp32McsI6v2vn///gW+B/qENVJsVgghRHbo
i+T2vOIZig9KRENvXbdvOfm81METQuTPvvvuG7Rq1Sq83rp06WJijyKa0aNH
B/PNN1+BFpGexkIIIVoe5NYSw7XPBOq56RnaFGpAutpa+sak6VMrhEiPW++L
er49e/as9S7VJdTMR8dkjxUaHXqGCSGEaJlQq+Giiy4K5pprLvNcmGOOOYJB
gwbVerfqCur1dO7cuSDOce+999Z6t4Ro9qCpc2tVkddO7Xjx//noo48K+tFh
2z/11FO13i0hhBB1gGvjt23bNrj22mtrvUt1Q79+/cJnJ/0CqCUjhKgOP//8
c7D33nsX5Ao99thjtd6tuoBjQ39ce2yIMd5xxx213i0hhBB1xN133x3WfaTP
inQ6QfD777+HtTyoy0PfGCFE9Rk+fHioL991111rvTt1Ab57m4e85pprmv4B
QgghhA82/pgxYxqmp0w1+Oyzz0wdGWr2CCFqxxNPPBHccsstqs/qMHnyZHN/
euutt2q9K0IIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIarI77//Hnz++efBu+++G7zzzjvm
///880/z3tSpU80QotL8888/wS+//GLGtGnTar07QgghhBANySuvvBL07ds3
aNeuXTDDDDMErVq1ClZeeeVg8ODBwcsvvxyMGDEiOO2002q9m6KZ89VXXwVH
HXVUsOWWWwabbbZZ0K9fP/OaEEIIIYRIBr7Sxx57LFhhhRWCNddcMzj//PON
rT9+/Phg6NChwXLLLRf07NnT2PwPPvhgrXdXNGO++eaboFevXsGKK64YTJky
Jdhnn33MeccgliSEEEIIIUrzwQcfBJ06dQrWX3/94P3332/y/tlnn23sq8UX
Xzz49NNPa7CHoqXAubjWWmuZOBJaMeae3bp1M+cffvyffvqp1rsohBBCCFHX
/PDDD8GJJ55o7Kcrr7wycpnXX389WGihhYKddtpJPlRRUYgZcS527do1+PHH
H81rF1xwgXkNvc7PP/9c4z0UQgghhKhvPv7446Bz587Gfnruuecil8Fnv/ba
axsdvhCVhPnmOeecE7z11lvhazfccIM5P4844gjj0xdCCCGEEPFMmjQp1Dff
eOONkct8+eWX5v1rrrmmynsnWjq//vqr0ePPOeecwZ133lnr3RFCCCGEqHse
ffTR0L5faaWVgjPOOMNocMhztPz999/BF198oTqFouqgGePcPOSQQ4L//Oc/
td4dIYQQQoi6B1t+9dVXD218m0fboUOH4NhjjzX5tuQ4ClFtPvroo2DdddcN
Tj755ODrr7+u9e4IIYQQQjQMl112WYF97w5yah955JFa72Ldgn7kjz/+qPVu
NDvI+VhyySVNPImaOeSJXH755cFvv/2WeB3EnaZPn17BvRRCCCGEqE+wgW6+
+eagR48eJo92rrnmKrDxN910U6PP8Wnpti39fQcNGhTssMMOwffff1/r3al7
OF/I5eBYMT755JPw/xnfffedWY6YEufgk08+GfavvfXWW4NNNtkk7KVcCmJO
nM+Mt99+u5JfSwghhBAtDOyRRtG3sK/ffvut0eRccsklpq+VtfHR6btMnTrV
aCficnKbO8x3dt99d3Ns6LWqui7xYLePGTMm6N+/v5k/rrfeema4/88gj5a8
j2WXXda8Rz+GDTbYIBx8Pg333XdfMPfccwdrrLFGMHny5Ap9OyGEEEI0ZyZO
nGj0BNh7e+65p7H/unTpYur91Rv4Sx944IGi9cSvvvrq0L7Hf+py0003mddH
jx5d6V2tO7BB9913X/P9DzjggIJcZFEIGvq99torVv9lxxJLLBEMHz7caHDi
lrniiitSb//QQw81n91uu+3kxxdCCCFEanbZZZdIu+Siiy6q9a41AW3EUkst
VVRb/8orr4Tf4dlnnw1fJx6x3377BQsssIDRRbc0TjjhBHNMtt122+D555+v
9e7ULWjot99+e3OsmA+NGjUquP/++03eNvY8r9O76tVXXzU91NDuoLUnlzZq
lNPbCk0Qvn+2RU9c4k5CCCGEEEnB5iUfdaONNqp7+/7uu+82+/byyy/HLmP7
Cm299dbGjkdrf/DBBwc9e/Y0mnzem3XWWY2PtFE0SFl54oknjH6EuU1LjF0k
BVt8wIAB5hyhf5qbn4AOzNr95fjk0zJu3Dij05lvvvmCiy++OPXnObe5Xpif
fPXVVxXYQyGEEELUO1OmTAlWW221urbvhwwZYvbtlFNOiXwfGwztCcucd955
5jXs+z59+oTfC38o9v5tt91WM/u+HJ9uueALtlqTffbZJ/jxxx+rtu0sVPMY
WciNpf7NLLPMEjzzzDMF73Eede3a1RxHNPfVgPOU7aGXe+ONN1J9Fh3b0ksv
bT5/+OGHV2gPhRBCCFHPvPvuuyanr17te+zSnXfe2ezbVlttFbz11lsF75Mr
Ss1x+77vs7T1NP/9739Xc7ebcNdddwXt2rUz9lc1IJ6x0EILBYsttljw4osv
VmWbWan2MQLqUh599NHmHNlxxx2b1LzhfFp55ZXN+6effnpV9um1114L5pln
HrPNs846y+xjEliOGkn2WmZeJ4QQQoiWB9r2VVddtW7te/YPjQl6ovbt25u6
g/jxL730UlM3B/0N+7333nsHL7zwQsFnsXfw/dPrttY9h9BasJ/nnntuxbdF
nuhBBx1kttepU6ea+MTLoZrHyEKf2W7dupntkoftQ86CvTYeeuihqu0Xc1Xr
w6e2aRL43e3nGCNGjKjwXgohhBCiHkGrXs/2/TXXXGP082jvqSmCzbLZZpuF
de833njj4Pzzzzf5kT7YteQYYL/98MMP5rVaaXNGjhxZNduVeQ41HNnemWee
WfHt5UU1j5GFPNkNN9zQbJc5o89hhx1m3uvevXt4DlUDcnnT2unUxCJmw2fQ
GpEHLIQQQoiWR7377+kZZHsJAf2DqCvy3nvvBR988IHpLxQH2gpyFallCNT+
JL+2FlTTdsWmt79nrXVJaaiFfc/5RH1Ytku9WBe0a/Y4ptXBZ4V5xyKLLGK2
TeyKv0vBcbP7Sx2eqD5vQgghhGj+UCtk9dVXL2nfo3XBH44P07c10MBjb1Oj
sp56o9Lnlu903XXXmTgF/z9p0qSa7AvHtRq2K/kK5IGyrYUXXjhxDRXmUehA
4pZnHvjhhx9W1Gas1jHy4TyZd955Te0c8mupe/n000+bvlWtW7euSV804kzk
A9gYFddXKdza/fSzEEIIIUTLhB6wcfVzsDHwee+xxx5Bjx49wn/Rs+PPRBNz
7bXXmte32GILk4eIL/S4444zfWVrDfUhl19++bB3KzUip0+fXpN9qZbtis/Z
1jxda621EvWqRffEb0gPVurkDx06NNR2YO8yX6DuKPkP/fr1C958882K7Hut
7HvmrcQO2rRpE8wxxxzm/MZ3To+IpNr3SmD98TPNNFMwduzYgveYx/H+aaed
ZuJT1Onv2LFjeB3zew0ePNjkqpx44olV1RYJIYQQoraQkxenz8FnH9cHC5+4
rUlJ/iv24SqrrBK+j51YS9vI7j/1duhti37/t99+q9m+XHjhhVWxXV966aVg
ttlmC+sJlQKNE37rxRdfPOjdu3f4+6E3HzZsWFg7Bl+2rbPEfKkSNn61jlEU
zGU5X6kdP2HCBHPe4MevJWPGjAl/D2pEuTD/KtVn1w7qZXKdCyGEEKJlgNbG
9d9brTpg82BzUT/QapRdfS//YgOi28BPTB1G7EC7DFr3pLX9mjvV8k3z+9nj
Tx/WUlBHEw3KEUccYWrmuz5gq/FBv3LnnXcG22yzjXmNucBzzz2X+77Xyn9f
rzz++OPh78A824W56qmnnmqO1dlnn236O9hlibPgt+c9Brm6f/31V42+hRBC
CCGqTVL9PTW53XkAA/vCx9abZ1C3vlj+a0uiWrbr8ccfHx5/5mXFQFOPlgdd
Cn5/dCrorOzniQOgv/rmm2/COqSM+eefv0kfqDyQfV+Im99LHai4OqfMw6kP
q7r3QgghhICk9THRA6y55poF/vsovQt2n11mmWWWMfMCUR3bld5MAwcODI8/
fttiTJ482eSVbr/99uZvzoVFF100/PwxxxxjXqdGfIcOHcLXyWmoRH6F7PtC
yG9p1aqVOSbETuJ6OJATbeuhJvndhRBCCNG8oR5KEvue+h2ufb///vtHLofN
6Pr4y9HgUw+z2qNc8G0nGeRB2lrmST+TFrRQtnYO47bbbiu6vO0nRY9UuOee
e8LP0vfWrQlJPRlszB122MFodRr1GFlqcY6lPdew2/kdOCb0fIiLhZFHPvvs
s5vl5ptvPpMvLYQQQoiWC9p5Ny82zr4nP9XV55x00kmRy9FbKat9j248ae5g
HoN5Szngw6bWCnmnpYbNU+VYJ1l+xRVXTB37wL4nz9l+r1K179F7YMPj94cj
jzwy/Cw5t9TMdCHfNG0dlno7RpYDDzywqueYHePHj0+8j/jrOXZ8jtpGxFei
4Fq068ePT7xFCCGEEC0X7K+4+pguvn3v5uG6tCT7fty4ccFyyy1XMds1bf/R
tPa9C1qrTp06hZ8tpd1PSr0dI0uj2ffo4aLse35zWyefQU0rIYQQQrRsPvvs
s0T5tdRDdHU81NWJ4qGHHsps32NrVnuUC77SJIPeqBwP6pok/Uw5uHmwpfQ5
LtTJJF/Cfvbee+8ta/tR1NsxglqcY2nPNVefQ95zlH3PMu51efnll5d9TIQQ
QgjRPKAutq1rXsy+Zzl3HmA12z7UyHTt+3L9q82NauWO9u/fPzz2afIsH374
4fBz5NhSW6faKL+2EDe/Fvv+2WefbbLMY489Fv5uM888czBlypSC9//4449Q
fyWEEEKIlgE2RBJ9DrX63PzaOP+9b9/XusdVvVCP9TFd6DlsP0fv01r0O5V9
XwjXjv1NqDVLz1ofYh12Gebfbv4u+h7y4Pv06RNMmzatmrsuhBBCiBpC/Zwk
+hzycF37/vzzz49cTvZ9NNWyXfld7LFPWgedvlb0G7afO/bYYyu6j3HIvi/E
7W/Vo0ePJu9T9556RnaZvfbaq+B9ehfw+qBBg6q1y0IIIYSoA7DvXbs9zr5H
n73WWmuV1H749v2rr76a+z7fdNNNwVVXXWXsFwY9ta6++mrz2ujRo4Pp06eH
y9K/64orrgiuueaa4LrrrguuvPJKsxzfp5pUy3Z1+w9stdVWiT7D3K1t27bh
5+67776K7mMc9WzfT506NXj++eeDW2+91eTIkpce5U/PkzFjxoS/SVS9KuqD
unPzM888M3yPuBw1dxZZZJFgwoQJFd1PIYQQQtQHxPGxAagviB1gbYTBgwcH
kyZNMvVy7HLYEc8995yp4WGXO+GEE5osB9g/rn3P3yzDPCIP0I24+YT+IJfA
1ZagI4pa7rDDDjO1R6pFtWxX6hfZeqfMx5Lkcz711FPhcVl77bVNrkUtqFf7
nvPc9ZMz2rVrF+y3337meFcKjoPdHnNaH+YX+PX9fGp0OfQm4zV6CeDnF0II
IUTzp0uXLqZW9oILLlhgt8w222zBEkssYWoP0ieH5dq3b2/6nPo2Mr5BlqMO
IzblkksuGcw666wFy8w999zBsssuG6ywwgqmfnoeYL+QD2BrQbZp0yZ45JFH
jB/a7x9Enughhxxiltt9992Nn5+cxLheoJWiWrbr77//Huy5555mWwsvvHCi
edXQoUPD36t79+5Gr1ML6tG+f+mll4KNNtrI5LdiPzMXokbNuuuua/aV8//J
J5/MfbvMPXfaaSezDa5HP2/WcsMNN5j3WY7amNj1HTt2NP2uzjvvvNzm1UII
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
m8K+7oyHH3448/aEEEIIIUTjgn1fTGN5zDHHmHqLce/vsssuxoY96aSTYpfB
3+xCP0n73qBBg0wPmjnnnNNoilnPkUceGSy00EKhjT506NCCet8u+N+7desW
ro95ArXcRo0aZeYb9nXWbX2Z+MCj9nOrrbYy8wF0DtRktq+zb6+88krBdqlH
uOGGG5r3l156aRPPZrscryWWWCLUp/J6FqgLzRxq1llnDXtxYuszf+Bvuw92
TlSrehZxv48QQgghhKgu2GXoWB588MECu5t66tjO2MT0SqL+tpvnx/v43W1+
FcuNHTvW+PR5H//ywIEDg6eeeqqJD9vNr8UGpt8VmhoX7GS7DD7rKJ0Mddrw
tdvliDW4sN/EBOz7l112Wfgec47bbrst2HHHHcP36aGI7/2BBx5oMqdBN2RB
f2PjDCz/5JNPFmz3xhtvNHMC3mf7U6ZMKeu3oS6O+/2oaWGPJfEE9zgyttxy
S6OLqjbotIj7cP7kPZi7UZtPCCGEEEKk58orrwxtRXzQfk/BiRMnGh8x7y+z
zDLG/vfB9877xx9/fOx2unfvXmCX0l/SB5sZP7pdBk2+D756+z62Lr0qfS65
5JJwGbbr9/05++yzC/alb9++5nV0Lssvv3xoN6PtB3q140+3yx977LGR39Gt
ZVJODvHnn39u5ht2HYcddlgTH/nkyZML9v24444ruV7WkXfdxC+//NLkc5aq
t1Hu4JwSQgghhBDpwR+OPsXaVX6fTDQq1Dy27/vaE3z42HloRshdjYJ8Xde+
py5IlH8b+xbfvl0OO9wFW97d1zg7m3VTE55lVlxxxeD5558veP+cc84J14EG
xtXh4OMnJmBte3D7iDLi+gide+654TLUtMEGTgo+ePIO5pprLvN55hlRupt3
333XxElc/34xOKbMNThuzFPyhFwE5ntJBnnL/ItOyg5+J3cQu7BDddyFEEII
IcrH1Z136dKloL7xWWedVWDbko/qvn/fffeZ18kDLdYP3rXv0ZFHQS0d176n
vrfLQw89FNrtDDTprk1oB/qgpZZayixD7u1dd91VsB56vdp1MHdB01OME044
IVye/i/sR9R2ycm1yxGHYD+SQv0etxdpXE0ccmvtMtjs/hwADQ91feg1OWDA
gKBjx45mWfJy87bv65mrrrpKQ0OjhY977rmn1rciIYSoGdddd11oM+LvfvHF
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
TZ9pW/P+mWeeqdJeCiGEEEIIIZJw6KGHGlv9ggsuKLks2nxr27dr1y5RP2kh
hBBCCCFEdXjrrbeMzmbllVcOvvrqq5LL27kAY8cddwymT59ehb0UQgghhBBC
JGHQoEHGVj/jjDNKLkuN2S222CK070866aQq7KEQQgghhBAiCdS/ofcb2vsv
vvii5PLo9Nu2bRva9/fee28V9lIIIYQQQoj6hdqTU6ZMCW666abgwgsvLBjD
hw9v8tp5551XsV5Txx57rLHT2W4U+OtPP/10sw/sy8CBA0PbnnHyySeH+/z4
449XZB+FEEIIIYSoR6hB+eCDDwb9+vULNtpoowI7udS45JJLct+fDz/8MFh/
/fVNzftPP/00cplTTjkl8T7us88+ue+jEEIIIYQQ9QjalxNOOCFYcsklU9n1
laxBOWTIELNufPhxjBo1Kth9992DHj16BF27dg3WWGONcJ922mkn8x6jW7du
wdtvv537PgohhBBCCFFvYNv36tUrtIvnnXfeYNVVVzX28ZZbbhmstdZaBbb8
mmuuaerS0ENq8ODBwdixY4Pvv/8+dv0ff/xxoro3Lp988omJISy22GLBRx99
lOgz1NlZeOGFzT7OM888wcMPP5xqm0IIIYQQQjQ69Hrt27dvaLtjy7/yyitG
q2P57LPPCvQ6aXJW0fust956Qe/evVPtF7Vy2Ba1LpNy6aWXFnyPqVOnptqm
EEIIIYQQjc6ECRNMbRpsYv594oknIpezea4MdDylQC9/1llnGe08nyEegJ4+
CZ9//nnQsWPHYKGFFgref//9xN+FeILdx+233z7x54QQQgghhGgO4Jc/4IAD
Qpt42LBhscuOHDkyXG6//fYLpk2bFrvs008/bfQ+M800U4Gu57TTTku0X+ef
f35q3z01fzbYYINwW0lq5QshhBBCCNGceOCBB4JFFlkk1KujeY+DPlHWdh4w
YEBsT1g08JtuumnYOxatvv3c5ptvXrKGPTp9+lOxP++++27i73LfffcFc845
Z7gtdEFCCCGEEEK0FP75559g6NChoT287bbbFl0en71dFl9+HNjv2OdHHnlk
8M033xToehhodopBnU2W69OnT6rvY33+VguUNp9XCCGEEEKIRubLL78M9t9/
/0TaHGz2jTfe2Cy3+OKLx2r0LX/++Wf4/++8806w2mqrhdvZZpttjN0fBfGD
Tp06GT88cYA07LXXXgV1Mf/+++9UnxdCCCGEEKKR+frrr4MOHTqENjGa+Tio
Md+qVSuzXPfu3RPnyVrQ0bs+/KuuuipyOV63+v40oL1fe+21w/WPGDGi4H3y
dXfeeedg/PjxqdYrhBBCCCFEo4B9T40Z7OEVV1wxmDJlSuRy1MncbrvtzHLz
zTdfcOedd6be1quvvhq0a9euwIf/66+/Fizz3Xffmddnnnnm4M0330y1fpaf
ccYZw/U//vjj4Xt//PFHsMMOO5i+Xa+99lrqfRdCCCGEEKIRwO61de+XWGKJ
2DqUVg9v62KWyo+N25Zbu5JYgN976pprrjHv7bHHHqm1NRdeeGG47lVWWaVg
H23dH3rYFuvBJYQQQgghRKND31lbnz4q7/XRRx8Ndffrrrtuak28v642bdqE
djh1OW0NHuxudPe8Xo6P/fbbbw/Xe8ghh4S9ud5++22j/ec7Pvnkk2XvuxBC
CCGEEI0ANWaoU4NdTJ3MPffc0/SmHT16tKmtg6aldevWppZ9Ftse0MDjQ7d2
OL20rA6H7fHaLrvsUpCbm5SXXnop6Ny5s1kH8xG2RS9b6uhg21M7UwghhBBC
iJYAubJHHXVUsNhiixXkwK6zzjomlxbdDLV28uDWW28NZp999nAbxx9/fPDT
Tz8FW2+9tfl70qRJZa+beckaa6wRrnuOOeYINtpoI9n2QgghhBCixfHjjz8G
kydPDq6//vpg8ODBwbhx40w9nU8//TTX7VAXkxxaa4NTv+ecc84x/08ObLGe
uKWgnj95vMwhzjvvPGPXv/766znuvRBCCCGEEMLnggsuKIgT2BqdpWrqCyGE
EEIIIeqPzz77LGjfvn2BjR9VL1MIIYQQQgjRGAwfPrzAvp84cWKtd0kIIYQQ
QghRJtTat3U3t9xyS5NjK4QQQgghhGhcqFM/77zzBvfcc0+td0UIIYQQQgiR
kV9++SV49913g99++63WuyKEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIUVGmT58evPzyy8GwYcOCs88+O9UQQgghhBBC1Bd33HFHsPLKKwcz
zDBDqrHWWmvVeteFEEIIIYQQDtOmTQv69u1r7PUOHToEe+65Z6ohhBBCCOHz
3XffBV999VXw1ltvBe+995759+OPP674dv/444/g559/Ntt/5ZVXgo8++shs
++uvv674tpsTHMMffvgh+Pzzz4NPP/00eP/994Pnn38++Ouvv2q9ayIBnPv4
4Tt27Bh88803td4dIYQQQjQ42PHrrrtusOqqqwZrrLGGGUsuuWSwwgorGJux
klx22WXBKqusYrbJ9tu0aWN8mPvss0/w999/V3TbzQXmQt26dQtWX331YM01
1wyWW265YO655zbH8Y033qj17okSMAc76qijzO91/fXX13p3hBBCCNEMIKcv
SteLvVhJ+x67Zqeddorc9hVXXFGx7TY33nnnnchjuM022wRffvllrXdPlIA5
2EYbbWTG1KlTiy5LvEsxGSGEEEKUAj/5hx9+GNx5551B9+7dq2bfw6uvvhqM
GzcuOP7448PtLrbYYkavIJLx559/muPF77fFFluEx7F3796KgTQAgwcPNr/X
5ZdfXnS51157zWjt0emjwxJCCCGESMKoUaOqat9bsG3sdrfeemv5ncsA3faG
G24YHkdpPeqft99+22iq1l9//eCLL76IXe7bb78NOnfuHP62L730UhX3Uggh
hBCNDDZhLez7vfbaK9xur169pEEoA3Qe8847rzmGCy64oGIgDcCAAQPM73Xh
hRcWXe6hhx4KWrduHca33nzzzSrtoRBCCCEanZNPPrnq9j1+54033lja+4yM
HDkyPIbUYSnmDxa1hxpH7dq1M3VzqHlUjFNPPbUgviX7XgghhBBJoRdmte17
9Pf4m9nmXHPNZfJ9RXr233//8Lej/pBiIPXN4Ycfbn6rs846q+Sye+yxR/jb
HnbYYSbnQgghhBAiCegEqm3fX3TRReE21157bfmdywB9thsDOe+882q9S6II
9HmgHiyD/y8G9U+pH2t/25tuuqlKeymEEEIIy2+//Wbi54888kgwevRo4xO/
5JJLTH0TamDQiyiO33//PXj33XeDF154weinn3vuuWDChAnB2LFjzfv4ZPFv
08v+yiuvDB588MHggw8+CP7555/E+/fZZ58Fr7/+ejBx4sTg4osvDu69917T
0woqad//5z//MRrx++67L7jrrrvCbVITxG5z5513DqZPn57bNpsj9Cvg/OC3
I8+S4/riiy+G2nsGva1EIfi8qT/pD/qpRb1eSY455hjzO40YMaLJe1zL1MfB
rmc/br755mDOOec0y/Mb//vf/zbXEe+VmhsIIYQQIjtoybFX11lnncia5PQe
ItYe13fo/PPPN/2e6C3lfu6UU04xc4MePXoEyy67bMF7aHiPPvrokn0vmTs8
/fTTwe6772785PbzM888s9newIEDg2HDhuVu37MO5hAHHHBAwXZXXHFFoxl3
j9WJJ56YeXvNFexQ6ojuuOOOwQILLGCOFzmXBx10UNgfyZ4Pqp/4/2H+869/
/cucW5tssompV+MOfOj+a1yDzEErAfNrtsE1hwbfZ/z48cFKK60U7stqq60W
/rbUR+JvBtfnwQcfrPmwEEIIUWHcPLi9997baMvxx996661Bv379glatWpn3
Nt1008j6Jmhxebb78wK0ura2OdpqbBUGPXHsMtj4cZpr7Ihzzz3X2H4su/zy
y5v66OTT9unTJ1yPW18RuwdfcRY++eST4MADDzT9cFlnhw4dgiFDhpg5hrst
O4hHiKbgwyWvkmPEOYRdd+aZZ5oeVlbXZI/hlltuKZvv/6C/Ar19be2ZNOOa
a66pyD5x3bL+oUOHRr7PdWntepuXYge5uMyHGWh2yEWn55UQQgghKgO6m0MO
OaTgeXz33XeH72Nz4Wu17+HH9+u8o6OeNGmS0fO4dr7t8+rbv5deemm4DM97
epn64Ne3uXyM9dZbL3jiiScKlkFTNHz48IJ9z+q/pyaIm/PJ+l1t0pgxYwq2
R92/WugN6AF1+umnB7vuumtFBnZ4lj5T+HNXXnllc4wWXXTRgtopaDRc3b2d
54kgeOaZZ4zeyz022Mvzzz9/wWvWp88cCbt58803N3MCPp83X331VbDuuusG
Sy+9dOS1Cuhy0Nyhw+FeYONbxNmYo/OeHdWqXyuEEEK0VH788UdjW1m7oW3b
tsGjjz5asAzPa+u3xlaLsyHww+Pjdu0QNBg+zz77bEHuHZp8H3y/c889d6Lc
S2rP52Hf//TTT8EZZ5xR4FPm+Liwbleb06lTp1i/M9pp5inMh5gD5Vk/hDmH
2zsoyZhxxhmD2WabzdT7QRON3dimTRvzm6OfQntB/IPfBhuT+VM5oK9v3759
uN3bb7+9yTL8nu6+oUUpBcf++++/L2ufGoHJkyeH8Q4G19JVV11l4lHElJhz
LbTQQuH7zJOZW/LelClTjB1eCYhdsT161iaBPAu7j8z32TchhBBCVBc0N+hd
0O+ilf7ll18K3semwm62z2z8xnG49j39LaOe7di7xOztcvj3XLCzt9122wIb
mtfiQB+Uh32P3h4/JevB/n3ggQeaLIMu2mqOGCeddFLkushVQJNkNSgci549
exrdU146FHym+FOTDrTwbJ9BnrA70EK5o9yYBOcSOhx7fHbZZZfIec0tt9wS
LoPuCn13HJx/+IWJq+ywww7NsoYmxxxtnD0m++67b+T86thjjw2X6d+/f6oY
C/kN3333Xar9sv2Fl1hiCXP+JOG0004L95H5StptCiGEECIf8AfzLLe2E37r
p556ytSswe7F9rfPbPT6caDtsMttttlmkTVysO/RFtjlyM91wY5AC2Dfxy4u
Rh72Pd+dOY5dD5r7KDucfXN9qNQK8mFOs9RSSwXbb7+9sXWoO0IsgOXJJbjg
ggtM3nBzBC2Wm2f95JNPRi7nHmtiBf4cAJuQ40T+B/OpeeaZJ5wv5GXfc55Q
L4q6PXkNvm+xuWgU2Ohujzauobh13HbbbeFyzHX8+FIcxAY4dvvtt1+q+aWN
sxx66KGJP+PWvUfbJ4QQQojaQXwf+4QcOrTz+O3QbaDpcLUU1M6Mo3v37uFy
2Ldx2ylm32NzldL4uORh31MHFO2RXc+gQYMilyN/0S7Dd/D9zuj3yTHEF+vm
+eIjt/nA2P7NMScXm3y77bYLjw9ztKiaOMRAXP1OVK8k5oDMKYl/uJqVPO17
ai+l0TclHdjqaWDO6OYak9cexw033BAut8EGG5Q814l9sD57vNFfJfXD83sy
z1144YVja2f5MLclD9/uI/kqQgghhKg+2AjUd0fPbWsYzjLLLEHHjh2N75x6
167/vph9v9tuuxXoh6Mgv7KYfU99DddewgdejDzse2p5utskPzQKNDfFtCfY
7byHxh2tk6sXd33Wxx13XOp9rHfefvttc87Y74jfPSp+g30533zzhcvF1b1n
rsT8gNyFStj37Ad1Yci5yGtg26N/SsOoUaMSn79urgzXV7E4EHV4qB2LtmaR
RRYJP4fGJ81+9e3bN/ExJ95n58lsM6relhBCCCEqC9oAbFvbi4aBD5beVOTt
ARoAV39PTZk4qHVvl8OXHwW+QLc+tr8+V5vNKKb3h6z2PdokN0cX/3pUryD8
zvhMi/lpyYe075Nj4GqPqU3ualL8PIe0MHdgnyoxyqlFT961W9ORvMwo6B9g
lyH/spj2Hn799deK2Pf1ANffCSecEH4/5oBx8L3R5Nhl42pVAvkT6ONYrmvX
rqb/gHteUsemGFxD+OHJQ2GekBQ3vsD2mZsJIYQQorpQ6961pY844ogmNUqw
84nr+3oKbFc/d87Nr8XWj6KU/556PXPMMUdJrYwlq32P9t6t14geJMqGZF7i
2q+2Xiefx2fLZ9AeoUuibuZ1111XsB70Ovaz2FzFegKXgrkBtiDfl3o3eQ7W
SZwibY1yP+6CzioKt/cv9irb4TfDjoyy9V37Hm16c7LviVG4+iP/WnAhB5de
c3bZ+++/P3bZL774wtjnXM9cv/Skdn8b8hqKcfXVV5vl6O+Wpu4TdfDtNpgz
u3DOcg2RFy6EEEKIyoDvEDvTPo+Jp1Pbzgd/rlvPEnsaLQZ1T/i8BS1GEv99
KfseO4Y+sfZ9bIZiZLXv2R9scruOOL2/W9OR2u7YZtg+9GtCa259/tioH374
YTBt2rSCz990003h56k1mKW+PLVVsO/ztu3t2GuvvZrsfyncuAt5G1G10jmX
bI0iN3ZjYxtoQXxc+579ak72PeeKW2+VurBxuLVz0M2V8o1z3OyxwsZ35xH8
xswBoiD3AW0VMb2XX3458XfBbqcuv92GX/eWOlm8fs455yRepxBCCCHSgX3g
2hbo76M0IzzjXfsenbHVmfsae9e+T+q/R9/vgj/XjQNQe6aYr5t8gCz2Pfoj
VxsfVY8fnbNbFwS9A/vJMURvzHvYrnFga1kNEL1cb7zxxlT7GAV2GLGDSoxy
fKzoc8jF5DtSDzSqLiLxInIT7HGcMGGCeZ2amhyXqLxj177Hn9ycep8yP3Rz
0uPyrrkG0dGzDLGmqLpNpXD7VLtxOB+rsSHOkqbOE/tke13zL1p8C+cq8zru
N5XowSWEEEKI/wU72PVbU4MwyueKr9C1C9ALkxMZ5aN3beCk9r1f/x7okUQt
SbtMXE4gvXbdWpro+sup3U4de7sO+vn6oHOIso2uv/568ze9h4px7bXXhp9F
f94ca4Jz7lj/LXa+n8NAjUbXd0/NmNdee828t9VWW5laLVG1XVz7/rDDDmtW
/nsgv6TY3JLr1NXdU+upnNgPGjK3Tg99JfzzkGPNfJq+s1GxvGLQo8CND9j8
HeJAtgd2sdq6QgghhMgHcvRcuxW/ObY7NbLRkqNJmWmmmcL+tdZ/aOvNkEOJ
jUuNG+x0N/+UHj345qn/zjKXXHKJic2jySCH1S5HzR3qmLCs6zemtp5dBj07
67eaA7QF1Kp012MHtSnZJttLCtpv21OLOQI5ABwD8kypGc7r7pxkwIABxn5l
DhOnRbHw3nrrrRfa9pXqM1pr8Ku78yTqT/J7MdCdoOdacsklC35TjgVzNHz6
9GuKwrXvqTuUV3+weoEY0Oabb26+HzVU8dXj1ydmhQ7Onpfzzz+/Oaez5GVT
x94ey1lnndXU03exGjKuybTbwUe/+OKLm8/TF5l4FrEga9uT04FuTQghhBCV
BV83trDVVTBmn312Y7da2xnNMzaY23OW/Fdq5FPX3Y/7Rw2W6dKlS8nl3H63
+P3IIbQ11bFHyBlk32y+LzaDW3PdHexfGpiDWB0SebSsl5wEajni06emED5m
+/3t9ylW34f5iu13e+mllxpbtTnD+eT2YWVeY+d8+OixJw8//PAC7RW2Lb8n
eRdRuPY9GqfmZt8D5549pzn38K1Ta3TBBRcMjx353GlzInzwybdt2zY8ntQj
snY862Y7vM78Ni3MR5inc52yDvJSbA0f4l/F5sBCCCGEyBf84dS/R4POMxkN
BXYuubPoTmytxMcff9zUdCcHEl/6m2++aV6//PLLg/33399oVv5fe3ds00gU
BGC4AQISOrAc0BYl0AkRLTglJCFxTEs+/Ss9buFsDBiOu+X7pBWWDZLZNWLe
7My8cRTPl6cvJ19Nxe3t7ZQHL+89vqdYoLx/9fzFyN07aL3wUnFB9Tn9fLFi
fYLN/yiXWT6w2KF+1+Kh4pVmrHRUq/1e7dlbbNV+QJ2HapCrrRl1DM3zLsYs
Zi/P3+91KB9fXvbq6mqKb25ubp5qmYv5W8fsmw2/BOVxu17VflWH39fr6+un
tVvnqzVltV293nrttTnpPyG+T722fd5aV7aWboZq90CaffORmrN9isHnPTLd
E3h4eJheq+5nxPzv3YN3qOe8v+eubb0wrYG7R7hv3iwA8Hc0v648ajHYvv/x
3XP/yP5Rn6E8Y3FOtTnzftvqQoofer/1yn5G3FztcPXK+/KlPdesy9fml3T+
yvmX5282zFw1EtVTNwNnybom1We8nLc69FnqOh6rA5nH962XlhrfD52X1s6t
XU+ZoXpIPc0XFxfP6tn6LI696cbc11P0t1EvhVmYAMASFI+W11+v11PdeXn7
cRTrdn+gnmXe5qfF91+tdfB8n+nm8lR/Vx9J+fZD6zEAgJ+ouSbb7Xaq76me
eswEHMfoYTi2vxC/vYzvT61BZ7e7u7t71nMz9hy7v7//7rcGAPBPeXx8nGaH
HOsjbi4Rh5VDrne6eL4+inHemi9TDX73P+r5WHq/8lepbmq+j3Dr0Pa/WOLc
VgCAU9SLW9/t5eXlbrVaTbNK2v+qPsazs7On2SLzOUH8qfi+89h+CsX4HcX1
43E9ovWAi+8/br4nQ0c5fQAAnhvz3o8dHFfPZ73TzYLv6LyNxz2/9P7kr9a8
nmZOjb2u9MICAMD/rb2oz8/Pd5vN5rvfCgAAcKLugTQHduzNAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAsv0CZZiASQ==
      "], {{0, 213.}, {570., 0}}, {0, 255},
      ColorFunction->RGBColor,
      ImageResolution->{96, 96}],
     BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{570., 213.},
    PlotRange->{{0, 570.}, {0, 213.}}],
   FontSize->18]], "Input",ExpressionUUID->
  "d6abf84f-f8c8-4ae7-8645-59c1bb442317"],
 "\n",
 StyleBox["C = Call Option Price\nN = Cumulative Distribution Function of the \
Normal Normal Distribution [F(x) = P(X<x) where x is a specified value and X \
is random]\n",
  FontSize->18],
 Cell[BoxData[
  FormBox[
   SubscriptBox["S", "t"], TraditionalForm]],
  FontSize->18,ExpressionUUID->"da9e2fa2-b79a-42e4-a6aa-0e0e173958c4"],
 StyleBox[" = Spot Price of the Asset\nK = Strike Price\nr = Risk-Free \
Interest Rate\n\tRobert Merton later improved the formula by replacing r with \
r-\[Delta] where r is risk free interest rate and \[Delta] is the dividend \
yield of the asset.\nt = Time to Maturity\n\[Sigma] = Volatility of the Asset",
  FontSize->18]
}], "Text",
 CellChangeTimes->{{3.954072952801619*^9, 3.9540729787219887`*^9}, {
  3.954073141407943*^9, 3.954073516299143*^9}, {3.954073789884659*^9, 
  3.9540741825183353`*^9}, {3.954075129908268*^9, 
  3.9540751316364517`*^9}},ExpressionUUID->"528ab4ea-4726-4dcb-85a3-\
a979d0d53c90"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Initialization Code", "Section",
 CellChangeTimes->{{3.9540729470489693`*^9, 3.954072948858304*^9}, {
  3.9540743758708324`*^9, 
  3.954074395459261*^9}},ExpressionUUID->"4a8c0d16-9858-421f-a668-\
0cdd448d5c8d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"d1", "[", 
    RowBox[{
    "S_", ",", "k_", ",", "r_", ",", "\[Delta]_", ",", "\[Sigma]_", ",", 
     "T_"}], "]"}], "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Log", "[", 
       RowBox[{"S", "/", "k"}], "]"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"r", "-", "\[Delta]", "+", 
         RowBox[{
          SuperscriptBox["\[Sigma]", "2"], "/", "2"}]}], ")"}], " ", "T"}]}], 
     ")"}], "/", 
    RowBox[{"(", 
     RowBox[{"\[Sigma]", " ", 
      SqrtBox["T"]}], ")"}]}]}], ";"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{
  3.35696210375764*^9, 3.372882475734375*^9, {3.372882554265625*^9, 
   3.37288255546875*^9}, {3.3998969495255365`*^9, 3.3998969516817865`*^9}},
 CellLabel->"In[2]:=",
 CellID->4075082,ExpressionUUID->"eceb8a87-ebe4-de43-a797-440731d4acbf"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"d2", "[", 
    RowBox[{
    "S_", ",", "k_", ",", "r_", ",", "\[Delta]_", ",", "\[Sigma]_", ",", 
     "T_"}], "]"}], "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Log", "[", 
       RowBox[{"S", "/", "k"}], "]"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"r", "-", "\[Delta]", "-", 
         RowBox[{
          SuperscriptBox["\[Sigma]", "2"], "/", "2"}]}], ")"}], " ", "T"}]}], 
     ")"}], "/", 
    RowBox[{"(", 
     RowBox[{"\[Sigma]", " ", 
      SqrtBox["T"]}], ")"}]}]}], ";"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{
  3.35696210375764*^9, {3.372882475734375*^9, 3.372882477265625*^9}, {
   3.399896957509912*^9, 3.3998969596192865`*^9}},
 CellLabel->"In[3]:=",
 CellID->79985652,ExpressionUUID->"b23c0a54-fc6d-9042-afc9-b0522885a67c"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"\[ScriptCapitalN]", "[", "z_", "]"}], "=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"Erf", "[", 
        RowBox[{"z", "/", 
         SqrtBox["2"]}], "]"}]}], ")"}], "/", "2"}]}], " ", ";"}], 
  " "}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{
  3.35696210375764*^9, {3.372882475734375*^9, 3.37288247971875*^9}},
 CellLabel->"In[4]:=",
 CellID->412525709,ExpressionUUID->"93a683f8-b554-6b40-b433-6339be105c4e"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"BSCall", "[", 
    RowBox[{
    "S_", ",", "k_", ",", "r_", ",", "\[Delta]_", ",", "\[Sigma]_", ",", 
     "T_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"S", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "\[Delta]"}], " ", "T"}]], " ", 
     RowBox[{"\[ScriptCapitalN]", "[", 
      RowBox[{"d1", "[", 
       RowBox[{
       "S", ",", "k", ",", "r", ",", "\[Delta]", ",", "\[Sigma]", ",", "T"}], 
       "]"}], "]"}]}], "-", 
    RowBox[{"k", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "r"}], " ", "T"}]], " ", 
     RowBox[{"\[ScriptCapitalN]", "[", 
      RowBox[{"d2", "[", 
       RowBox[{
       "S", ",", "k", ",", "r", ",", "\[Delta]", ",", "\[Sigma]", ",", "T"}], 
       "]"}], "]"}]}]}]}], ";"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{
  3.35696210375764*^9, {3.372882475734375*^9, 3.372882482421875*^9}, {
   3.399896965759912*^9, 3.3998969868692865`*^9}},
 CellLabel->"In[5]:=",
 CellID->34177612,ExpressionUUID->"3423226a-32bc-be49-81b5-ce91e03355c4"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"BSPut", "[", 
    RowBox[{
    "S_", ",", "k_", ",", "r_", ",", "\[Delta]_", ",", "\[Sigma]_", ",", 
     "T_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"k", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "r"}], " ", "T"}]], " ", 
     RowBox[{"\[ScriptCapitalN]", "[", 
      RowBox[{"-", 
       RowBox[{"d2", "[", 
        RowBox[{
        "S", ",", "k", ",", "r", ",", "\[Delta]", ",", "\[Sigma]", ",", "T"}],
         "]"}]}], "]"}]}], "-", 
    RowBox[{"S", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "\[Delta]"}], " ", "T"}]], " ", 
     RowBox[{"\[ScriptCapitalN]", "[", 
      RowBox[{"-", 
       RowBox[{"d1", "[", 
        RowBox[{
        "S", ",", "k", ",", "r", ",", "\[Delta]", ",", "\[Sigma]", ",", "T"}],
         "]"}]}], "]"}]}]}]}], ";"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{
  3.35696210375764*^9, {3.372882475734375*^9, 3.372882481453125*^9}, {
   3.399896975166162*^9, 3.399896983041162*^9}},
 CellLabel->"In[6]:=",
 CellID->380955044,ExpressionUUID->"26e8a5c0-4fb4-9143-8727-72f0f72b0702"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Manipulate", "Section",
 CellChangeTimes->{{3.954074526978487*^9, 
  3.954074529940016*^9}},ExpressionUUID->"7e2f4206-c99a-8141-850e-\
f72af39748f3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{
   "d1", ";", "d2", ";", "\[ScriptCapitalN]", ";", "BSCall", ";", "BSPut", ";", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"BSOption", "[", 
       RowBox[{
       "S", ",", " ", "annotation", ",", " ", "r", ",", " ", "\[Delta]", ",", 
        " ", "\[Sigma]", ",", " ", "t"}], "]"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"S", ",", " ", "70.", ",", " ", "140."}], "}"}], ",", " ", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<stock price\>\"", ",", " ", "\"\<option price\>\""}], 
        "}"}]}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "400"}], ",", 
      RowBox[{"ImagePadding", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"25", ",", "55"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"25", ",", "25"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"AxesOrigin", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Automatic", ",", "0"}], "}"}]}]}], "]"}]}], ",", " ", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"BSOption", ",", "BSCall", ",", "\"\<option\>\""}], "}"}], ",", 
     " ", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"BSCall", "\[Rule]", "\"\<call\>\""}], ",", " ", 
       RowBox[{"BSPut", "\[Rule]", "\"\<put\>\""}]}], "}"}]}], "}"}], ",", 
   " ", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"annotation", ",", " ", "100.", ",", "\"\<strike price\>\""}], 
      "}"}], ",", "50.", ",", "150.", ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
   "\[IndentingNewLine]", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"r", ",", ".05", ",", "\"\<interest rate\>\""}], "}"}], ",", 
     ".02", ",", ".1", ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Delta]", ",", ".004", ",", "\"\<dividend yield\>\""}], "}"}],
      ",", " ", ".002", ",", " ", ".05", ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Sigma]", ",", ".3", ",", " ", "\"\<volatility\>\""}], "}"}], 
     ",", " ", ".2", ",", " ", ".5", ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", " ", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"t", ",", ".1", ",", "\"\<time to maturity\>\""}], "}"}], ",", 
     " ", ".001", ",", "1.", ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
   "\[IndentingNewLine]", " ", 
   RowBox[{"SaveDefinitions", "\[Rule]", "True"}], ",", 
   RowBox[{"AutorunSequencing", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "5", ",", "6"}], "}"}]}]}], "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{
  3.35696210375764*^9, {3.372880151390625*^9, 3.372880192140625*^9}, {
   3.372880484375*^9, 3.372880487078125*^9}, {3.372880548578125*^9, 
   3.372880569859375*^9}, {3.3728806570625*^9, 3.372880662640625*^9}, {
   3.37288081*^9, 3.372880820546875*^9}, {3.372882345109375*^9, 
   3.372882397953125*^9}, {3.372882737875*^9, 3.37288274690625*^9}, {
   3.372882818453125*^9, 3.37288282253125*^9}, {3.379881087985731*^9, 
   3.379881218201147*^9}, {3.381364439140625*^9, 3.38136443953125*^9}, {
   3.381364561015625*^9, 3.381364569046875*^9}, {3.399896991853662*^9, 
   3.399896991853662*^9}, {3.399905221072412*^9, 3.399905233197412*^9}, {
   3.399906321103662*^9, 3.399906328384912*^9}},
 CellLabel->"In[7]:=",
 CellID->453220963,ExpressionUUID->"b0a220d4-c8b6-4442-8890-e5665df24ecb"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`annotation$$ = 
    131., $CellContext`BSOption$$ = $CellContext`BSPut, $CellContext`r$$ = 
    0.07780000000000001, $CellContext`t$$ = 0.1, $CellContext`\[Delta]$$ = 
    0.028200000000000003`, $CellContext`\[Sigma]$$ = 0.405, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`BSOption$$], $CellContext`BSCall, 
       "option"}, {$CellContext`BSCall -> "call", $CellContext`BSPut -> 
       "put"}, ControlType -> SetterBar}, {{
       Hold[$CellContext`annotation$$], 100., "strike price"}, 50., 150., 
      ControlType -> Manipulator}, {{
       Hold[$CellContext`r$$], 0.05, "interest rate"}, 0.02, 0.1, ControlType -> 
      Manipulator}, {{
       Hold[$CellContext`\[Delta]$$], 0.004, "dividend yield"}, 0.002, 0.05, 
      ControlType -> Manipulator}, {{
       Hold[$CellContext`\[Sigma]$$], 0.3, "volatility"}, 0.2, 0.5, 
      ControlType -> Manipulator}, {{
       Hold[$CellContext`t$$], 0.1, "time to maturity"}, 0.001, 1., 
      ControlType -> Manipulator}}, Typeset`size$$ = {
    500., {151.2743392538852, 158.4392562460727}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = False, 
    Typeset`keyframeActionsQ$$ = False, Typeset`keyframeList$$ = {}}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`annotation$$ = 
        100., $CellContext`BSOption$$ = $CellContext`BSCall, $CellContext`r$$ = 
        0.05, $CellContext`t$$ = 0.1, $CellContext`\[Delta]$$ = 
        0.004, $CellContext`\[Sigma]$$ = 0.3}, "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$, Typeset`keyframeActionsQ$$, 
        Typeset`keyframeList$$}, 
      "Body" :> ($CellContext`d1; $CellContext`d2; $CellContext`\
\[ScriptCapitalN]; $CellContext`BSCall; $CellContext`BSPut; Plot[
         $CellContext`BSOption$$[$CellContext`S, $CellContext`annotation$$, \
$CellContext`r$$, $CellContext`\[Delta]$$, $CellContext`\[Sigma]$$, \
$CellContext`t$$], {$CellContext`S, 70., 140.}, 
         AxesLabel -> {"stock price", "option price"}, ImageSize -> 400, 
         ImagePadding -> {{25, 55}, {25, 25}}, AxesOrigin -> {Automatic, 0}]),
       "Specifications" :> {{{$CellContext`BSOption$$, $CellContext`BSCall, 
          "option"}, {$CellContext`BSCall -> "call", $CellContext`BSPut -> 
          "put"}}, {{$CellContext`annotation$$, 100., "strike price"}, 50., 
         150., Appearance -> 
         "Labeled"}, {{$CellContext`r$$, 0.05, "interest rate"}, 0.02, 0.1, 
         Appearance -> 
         "Labeled"}, {{$CellContext`\[Delta]$$, 0.004, "dividend yield"}, 
         0.002, 0.05, Appearance -> 
         "Labeled"}, {{$CellContext`\[Sigma]$$, 0.3, "volatility"}, 0.2, 0.5, 
         Appearance -> 
         "Labeled"}, {{$CellContext`t$$, 0.1, "time to maturity"}, 0.001, 1., 
         Appearance -> "Labeled"}}, 
      "Options" :> {AutorunSequencing -> {1, 2, 5, 6}}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{559.375, {301.487126882059, 308.6520438742465}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`d1[
         Pattern[$CellContext`S, 
          Blank[]], 
         Pattern[$CellContext`k, 
          Blank[]], 
         Pattern[$CellContext`r, 
          Blank[]], 
         Pattern[$CellContext`\[Delta], 
          Blank[]], 
         Pattern[$CellContext`\[Sigma], 
          Blank[]], 
         Pattern[$CellContext`T, 
          
          Blank[]]] = ($CellContext`T ($CellContext`r - $CellContext`\[Delta] + \
$CellContext`\[Sigma]^2/2) + Log[$CellContext`S/$CellContext`k])/(
        Sqrt[$CellContext`T] $CellContext`\[Sigma]), $CellContext`d2[
         Pattern[$CellContext`S, 
          Blank[]], 
         Pattern[$CellContext`k, 
          Blank[]], 
         Pattern[$CellContext`r, 
          Blank[]], 
         Pattern[$CellContext`\[Delta], 
          Blank[]], 
         Pattern[$CellContext`\[Sigma], 
          Blank[]], 
         Pattern[$CellContext`T, 
          
          Blank[]]] = ($CellContext`T ($CellContext`r - $CellContext`\[Delta] - \
$CellContext`\[Sigma]^2/2) + Log[$CellContext`S/$CellContext`k])/(
        Sqrt[$CellContext`T] $CellContext`\[Sigma]), $CellContext`\
\[ScriptCapitalN][
         Pattern[$CellContext`z, 
          Blank[]]] = (1 + Erf[$CellContext`z/Sqrt[2]])/2, $CellContext`BSCall[
         Pattern[$CellContext`S, 
          Blank[]], 
         Pattern[$CellContext`k, 
          Blank[]], 
         Pattern[$CellContext`r, 
          Blank[]], 
         Pattern[$CellContext`\[Delta], 
          Blank[]], 
         Pattern[$CellContext`\[Sigma], 
          Blank[]], 
         Pattern[$CellContext`T, 
          Blank[]]] := ($CellContext`S $CellContext`\[ScriptCapitalN][
            $CellContext`d1[$CellContext`S, $CellContext`k, $CellContext`r, \
$CellContext`\[Delta], $CellContext`\[Sigma], $CellContext`T]])/
         E^($CellContext`\[Delta] $CellContext`T) - ($CellContext`k \
$CellContext`\[ScriptCapitalN][
           $CellContext`d2[$CellContext`S, $CellContext`k, $CellContext`r, \
$CellContext`\[Delta], $CellContext`\[Sigma], $CellContext`T]])/
        E^($CellContext`r $CellContext`T), $CellContext`BSPut[
         Pattern[$CellContext`S, 
          Blank[]], 
         Pattern[$CellContext`k, 
          Blank[]], 
         Pattern[$CellContext`r, 
          Blank[]], 
         Pattern[$CellContext`\[Delta], 
          Blank[]], 
         Pattern[$CellContext`\[Sigma], 
          Blank[]], 
         Pattern[$CellContext`T, 
          
          Blank[]]] := ($CellContext`k \
$CellContext`\[ScriptCapitalN][-$CellContext`d2[$CellContext`S, \
$CellContext`k, $CellContext`r, $CellContext`\[Delta], $CellContext`\[Sigma], \
$CellContext`T]])/
         E^($CellContext`r $CellContext`T) - ($CellContext`S $CellContext`\
\[ScriptCapitalN][-$CellContext`d1[$CellContext`S, $CellContext`k, \
$CellContext`r, $CellContext`\[Delta], $CellContext`\[Sigma], \
$CellContext`T]])/E^($CellContext`\[Delta] $CellContext`T)}; 
     Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.954072495585224*^9, 3.9540743492209473`*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"238de041-a059-b34a-a5dd-a7edbea1dda6"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1433, 1286},
WindowMargins->{{544, Automatic}, {1, Automatic}},
PrintingCopies->1,
PrintingPageRange->{1, Automatic},
FrontEndVersion->"14.2 for Mac OS X ARM (64-bit) (December 26, 2024)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"0b573f29-4174-4689-9acb-d0c2648d70c7"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[576, 22, 170, 3, 120, "Title",ExpressionUUID->"caf729c5-3aa1-48fb-981c-8c262a12d69d"],
Cell[CellGroupData[{
Cell[771, 29, 161, 3, 82, "Section",ExpressionUUID->"1762628b-ccfc-4f6b-be4a-026e202525fa"],
Cell[935, 34, 1374, 22, 206, "Text",ExpressionUUID->"c31ede2a-ec95-4096-9d52-b39b3ee9b314"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2346, 61, 226, 4, 82, "Section",ExpressionUUID->"d1944593-b895-4208-9803-140208a3d4f2"],
Cell[2575, 67, 794, 13, 124, "Text",ExpressionUUID->"9173c321-331e-40cf-a02b-6fe27a262213"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3406, 85, 207, 4, 82, "Section",ExpressionUUID->"d7788ccd-ef61-4e28-a2aa-1f92a364deb7"],
Cell[3616, 91, 41052, 684, 573, "Text",ExpressionUUID->"528ab4ea-4726-4dcb-85a3-a979d0d53c90"]
}, Open  ]],
Cell[CellGroupData[{
Cell[44705, 780, 217, 4, 82, "Section",ExpressionUUID->"4a8c0d16-9858-421f-a668-0cdd448d5c8d"],
Cell[44925, 786, 860, 26, 44, "Input",ExpressionUUID->"eceb8a87-ebe4-de43-a797-440731d4acbf",
 CellID->4075082],
Cell[45788, 814, 838, 26, 44, "Input",ExpressionUUID->"b23c0a54-fc6d-9042-afc9-b0522885a67c",
 CellID->79985652],
Cell[46629, 842, 508, 16, 44, "Input",ExpressionUUID->"93a683f8-b554-6b40-b433-6339be105c4e",
 CellID->412525709],
Cell[47140, 860, 1095, 31, 36, "Input",ExpressionUUID->"3423226a-32bc-be49-81b5-ce91e03355c4",
 CellID->34177612],
Cell[48238, 893, 1145, 33, 36, "Input",ExpressionUUID->"26e8a5c0-4fb4-9143-8727-72f0f72b0702",
 CellID->380955044]
}, Open  ]],
Cell[CellGroupData[{
Cell[49420, 931, 155, 3, 82, "Section",ExpressionUUID->"7e2f4206-c99a-8141-850e-f72af39748f3"],
Cell[CellGroupData[{
Cell[49600, 938, 3819, 91, 394, "Input",ExpressionUUID->"b0a220d4-c8b6-4442-8890-e5665df24ecb",
 CellID->453220963],
Cell[53422, 1031, 6964, 146, 631, "Output",ExpressionUUID->"238de041-a059-b34a-a5dd-a7edbea1dda6"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

